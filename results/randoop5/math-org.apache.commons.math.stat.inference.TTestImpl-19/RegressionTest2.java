import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest2 {

    public static boolean debug = false;

    @Test
    public void test1001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1001");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl1.t((-0.975807309953049d), doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl1.setDistribution(tDistribution55);
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        tTestImpl1.setDistribution(tDistribution57);
        org.apache.commons.math.distribution.TDistribution tDistribution59 = null;
        tTestImpl1.setDistribution(tDistribution59);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary62 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double63 = tTestImpl1.tTest(1.088109431399388d, statisticalSummary62);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.4411111919348023d + "'", double54 == 1.4411111919348023d);
    }

    @Test
    public void test1002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1002");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution1 = null;
        tTestImpl0.setDistribution(tDistribution1);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl4 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution6 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl7 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution6);
        double[] doubleArray13 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray18 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double19 = tTestImpl7.homoscedasticT(doubleArray13, doubleArray18);
        double double20 = tTestImpl4.tTest((double) (short) 100, doubleArray13);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double[] doubleArray43 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double44 = tTestImpl23.t((double) '4', doubleArray43);
        double double45 = tTestImpl4.tTest((double) (short) 100, doubleArray43);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl46 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution48 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl49 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution48);
        double[] doubleArray55 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray60 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double61 = tTestImpl49.homoscedasticT(doubleArray55, doubleArray60);
        double double62 = tTestImpl46.tTest((double) (short) 100, doubleArray55);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl65 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution64);
        double[] doubleArray71 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray76 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double77 = tTestImpl65.homoscedasticT(doubleArray71, doubleArray76);
        double[] doubleArray85 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double86 = tTestImpl65.t((double) '4', doubleArray85);
        double double87 = tTestImpl46.tTest((double) (short) 100, doubleArray85);
        double[] doubleArray93 = new double[] { 1.0f, (-0.09656583816243881d), ' ', 0.8463073355328574d, 1.3965146696271626d };
        double double94 = tTestImpl4.homoscedasticTTest(doubleArray85, doubleArray93);
        double double95 = tTestImpl0.t((double) 100, doubleArray93);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary96 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary97 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double98 = tTestImpl0.tTest(statisticalSummary96, statisticalSummary97);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-0.405429217622299d) + "'", double19 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.01613264369976175d + "'", double20 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + (-0.09656583816243881d) + "'", double44 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.07560555610353314d + "'", double45 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + (-0.405429217622299d) + "'", double61 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.01613264369976175d + "'", double62 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + (-0.405429217622299d) + "'", double77 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + (-0.09656583816243881d) + "'", double86 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.07560555610353314d + "'", double87 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[1.0, -0.09656583816243881, 32.0, 0.8463073355328574, 1.3965146696271626]");
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 0.12673187601587688d + "'", double94 == 0.12673187601587688d);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + (-14.881283513379177d) + "'", double95 == (-14.881283513379177d));
    }

    @Test
    public void test1003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1003");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        tTestImpl42.setDistribution(tDistribution43);
        org.apache.commons.math.distribution.TDistribution tDistribution45 = null;
        tTestImpl42.setDistribution(tDistribution45);
        org.apache.commons.math.distribution.TDistribution tDistribution48 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl49 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution48);
        double[] doubleArray55 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray60 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double61 = tTestImpl49.homoscedasticT(doubleArray55, doubleArray60);
        double double62 = tTestImpl42.t(3.8d, doubleArray55);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl63 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray67 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution68 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl69 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution68);
        double[] doubleArray75 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray80 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double81 = tTestImpl69.homoscedasticT(doubleArray75, doubleArray80);
        double double82 = tTestImpl63.tTest(doubleArray67, doubleArray80);
        double double83 = tTestImpl0.t(doubleArray55, doubleArray80);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary84 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary85 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double86 = tTestImpl0.homoscedasticTTest(statisticalSummary84, statisticalSummary85);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + (-0.405429217622299d) + "'", double61 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.8463073355328574d + "'", double62 == 0.8463073355328574d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + (-0.405429217622299d) + "'", double81 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.2806531524060034d + "'", double82 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + (-0.4023317120818342d) + "'", double83 == (-0.4023317120818342d));
    }

    @Test
    public void test1004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1004");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        tTestImpl1.setDistribution(tDistribution39);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary42 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean44 = tTestImpl1.tTest((double) 0, statisticalSummary42, 0.3793626154059051d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
    }

    @Test
    public void test1005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1005");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        tTestImpl1.setDistribution(tDistribution39);
        org.apache.commons.math.distribution.TDistribution tDistribution41 = null;
        tTestImpl1.setDistribution(tDistribution41);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary44 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean46 = tTestImpl1.tTest(0.1143321549278642d, statisticalSummary44, (-0.09656583816243881d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -0.09656583816243881");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
    }

    @Test
    public void test1006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1006");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        org.apache.commons.math.distribution.TDistribution tDistribution16 = null;
        tTestImpl3.setDistribution(tDistribution16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray23 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution24);
        double[] doubleArray31 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray36 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double37 = tTestImpl25.homoscedasticT(doubleArray31, doubleArray36);
        double double38 = tTestImpl19.tTest(doubleArray23, doubleArray36);
        double double39 = tTestImpl3.t(10.0d, doubleArray23);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution54 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl55 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution54);
        double[] doubleArray61 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray66 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double67 = tTestImpl55.homoscedasticT(doubleArray61, doubleArray66);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl69 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution71 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl72 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution71);
        double[] doubleArray78 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray83 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double84 = tTestImpl72.homoscedasticT(doubleArray78, doubleArray83);
        double double85 = tTestImpl69.tTest((double) (short) 100, doubleArray78);
        double double86 = tTestImpl55.t((double) 10.0f, doubleArray78);
        double double87 = tTestImpl3.homoscedasticT(doubleArray52, doubleArray78);
        double double88 = tTestImpl0.t((double) 100.0f, doubleArray78);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary89 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary90 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean92 = tTestImpl0.tTest(statisticalSummary89, statisticalSummary90, 0.35800486798369846d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-0.405429217622299d) + "'", double37 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.2806531524060034d + "'", double38 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 3.8d + "'", double39 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + (-0.405429217622299d) + "'", double67 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + (-0.405429217622299d) + "'", double84 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.01613264369976175d + "'", double85 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.5339796283719219d + "'", double86 == 0.5339796283719219d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.405429217622299d + "'", double87 == 0.405429217622299d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + (-3.9998096691255283d) + "'", double88 == (-3.9998096691255283d));
    }

    @Test
    public void test1007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1007");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl0.t((double) (short) 10, doubleArray22);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution41 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution41);
        double[] doubleArray48 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray53 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double54 = tTestImpl42.homoscedasticT(doubleArray48, doubleArray53);
        double double55 = tTestImpl39.tTest((double) (short) 100, doubleArray48);
        org.apache.commons.math.distribution.TDistribution tDistribution56 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl57 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution56);
        double[] doubleArray63 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray68 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double69 = tTestImpl57.homoscedasticT(doubleArray63, doubleArray68);
        double double70 = tTestImpl0.pairedT(doubleArray48, doubleArray63);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary72 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double73 = tTestImpl0.t(0.2806531524060034d, statisticalSummary72);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 3.8d + "'", double38 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + (-0.405429217622299d) + "'", double54 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.01613264369976175d + "'", double55 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + (-0.405429217622299d) + "'", double69 == (-0.405429217622299d));
        org.junit.Assert.assertTrue(Double.isNaN(double70));
    }

    @Test
    public void test1008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1008");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl0.t((double) (short) 10, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        tTestImpl0.setDistribution(tDistribution39);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl41.tTest((double) (short) 100, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution59 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl60 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution59);
        double[] doubleArray66 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray71 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double72 = tTestImpl60.homoscedasticT(doubleArray66, doubleArray71);
        double[] doubleArray80 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double81 = tTestImpl60.t((double) '4', doubleArray80);
        double double82 = tTestImpl41.tTest((double) (short) 100, doubleArray80);
        double[] doubleArray83 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double84 = tTestImpl0.pairedT(doubleArray80, doubleArray83);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 3.8d + "'", double38 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.01613264369976175d + "'", double57 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + (-0.405429217622299d) + "'", double72 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + (-0.09656583816243881d) + "'", double81 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.07560555610353314d + "'", double82 == 0.07560555610353314d);
    }

    @Test
    public void test1009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1009");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution1 = null;
        tTestImpl0.setDistribution(tDistribution1);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary4 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double5 = tTestImpl0.tTest(0.35800486798369846d, statisticalSummary4);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1010");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl2 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        double double18 = tTestImpl2.tTest((double) (short) 100, doubleArray11);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        double[] doubleArray41 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double42 = tTestImpl21.t((double) '4', doubleArray41);
        double double43 = tTestImpl2.tTest((double) (short) 100, doubleArray41);
        double[] doubleArray50 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double51 = tTestImpl2.tTest(0.405429217622299d, doubleArray50);
        double double52 = tTestImpl0.t(3.8d, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        tTestImpl0.setDistribution(tDistribution53);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl56 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray60 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl62 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution61);
        double[] doubleArray68 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray73 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double74 = tTestImpl62.homoscedasticT(doubleArray68, doubleArray73);
        double double75 = tTestImpl56.tTest(doubleArray60, doubleArray73);
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl78 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution77);
        double[] doubleArray84 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray89 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double90 = tTestImpl78.homoscedasticT(doubleArray84, doubleArray89);
        double double91 = tTestImpl56.t((double) 1L, doubleArray89);
        double double92 = tTestImpl0.t(0.15639940166959065d, doubleArray89);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary94 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean96 = tTestImpl0.tTest(0.9755634976417653d, statisticalSummary94, (-2.2d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -2.2");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.01613264369976175d + "'", double18 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-0.09656583816243881d) + "'", double42 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.07560555610353314d + "'", double43 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.1143321549278642d + "'", double51 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-10.500000000000002d) + "'", double52 == (-10.500000000000002d));
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-0.405429217622299d) + "'", double74 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.2806531524060034d + "'", double75 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + (-0.405429217622299d) + "'", double90 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 1.3573057358494125d + "'", double91 == 1.3573057358494125d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 1.3930877336894083d + "'", double92 == 1.3930877336894083d);
    }

    @Test
    public void test1011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1011");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution1 = null;
        tTestImpl0.setDistribution(tDistribution1);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        tTestImpl0.setDistribution(tDistribution3);
        org.apache.commons.math.distribution.TDistribution tDistribution6 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl7 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution6);
        double[] doubleArray13 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray18 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double19 = tTestImpl7.homoscedasticT(doubleArray13, doubleArray18);
        double double20 = tTestImpl0.t(3.8d, doubleArray13);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        tTestImpl0.setDistribution(tDistribution21);
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        tTestImpl0.setDistribution(tDistribution23);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary25 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary26 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double27 = tTestImpl0.homoscedasticT(statisticalSummary25, statisticalSummary26);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-0.405429217622299d) + "'", double19 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.8463073355328574d + "'", double20 == 0.8463073355328574d);
    }

    @Test
    public void test1012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1012");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        tTestImpl0.setDistribution(tDistribution58);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary60 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary61 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean63 = tTestImpl0.tTest(statisticalSummary60, statisticalSummary61, (double) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 100.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
    }

    @Test
    public void test1013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1013");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        tTestImpl0.setDistribution(tDistribution17);
        org.apache.commons.math.distribution.TDistribution tDistribution19 = null;
        tTestImpl0.setDistribution(tDistribution19);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary22 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean24 = tTestImpl0.tTest(0.37390096630005876d, statisticalSummary22, (-1.1115227041167497d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -1.1115227041167497");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
    }

    @Test
    public void test1014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1014");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        tTestImpl0.setDistribution(tDistribution17);
        org.apache.commons.math.distribution.TDistribution tDistribution19 = null;
        tTestImpl0.setDistribution(tDistribution19);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary21 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary22 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double23 = tTestImpl0.tTest(statisticalSummary21, statisticalSummary22);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
    }

    @Test
    public void test1015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1015");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        tTestImpl3.setDistribution(tDistribution4);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution8 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl9 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution8);
        double[] doubleArray15 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray20 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double21 = tTestImpl9.homoscedasticT(doubleArray15, doubleArray20);
        double double22 = tTestImpl6.tTest((double) (short) 100, doubleArray15);
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution24);
        double[] doubleArray31 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray36 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double37 = tTestImpl25.homoscedasticT(doubleArray31, doubleArray36);
        double[] doubleArray45 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double46 = tTestImpl25.t((double) '4', doubleArray45);
        double double47 = tTestImpl6.tTest((double) (short) 100, doubleArray45);
        org.apache.commons.math.distribution.TDistribution tDistribution49 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl50 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution49);
        double[] doubleArray56 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray61 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double62 = tTestImpl50.homoscedasticT(doubleArray56, doubleArray61);
        double double63 = tTestImpl6.tTest((double) (byte) 1, doubleArray56);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl65 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution64);
        double[] doubleArray71 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray76 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double77 = tTestImpl65.homoscedasticT(doubleArray71, doubleArray76);
        double[] doubleArray85 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double86 = tTestImpl65.t((double) '4', doubleArray85);
        double double87 = tTestImpl3.t(doubleArray56, doubleArray85);
        double double88 = tTestImpl0.tTest((double) 0, doubleArray56);
        org.apache.commons.math.distribution.TDistribution tDistribution89 = null;
        tTestImpl0.setDistribution(tDistribution89);
        org.apache.commons.math.distribution.TDistribution tDistribution91 = null;
        tTestImpl0.setDistribution(tDistribution91);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary93 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary94 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double95 = tTestImpl0.homoscedasticTTest(statisticalSummary93, statisticalSummary94);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-0.405429217622299d) + "'", double21 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.01613264369976175d + "'", double22 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-0.405429217622299d) + "'", double37 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-0.09656583816243881d) + "'", double46 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.07560555610353314d + "'", double47 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + (-0.405429217622299d) + "'", double62 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.3793626154059051d + "'", double63 == 0.3793626154059051d);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + (-0.405429217622299d) + "'", double77 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + (-0.09656583816243881d) + "'", double86 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + (-0.975807309953049d) + "'", double87 == (-0.975807309953049d));
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.35800486798369846d + "'", double88 == 0.35800486798369846d);
    }

    @Test
    public void test1016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1016");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl19.setDistribution(tDistribution20);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution27 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl28 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution27);
        double[] doubleArray34 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray39 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double40 = tTestImpl28.homoscedasticT(doubleArray34, doubleArray39);
        double double41 = tTestImpl25.tTest((double) (short) 100, doubleArray34);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double[] doubleArray64 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double65 = tTestImpl44.t((double) '4', doubleArray64);
        double double66 = tTestImpl25.tTest((double) (short) 100, doubleArray64);
        double[] doubleArray73 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double74 = tTestImpl25.tTest(0.405429217622299d, doubleArray73);
        double double75 = tTestImpl23.t(3.8d, doubleArray73);
        double double76 = tTestImpl19.t((double) (short) 1, doubleArray73);
        double double77 = tTestImpl0.tTest(0.0d, doubleArray73);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary79 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double80 = tTestImpl0.t(1.3930877336894083d, statisticalSummary79);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.405429217622299d) + "'", double40 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.01613264369976175d + "'", double41 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + (-0.09656583816243881d) + "'", double65 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.07560555610353314d + "'", double66 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.1143321549278642d + "'", double74 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + (-10.500000000000002d) + "'", double75 == (-10.500000000000002d));
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + (-3.5d) + "'", double76 == (-3.5d));
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.37390096630005876d + "'", double77 == 0.37390096630005876d);
    }

    @Test
    public void test1017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1017");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        double double37 = tTestImpl1.t(10.0d, doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl40 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution39);
        double[] doubleArray46 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray51 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double52 = tTestImpl40.homoscedasticT(doubleArray46, doubleArray51);
        double double53 = tTestImpl1.t(100.0d, doubleArray51);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary55 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean57 = tTestImpl1.tTest(0.5339796283719219d, statisticalSummary55, (-1.587268255506484d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -1.587268255506484");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 3.8d + "'", double37 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-0.405429217622299d) + "'", double52 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-2.8418588844347075d) + "'", double53 == (-2.8418588844347075d));
    }

    @Test
    public void test1018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1018");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary16 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary17 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double18 = tTestImpl1.homoscedasticTTest(statisticalSummary16, statisticalSummary17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
    }

    @Test
    public void test1019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1019");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        double[] doubleArray21 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double22 = tTestImpl1.t((double) '4', doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        org.apache.commons.math.distribution.TDistribution tDistribution37 = null;
        tTestImpl24.setDistribution(tDistribution37);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl40 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray44 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution45 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl46 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution45);
        double[] doubleArray52 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray57 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double58 = tTestImpl46.homoscedasticT(doubleArray52, doubleArray57);
        double double59 = tTestImpl40.tTest(doubleArray44, doubleArray57);
        double double60 = tTestImpl24.t(10.0d, doubleArray44);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl63 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution62);
        double[] doubleArray69 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray74 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double75 = tTestImpl63.homoscedasticT(doubleArray69, doubleArray74);
        double double76 = tTestImpl24.t(100.0d, doubleArray74);
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl78 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution77);
        double[] doubleArray84 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray89 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double90 = tTestImpl78.homoscedasticT(doubleArray84, doubleArray89);
        double double91 = tTestImpl1.homoscedasticT(doubleArray74, doubleArray84);
        org.apache.commons.math.distribution.TDistribution tDistribution92 = null;
        tTestImpl1.setDistribution(tDistribution92);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary94 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary95 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double96 = tTestImpl1.homoscedasticT(statisticalSummary94, statisticalSummary95);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-0.09656583816243881d) + "'", double22 == (-0.09656583816243881d));
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + (-0.405429217622299d) + "'", double58 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.2806531524060034d + "'", double59 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 3.8d + "'", double60 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + (-0.405429217622299d) + "'", double75 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + (-2.8418588844347075d) + "'", double76 == (-2.8418588844347075d));
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + (-0.405429217622299d) + "'", double90 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.405429217622299d + "'", double91 == 0.405429217622299d);
    }

    @Test
    public void test1020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1020");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary58 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary59 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean61 = tTestImpl0.tTest(statisticalSummary58, statisticalSummary59, 0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
    }

    @Test
    public void test1021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1021");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        tTestImpl0.setDistribution(tDistribution17);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl19.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl19.setDistribution(tDistribution22);
        org.apache.commons.math.distribution.TDistribution tDistribution25 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl26 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution25);
        double[] doubleArray32 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray37 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double38 = tTestImpl26.homoscedasticT(doubleArray32, doubleArray37);
        double double39 = tTestImpl19.t(3.8d, doubleArray32);
        double[] doubleArray40 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double41 = tTestImpl0.homoscedasticT(doubleArray32, doubleArray40);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-0.405429217622299d) + "'", double38 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.8463073355328574d + "'", double39 == 0.8463073355328574d);
    }

    @Test
    public void test1022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1022");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary20 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary21 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean23 = tTestImpl0.tTest(statisticalSummary20, statisticalSummary21, 4.442799675467754d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 4.442799675467754");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
    }

    @Test
    public void test1023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1023");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        double[] doubleArray48 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double49 = tTestImpl0.tTest(0.405429217622299d, doubleArray48);
        double[] doubleArray51 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean53 = tTestImpl0.tTest(0.3793626154059051d, doubleArray51, 0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.1143321549278642d + "'", double49 == 0.1143321549278642d);
    }

    @Test
    public void test1024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1024");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution17);
        double[] doubleArray24 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray29 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double30 = tTestImpl18.homoscedasticT(doubleArray24, doubleArray29);
        double double31 = tTestImpl15.tTest((double) (short) 100, doubleArray24);
        org.apache.commons.math.distribution.TDistribution tDistribution33 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl34 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution33);
        double[] doubleArray40 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray45 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double46 = tTestImpl34.homoscedasticT(doubleArray40, doubleArray45);
        double[] doubleArray54 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double55 = tTestImpl34.t((double) '4', doubleArray54);
        double double56 = tTestImpl15.tTest((double) (short) 100, doubleArray54);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl59 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution58);
        double[] doubleArray65 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray70 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double71 = tTestImpl59.homoscedasticT(doubleArray65, doubleArray70);
        double double72 = tTestImpl15.tTest((double) (byte) 1, doubleArray65);
        double double73 = tTestImpl1.t((-1.0d), doubleArray65);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary75 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double76 = tTestImpl1.t((double) '#', statisticalSummary75);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-0.405429217622299d) + "'", double30 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.01613264369976175d + "'", double31 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-0.405429217622299d) + "'", double46 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-0.09656583816243881d) + "'", double55 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.07560555610353314d + "'", double56 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + (-0.405429217622299d) + "'", double71 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.3793626154059051d + "'", double72 == 0.3793626154059051d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 1.088109431399388d + "'", double73 == 1.088109431399388d);
    }

    @Test
    public void test1025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1025");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        tTestImpl0.setDistribution(tDistribution58);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        tTestImpl0.setDistribution(tDistribution60);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        tTestImpl0.setDistribution(tDistribution62);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        tTestImpl0.setDistribution(tDistribution64);
        org.apache.commons.math.distribution.TDistribution tDistribution66 = null;
        tTestImpl0.setDistribution(tDistribution66);
        org.apache.commons.math.distribution.TDistribution tDistribution68 = null;
        tTestImpl0.setDistribution(tDistribution68);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary71 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double72 = tTestImpl0.t((-2.2d), statisticalSummary71);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
    }

    @Test
    public void test1026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1026");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl2 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        double double18 = tTestImpl2.tTest((double) (short) 100, doubleArray11);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        double[] doubleArray41 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double42 = tTestImpl21.t((double) '4', doubleArray41);
        double double43 = tTestImpl2.tTest((double) (short) 100, doubleArray41);
        double[] doubleArray50 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double51 = tTestImpl2.tTest(0.405429217622299d, doubleArray50);
        double double52 = tTestImpl0.t(3.8d, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        tTestImpl0.setDistribution(tDistribution53);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl0.setDistribution(tDistribution55);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl58 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray62 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution63 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl64 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution63);
        double[] doubleArray70 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray75 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double76 = tTestImpl64.homoscedasticT(doubleArray70, doubleArray75);
        double double77 = tTestImpl58.tTest(doubleArray62, doubleArray75);
        org.apache.commons.math.distribution.TDistribution tDistribution79 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl80 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution79);
        double[] doubleArray86 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray91 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double92 = tTestImpl80.homoscedasticT(doubleArray86, doubleArray91);
        double double93 = tTestImpl58.t((double) 1L, doubleArray91);
        double double94 = tTestImpl0.t((double) 0.0f, doubleArray91);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary95 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary96 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double97 = tTestImpl0.homoscedasticTTest(statisticalSummary95, statisticalSummary96);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.01613264369976175d + "'", double18 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-0.09656583816243881d) + "'", double42 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.07560555610353314d + "'", double43 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.1143321549278642d + "'", double51 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-10.500000000000002d) + "'", double52 == (-10.500000000000002d));
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + (-0.405429217622299d) + "'", double76 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.2806531524060034d + "'", double77 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + (-0.405429217622299d) + "'", double92 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 1.3573057358494125d + "'", double93 == 1.3573057358494125d);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 1.3997215400947067d + "'", double94 == 1.3997215400947067d);
    }

    @Test
    public void test1027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1027");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl0.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl0.setDistribution(tDistribution22);
        org.apache.commons.math.distribution.TDistribution tDistribution25 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl26 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution25);
        org.apache.commons.math.distribution.TDistribution tDistribution27 = null;
        tTestImpl26.setDistribution(tDistribution27);
        org.apache.commons.math.distribution.TDistribution tDistribution29 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl30 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution29);
        double[] doubleArray36 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray41 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double42 = tTestImpl30.homoscedasticT(doubleArray36, doubleArray41);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl43 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray47 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution48 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl49 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution48);
        double[] doubleArray55 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray60 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double61 = tTestImpl49.homoscedasticT(doubleArray55, doubleArray60);
        double double62 = tTestImpl43.tTest(doubleArray47, doubleArray60);
        double double63 = tTestImpl26.homoscedasticT(doubleArray41, doubleArray47);
        double double64 = tTestImpl0.t((double) (byte) 100, doubleArray47);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary66 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double67 = tTestImpl0.tTest((-3.9998096691255283d), statisticalSummary66);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-0.405429217622299d) + "'", double42 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + (-0.405429217622299d) + "'", double61 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.2806531524060034d + "'", double62 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + (-1.1115227041167497d) + "'", double63 == (-1.1115227041167497d));
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + (-2.2d) + "'", double64 == (-2.2d));
    }

    @Test
    public void test1028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1028");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl7 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray11 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution12 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl13 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution12);
        double[] doubleArray19 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray24 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double25 = tTestImpl13.homoscedasticT(doubleArray19, doubleArray24);
        double double26 = tTestImpl7.tTest(doubleArray11, doubleArray24);
        org.apache.commons.math.distribution.TDistribution tDistribution27 = null;
        tTestImpl7.setDistribution(tDistribution27);
        org.apache.commons.math.distribution.TDistribution tDistribution29 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl30 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution29);
        double[] doubleArray36 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray41 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double42 = tTestImpl30.homoscedasticT(doubleArray36, doubleArray41);
        double[] doubleArray50 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double51 = tTestImpl30.t((double) '4', doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution52 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl53 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution52);
        double[] doubleArray59 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray64 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double65 = tTestImpl53.homoscedasticT(doubleArray59, doubleArray64);
        double double66 = tTestImpl7.t(doubleArray50, doubleArray64);
        boolean boolean68 = tTestImpl5.tTest((double) (short) 1, doubleArray64, 0.405429217622299d);
        // The following exception was thrown during execution in test generation
        try {
            double double69 = tTestImpl1.tTest(0.01613264369976175d, doubleArray64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + (-0.405429217622299d) + "'", double25 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.2806531524060034d + "'", double26 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-0.405429217622299d) + "'", double42 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + (-0.09656583816243881d) + "'", double51 == (-0.09656583816243881d));
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + (-0.405429217622299d) + "'", double65 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.5172120199559697d + "'", double66 == 0.5172120199559697d);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
    }

    @Test
    public void test1029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1029");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl0.t((double) (short) 10, doubleArray22);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary39 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary40 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double41 = tTestImpl0.homoscedasticTTest(statisticalSummary39, statisticalSummary40);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 3.8d + "'", double38 == 3.8d);
    }

    @Test
    public void test1030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1030");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        tTestImpl0.setDistribution(tDistribution58);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        tTestImpl0.setDistribution(tDistribution60);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        tTestImpl0.setDistribution(tDistribution62);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        tTestImpl0.setDistribution(tDistribution64);
        org.apache.commons.math.distribution.TDistribution tDistribution66 = null;
        tTestImpl0.setDistribution(tDistribution66);
        double[] doubleArray74 = new double[] { (-2.8418588844347075d), 100.0f, (-1.0f), 0.35800486798369846d, 0.01613264369976175d };
        double double75 = tTestImpl0.t((double) (short) 0, doubleArray74);
        java.lang.Class<?> wildcardClass76 = doubleArray74.getClass();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-2.8418588844347075, 100.0, -1.0, 0.35800486798369846, 0.01613264369976175]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.9566618438474437d + "'", double75 == 0.9566618438474437d);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test1031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1031");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        double[] doubleArray21 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double22 = tTestImpl1.t((double) '4', doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        org.apache.commons.math.distribution.TDistribution tDistribution37 = null;
        tTestImpl24.setDistribution(tDistribution37);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl40 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray44 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution45 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl46 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution45);
        double[] doubleArray52 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray57 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double58 = tTestImpl46.homoscedasticT(doubleArray52, doubleArray57);
        double double59 = tTestImpl40.tTest(doubleArray44, doubleArray57);
        double double60 = tTestImpl24.t(10.0d, doubleArray44);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl63 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution62);
        double[] doubleArray69 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray74 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double75 = tTestImpl63.homoscedasticT(doubleArray69, doubleArray74);
        double double76 = tTestImpl24.t(100.0d, doubleArray74);
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl78 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution77);
        double[] doubleArray84 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray89 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double90 = tTestImpl78.homoscedasticT(doubleArray84, doubleArray89);
        double double91 = tTestImpl1.homoscedasticT(doubleArray74, doubleArray84);
        java.lang.Class<?> wildcardClass92 = doubleArray84.getClass();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-0.09656583816243881d) + "'", double22 == (-0.09656583816243881d));
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + (-0.405429217622299d) + "'", double58 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.2806531524060034d + "'", double59 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 3.8d + "'", double60 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + (-0.405429217622299d) + "'", double75 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + (-2.8418588844347075d) + "'", double76 == (-2.8418588844347075d));
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + (-0.405429217622299d) + "'", double90 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.405429217622299d + "'", double91 == 0.405429217622299d);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test1032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1032");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl1.t((-0.975807309953049d), doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl1.setDistribution(tDistribution55);
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        tTestImpl1.setDistribution(tDistribution57);
        org.apache.commons.math.distribution.TDistribution tDistribution59 = null;
        tTestImpl1.setDistribution(tDistribution59);
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        tTestImpl1.setDistribution(tDistribution61);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary64 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double65 = tTestImpl1.tTest((double) (byte) 0, statisticalSummary64);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.4411111919348023d + "'", double54 == 1.4411111919348023d);
    }

    @Test
    public void test1033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1033");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution1 = null;
        tTestImpl0.setDistribution(tDistribution1);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        tTestImpl0.setDistribution(tDistribution3);
        org.apache.commons.math.distribution.TDistribution tDistribution6 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl7 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution6);
        double[] doubleArray13 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray18 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double19 = tTestImpl7.homoscedasticT(doubleArray13, doubleArray18);
        double double20 = tTestImpl0.t(3.8d, doubleArray13);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        tTestImpl0.setDistribution(tDistribution21);
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        tTestImpl0.setDistribution(tDistribution23);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary26 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean28 = tTestImpl0.tTest((-1.587268255506484d), statisticalSummary26, (double) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-0.405429217622299d) + "'", double19 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.8463073355328574d + "'", double20 == 0.8463073355328574d);
    }

    @Test
    public void test1034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1034");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        double[] doubleArray21 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double22 = tTestImpl1.t((double) '4', doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        org.apache.commons.math.distribution.TDistribution tDistribution37 = null;
        tTestImpl24.setDistribution(tDistribution37);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl40 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray44 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution45 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl46 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution45);
        double[] doubleArray52 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray57 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double58 = tTestImpl46.homoscedasticT(doubleArray52, doubleArray57);
        double double59 = tTestImpl40.tTest(doubleArray44, doubleArray57);
        double double60 = tTestImpl24.t(10.0d, doubleArray44);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl63 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution62);
        double[] doubleArray69 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray74 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double75 = tTestImpl63.homoscedasticT(doubleArray69, doubleArray74);
        double double76 = tTestImpl24.t(100.0d, doubleArray74);
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl78 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution77);
        double[] doubleArray84 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray89 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double90 = tTestImpl78.homoscedasticT(doubleArray84, doubleArray89);
        double double91 = tTestImpl1.homoscedasticT(doubleArray74, doubleArray84);
        double[] doubleArray92 = null;
        double[] doubleArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double94 = tTestImpl1.pairedTTest(doubleArray92, doubleArray93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-0.09656583816243881d) + "'", double22 == (-0.09656583816243881d));
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + (-0.405429217622299d) + "'", double58 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.2806531524060034d + "'", double59 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 3.8d + "'", double60 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + (-0.405429217622299d) + "'", double75 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + (-2.8418588844347075d) + "'", double76 == (-2.8418588844347075d));
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + (-0.405429217622299d) + "'", double90 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.405429217622299d + "'", double91 == 0.405429217622299d);
    }

    @Test
    public void test1035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1035");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl0.t((double) (short) 10, doubleArray22);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution41 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution41);
        double[] doubleArray48 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray53 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double54 = tTestImpl42.homoscedasticT(doubleArray48, doubleArray53);
        double double55 = tTestImpl39.tTest((double) (short) 100, doubleArray48);
        org.apache.commons.math.distribution.TDistribution tDistribution56 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl57 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution56);
        double[] doubleArray63 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray68 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double69 = tTestImpl57.homoscedasticT(doubleArray63, doubleArray68);
        double double70 = tTestImpl0.pairedT(doubleArray48, doubleArray63);
        org.apache.commons.math.distribution.TDistribution tDistribution71 = null;
        tTestImpl0.setDistribution(tDistribution71);
        org.apache.commons.math.distribution.TDistribution tDistribution73 = null;
        tTestImpl0.setDistribution(tDistribution73);
        org.apache.commons.math.distribution.TDistribution tDistribution75 = null;
        tTestImpl0.setDistribution(tDistribution75);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary77 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary78 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean80 = tTestImpl0.tTest(statisticalSummary77, statisticalSummary78, 4.466666666666667d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 4.466666666666667");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 3.8d + "'", double38 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + (-0.405429217622299d) + "'", double54 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.01613264369976175d + "'", double55 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + (-0.405429217622299d) + "'", double69 == (-0.405429217622299d));
        org.junit.Assert.assertTrue(Double.isNaN(double70));
    }

    @Test
    public void test1036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1036");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary3 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean5 = tTestImpl1.tTest((-2.2d), statisticalSummary3, (-1.0d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -1.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1037");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        tTestImpl0.setDistribution(tDistribution58);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        tTestImpl0.setDistribution(tDistribution60);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        tTestImpl0.setDistribution(tDistribution62);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        tTestImpl0.setDistribution(tDistribution64);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary67 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean69 = tTestImpl0.tTest(0.0d, statisticalSummary67, (double) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -1.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
    }

    @Test
    public void test1038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1038");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        tTestImpl42.setDistribution(tDistribution43);
        org.apache.commons.math.distribution.TDistribution tDistribution45 = null;
        tTestImpl42.setDistribution(tDistribution45);
        org.apache.commons.math.distribution.TDistribution tDistribution48 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl49 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution48);
        double[] doubleArray55 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray60 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double61 = tTestImpl49.homoscedasticT(doubleArray55, doubleArray60);
        double double62 = tTestImpl42.t(3.8d, doubleArray55);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl63 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray67 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution68 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl69 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution68);
        double[] doubleArray75 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray80 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double81 = tTestImpl69.homoscedasticT(doubleArray75, doubleArray80);
        double double82 = tTestImpl63.tTest(doubleArray67, doubleArray80);
        double double83 = tTestImpl0.t(doubleArray55, doubleArray80);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary84 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary85 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean87 = tTestImpl0.tTest(statisticalSummary84, statisticalSummary85, (double) 0L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + (-0.405429217622299d) + "'", double61 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.8463073355328574d + "'", double62 == 0.8463073355328574d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + (-0.405429217622299d) + "'", double81 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.2806531524060034d + "'", double82 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + (-0.4023317120818342d) + "'", double83 == (-0.4023317120818342d));
    }

    @Test
    public void test1039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1039");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution44 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl45 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution44);
        double[] doubleArray51 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray56 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double57 = tTestImpl45.homoscedasticT(doubleArray51, doubleArray56);
        double double58 = tTestImpl42.tTest((double) (short) 100, doubleArray51);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl61 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution60);
        double[] doubleArray67 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray72 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double73 = tTestImpl61.homoscedasticT(doubleArray67, doubleArray72);
        double[] doubleArray81 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double82 = tTestImpl61.t((double) '4', doubleArray81);
        double double83 = tTestImpl42.tTest((double) (short) 100, doubleArray81);
        double[] doubleArray89 = new double[] { 1.0f, (-0.09656583816243881d), ' ', 0.8463073355328574d, 1.3965146696271626d };
        double double90 = tTestImpl0.homoscedasticTTest(doubleArray81, doubleArray89);
        java.lang.Class<?> wildcardClass91 = doubleArray81.getClass();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-0.405429217622299d) + "'", double57 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.01613264369976175d + "'", double58 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + (-0.405429217622299d) + "'", double73 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + (-0.09656583816243881d) + "'", double82 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.07560555610353314d + "'", double83 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[1.0, -0.09656583816243881, 32.0, 0.8463073355328574, 1.3965146696271626]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.12673187601587688d + "'", double90 == 0.12673187601587688d);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1040");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl1.t((-0.975807309953049d), doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl1.setDistribution(tDistribution55);
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        tTestImpl1.setDistribution(tDistribution57);
        org.apache.commons.math.distribution.TDistribution tDistribution59 = null;
        tTestImpl1.setDistribution(tDistribution59);
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        tTestImpl1.setDistribution(tDistribution61);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary63 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary64 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double65 = tTestImpl1.tTest(statisticalSummary63, statisticalSummary64);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.4411111919348023d + "'", double54 == 1.4411111919348023d);
    }

    @Test
    public void test1041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1041");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray19 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        double double34 = tTestImpl15.tTest(doubleArray19, doubleArray32);
        org.apache.commons.math.distribution.TDistribution tDistribution36 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl37 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution36);
        double[] doubleArray43 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray48 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double49 = tTestImpl37.homoscedasticT(doubleArray43, doubleArray48);
        org.apache.commons.math.distribution.TDistribution tDistribution50 = null;
        tTestImpl37.setDistribution(tDistribution50);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl53 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray57 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl59 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution58);
        double[] doubleArray65 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray70 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double71 = tTestImpl59.homoscedasticT(doubleArray65, doubleArray70);
        double double72 = tTestImpl53.tTest(doubleArray57, doubleArray70);
        double double73 = tTestImpl37.t(10.0d, doubleArray57);
        org.apache.commons.math.distribution.TDistribution tDistribution75 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl76 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution75);
        double[] doubleArray82 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray87 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double88 = tTestImpl76.homoscedasticT(doubleArray82, doubleArray87);
        double double89 = tTestImpl37.t(100.0d, doubleArray87);
        double double90 = tTestImpl15.t((double) 0L, doubleArray87);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean92 = tTestImpl1.tTest((double) (-1L), doubleArray87, (-1.587268255506484d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -1.587268255506484");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.2806531524060034d + "'", double34 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + (-0.405429217622299d) + "'", double49 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + (-0.405429217622299d) + "'", double71 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.2806531524060034d + "'", double72 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 3.8d + "'", double73 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + (-0.405429217622299d) + "'", double88 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + (-2.8418588844347075d) + "'", double89 == (-2.8418588844347075d));
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 1.3997215400947067d + "'", double90 == 1.3997215400947067d);
    }

    @Test
    public void test1042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1042");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl4 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution3);
        double[] doubleArray10 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray15 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double16 = tTestImpl4.homoscedasticT(doubleArray10, doubleArray15);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        org.apache.commons.math.distribution.TDistribution tDistribution37 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl38 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution37);
        double[] doubleArray44 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray49 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double50 = tTestImpl38.homoscedasticT(doubleArray44, doubleArray49);
        double double51 = tTestImpl4.t(doubleArray34, doubleArray49);
        double double52 = tTestImpl1.t((double) 10.0f, doubleArray49);
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        tTestImpl1.setDistribution(tDistribution53);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary55 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary56 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double57 = tTestImpl1.homoscedasticTTest(statisticalSummary55, statisticalSummary56);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + (-0.405429217622299d) + "'", double16 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + (-0.405429217622299d) + "'", double50 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.9755634976417653d + "'", double52 == 0.9755634976417653d);
    }

    @Test
    public void test1043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1043");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl54 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray58 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution59 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl60 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution59);
        double[] doubleArray66 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray71 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double72 = tTestImpl60.homoscedasticT(doubleArray66, doubleArray71);
        double double73 = tTestImpl54.tTest(doubleArray58, doubleArray71);
        org.apache.commons.math.distribution.TDistribution tDistribution74 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl75 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution74);
        double[] doubleArray81 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray86 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double87 = tTestImpl75.homoscedasticT(doubleArray81, doubleArray86);
        double double88 = tTestImpl41.t(doubleArray71, doubleArray86);
        double double89 = tTestImpl1.t((double) 0.0f, doubleArray86);
        java.lang.Class<?> wildcardClass90 = tTestImpl1.getClass();
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + (-0.405429217622299d) + "'", double72 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.2806531524060034d + "'", double73 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + (-0.405429217622299d) + "'", double87 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.0d + "'", double88 == 0.0d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 1.3997215400947067d + "'", double89 == 1.3997215400947067d);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test1044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1044");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        tTestImpl1.setDistribution(tDistribution39);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary42 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean44 = tTestImpl1.tTest(0.0d, statisticalSummary42, 4.466666666666667d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 4.466666666666667");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
    }

    @Test
    public void test1045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1045");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl2 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        double double18 = tTestImpl2.tTest((double) (short) 100, doubleArray11);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        double[] doubleArray41 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double42 = tTestImpl21.t((double) '4', doubleArray41);
        double double43 = tTestImpl2.tTest((double) (short) 100, doubleArray41);
        double[] doubleArray50 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double51 = tTestImpl2.tTest(0.405429217622299d, doubleArray50);
        double double52 = tTestImpl0.t(3.8d, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        tTestImpl0.setDistribution(tDistribution53);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl56 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray60 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl62 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution61);
        double[] doubleArray68 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray73 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double74 = tTestImpl62.homoscedasticT(doubleArray68, doubleArray73);
        double double75 = tTestImpl56.tTest(doubleArray60, doubleArray73);
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl78 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution77);
        double[] doubleArray84 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray89 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double90 = tTestImpl78.homoscedasticT(doubleArray84, doubleArray89);
        double double91 = tTestImpl56.t((double) 1L, doubleArray89);
        double double92 = tTestImpl0.t(0.15639940166959065d, doubleArray89);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary93 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary94 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean96 = tTestImpl0.tTest(statisticalSummary93, statisticalSummary94, 1.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 1.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.01613264369976175d + "'", double18 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-0.09656583816243881d) + "'", double42 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.07560555610353314d + "'", double43 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.1143321549278642d + "'", double51 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-10.500000000000002d) + "'", double52 == (-10.500000000000002d));
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-0.405429217622299d) + "'", double74 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.2806531524060034d + "'", double75 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + (-0.405429217622299d) + "'", double90 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 1.3573057358494125d + "'", double91 == 1.3573057358494125d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 1.3930877336894083d + "'", double92 == 1.3930877336894083d);
    }

    @Test
    public void test1046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1046");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl19.setDistribution(tDistribution20);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution27 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl28 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution27);
        double[] doubleArray34 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray39 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double40 = tTestImpl28.homoscedasticT(doubleArray34, doubleArray39);
        double double41 = tTestImpl25.tTest((double) (short) 100, doubleArray34);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double[] doubleArray64 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double65 = tTestImpl44.t((double) '4', doubleArray64);
        double double66 = tTestImpl25.tTest((double) (short) 100, doubleArray64);
        double[] doubleArray73 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double74 = tTestImpl25.tTest(0.405429217622299d, doubleArray73);
        double double75 = tTestImpl23.t(3.8d, doubleArray73);
        double double76 = tTestImpl19.t((double) (short) 1, doubleArray73);
        double double77 = tTestImpl0.tTest(0.0d, doubleArray73);
        java.lang.Class<?> wildcardClass78 = tTestImpl0.getClass();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.405429217622299d) + "'", double40 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.01613264369976175d + "'", double41 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + (-0.09656583816243881d) + "'", double65 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.07560555610353314d + "'", double66 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.1143321549278642d + "'", double74 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + (-10.500000000000002d) + "'", double75 == (-10.500000000000002d));
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + (-3.5d) + "'", double76 == (-3.5d));
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.37390096630005876d + "'", double77 == 0.37390096630005876d);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test1047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1047");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        double[] doubleArray48 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double49 = tTestImpl0.tTest(0.405429217622299d, doubleArray48);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl51 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution52 = null;
        tTestImpl51.setDistribution(tDistribution52);
        org.apache.commons.math.distribution.TDistribution tDistribution54 = null;
        tTestImpl51.setDistribution(tDistribution54);
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl58 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution57);
        double[] doubleArray64 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray69 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double70 = tTestImpl58.homoscedasticT(doubleArray64, doubleArray69);
        double double71 = tTestImpl51.t(3.8d, doubleArray64);
        double double72 = tTestImpl0.t(1.088109431399388d, doubleArray64);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary74 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double75 = tTestImpl0.tTest(0.9302024075262618d, statisticalSummary74);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.1143321549278642d + "'", double49 == 0.1143321549278642d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + (-0.405429217622299d) + "'", double70 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.8463073355328574d + "'", double71 == 0.8463073355328574d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.982920007042921d + "'", double72 == 0.982920007042921d);
    }

    @Test
    public void test1048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1048");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl22 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution21);
        double[] doubleArray28 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray33 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double34 = tTestImpl22.homoscedasticT(doubleArray28, doubleArray33);
        double double35 = tTestImpl0.t((double) 1L, doubleArray33);
        org.apache.commons.math.distribution.TDistribution tDistribution36 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl37 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution36);
        double[] doubleArray43 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray48 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double49 = tTestImpl37.homoscedasticT(doubleArray43, doubleArray48);
        org.apache.commons.math.distribution.TDistribution tDistribution50 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl51 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution50);
        double[] doubleArray57 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray62 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double63 = tTestImpl51.homoscedasticT(doubleArray57, doubleArray62);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        tTestImpl51.setDistribution(tDistribution64);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl67 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray71 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution72 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl73 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution72);
        double[] doubleArray79 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray84 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double85 = tTestImpl73.homoscedasticT(doubleArray79, doubleArray84);
        double double86 = tTestImpl67.tTest(doubleArray71, doubleArray84);
        double double87 = tTestImpl51.t(10.0d, doubleArray71);
        double double88 = tTestImpl0.tTest(doubleArray48, doubleArray71);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary90 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean92 = tTestImpl0.tTest((double) '4', statisticalSummary90, (-1.1115227041167497d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -1.1115227041167497");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-0.405429217622299d) + "'", double34 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.3573057358494125d + "'", double35 == 1.3573057358494125d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + (-0.405429217622299d) + "'", double49 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + (-0.405429217622299d) + "'", double63 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + (-0.405429217622299d) + "'", double85 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.2806531524060034d + "'", double86 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 3.8d + "'", double87 == 3.8d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.2806531524060034d + "'", double88 == 0.2806531524060034d);
    }

    @Test
    public void test1049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1049");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl0.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl0.setDistribution(tDistribution22);
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        tTestImpl0.setDistribution(tDistribution24);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary26 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary27 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double28 = tTestImpl0.t(statisticalSummary26, statisticalSummary27);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
    }

    @Test
    public void test1050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1050");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution1 = null;
        tTestImpl0.setDistribution(tDistribution1);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        tTestImpl0.setDistribution(tDistribution3);
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray23 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution24);
        double[] doubleArray31 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray36 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double37 = tTestImpl25.homoscedasticT(doubleArray31, doubleArray36);
        double double38 = tTestImpl19.tTest(doubleArray23, doubleArray36);
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl40 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution39);
        double[] doubleArray46 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray51 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double52 = tTestImpl40.homoscedasticT(doubleArray46, doubleArray51);
        double double53 = tTestImpl6.t(doubleArray36, doubleArray51);
        org.apache.commons.math.distribution.TDistribution tDistribution54 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl55 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution54);
        double[] doubleArray61 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray66 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double67 = tTestImpl55.homoscedasticT(doubleArray61, doubleArray66);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl69 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution71 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl72 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution71);
        double[] doubleArray78 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray83 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double84 = tTestImpl72.homoscedasticT(doubleArray78, doubleArray83);
        double double85 = tTestImpl69.tTest((double) (short) 100, doubleArray78);
        double double86 = tTestImpl55.t((double) 10.0f, doubleArray78);
        // The following exception was thrown during execution in test generation
        try {
            double double87 = tTestImpl0.pairedTTest(doubleArray51, doubleArray78);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Input arrays must have the same (positive) length.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-0.405429217622299d) + "'", double37 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.2806531524060034d + "'", double38 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-0.405429217622299d) + "'", double52 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + (-0.405429217622299d) + "'", double67 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + (-0.405429217622299d) + "'", double84 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.01613264369976175d + "'", double85 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.5339796283719219d + "'", double86 == 0.5339796283719219d);
    }

    @Test
    public void test1051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1051");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        org.apache.commons.math.distribution.TDistribution tDistribution34 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl35 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution34);
        double[] doubleArray41 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray46 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double47 = tTestImpl35.homoscedasticT(doubleArray41, doubleArray46);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl48 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray52 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl54 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution53);
        double[] doubleArray60 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray65 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double66 = tTestImpl54.homoscedasticT(doubleArray60, doubleArray65);
        double double67 = tTestImpl48.tTest(doubleArray52, doubleArray65);
        org.apache.commons.math.distribution.TDistribution tDistribution68 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl69 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution68);
        double[] doubleArray75 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray80 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double81 = tTestImpl69.homoscedasticT(doubleArray75, doubleArray80);
        double double82 = tTestImpl35.t(doubleArray65, doubleArray80);
        double double83 = tTestImpl0.homoscedasticT(doubleArray27, doubleArray80);
        org.apache.commons.math.distribution.TDistribution tDistribution84 = null;
        tTestImpl0.setDistribution(tDistribution84);
        org.apache.commons.math.distribution.TDistribution tDistribution86 = null;
        tTestImpl0.setDistribution(tDistribution86);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary89 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double90 = tTestImpl0.t(1.3965146696271626d, statisticalSummary89);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + (-0.405429217622299d) + "'", double47 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + (-0.405429217622299d) + "'", double66 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.2806531524060034d + "'", double67 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + (-0.405429217622299d) + "'", double81 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + (-0.405429217622299d) + "'", double83 == (-0.405429217622299d));
    }

    @Test
    public void test1052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1052");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        tTestImpl0.setDistribution(tDistribution58);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        tTestImpl0.setDistribution(tDistribution60);
        org.apache.commons.math.distribution.TDistribution tDistribution63 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl64 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution63);
        double[] doubleArray70 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray75 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double76 = tTestImpl64.homoscedasticT(doubleArray70, doubleArray75);
        double double77 = tTestImpl0.t((double) 0, doubleArray75);
        org.apache.commons.math.distribution.TDistribution tDistribution78 = null;
        tTestImpl0.setDistribution(tDistribution78);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary80 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary81 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean83 = tTestImpl0.tTest(statisticalSummary80, statisticalSummary81, (double) 1.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 1.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + (-0.405429217622299d) + "'", double76 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 1.3997215400947067d + "'", double77 == 1.3997215400947067d);
    }

    @Test
    public void test1053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1053");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        tTestImpl0.setDistribution(tDistribution17);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary20 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double21 = tTestImpl0.tTest((double) 1, statisticalSummary20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
    }

    @Test
    public void test1054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1054");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        tTestImpl1.setDistribution(tDistribution4);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary7 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean9 = tTestImpl1.tTest(0.12673187601587688d, statisticalSummary7, 0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1055");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl0.t((double) (short) 10, doubleArray22);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution41 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution41);
        double[] doubleArray48 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray53 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double54 = tTestImpl42.homoscedasticT(doubleArray48, doubleArray53);
        double double55 = tTestImpl39.tTest((double) (short) 100, doubleArray48);
        org.apache.commons.math.distribution.TDistribution tDistribution56 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl57 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution56);
        double[] doubleArray63 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray68 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double69 = tTestImpl57.homoscedasticT(doubleArray63, doubleArray68);
        double double70 = tTestImpl0.pairedT(doubleArray48, doubleArray63);
        org.apache.commons.math.distribution.TDistribution tDistribution71 = null;
        tTestImpl0.setDistribution(tDistribution71);
        org.apache.commons.math.distribution.TDistribution tDistribution73 = null;
        tTestImpl0.setDistribution(tDistribution73);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary75 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary76 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double77 = tTestImpl0.t(statisticalSummary75, statisticalSummary76);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 3.8d + "'", double38 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + (-0.405429217622299d) + "'", double54 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.01613264369976175d + "'", double55 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + (-0.405429217622299d) + "'", double69 == (-0.405429217622299d));
        org.junit.Assert.assertTrue(Double.isNaN(double70));
    }

    @Test
    public void test1056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1056");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl22 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution21);
        double[] doubleArray28 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray33 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double34 = tTestImpl22.homoscedasticT(doubleArray28, doubleArray33);
        double double35 = tTestImpl0.t((double) 1L, doubleArray33);
        org.apache.commons.math.distribution.TDistribution tDistribution36 = null;
        tTestImpl0.setDistribution(tDistribution36);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary38 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary39 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean41 = tTestImpl0.tTest(statisticalSummary38, statisticalSummary39, 0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-0.405429217622299d) + "'", double34 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.3573057358494125d + "'", double35 == 1.3573057358494125d);
    }

    @Test
    public void test1057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1057");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution17);
        double[] doubleArray24 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray29 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double30 = tTestImpl18.homoscedasticT(doubleArray24, doubleArray29);
        double double31 = tTestImpl15.tTest((double) (short) 100, doubleArray24);
        org.apache.commons.math.distribution.TDistribution tDistribution33 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl34 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution33);
        double[] doubleArray40 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray45 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double46 = tTestImpl34.homoscedasticT(doubleArray40, doubleArray45);
        double[] doubleArray54 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double55 = tTestImpl34.t((double) '4', doubleArray54);
        double double56 = tTestImpl15.tTest((double) (short) 100, doubleArray54);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl59 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution58);
        double[] doubleArray65 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray70 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double71 = tTestImpl59.homoscedasticT(doubleArray65, doubleArray70);
        double double72 = tTestImpl15.tTest((double) (byte) 1, doubleArray65);
        double double73 = tTestImpl1.t((-1.0d), doubleArray65);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary74 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary75 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double76 = tTestImpl1.homoscedasticT(statisticalSummary74, statisticalSummary75);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-0.405429217622299d) + "'", double30 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.01613264369976175d + "'", double31 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-0.405429217622299d) + "'", double46 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-0.09656583816243881d) + "'", double55 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.07560555610353314d + "'", double56 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + (-0.405429217622299d) + "'", double71 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.3793626154059051d + "'", double72 == 0.3793626154059051d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 1.088109431399388d + "'", double73 == 1.088109431399388d);
    }

    @Test
    public void test1058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1058");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        double[] doubleArray21 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double22 = tTestImpl1.t((double) '4', doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        tTestImpl1.setDistribution(tDistribution23);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary25 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary26 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double27 = tTestImpl1.tTest(statisticalSummary25, statisticalSummary26);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-0.09656583816243881d) + "'", double22 == (-0.09656583816243881d));
    }

    @Test
    public void test1059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1059");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        double[] doubleArray21 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double22 = tTestImpl1.t((double) '4', doubleArray21);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary24 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double25 = tTestImpl1.tTest((-10.500000000000002d), statisticalSummary24);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-0.09656583816243881d) + "'", double22 == (-0.09656583816243881d));
    }

    @Test
    public void test1060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1060");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        tTestImpl3.setDistribution(tDistribution4);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution8 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl9 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution8);
        double[] doubleArray15 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray20 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double21 = tTestImpl9.homoscedasticT(doubleArray15, doubleArray20);
        double double22 = tTestImpl6.tTest((double) (short) 100, doubleArray15);
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution24);
        double[] doubleArray31 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray36 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double37 = tTestImpl25.homoscedasticT(doubleArray31, doubleArray36);
        double[] doubleArray45 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double46 = tTestImpl25.t((double) '4', doubleArray45);
        double double47 = tTestImpl6.tTest((double) (short) 100, doubleArray45);
        org.apache.commons.math.distribution.TDistribution tDistribution49 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl50 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution49);
        double[] doubleArray56 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray61 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double62 = tTestImpl50.homoscedasticT(doubleArray56, doubleArray61);
        double double63 = tTestImpl6.tTest((double) (byte) 1, doubleArray56);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl65 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution64);
        double[] doubleArray71 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray76 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double77 = tTestImpl65.homoscedasticT(doubleArray71, doubleArray76);
        double[] doubleArray85 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double86 = tTestImpl65.t((double) '4', doubleArray85);
        double double87 = tTestImpl3.t(doubleArray56, doubleArray85);
        double double88 = tTestImpl0.tTest((double) 0, doubleArray56);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary89 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary90 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean92 = tTestImpl0.tTest(statisticalSummary89, statisticalSummary90, (double) 10.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 10.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-0.405429217622299d) + "'", double21 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.01613264369976175d + "'", double22 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-0.405429217622299d) + "'", double37 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-0.09656583816243881d) + "'", double46 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.07560555610353314d + "'", double47 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + (-0.405429217622299d) + "'", double62 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.3793626154059051d + "'", double63 == 0.3793626154059051d);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + (-0.405429217622299d) + "'", double77 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + (-0.09656583816243881d) + "'", double86 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + (-0.975807309953049d) + "'", double87 == (-0.975807309953049d));
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.35800486798369846d + "'", double88 == 0.35800486798369846d);
    }

    @Test
    public void test1061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1061");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl22 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution21);
        double[] doubleArray28 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray33 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double34 = tTestImpl22.homoscedasticT(doubleArray28, doubleArray33);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl35 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray39 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl35.tTest(doubleArray39, doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl56 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution55);
        double[] doubleArray62 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray67 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double68 = tTestImpl56.homoscedasticT(doubleArray62, doubleArray67);
        double double69 = tTestImpl22.t(doubleArray52, doubleArray67);
        boolean boolean71 = tTestImpl0.tTest((double) (short) 0, doubleArray52, Double.NaN);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary72 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary73 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double74 = tTestImpl0.homoscedasticTTest(statisticalSummary72, statisticalSummary73);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-0.405429217622299d) + "'", double34 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.2806531524060034d + "'", double54 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + (-0.405429217622299d) + "'", double68 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test1062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1062");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        double double37 = tTestImpl1.t(10.0d, doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution38 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution38);
        double[] doubleArray45 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray50 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double51 = tTestImpl39.homoscedasticT(doubleArray45, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution52 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl53 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution52);
        double[] doubleArray59 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray64 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double65 = tTestImpl53.homoscedasticT(doubleArray59, doubleArray64);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl67 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution69 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl70 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution69);
        double[] doubleArray76 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray81 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double82 = tTestImpl70.homoscedasticT(doubleArray76, doubleArray81);
        double double83 = tTestImpl67.tTest((double) (short) 100, doubleArray76);
        double double84 = tTestImpl53.t((double) 10.0f, doubleArray76);
        double double85 = tTestImpl1.homoscedasticT(doubleArray50, doubleArray76);
        org.apache.commons.math.distribution.TDistribution tDistribution86 = null;
        tTestImpl1.setDistribution(tDistribution86);
        org.apache.commons.math.distribution.TDistribution tDistribution88 = null;
        tTestImpl1.setDistribution(tDistribution88);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary91 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double92 = tTestImpl1.tTest(0.982920007042921d, statisticalSummary91);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 3.8d + "'", double37 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + (-0.405429217622299d) + "'", double51 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + (-0.405429217622299d) + "'", double65 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + (-0.405429217622299d) + "'", double82 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.01613264369976175d + "'", double83 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.5339796283719219d + "'", double84 == 0.5339796283719219d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.405429217622299d + "'", double85 == 0.405429217622299d);
    }

    @Test
    public void test1063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1063");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary21 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double22 = tTestImpl0.tTest((-2.8418588844347075d), statisticalSummary21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
    }

    @Test
    public void test1064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1064");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl0.t((double) (short) 10, doubleArray22);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution41 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution41);
        double[] doubleArray48 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray53 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double54 = tTestImpl42.homoscedasticT(doubleArray48, doubleArray53);
        double double55 = tTestImpl39.tTest((double) (short) 100, doubleArray48);
        org.apache.commons.math.distribution.TDistribution tDistribution56 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl57 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution56);
        double[] doubleArray63 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray68 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double69 = tTestImpl57.homoscedasticT(doubleArray63, doubleArray68);
        double double70 = tTestImpl0.pairedT(doubleArray48, doubleArray63);
        org.apache.commons.math.distribution.TDistribution tDistribution71 = null;
        tTestImpl0.setDistribution(tDistribution71);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary74 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean76 = tTestImpl0.tTest(0.5172120199559697d, statisticalSummary74, Double.NaN);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 3.8d + "'", double38 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + (-0.405429217622299d) + "'", double54 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.01613264369976175d + "'", double55 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + (-0.405429217622299d) + "'", double69 == (-0.405429217622299d));
        org.junit.Assert.assertTrue(Double.isNaN(double70));
    }

    @Test
    public void test1065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1065");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary18 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double19 = tTestImpl0.tTest(0.07560555610353314d, statisticalSummary18);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
    }

    @Test
    public void test1066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1066");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution42 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl43 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution42);
        double[] doubleArray49 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray54 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double55 = tTestImpl43.homoscedasticT(doubleArray49, doubleArray54);
        org.apache.commons.math.distribution.TDistribution tDistribution56 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl57 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution56);
        double[] doubleArray63 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray68 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double69 = tTestImpl57.homoscedasticT(doubleArray63, doubleArray68);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl71 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution73 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl74 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution73);
        double[] doubleArray80 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray85 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double86 = tTestImpl74.homoscedasticT(doubleArray80, doubleArray85);
        double double87 = tTestImpl71.tTest((double) (short) 100, doubleArray80);
        double double88 = tTestImpl57.t((double) 10.0f, doubleArray80);
        double double89 = tTestImpl0.pairedTTest(doubleArray49, doubleArray80);
        org.apache.commons.math.distribution.TDistribution tDistribution90 = null;
        tTestImpl0.setDistribution(tDistribution90);
        org.apache.commons.math.distribution.TDistribution tDistribution92 = null;
        tTestImpl0.setDistribution(tDistribution92);
        org.apache.commons.math.distribution.TDistribution tDistribution94 = null;
        tTestImpl0.setDistribution(tDistribution94);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary96 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary97 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean99 = tTestImpl0.tTest(statisticalSummary96, statisticalSummary97, 0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-0.405429217622299d) + "'", double55 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + (-0.405429217622299d) + "'", double69 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + (-0.405429217622299d) + "'", double86 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.01613264369976175d + "'", double87 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.5339796283719219d + "'", double88 == 0.5339796283719219d);
        org.junit.Assert.assertTrue(Double.isNaN(double89));
    }

    @Test
    public void test1067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1067");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        tTestImpl1.setDistribution(tDistribution4);
        double[] doubleArray7 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double8 = tTestImpl1.tTest(1.3997215400947067d, doubleArray7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1068");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution7 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl8 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution7);
        double[] doubleArray14 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray19 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double20 = tTestImpl8.homoscedasticT(doubleArray14, doubleArray19);
        double double21 = tTestImpl5.tTest((double) (short) 100, doubleArray14);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl5.setDistribution(tDistribution22);
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        tTestImpl5.setDistribution(tDistribution24);
        org.apache.commons.math.distribution.TDistribution tDistribution27 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl28 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution27);
        org.apache.commons.math.distribution.TDistribution tDistribution29 = null;
        tTestImpl28.setDistribution(tDistribution29);
        org.apache.commons.math.distribution.TDistribution tDistribution32 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl33 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution32);
        double[] doubleArray39 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray44 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double45 = tTestImpl33.homoscedasticT(doubleArray39, doubleArray44);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl46 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray50 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution51 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl52 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution51);
        double[] doubleArray58 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray63 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double64 = tTestImpl52.homoscedasticT(doubleArray58, doubleArray63);
        double double65 = tTestImpl46.tTest(doubleArray50, doubleArray63);
        org.apache.commons.math.distribution.TDistribution tDistribution66 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl67 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution66);
        double[] doubleArray73 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray78 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double79 = tTestImpl67.homoscedasticT(doubleArray73, doubleArray78);
        double double80 = tTestImpl33.t(doubleArray63, doubleArray78);
        double double81 = tTestImpl28.t(0.07560555610353314d, doubleArray63);
        double double82 = tTestImpl5.t((double) (short) 10, doubleArray63);
        double double83 = tTestImpl1.t((-0.975807309953049d), doubleArray63);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary84 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary85 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double86 = tTestImpl1.homoscedasticT(statisticalSummary84, statisticalSummary85);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-0.405429217622299d) + "'", double20 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.01613264369976175d + "'", double21 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + (-0.405429217622299d) + "'", double45 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + (-0.405429217622299d) + "'", double64 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.2806531524060034d + "'", double65 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + (-0.405429217622299d) + "'", double79 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 1.3965146696271626d + "'", double81 == 1.3965146696271626d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.9755634976417653d + "'", double82 == 0.9755634976417653d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.4411111919348023d + "'", double83 == 1.4411111919348023d);
    }

    @Test
    public void test1069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1069");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        tTestImpl0.setDistribution(tDistribution58);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        tTestImpl0.setDistribution(tDistribution60);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        tTestImpl0.setDistribution(tDistribution62);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        tTestImpl0.setDistribution(tDistribution64);
        org.apache.commons.math.distribution.TDistribution tDistribution66 = null;
        tTestImpl0.setDistribution(tDistribution66);
        org.apache.commons.math.distribution.TDistribution tDistribution68 = null;
        tTestImpl0.setDistribution(tDistribution68);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary71 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double72 = tTestImpl0.t((double) 1, statisticalSummary71);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
    }

    @Test
    public void test1070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1070");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary18 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double19 = tTestImpl0.t((double) (byte) 100, statisticalSummary18);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
    }

    @Test
    public void test1071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1071");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        org.apache.commons.math.distribution.TDistribution tDistribution16 = null;
        tTestImpl3.setDistribution(tDistribution16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray23 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution24);
        double[] doubleArray31 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray36 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double37 = tTestImpl25.homoscedasticT(doubleArray31, doubleArray36);
        double double38 = tTestImpl19.tTest(doubleArray23, doubleArray36);
        double double39 = tTestImpl3.t(10.0d, doubleArray23);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution54 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl55 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution54);
        double[] doubleArray61 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray66 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double67 = tTestImpl55.homoscedasticT(doubleArray61, doubleArray66);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl69 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution71 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl72 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution71);
        double[] doubleArray78 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray83 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double84 = tTestImpl72.homoscedasticT(doubleArray78, doubleArray83);
        double double85 = tTestImpl69.tTest((double) (short) 100, doubleArray78);
        double double86 = tTestImpl55.t((double) 10.0f, doubleArray78);
        double double87 = tTestImpl3.homoscedasticT(doubleArray52, doubleArray78);
        double double88 = tTestImpl0.t((double) 100.0f, doubleArray78);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary90 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean92 = tTestImpl0.tTest(0.07560555610353314d, statisticalSummary90, (double) 10L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 10.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-0.405429217622299d) + "'", double37 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.2806531524060034d + "'", double38 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 3.8d + "'", double39 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + (-0.405429217622299d) + "'", double67 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + (-0.405429217622299d) + "'", double84 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.01613264369976175d + "'", double85 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.5339796283719219d + "'", double86 == 0.5339796283719219d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.405429217622299d + "'", double87 == 0.405429217622299d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + (-3.9998096691255283d) + "'", double88 == (-3.9998096691255283d));
    }

    @Test
    public void test1072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1072");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl2 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray6 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution7 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl8 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution7);
        double[] doubleArray14 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray19 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double20 = tTestImpl8.homoscedasticT(doubleArray14, doubleArray19);
        double double21 = tTestImpl2.tTest(doubleArray6, doubleArray19);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean23 = tTestImpl0.tTest(1.3404872472421194d, doubleArray6, 0.5339796283719219d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.5339796283719219");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-0.405429217622299d) + "'", double20 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.2806531524060034d + "'", double21 == 0.2806531524060034d);
    }

    @Test
    public void test1073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1073");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl2 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        double double18 = tTestImpl2.tTest((double) (short) 100, doubleArray11);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        double[] doubleArray41 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double42 = tTestImpl21.t((double) '4', doubleArray41);
        double double43 = tTestImpl2.tTest((double) (short) 100, doubleArray41);
        double[] doubleArray50 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double51 = tTestImpl2.tTest(0.405429217622299d, doubleArray50);
        double double52 = tTestImpl0.t(3.8d, doubleArray50);
        java.lang.Class<?> wildcardClass53 = doubleArray50.getClass();
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.01613264369976175d + "'", double18 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-0.09656583816243881d) + "'", double42 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.07560555610353314d + "'", double43 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.1143321549278642d + "'", double51 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-10.500000000000002d) + "'", double52 == (-10.500000000000002d));
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test1074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1074");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary20 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary21 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double22 = tTestImpl0.t(statisticalSummary20, statisticalSummary21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
    }

    @Test
    public void test1075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1075");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        double[] doubleArray42 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl43 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution45 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl46 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution45);
        double[] doubleArray52 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray57 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double58 = tTestImpl46.homoscedasticT(doubleArray52, doubleArray57);
        double double59 = tTestImpl43.tTest((double) (short) 100, doubleArray52);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean61 = tTestImpl0.pairedTTest(doubleArray42, doubleArray52, (-1.1115227041167497d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -1.1115227041167497");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + (-0.405429217622299d) + "'", double58 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.01613264369976175d + "'", double59 == 0.01613264369976175d);
    }

    @Test
    public void test1076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1076");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution44 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl45 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution44);
        double[] doubleArray51 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray56 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double57 = tTestImpl45.homoscedasticT(doubleArray51, doubleArray56);
        double double58 = tTestImpl42.tTest((double) (short) 100, doubleArray51);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl61 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution60);
        double[] doubleArray67 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray72 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double73 = tTestImpl61.homoscedasticT(doubleArray67, doubleArray72);
        double[] doubleArray81 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double82 = tTestImpl61.t((double) '4', doubleArray81);
        double double83 = tTestImpl42.tTest((double) (short) 100, doubleArray81);
        double[] doubleArray89 = new double[] { 1.0f, (-0.09656583816243881d), ' ', 0.8463073355328574d, 1.3965146696271626d };
        double double90 = tTestImpl0.homoscedasticTTest(doubleArray81, doubleArray89);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary91 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary92 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double93 = tTestImpl0.homoscedasticTTest(statisticalSummary91, statisticalSummary92);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-0.405429217622299d) + "'", double57 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.01613264369976175d + "'", double58 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + (-0.405429217622299d) + "'", double73 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + (-0.09656583816243881d) + "'", double82 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.07560555610353314d + "'", double83 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[1.0, -0.09656583816243881, 32.0, 0.8463073355328574, 1.3965146696271626]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.12673187601587688d + "'", double90 == 0.12673187601587688d);
    }

    @Test
    public void test1077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1077");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl0.t((double) (short) 10, doubleArray22);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary39 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary40 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double41 = tTestImpl0.tTest(statisticalSummary39, statisticalSummary40);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 3.8d + "'", double38 == 3.8d);
    }

    @Test
    public void test1078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1078");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution44 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl45 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution44);
        double[] doubleArray51 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray56 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double57 = tTestImpl45.homoscedasticT(doubleArray51, doubleArray56);
        double double58 = tTestImpl42.tTest((double) (short) 100, doubleArray51);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl61 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution60);
        double[] doubleArray67 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray72 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double73 = tTestImpl61.homoscedasticT(doubleArray67, doubleArray72);
        double[] doubleArray81 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double82 = tTestImpl61.t((double) '4', doubleArray81);
        double double83 = tTestImpl42.tTest((double) (short) 100, doubleArray81);
        double[] doubleArray89 = new double[] { 1.0f, (-0.09656583816243881d), ' ', 0.8463073355328574d, 1.3965146696271626d };
        double double90 = tTestImpl0.homoscedasticTTest(doubleArray81, doubleArray89);
        org.apache.commons.math.distribution.TDistribution tDistribution91 = null;
        tTestImpl0.setDistribution(tDistribution91);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary93 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary94 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double95 = tTestImpl0.homoscedasticTTest(statisticalSummary93, statisticalSummary94);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-0.405429217622299d) + "'", double57 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.01613264369976175d + "'", double58 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + (-0.405429217622299d) + "'", double73 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + (-0.09656583816243881d) + "'", double82 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.07560555610353314d + "'", double83 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[1.0, -0.09656583816243881, 32.0, 0.8463073355328574, 1.3965146696271626]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.12673187601587688d + "'", double90 == 0.12673187601587688d);
    }

    @Test
    public void test1079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1079");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        double double37 = tTestImpl1.t(10.0d, doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl40 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution39);
        double[] doubleArray46 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray51 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double52 = tTestImpl40.homoscedasticT(doubleArray46, doubleArray51);
        double double53 = tTestImpl1.t(100.0d, doubleArray51);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary55 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double56 = tTestImpl1.t((double) (-1), statisticalSummary55);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 3.8d + "'", double37 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-0.405429217622299d) + "'", double52 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-2.8418588844347075d) + "'", double53 == (-2.8418588844347075d));
    }

    @Test
    public void test1080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1080");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl22 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution21);
        double[] doubleArray28 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray33 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double34 = tTestImpl22.homoscedasticT(doubleArray28, doubleArray33);
        double double35 = tTestImpl0.t((double) 1L, doubleArray33);
        org.apache.commons.math.distribution.TDistribution tDistribution37 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl38 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution37);
        double[] doubleArray44 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray49 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double50 = tTestImpl38.homoscedasticT(doubleArray44, doubleArray49);
        double[] doubleArray58 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double59 = tTestImpl38.t((double) '4', doubleArray58);
        double double60 = tTestImpl0.t((double) (byte) 10, doubleArray58);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary61 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary62 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double63 = tTestImpl0.tTest(statisticalSummary61, statisticalSummary62);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-0.405429217622299d) + "'", double34 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.3573057358494125d + "'", double35 == 1.3573057358494125d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + (-0.405429217622299d) + "'", double50 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + (-0.09656583816243881d) + "'", double59 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.7753257939094542d + "'", double60 == 1.7753257939094542d);
    }

    @Test
    public void test1081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1081");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl2 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        double double18 = tTestImpl2.tTest((double) (short) 100, doubleArray11);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        double[] doubleArray41 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double42 = tTestImpl21.t((double) '4', doubleArray41);
        double double43 = tTestImpl2.tTest((double) (short) 100, doubleArray41);
        double[] doubleArray50 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double51 = tTestImpl2.tTest(0.405429217622299d, doubleArray50);
        double double52 = tTestImpl0.t(3.8d, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        tTestImpl0.setDistribution(tDistribution53);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary56 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean58 = tTestImpl0.tTest((double) (byte) 10, statisticalSummary56, (double) 0L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.01613264369976175d + "'", double18 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-0.09656583816243881d) + "'", double42 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.07560555610353314d + "'", double43 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.1143321549278642d + "'", double51 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-10.500000000000002d) + "'", double52 == (-10.500000000000002d));
    }

    @Test
    public void test1082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1082");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        org.apache.commons.math.distribution.TDistribution tDistribution34 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl35 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution34);
        double[] doubleArray41 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray46 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double47 = tTestImpl35.homoscedasticT(doubleArray41, doubleArray46);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl48 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray52 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl54 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution53);
        double[] doubleArray60 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray65 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double66 = tTestImpl54.homoscedasticT(doubleArray60, doubleArray65);
        double double67 = tTestImpl48.tTest(doubleArray52, doubleArray65);
        org.apache.commons.math.distribution.TDistribution tDistribution68 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl69 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution68);
        double[] doubleArray75 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray80 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double81 = tTestImpl69.homoscedasticT(doubleArray75, doubleArray80);
        double double82 = tTestImpl35.t(doubleArray65, doubleArray80);
        double double83 = tTestImpl0.homoscedasticT(doubleArray27, doubleArray80);
        org.apache.commons.math.distribution.TDistribution tDistribution84 = null;
        tTestImpl0.setDistribution(tDistribution84);
        org.apache.commons.math.distribution.TDistribution tDistribution86 = null;
        tTestImpl0.setDistribution(tDistribution86);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary89 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double90 = tTestImpl0.t((double) 0L, statisticalSummary89);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + (-0.405429217622299d) + "'", double47 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + (-0.405429217622299d) + "'", double66 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.2806531524060034d + "'", double67 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + (-0.405429217622299d) + "'", double81 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + (-0.405429217622299d) + "'", double83 == (-0.405429217622299d));
    }

    @Test
    public void test1083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1083");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution17);
        double[] doubleArray24 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray29 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double30 = tTestImpl18.homoscedasticT(doubleArray24, doubleArray29);
        double double31 = tTestImpl15.tTest((double) (short) 100, doubleArray24);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl33 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray37 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution38 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution38);
        double[] doubleArray45 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray50 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double51 = tTestImpl39.homoscedasticT(doubleArray45, doubleArray50);
        double double52 = tTestImpl33.tTest(doubleArray37, doubleArray50);
        double double53 = tTestImpl15.t((double) (short) 10, doubleArray37);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl54 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution56 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl57 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution56);
        double[] doubleArray63 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray68 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double69 = tTestImpl57.homoscedasticT(doubleArray63, doubleArray68);
        double double70 = tTestImpl54.tTest((double) (short) 100, doubleArray63);
        org.apache.commons.math.distribution.TDistribution tDistribution71 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl72 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution71);
        double[] doubleArray78 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray83 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double84 = tTestImpl72.homoscedasticT(doubleArray78, doubleArray83);
        double double85 = tTestImpl15.pairedT(doubleArray63, doubleArray78);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean87 = tTestImpl1.tTest((double) (-1), doubleArray78, (-0.5172120199559697d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -0.5172120199559697");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-0.405429217622299d) + "'", double30 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.01613264369976175d + "'", double31 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + (-0.405429217622299d) + "'", double51 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.2806531524060034d + "'", double52 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 3.8d + "'", double53 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + (-0.405429217622299d) + "'", double69 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.01613264369976175d + "'", double70 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + (-0.405429217622299d) + "'", double84 == (-0.405429217622299d));
        org.junit.Assert.assertTrue(Double.isNaN(double85));
    }

    @Test
    public void test1084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1084");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        double[] doubleArray18 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double19 = tTestImpl0.t(0.2806531524060034d, doubleArray18);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
    }

    @Test
    public void test1085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1085");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        tTestImpl3.setDistribution(tDistribution4);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution8 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl9 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution8);
        double[] doubleArray15 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray20 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double21 = tTestImpl9.homoscedasticT(doubleArray15, doubleArray20);
        double double22 = tTestImpl6.tTest((double) (short) 100, doubleArray15);
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution24);
        double[] doubleArray31 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray36 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double37 = tTestImpl25.homoscedasticT(doubleArray31, doubleArray36);
        double[] doubleArray45 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double46 = tTestImpl25.t((double) '4', doubleArray45);
        double double47 = tTestImpl6.tTest((double) (short) 100, doubleArray45);
        org.apache.commons.math.distribution.TDistribution tDistribution49 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl50 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution49);
        double[] doubleArray56 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray61 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double62 = tTestImpl50.homoscedasticT(doubleArray56, doubleArray61);
        double double63 = tTestImpl6.tTest((double) (byte) 1, doubleArray56);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl65 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution64);
        double[] doubleArray71 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray76 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double77 = tTestImpl65.homoscedasticT(doubleArray71, doubleArray76);
        double[] doubleArray85 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double86 = tTestImpl65.t((double) '4', doubleArray85);
        double double87 = tTestImpl3.t(doubleArray56, doubleArray85);
        double double88 = tTestImpl0.tTest((double) 0, doubleArray56);
        org.apache.commons.math.distribution.TDistribution tDistribution89 = null;
        tTestImpl0.setDistribution(tDistribution89);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary91 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary92 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean94 = tTestImpl0.tTest(statisticalSummary91, statisticalSummary92, 1.4411111919348023d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 1.4411111919348023");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-0.405429217622299d) + "'", double21 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.01613264369976175d + "'", double22 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-0.405429217622299d) + "'", double37 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-0.09656583816243881d) + "'", double46 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.07560555610353314d + "'", double47 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + (-0.405429217622299d) + "'", double62 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.3793626154059051d + "'", double63 == 0.3793626154059051d);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + (-0.405429217622299d) + "'", double77 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + (-0.09656583816243881d) + "'", double86 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + (-0.975807309953049d) + "'", double87 == (-0.975807309953049d));
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.35800486798369846d + "'", double88 == 0.35800486798369846d);
    }

    @Test
    public void test1086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1086");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        double[] doubleArray21 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double22 = tTestImpl1.t((double) '4', doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        tTestImpl1.setDistribution(tDistribution23);
        org.apache.commons.math.distribution.TDistribution tDistribution25 = null;
        tTestImpl1.setDistribution(tDistribution25);
        org.apache.commons.math.distribution.TDistribution tDistribution27 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl28 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution27);
        double[] doubleArray34 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray39 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double40 = tTestImpl28.homoscedasticT(doubleArray34, doubleArray39);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray45 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution46 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl47 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution46);
        double[] doubleArray53 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray58 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double59 = tTestImpl47.homoscedasticT(doubleArray53, doubleArray58);
        double double60 = tTestImpl41.tTest(doubleArray45, doubleArray58);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl63 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution62);
        double[] doubleArray69 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray74 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double75 = tTestImpl63.homoscedasticT(doubleArray69, doubleArray74);
        double double76 = tTestImpl41.t((double) 1L, doubleArray74);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean78 = tTestImpl1.tTest(doubleArray39, doubleArray74, 1.4411111919348023d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 1.4411111919348023");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-0.09656583816243881d) + "'", double22 == (-0.09656583816243881d));
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.405429217622299d) + "'", double40 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + (-0.405429217622299d) + "'", double59 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.2806531524060034d + "'", double60 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + (-0.405429217622299d) + "'", double75 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 1.3573057358494125d + "'", double76 == 1.3573057358494125d);
    }

    @Test
    public void test1087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1087");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl22 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution21);
        double[] doubleArray28 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray33 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double34 = tTestImpl22.homoscedasticT(doubleArray28, doubleArray33);
        double double35 = tTestImpl0.t((double) 1L, doubleArray33);
        org.apache.commons.math.distribution.TDistribution tDistribution37 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl38 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution37);
        double[] doubleArray44 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray49 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double50 = tTestImpl38.homoscedasticT(doubleArray44, doubleArray49);
        double[] doubleArray58 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double59 = tTestImpl38.t((double) '4', doubleArray58);
        double double60 = tTestImpl0.t((double) (byte) 10, doubleArray58);
        java.lang.Class<?> wildcardClass61 = tTestImpl0.getClass();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-0.405429217622299d) + "'", double34 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.3573057358494125d + "'", double35 == 1.3573057358494125d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + (-0.405429217622299d) + "'", double50 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + (-0.09656583816243881d) + "'", double59 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.7753257939094542d + "'", double60 == 1.7753257939094542d);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test1088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1088");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl4 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution3);
        double[] doubleArray10 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray15 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double16 = tTestImpl4.homoscedasticT(doubleArray10, doubleArray15);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        org.apache.commons.math.distribution.TDistribution tDistribution37 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl38 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution37);
        double[] doubleArray44 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray49 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double50 = tTestImpl38.homoscedasticT(doubleArray44, doubleArray49);
        double double51 = tTestImpl4.t(doubleArray34, doubleArray49);
        double double52 = tTestImpl1.t((double) 10.0f, doubleArray49);
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        tTestImpl1.setDistribution(tDistribution53);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl56 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray60 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl62 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution61);
        double[] doubleArray68 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray73 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double74 = tTestImpl62.homoscedasticT(doubleArray68, doubleArray73);
        double double75 = tTestImpl56.tTest(doubleArray60, doubleArray73);
        double double76 = tTestImpl1.t((double) 10L, doubleArray73);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary78 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double79 = tTestImpl1.t(0.8463073355328574d, statisticalSummary78);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + (-0.405429217622299d) + "'", double16 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + (-0.405429217622299d) + "'", double50 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.9755634976417653d + "'", double52 == 0.9755634976417653d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-0.405429217622299d) + "'", double74 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.2806531524060034d + "'", double75 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.9755634976417653d + "'", double76 == 0.9755634976417653d);
    }

    @Test
    public void test1089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1089");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        org.apache.commons.math.distribution.TDistribution tDistribution34 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl35 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution34);
        double[] doubleArray41 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray46 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double47 = tTestImpl35.homoscedasticT(doubleArray41, doubleArray46);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl48 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray52 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl54 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution53);
        double[] doubleArray60 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray65 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double66 = tTestImpl54.homoscedasticT(doubleArray60, doubleArray65);
        double double67 = tTestImpl48.tTest(doubleArray52, doubleArray65);
        org.apache.commons.math.distribution.TDistribution tDistribution68 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl69 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution68);
        double[] doubleArray75 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray80 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double81 = tTestImpl69.homoscedasticT(doubleArray75, doubleArray80);
        double double82 = tTestImpl35.t(doubleArray65, doubleArray80);
        double double83 = tTestImpl0.homoscedasticT(doubleArray27, doubleArray80);
        org.apache.commons.math.distribution.TDistribution tDistribution84 = null;
        tTestImpl0.setDistribution(tDistribution84);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary86 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary87 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean89 = tTestImpl0.tTest(statisticalSummary86, statisticalSummary87, (-0.5172120199559697d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -0.5172120199559697");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + (-0.405429217622299d) + "'", double47 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + (-0.405429217622299d) + "'", double66 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.2806531524060034d + "'", double67 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + (-0.405429217622299d) + "'", double81 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + (-0.405429217622299d) + "'", double83 == (-0.405429217622299d));
    }

    @Test
    public void test1090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1090");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution42 = null;
        tTestImpl0.setDistribution(tDistribution42);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary45 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double46 = tTestImpl0.tTest((double) (short) 0, statisticalSummary45);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
    }

    @Test
    public void test1091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1091");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary20 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary21 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean23 = tTestImpl0.tTest(statisticalSummary20, statisticalSummary21, 0.9302024075262618d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.9302024075262618");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
    }

    @Test
    public void test1092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1092");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution7 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl8 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution7);
        double[] doubleArray14 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray19 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double20 = tTestImpl8.homoscedasticT(doubleArray14, doubleArray19);
        double double21 = tTestImpl5.tTest((double) (short) 100, doubleArray14);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl5.setDistribution(tDistribution22);
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        tTestImpl5.setDistribution(tDistribution24);
        org.apache.commons.math.distribution.TDistribution tDistribution27 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl28 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution27);
        org.apache.commons.math.distribution.TDistribution tDistribution29 = null;
        tTestImpl28.setDistribution(tDistribution29);
        org.apache.commons.math.distribution.TDistribution tDistribution32 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl33 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution32);
        double[] doubleArray39 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray44 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double45 = tTestImpl33.homoscedasticT(doubleArray39, doubleArray44);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl46 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray50 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution51 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl52 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution51);
        double[] doubleArray58 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray63 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double64 = tTestImpl52.homoscedasticT(doubleArray58, doubleArray63);
        double double65 = tTestImpl46.tTest(doubleArray50, doubleArray63);
        org.apache.commons.math.distribution.TDistribution tDistribution66 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl67 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution66);
        double[] doubleArray73 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray78 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double79 = tTestImpl67.homoscedasticT(doubleArray73, doubleArray78);
        double double80 = tTestImpl33.t(doubleArray63, doubleArray78);
        double double81 = tTestImpl28.t(0.07560555610353314d, doubleArray63);
        double double82 = tTestImpl5.t((double) (short) 10, doubleArray63);
        double double83 = tTestImpl1.t((-0.975807309953049d), doubleArray63);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary85 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double86 = tTestImpl1.t(3.8d, statisticalSummary85);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-0.405429217622299d) + "'", double20 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.01613264369976175d + "'", double21 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + (-0.405429217622299d) + "'", double45 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + (-0.405429217622299d) + "'", double64 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.2806531524060034d + "'", double65 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + (-0.405429217622299d) + "'", double79 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 1.3965146696271626d + "'", double81 == 1.3965146696271626d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.9755634976417653d + "'", double82 == 0.9755634976417653d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.4411111919348023d + "'", double83 == 1.4411111919348023d);
    }

    @Test
    public void test1093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1093");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl14 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray18 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution19 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl20 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution19);
        double[] doubleArray26 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray31 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double32 = tTestImpl20.homoscedasticT(doubleArray26, doubleArray31);
        double double33 = tTestImpl14.tTest(doubleArray18, doubleArray31);
        org.apache.commons.math.distribution.TDistribution tDistribution34 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl35 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution34);
        double[] doubleArray41 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray46 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double47 = tTestImpl35.homoscedasticT(doubleArray41, doubleArray46);
        double double48 = tTestImpl1.t(doubleArray31, doubleArray46);
        double[] doubleArray50 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double51 = tTestImpl1.t(0.3793626154059051d, doubleArray50);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + (-0.405429217622299d) + "'", double32 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.2806531524060034d + "'", double33 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + (-0.405429217622299d) + "'", double47 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
    }

    @Test
    public void test1094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1094");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray23 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution24);
        double[] doubleArray31 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray36 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double37 = tTestImpl25.homoscedasticT(doubleArray31, doubleArray36);
        double double38 = tTestImpl19.tTest(doubleArray23, doubleArray36);
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl40 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution39);
        double[] doubleArray46 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray51 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double52 = tTestImpl40.homoscedasticT(doubleArray46, doubleArray51);
        double double53 = tTestImpl6.t(doubleArray36, doubleArray51);
        double double54 = tTestImpl1.t(0.07560555610353314d, doubleArray36);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl1.setDistribution(tDistribution55);
        double[] doubleArray58 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double59 = tTestImpl1.tTest((double) (byte) 0, doubleArray58);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-0.405429217622299d) + "'", double37 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.2806531524060034d + "'", double38 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-0.405429217622299d) + "'", double52 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.3965146696271626d + "'", double54 == 1.3965146696271626d);
    }

    @Test
    public void test1095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1095");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        double double37 = tTestImpl1.t(10.0d, doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl40 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution39);
        double[] doubleArray46 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray51 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double52 = tTestImpl40.homoscedasticT(doubleArray46, doubleArray51);
        double double53 = tTestImpl1.t(100.0d, doubleArray51);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary54 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary55 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double56 = tTestImpl1.t(statisticalSummary54, statisticalSummary55);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 3.8d + "'", double37 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-0.405429217622299d) + "'", double52 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-2.8418588844347075d) + "'", double53 == (-2.8418588844347075d));
    }

    @Test
    public void test1096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1096");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        org.apache.commons.math.distribution.TDistribution tDistribution34 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl35 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution34);
        double[] doubleArray41 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray46 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double47 = tTestImpl35.homoscedasticT(doubleArray41, doubleArray46);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl48 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray52 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl54 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution53);
        double[] doubleArray60 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray65 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double66 = tTestImpl54.homoscedasticT(doubleArray60, doubleArray65);
        double double67 = tTestImpl48.tTest(doubleArray52, doubleArray65);
        org.apache.commons.math.distribution.TDistribution tDistribution68 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl69 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution68);
        double[] doubleArray75 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray80 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double81 = tTestImpl69.homoscedasticT(doubleArray75, doubleArray80);
        double double82 = tTestImpl35.t(doubleArray65, doubleArray80);
        double double83 = tTestImpl0.homoscedasticT(doubleArray27, doubleArray80);
        org.apache.commons.math.distribution.TDistribution tDistribution84 = null;
        tTestImpl0.setDistribution(tDistribution84);
        org.apache.commons.math.distribution.TDistribution tDistribution86 = null;
        tTestImpl0.setDistribution(tDistribution86);
        org.apache.commons.math.distribution.TDistribution tDistribution88 = null;
        tTestImpl0.setDistribution(tDistribution88);
        org.apache.commons.math.distribution.TDistribution tDistribution90 = null;
        tTestImpl0.setDistribution(tDistribution90);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary92 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary93 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double94 = tTestImpl0.homoscedasticTTest(statisticalSummary92, statisticalSummary93);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + (-0.405429217622299d) + "'", double47 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + (-0.405429217622299d) + "'", double66 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.2806531524060034d + "'", double67 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + (-0.405429217622299d) + "'", double81 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + (-0.405429217622299d) + "'", double83 == (-0.405429217622299d));
    }

    @Test
    public void test1097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1097");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        tTestImpl1.setDistribution(tDistribution39);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        tTestImpl42.setDistribution(tDistribution43);
        org.apache.commons.math.distribution.TDistribution tDistribution45 = null;
        tTestImpl42.setDistribution(tDistribution45);
        org.apache.commons.math.distribution.TDistribution tDistribution48 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl49 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution48);
        double[] doubleArray55 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray60 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double61 = tTestImpl49.homoscedasticT(doubleArray55, doubleArray60);
        double double62 = tTestImpl42.t(3.8d, doubleArray55);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean64 = tTestImpl1.tTest((double) (byte) 10, doubleArray55, (double) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 10.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + (-0.405429217622299d) + "'", double61 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.8463073355328574d + "'", double62 == 0.8463073355328574d);
    }

    @Test
    public void test1098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1098");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.distribution.TDistribution tDistribution16 = null;
        tTestImpl1.setDistribution(tDistribution16);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        tTestImpl1.setDistribution(tDistribution18);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl1.setDistribution(tDistribution20);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary22 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary23 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double24 = tTestImpl1.t(statisticalSummary22, statisticalSummary23);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
    }

    @Test
    public void test1099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1099");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution17);
        double[] doubleArray24 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray29 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double30 = tTestImpl18.homoscedasticT(doubleArray24, doubleArray29);
        double double31 = tTestImpl15.tTest((double) (short) 100, doubleArray24);
        org.apache.commons.math.distribution.TDistribution tDistribution33 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl34 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution33);
        double[] doubleArray40 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray45 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double46 = tTestImpl34.homoscedasticT(doubleArray40, doubleArray45);
        double[] doubleArray54 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double55 = tTestImpl34.t((double) '4', doubleArray54);
        double double56 = tTestImpl15.tTest((double) (short) 100, doubleArray54);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl59 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution58);
        double[] doubleArray65 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray70 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double71 = tTestImpl59.homoscedasticT(doubleArray65, doubleArray70);
        double double72 = tTestImpl15.tTest((double) (byte) 1, doubleArray65);
        double double73 = tTestImpl1.t((-1.0d), doubleArray65);
        org.apache.commons.math.distribution.TDistribution tDistribution74 = null;
        tTestImpl1.setDistribution(tDistribution74);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary76 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary77 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double78 = tTestImpl1.homoscedasticTTest(statisticalSummary76, statisticalSummary77);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-0.405429217622299d) + "'", double30 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.01613264369976175d + "'", double31 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-0.405429217622299d) + "'", double46 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-0.09656583816243881d) + "'", double55 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.07560555610353314d + "'", double56 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + (-0.405429217622299d) + "'", double71 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.3793626154059051d + "'", double72 == 0.3793626154059051d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 1.088109431399388d + "'", double73 == 1.088109431399388d);
    }

    @Test
    public void test1100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1100");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution1 = null;
        tTestImpl0.setDistribution(tDistribution1);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl4 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution6 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl7 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution6);
        double[] doubleArray13 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray18 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double19 = tTestImpl7.homoscedasticT(doubleArray13, doubleArray18);
        double double20 = tTestImpl4.tTest((double) (short) 100, doubleArray13);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double[] doubleArray43 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double44 = tTestImpl23.t((double) '4', doubleArray43);
        double double45 = tTestImpl4.tTest((double) (short) 100, doubleArray43);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl46 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution48 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl49 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution48);
        double[] doubleArray55 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray60 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double61 = tTestImpl49.homoscedasticT(doubleArray55, doubleArray60);
        double double62 = tTestImpl46.tTest((double) (short) 100, doubleArray55);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl65 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution64);
        double[] doubleArray71 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray76 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double77 = tTestImpl65.homoscedasticT(doubleArray71, doubleArray76);
        double[] doubleArray85 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double86 = tTestImpl65.t((double) '4', doubleArray85);
        double double87 = tTestImpl46.tTest((double) (short) 100, doubleArray85);
        double[] doubleArray93 = new double[] { 1.0f, (-0.09656583816243881d), ' ', 0.8463073355328574d, 1.3965146696271626d };
        double double94 = tTestImpl4.homoscedasticTTest(doubleArray85, doubleArray93);
        double double95 = tTestImpl0.t((double) 100, doubleArray93);
        java.lang.Class<?> wildcardClass96 = doubleArray93.getClass();
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-0.405429217622299d) + "'", double19 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.01613264369976175d + "'", double20 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + (-0.09656583816243881d) + "'", double44 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.07560555610353314d + "'", double45 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + (-0.405429217622299d) + "'", double61 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.01613264369976175d + "'", double62 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + (-0.405429217622299d) + "'", double77 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + (-0.09656583816243881d) + "'", double86 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.07560555610353314d + "'", double87 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[1.0, -0.09656583816243881, 32.0, 0.8463073355328574, 1.3965146696271626]");
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 0.12673187601587688d + "'", double94 == 0.12673187601587688d);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + (-14.881283513379177d) + "'", double95 == (-14.881283513379177d));
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1101");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl1.t((-0.975807309953049d), doubleArray52);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary55 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary56 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean58 = tTestImpl1.tTest(statisticalSummary55, statisticalSummary56, (double) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 1.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.4411111919348023d + "'", double54 == 1.4411111919348023d);
    }

    @Test
    public void test1102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1102");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl54 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray58 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution59 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl60 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution59);
        double[] doubleArray66 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray71 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double72 = tTestImpl60.homoscedasticT(doubleArray66, doubleArray71);
        double double73 = tTestImpl54.tTest(doubleArray58, doubleArray71);
        org.apache.commons.math.distribution.TDistribution tDistribution74 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl75 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution74);
        double[] doubleArray81 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray86 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double87 = tTestImpl75.homoscedasticT(doubleArray81, doubleArray86);
        double double88 = tTestImpl41.t(doubleArray71, doubleArray86);
        double double89 = tTestImpl1.t((double) 0.0f, doubleArray86);
        double[] doubleArray91 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double92 = tTestImpl1.tTest(Double.NaN, doubleArray91);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + (-0.405429217622299d) + "'", double72 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.2806531524060034d + "'", double73 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + (-0.405429217622299d) + "'", double87 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.0d + "'", double88 == 0.0d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 1.3997215400947067d + "'", double89 == 1.3997215400947067d);
    }

    @Test
    public void test1103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1103");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl2 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        double double18 = tTestImpl2.tTest((double) (short) 100, doubleArray11);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        double[] doubleArray41 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double42 = tTestImpl21.t((double) '4', doubleArray41);
        double double43 = tTestImpl2.tTest((double) (short) 100, doubleArray41);
        double[] doubleArray50 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double51 = tTestImpl2.tTest(0.405429217622299d, doubleArray50);
        double double52 = tTestImpl0.t(3.8d, doubleArray50);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary54 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double55 = tTestImpl0.t((double) 1, statisticalSummary54);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.01613264369976175d + "'", double18 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-0.09656583816243881d) + "'", double42 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.07560555610353314d + "'", double43 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.1143321549278642d + "'", double51 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-10.500000000000002d) + "'", double52 == (-10.500000000000002d));
    }

    @Test
    public void test1104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1104");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution1 = null;
        tTestImpl0.setDistribution(tDistribution1);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        tTestImpl0.setDistribution(tDistribution3);
        org.apache.commons.math.distribution.TDistribution tDistribution6 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl7 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution6);
        double[] doubleArray13 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray18 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double19 = tTestImpl7.homoscedasticT(doubleArray13, doubleArray18);
        double double20 = tTestImpl0.t(3.8d, doubleArray13);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        tTestImpl0.setDistribution(tDistribution21);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary23 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary24 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double25 = tTestImpl0.homoscedasticTTest(statisticalSummary23, statisticalSummary24);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-0.405429217622299d) + "'", double19 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.8463073355328574d + "'", double20 == 0.8463073355328574d);
    }

    @Test
    public void test1105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1105");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        tTestImpl42.setDistribution(tDistribution43);
        org.apache.commons.math.distribution.TDistribution tDistribution45 = null;
        tTestImpl42.setDistribution(tDistribution45);
        org.apache.commons.math.distribution.TDistribution tDistribution48 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl49 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution48);
        double[] doubleArray55 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray60 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double61 = tTestImpl49.homoscedasticT(doubleArray55, doubleArray60);
        double double62 = tTestImpl42.t(3.8d, doubleArray55);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl63 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray67 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution68 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl69 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution68);
        double[] doubleArray75 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray80 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double81 = tTestImpl69.homoscedasticT(doubleArray75, doubleArray80);
        double double82 = tTestImpl63.tTest(doubleArray67, doubleArray80);
        double double83 = tTestImpl0.t(doubleArray55, doubleArray80);
        java.lang.Class<?> wildcardClass84 = doubleArray55.getClass();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + (-0.405429217622299d) + "'", double61 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.8463073355328574d + "'", double62 == 0.8463073355328574d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + (-0.405429217622299d) + "'", double81 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.2806531524060034d + "'", double82 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + (-0.4023317120818342d) + "'", double83 == (-0.4023317120818342d));
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test1106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1106");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.distribution.TDistribution tDistribution16 = null;
        tTestImpl1.setDistribution(tDistribution16);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary19 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double20 = tTestImpl1.tTest(0.0d, statisticalSummary19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
    }

    @Test
    public void test1107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1107");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl0.t((double) (short) 10, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl55 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl58 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution57);
        double[] doubleArray64 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray69 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double70 = tTestImpl58.homoscedasticT(doubleArray64, doubleArray69);
        double double71 = tTestImpl55.tTest((double) (short) 100, doubleArray64);
        double double72 = tTestImpl41.t((double) 10.0f, doubleArray64);
        boolean boolean74 = tTestImpl0.tTest(0.12673187601587688d, doubleArray64, 0.01613264369976175d);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary76 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double77 = tTestImpl0.t(Double.NaN, statisticalSummary76);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 3.8d + "'", double38 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + (-0.405429217622299d) + "'", double70 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.01613264369976175d + "'", double71 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.5339796283719219d + "'", double72 == 0.5339796283719219d);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test1108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1108");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl0.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl0.setDistribution(tDistribution22);
        org.apache.commons.math.distribution.TDistribution tDistribution25 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl26 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution25);
        org.apache.commons.math.distribution.TDistribution tDistribution27 = null;
        tTestImpl26.setDistribution(tDistribution27);
        org.apache.commons.math.distribution.TDistribution tDistribution29 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl30 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution29);
        double[] doubleArray36 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray41 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double42 = tTestImpl30.homoscedasticT(doubleArray36, doubleArray41);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl43 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray47 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution48 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl49 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution48);
        double[] doubleArray55 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray60 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double61 = tTestImpl49.homoscedasticT(doubleArray55, doubleArray60);
        double double62 = tTestImpl43.tTest(doubleArray47, doubleArray60);
        double double63 = tTestImpl26.homoscedasticT(doubleArray41, doubleArray47);
        double double64 = tTestImpl0.t((double) (byte) 100, doubleArray47);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary65 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary66 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean68 = tTestImpl0.tTest(statisticalSummary65, statisticalSummary66, 0.9566618438474437d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.9566618438474437");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-0.405429217622299d) + "'", double42 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + (-0.405429217622299d) + "'", double61 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.2806531524060034d + "'", double62 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + (-1.1115227041167497d) + "'", double63 == (-1.1115227041167497d));
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + (-2.2d) + "'", double64 == (-2.2d));
    }

    @Test
    public void test1109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1109");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        double[] doubleArray48 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double49 = tTestImpl0.tTest(0.405429217622299d, doubleArray48);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary50 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary51 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean53 = tTestImpl0.tTest(statisticalSummary50, statisticalSummary51, (double) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -1.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.1143321549278642d + "'", double49 == 0.1143321549278642d);
    }

    @Test
    public void test1110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1110");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary18 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double19 = tTestImpl0.t((double) 10, statisticalSummary18);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
    }

    @Test
    public void test1111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1111");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution42 = null;
        tTestImpl0.setDistribution(tDistribution42);
        org.apache.commons.math.distribution.TDistribution tDistribution44 = null;
        tTestImpl0.setDistribution(tDistribution44);
        java.lang.Class<?> wildcardClass46 = tTestImpl0.getClass();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test1112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1112");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        org.apache.commons.math.distribution.TDistribution tDistribution34 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl35 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution34);
        double[] doubleArray41 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray46 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double47 = tTestImpl35.homoscedasticT(doubleArray41, doubleArray46);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl48 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray52 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl54 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution53);
        double[] doubleArray60 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray65 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double66 = tTestImpl54.homoscedasticT(doubleArray60, doubleArray65);
        double double67 = tTestImpl48.tTest(doubleArray52, doubleArray65);
        org.apache.commons.math.distribution.TDistribution tDistribution68 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl69 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution68);
        double[] doubleArray75 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray80 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double81 = tTestImpl69.homoscedasticT(doubleArray75, doubleArray80);
        double double82 = tTestImpl35.t(doubleArray65, doubleArray80);
        double double83 = tTestImpl0.homoscedasticT(doubleArray27, doubleArray80);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary85 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double86 = tTestImpl0.t((-0.09656583816243881d), statisticalSummary85);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + (-0.405429217622299d) + "'", double47 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + (-0.405429217622299d) + "'", double66 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.2806531524060034d + "'", double67 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + (-0.405429217622299d) + "'", double81 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + (-0.405429217622299d) + "'", double83 == (-0.405429217622299d));
    }

    @Test
    public void test1113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1113");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl0.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl0.setDistribution(tDistribution22);
        org.apache.commons.math.distribution.TDistribution tDistribution25 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl26 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution25);
        double[] doubleArray32 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray37 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double38 = tTestImpl26.homoscedasticT(doubleArray32, doubleArray37);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray43 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution44 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl45 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution44);
        double[] doubleArray51 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray56 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double57 = tTestImpl45.homoscedasticT(doubleArray51, doubleArray56);
        double double58 = tTestImpl39.tTest(doubleArray43, doubleArray56);
        org.apache.commons.math.distribution.TDistribution tDistribution59 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl60 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution59);
        double[] doubleArray66 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray71 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double72 = tTestImpl60.homoscedasticT(doubleArray66, doubleArray71);
        double double73 = tTestImpl26.t(doubleArray56, doubleArray71);
        // The following exception was thrown during execution in test generation
        try {
            double double74 = tTestImpl0.tTest((double) 1L, doubleArray71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-0.405429217622299d) + "'", double38 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-0.405429217622299d) + "'", double57 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.2806531524060034d + "'", double58 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + (-0.405429217622299d) + "'", double72 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
    }

    @Test
    public void test1114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1114");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        tTestImpl0.setDistribution(tDistribution58);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        tTestImpl0.setDistribution(tDistribution60);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary63 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double64 = tTestImpl0.tTest(3.8d, statisticalSummary63);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
    }

    @Test
    public void test1115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1115");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        double double37 = tTestImpl1.t(10.0d, doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl40 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution39);
        double[] doubleArray46 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray51 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double52 = tTestImpl40.homoscedasticT(doubleArray46, doubleArray51);
        double double53 = tTestImpl1.t(100.0d, doubleArray51);
        org.apache.commons.math.distribution.TDistribution tDistribution54 = null;
        tTestImpl1.setDistribution(tDistribution54);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary57 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double58 = tTestImpl1.t(1.0377339947605275d, statisticalSummary57);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 3.8d + "'", double37 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-0.405429217622299d) + "'", double52 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-2.8418588844347075d) + "'", double53 == (-2.8418588844347075d));
    }

    @Test
    public void test1116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1116");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        double[] doubleArray21 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double22 = tTestImpl1.t((double) '4', doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        tTestImpl1.setDistribution(tDistribution23);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary25 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary26 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double27 = tTestImpl1.homoscedasticT(statisticalSummary25, statisticalSummary26);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-0.09656583816243881d) + "'", double22 == (-0.09656583816243881d));
    }

    @Test
    public void test1117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1117");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        tTestImpl0.setDistribution(tDistribution58);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        tTestImpl0.setDistribution(tDistribution60);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        tTestImpl0.setDistribution(tDistribution62);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        tTestImpl0.setDistribution(tDistribution64);
        org.apache.commons.math.distribution.TDistribution tDistribution66 = null;
        tTestImpl0.setDistribution(tDistribution66);
        org.apache.commons.math.distribution.TDistribution tDistribution68 = null;
        tTestImpl0.setDistribution(tDistribution68);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl71 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution72 = null;
        tTestImpl71.setDistribution(tDistribution72);
        org.apache.commons.math.distribution.TDistribution tDistribution74 = null;
        tTestImpl71.setDistribution(tDistribution74);
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl78 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution77);
        double[] doubleArray84 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray89 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double90 = tTestImpl78.homoscedasticT(doubleArray84, doubleArray89);
        double double91 = tTestImpl71.t(3.8d, doubleArray84);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean93 = tTestImpl0.tTest((double) 1L, doubleArray84, (double) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 10.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + (-0.405429217622299d) + "'", double90 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.8463073355328574d + "'", double91 == 0.8463073355328574d);
    }

    @Test
    public void test1118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1118");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl54 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray58 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution59 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl60 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution59);
        double[] doubleArray66 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray71 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double72 = tTestImpl60.homoscedasticT(doubleArray66, doubleArray71);
        double double73 = tTestImpl54.tTest(doubleArray58, doubleArray71);
        org.apache.commons.math.distribution.TDistribution tDistribution74 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl75 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution74);
        double[] doubleArray81 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray86 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double87 = tTestImpl75.homoscedasticT(doubleArray81, doubleArray86);
        double double88 = tTestImpl41.t(doubleArray71, doubleArray86);
        double double89 = tTestImpl1.t((double) 0.0f, doubleArray86);
        double[] doubleArray92 = new double[] { 1 };
        // The following exception was thrown during execution in test generation
        try {
            double double93 = tTestImpl1.t(1.7753257939094542d, doubleArray92);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + (-0.405429217622299d) + "'", double72 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.2806531524060034d + "'", double73 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + (-0.405429217622299d) + "'", double87 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.0d + "'", double88 == 0.0d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 1.3997215400947067d + "'", double89 == 1.3997215400947067d);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray92), "[1.0]");
    }

    @Test
    public void test1119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1119");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution17);
        double[] doubleArray24 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray29 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double30 = tTestImpl18.homoscedasticT(doubleArray24, doubleArray29);
        double double31 = tTestImpl15.tTest((double) (short) 100, doubleArray24);
        org.apache.commons.math.distribution.TDistribution tDistribution33 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl34 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution33);
        double[] doubleArray40 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray45 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double46 = tTestImpl34.homoscedasticT(doubleArray40, doubleArray45);
        double[] doubleArray54 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double55 = tTestImpl34.t((double) '4', doubleArray54);
        double double56 = tTestImpl15.tTest((double) (short) 100, doubleArray54);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl59 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution58);
        double[] doubleArray65 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray70 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double71 = tTestImpl59.homoscedasticT(doubleArray65, doubleArray70);
        double double72 = tTestImpl15.tTest((double) (byte) 1, doubleArray65);
        org.apache.commons.math.distribution.TDistribution tDistribution73 = null;
        tTestImpl15.setDistribution(tDistribution73);
        org.apache.commons.math.distribution.TDistribution tDistribution75 = null;
        tTestImpl15.setDistribution(tDistribution75);
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        tTestImpl15.setDistribution(tDistribution77);
        org.apache.commons.math.distribution.TDistribution tDistribution79 = null;
        tTestImpl15.setDistribution(tDistribution79);
        org.apache.commons.math.distribution.TDistribution tDistribution81 = null;
        tTestImpl15.setDistribution(tDistribution81);
        double[] doubleArray89 = new double[] { (-2.8418588844347075d), 100.0f, (-1.0f), 0.35800486798369846d, 0.01613264369976175d };
        double double90 = tTestImpl15.t((double) (short) 0, doubleArray89);
        double double91 = tTestImpl1.t(0.5339796283719219d, doubleArray89);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary93 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double94 = tTestImpl1.t(1.3965146696271626d, statisticalSummary93);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-0.405429217622299d) + "'", double30 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.01613264369976175d + "'", double31 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-0.405429217622299d) + "'", double46 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-0.09656583816243881d) + "'", double55 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.07560555610353314d + "'", double56 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + (-0.405429217622299d) + "'", double71 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.3793626154059051d + "'", double72 == 0.3793626154059051d);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[-2.8418588844347075, 100.0, -1.0, 0.35800486798369846, 0.01613264369976175]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.9566618438474437d + "'", double90 == 0.9566618438474437d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.9302024075262618d + "'", double91 == 0.9302024075262618d);
    }

    @Test
    public void test1120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1120");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        tTestImpl0.setDistribution(tDistribution58);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        tTestImpl0.setDistribution(tDistribution60);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        tTestImpl0.setDistribution(tDistribution62);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        tTestImpl0.setDistribution(tDistribution64);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary67 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double68 = tTestImpl0.t((double) (byte) 0, statisticalSummary67);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
    }

    @Test
    public void test1121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1121");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution42 = null;
        tTestImpl0.setDistribution(tDistribution42);
        java.lang.Class<?> wildcardClass44 = tTestImpl0.getClass();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test1122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1122");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        tTestImpl1.setDistribution(tDistribution4);
        org.apache.commons.math.distribution.TDistribution tDistribution6 = null;
        tTestImpl1.setDistribution(tDistribution6);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl9 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray13 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution14);
        double[] doubleArray21 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray26 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double27 = tTestImpl15.homoscedasticT(doubleArray21, doubleArray26);
        double double28 = tTestImpl9.tTest(doubleArray13, doubleArray26);
        org.apache.commons.math.distribution.TDistribution tDistribution30 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl31 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution30);
        double[] doubleArray37 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray42 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double43 = tTestImpl31.homoscedasticT(doubleArray37, doubleArray42);
        org.apache.commons.math.distribution.TDistribution tDistribution44 = null;
        tTestImpl31.setDistribution(tDistribution44);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl47 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray51 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution52 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl53 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution52);
        double[] doubleArray59 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray64 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double65 = tTestImpl53.homoscedasticT(doubleArray59, doubleArray64);
        double double66 = tTestImpl47.tTest(doubleArray51, doubleArray64);
        double double67 = tTestImpl31.t(10.0d, doubleArray51);
        org.apache.commons.math.distribution.TDistribution tDistribution69 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl70 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution69);
        double[] doubleArray76 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray81 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double82 = tTestImpl70.homoscedasticT(doubleArray76, doubleArray81);
        double double83 = tTestImpl31.t(100.0d, doubleArray81);
        double double84 = tTestImpl9.t((double) 0L, doubleArray81);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean86 = tTestImpl1.tTest((double) 1, doubleArray81, 2.2210142777360953d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 2.2210142777360953");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + (-0.405429217622299d) + "'", double27 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.2806531524060034d + "'", double28 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + (-0.405429217622299d) + "'", double43 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + (-0.405429217622299d) + "'", double65 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.2806531524060034d + "'", double66 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 3.8d + "'", double67 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + (-0.405429217622299d) + "'", double82 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + (-2.8418588844347075d) + "'", double83 == (-2.8418588844347075d));
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 1.3997215400947067d + "'", double84 == 1.3997215400947067d);
    }

    @Test
    public void test1123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1123");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        tTestImpl42.setDistribution(tDistribution43);
        org.apache.commons.math.distribution.TDistribution tDistribution45 = null;
        tTestImpl42.setDistribution(tDistribution45);
        org.apache.commons.math.distribution.TDistribution tDistribution48 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl49 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution48);
        double[] doubleArray55 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray60 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double61 = tTestImpl49.homoscedasticT(doubleArray55, doubleArray60);
        double double62 = tTestImpl42.t(3.8d, doubleArray55);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl63 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray67 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution68 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl69 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution68);
        double[] doubleArray75 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray80 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double81 = tTestImpl69.homoscedasticT(doubleArray75, doubleArray80);
        double double82 = tTestImpl63.tTest(doubleArray67, doubleArray80);
        double double83 = tTestImpl0.t(doubleArray55, doubleArray80);
        java.lang.Class<?> wildcardClass84 = tTestImpl0.getClass();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + (-0.405429217622299d) + "'", double61 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.8463073355328574d + "'", double62 == 0.8463073355328574d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + (-0.405429217622299d) + "'", double81 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.2806531524060034d + "'", double82 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + (-0.4023317120818342d) + "'", double83 == (-0.4023317120818342d));
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test1124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1124");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl22 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution21);
        double[] doubleArray28 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray33 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double34 = tTestImpl22.homoscedasticT(doubleArray28, doubleArray33);
        double double35 = tTestImpl0.t((double) 1L, doubleArray33);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl36 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray40 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution41 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution41);
        double[] doubleArray48 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray53 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double54 = tTestImpl42.homoscedasticT(doubleArray48, doubleArray53);
        double double55 = tTestImpl36.tTest(doubleArray40, doubleArray53);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl56 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray60 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl62 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution61);
        double[] doubleArray68 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray73 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double74 = tTestImpl62.homoscedasticT(doubleArray68, doubleArray73);
        double double75 = tTestImpl56.tTest(doubleArray60, doubleArray73);
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl78 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution77);
        double[] doubleArray84 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray89 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double90 = tTestImpl78.homoscedasticT(doubleArray84, doubleArray89);
        double double91 = tTestImpl56.t((double) 1L, doubleArray89);
        double double92 = tTestImpl0.pairedT(doubleArray53, doubleArray89);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary94 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double95 = tTestImpl0.tTest(1.3930877336894083d, statisticalSummary94);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-0.405429217622299d) + "'", double34 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.3573057358494125d + "'", double35 == 1.3573057358494125d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + (-0.405429217622299d) + "'", double54 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.2806531524060034d + "'", double55 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-0.405429217622299d) + "'", double74 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.2806531524060034d + "'", double75 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + (-0.405429217622299d) + "'", double90 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 1.3573057358494125d + "'", double91 == 1.3573057358494125d);
        org.junit.Assert.assertTrue(Double.isNaN(double92));
    }

    @Test
    public void test1125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1125");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl22 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution21);
        double[] doubleArray28 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray33 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double34 = tTestImpl22.homoscedasticT(doubleArray28, doubleArray33);
        double double35 = tTestImpl0.t((double) 1L, doubleArray33);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl36 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray40 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution41 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution41);
        double[] doubleArray48 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray53 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double54 = tTestImpl42.homoscedasticT(doubleArray48, doubleArray53);
        double double55 = tTestImpl36.tTest(doubleArray40, doubleArray53);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl56 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray60 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl62 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution61);
        double[] doubleArray68 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray73 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double74 = tTestImpl62.homoscedasticT(doubleArray68, doubleArray73);
        double double75 = tTestImpl56.tTest(doubleArray60, doubleArray73);
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl78 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution77);
        double[] doubleArray84 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray89 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double90 = tTestImpl78.homoscedasticT(doubleArray84, doubleArray89);
        double double91 = tTestImpl56.t((double) 1L, doubleArray89);
        double double92 = tTestImpl0.pairedT(doubleArray53, doubleArray89);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary93 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary94 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double95 = tTestImpl0.homoscedasticTTest(statisticalSummary93, statisticalSummary94);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-0.405429217622299d) + "'", double34 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.3573057358494125d + "'", double35 == 1.3573057358494125d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + (-0.405429217622299d) + "'", double54 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.2806531524060034d + "'", double55 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-0.405429217622299d) + "'", double74 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.2806531524060034d + "'", double75 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + (-0.405429217622299d) + "'", double90 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 1.3573057358494125d + "'", double91 == 1.3573057358494125d);
        org.junit.Assert.assertTrue(Double.isNaN(double92));
    }

    @Test
    public void test1126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1126");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl1.t((-0.975807309953049d), doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl1.setDistribution(tDistribution55);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary57 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary58 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double59 = tTestImpl1.t(statisticalSummary57, statisticalSummary58);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.4411111919348023d + "'", double54 == 1.4411111919348023d);
    }

    @Test
    public void test1127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1127");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl2 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        double double18 = tTestImpl2.tTest((double) (short) 100, doubleArray11);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        double[] doubleArray41 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double42 = tTestImpl21.t((double) '4', doubleArray41);
        double double43 = tTestImpl2.tTest((double) (short) 100, doubleArray41);
        double[] doubleArray50 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double51 = tTestImpl2.tTest(0.405429217622299d, doubleArray50);
        double double52 = tTestImpl0.t(3.8d, doubleArray50);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary53 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary54 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double55 = tTestImpl0.homoscedasticTTest(statisticalSummary53, statisticalSummary54);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.01613264369976175d + "'", double18 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-0.09656583816243881d) + "'", double42 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.07560555610353314d + "'", double43 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.1143321549278642d + "'", double51 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-10.500000000000002d) + "'", double52 == (-10.500000000000002d));
    }

    @Test
    public void test1128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1128");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution44 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl45 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution44);
        double[] doubleArray51 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray56 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double57 = tTestImpl45.homoscedasticT(doubleArray51, doubleArray56);
        double double58 = tTestImpl42.tTest((double) (short) 100, doubleArray51);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl60 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray64 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution65 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl66 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution65);
        double[] doubleArray72 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray77 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double78 = tTestImpl66.homoscedasticT(doubleArray72, doubleArray77);
        double double79 = tTestImpl60.tTest(doubleArray64, doubleArray77);
        double double80 = tTestImpl42.t((double) (short) 10, doubleArray64);
        org.apache.commons.math.distribution.TDistribution tDistribution81 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl82 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution81);
        double[] doubleArray88 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray93 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double94 = tTestImpl82.homoscedasticT(doubleArray88, doubleArray93);
        double double95 = tTestImpl0.homoscedasticTTest(doubleArray64, doubleArray88);
        org.apache.commons.math.distribution.TDistribution tDistribution96 = null;
        tTestImpl0.setDistribution(tDistribution96);
        org.apache.commons.math.distribution.TDistribution tDistribution98 = null;
        tTestImpl0.setDistribution(tDistribution98);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-0.405429217622299d) + "'", double57 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.01613264369976175d + "'", double58 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + (-0.405429217622299d) + "'", double78 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.2806531524060034d + "'", double79 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 3.8d + "'", double80 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + (-0.405429217622299d) + "'", double94 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 0.15639940166959065d + "'", double95 == 0.15639940166959065d);
    }

    @Test
    public void test1129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1129");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl22 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution21);
        double[] doubleArray28 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray33 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double34 = tTestImpl22.homoscedasticT(doubleArray28, doubleArray33);
        double double35 = tTestImpl0.t((double) 1L, doubleArray33);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary37 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double38 = tTestImpl0.tTest((-1.587268255506484d), statisticalSummary37);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-0.405429217622299d) + "'", double34 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.3573057358494125d + "'", double35 == 1.3573057358494125d);
    }

    @Test
    public void test1130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1130");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution1 = null;
        tTestImpl0.setDistribution(tDistribution1);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl4 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution6 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl7 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution6);
        double[] doubleArray13 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray18 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double19 = tTestImpl7.homoscedasticT(doubleArray13, doubleArray18);
        double double20 = tTestImpl4.tTest((double) (short) 100, doubleArray13);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double[] doubleArray43 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double44 = tTestImpl23.t((double) '4', doubleArray43);
        double double45 = tTestImpl4.tTest((double) (short) 100, doubleArray43);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl46 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution48 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl49 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution48);
        double[] doubleArray55 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray60 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double61 = tTestImpl49.homoscedasticT(doubleArray55, doubleArray60);
        double double62 = tTestImpl46.tTest((double) (short) 100, doubleArray55);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl65 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution64);
        double[] doubleArray71 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray76 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double77 = tTestImpl65.homoscedasticT(doubleArray71, doubleArray76);
        double[] doubleArray85 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double86 = tTestImpl65.t((double) '4', doubleArray85);
        double double87 = tTestImpl46.tTest((double) (short) 100, doubleArray85);
        double[] doubleArray93 = new double[] { 1.0f, (-0.09656583816243881d), ' ', 0.8463073355328574d, 1.3965146696271626d };
        double double94 = tTestImpl4.homoscedasticTTest(doubleArray85, doubleArray93);
        double double95 = tTestImpl0.t((double) 100, doubleArray93);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary96 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary97 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean99 = tTestImpl0.tTest(statisticalSummary96, statisticalSummary97, 0.12673187601587688d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-0.405429217622299d) + "'", double19 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.01613264369976175d + "'", double20 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + (-0.09656583816243881d) + "'", double44 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.07560555610353314d + "'", double45 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + (-0.405429217622299d) + "'", double61 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.01613264369976175d + "'", double62 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + (-0.405429217622299d) + "'", double77 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + (-0.09656583816243881d) + "'", double86 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.07560555610353314d + "'", double87 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[1.0, -0.09656583816243881, 32.0, 0.8463073355328574, 1.3965146696271626]");
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 0.12673187601587688d + "'", double94 == 0.12673187601587688d);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + (-14.881283513379177d) + "'", double95 == (-14.881283513379177d));
    }

    @Test
    public void test1131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1131");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution1 = null;
        tTestImpl0.setDistribution(tDistribution1);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        tTestImpl0.setDistribution(tDistribution3);
        org.apache.commons.math.distribution.TDistribution tDistribution6 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl7 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution6);
        double[] doubleArray13 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray18 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double19 = tTestImpl7.homoscedasticT(doubleArray13, doubleArray18);
        double double20 = tTestImpl0.t(3.8d, doubleArray13);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        tTestImpl0.setDistribution(tDistribution21);
        java.lang.Class<?> wildcardClass23 = tTestImpl0.getClass();
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-0.405429217622299d) + "'", double19 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.8463073355328574d + "'", double20 == 0.8463073355328574d);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test1132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1132");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution42 = null;
        tTestImpl0.setDistribution(tDistribution42);
        org.apache.commons.math.distribution.TDistribution tDistribution44 = null;
        tTestImpl0.setDistribution(tDistribution44);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary47 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean49 = tTestImpl0.tTest((double) 100L, statisticalSummary47, (double) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 35.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
    }

    @Test
    public void test1133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1133");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary2 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double3 = tTestImpl0.t(0.5172120199559697d, statisticalSummary2);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1134");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        double double37 = tTestImpl1.t(10.0d, doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl40 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution39);
        double[] doubleArray46 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray51 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double52 = tTestImpl40.homoscedasticT(doubleArray46, doubleArray51);
        double double53 = tTestImpl1.t(100.0d, doubleArray51);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary55 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double56 = tTestImpl1.t((-0.09656583816243881d), statisticalSummary55);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 3.8d + "'", double37 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-0.405429217622299d) + "'", double52 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-2.8418588844347075d) + "'", double53 == (-2.8418588844347075d));
    }

    @Test
    public void test1135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1135");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        tTestImpl42.setDistribution(tDistribution43);
        org.apache.commons.math.distribution.TDistribution tDistribution45 = null;
        tTestImpl42.setDistribution(tDistribution45);
        org.apache.commons.math.distribution.TDistribution tDistribution48 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl49 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution48);
        double[] doubleArray55 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray60 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double61 = tTestImpl49.homoscedasticT(doubleArray55, doubleArray60);
        double double62 = tTestImpl42.t(3.8d, doubleArray55);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl63 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray67 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution68 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl69 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution68);
        double[] doubleArray75 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray80 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double81 = tTestImpl69.homoscedasticT(doubleArray75, doubleArray80);
        double double82 = tTestImpl63.tTest(doubleArray67, doubleArray80);
        double double83 = tTestImpl0.t(doubleArray55, doubleArray80);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary85 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double86 = tTestImpl0.tTest(1.3965146696271626d, statisticalSummary85);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + (-0.405429217622299d) + "'", double61 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.8463073355328574d + "'", double62 == 0.8463073355328574d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + (-0.405429217622299d) + "'", double81 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.2806531524060034d + "'", double82 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + (-0.4023317120818342d) + "'", double83 == (-0.4023317120818342d));
    }

    @Test
    public void test1136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1136");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution1 = null;
        tTestImpl0.setDistribution(tDistribution1);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        tTestImpl0.setDistribution(tDistribution3);
        org.apache.commons.math.distribution.TDistribution tDistribution6 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl7 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution6);
        double[] doubleArray13 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray18 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double19 = tTestImpl7.homoscedasticT(doubleArray13, doubleArray18);
        double double20 = tTestImpl0.t(3.8d, doubleArray13);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        tTestImpl0.setDistribution(tDistribution21);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary23 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary24 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double25 = tTestImpl0.homoscedasticT(statisticalSummary23, statisticalSummary24);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-0.405429217622299d) + "'", double19 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.8463073355328574d + "'", double20 == 0.8463073355328574d);
    }

    @Test
    public void test1137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1137");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        double[] doubleArray48 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double49 = tTestImpl0.tTest(0.405429217622299d, doubleArray48);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl51 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl54 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution53);
        double[] doubleArray60 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray65 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double66 = tTestImpl54.homoscedasticT(doubleArray60, doubleArray65);
        double double67 = tTestImpl51.tTest((double) (short) 100, doubleArray60);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl69 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray73 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution74 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl75 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution74);
        double[] doubleArray81 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray86 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double87 = tTestImpl75.homoscedasticT(doubleArray81, doubleArray86);
        double double88 = tTestImpl69.tTest(doubleArray73, doubleArray86);
        double double89 = tTestImpl51.t((double) (short) 10, doubleArray73);
        double double90 = tTestImpl0.t(1.088109431399388d, doubleArray73);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary91 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary92 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double93 = tTestImpl0.t(statisticalSummary91, statisticalSummary92);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.1143321549278642d + "'", double49 == 0.1143321549278642d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + (-0.405429217622299d) + "'", double66 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.01613264369976175d + "'", double67 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + (-0.405429217622299d) + "'", double87 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.2806531524060034d + "'", double88 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 3.8d + "'", double89 == 3.8d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 4.394126037906707d + "'", double90 == 4.394126037906707d);
    }

    @Test
    public void test1138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1138");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl1.t((-0.975807309953049d), doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl1.setDistribution(tDistribution55);
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        tTestImpl1.setDistribution(tDistribution57);
        java.lang.Class<?> wildcardClass59 = tTestImpl1.getClass();
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.4411111919348023d + "'", double54 == 1.4411111919348023d);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test1139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1139");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        double[] doubleArray21 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double22 = tTestImpl1.t((double) '4', doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        tTestImpl1.setDistribution(tDistribution23);
        org.apache.commons.math.distribution.TDistribution tDistribution25 = null;
        tTestImpl1.setDistribution(tDistribution25);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary28 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double29 = tTestImpl1.t((double) (-1), statisticalSummary28);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-0.09656583816243881d) + "'", double22 == (-0.09656583816243881d));
    }

    @Test
    public void test1140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1140");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl21.tTest((double) (short) 100, doubleArray30);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray43 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution44 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl45 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution44);
        double[] doubleArray51 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray56 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double57 = tTestImpl45.homoscedasticT(doubleArray51, doubleArray56);
        double double58 = tTestImpl39.tTest(doubleArray43, doubleArray56);
        double double59 = tTestImpl21.t((double) (short) 10, doubleArray43);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl60 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl63 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution62);
        double[] doubleArray69 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray74 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double75 = tTestImpl63.homoscedasticT(doubleArray69, doubleArray74);
        double double76 = tTestImpl60.tTest((double) (short) 100, doubleArray69);
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl78 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution77);
        double[] doubleArray84 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray89 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double90 = tTestImpl78.homoscedasticT(doubleArray84, doubleArray89);
        double double91 = tTestImpl21.pairedT(doubleArray69, doubleArray84);
        double double92 = tTestImpl0.t((double) (short) 0, doubleArray84);
        org.apache.commons.math.distribution.TDistribution tDistribution93 = null;
        tTestImpl0.setDistribution(tDistribution93);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary96 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean98 = tTestImpl0.tTest((double) (byte) -1, statisticalSummary96, (double) (-1L));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -1.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.01613264369976175d + "'", double37 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-0.405429217622299d) + "'", double57 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.2806531524060034d + "'", double58 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 3.8d + "'", double59 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + (-0.405429217622299d) + "'", double75 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.01613264369976175d + "'", double76 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + (-0.405429217622299d) + "'", double90 == (-0.405429217622299d));
        org.junit.Assert.assertTrue(Double.isNaN(double91));
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 1.0377339947605275d + "'", double92 == 1.0377339947605275d);
    }

    @Test
    public void test1141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1141");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        org.apache.commons.math.distribution.TDistribution tDistribution16 = null;
        tTestImpl3.setDistribution(tDistribution16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray23 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution24);
        double[] doubleArray31 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray36 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double37 = tTestImpl25.homoscedasticT(doubleArray31, doubleArray36);
        double double38 = tTestImpl19.tTest(doubleArray23, doubleArray36);
        double double39 = tTestImpl3.t(10.0d, doubleArray23);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution54 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl55 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution54);
        double[] doubleArray61 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray66 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double67 = tTestImpl55.homoscedasticT(doubleArray61, doubleArray66);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl69 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution71 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl72 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution71);
        double[] doubleArray78 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray83 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double84 = tTestImpl72.homoscedasticT(doubleArray78, doubleArray83);
        double double85 = tTestImpl69.tTest((double) (short) 100, doubleArray78);
        double double86 = tTestImpl55.t((double) 10.0f, doubleArray78);
        double double87 = tTestImpl3.homoscedasticT(doubleArray52, doubleArray78);
        double double88 = tTestImpl0.t((double) 100.0f, doubleArray78);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary89 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary90 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double91 = tTestImpl0.homoscedasticT(statisticalSummary89, statisticalSummary90);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-0.405429217622299d) + "'", double37 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.2806531524060034d + "'", double38 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 3.8d + "'", double39 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + (-0.405429217622299d) + "'", double67 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + (-0.405429217622299d) + "'", double84 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.01613264369976175d + "'", double85 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.5339796283719219d + "'", double86 == 0.5339796283719219d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.405429217622299d + "'", double87 == 0.405429217622299d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + (-3.9998096691255283d) + "'", double88 == (-3.9998096691255283d));
    }

    @Test
    public void test1142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1142");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl4 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution3);
        double[] doubleArray10 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray15 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double16 = tTestImpl4.homoscedasticT(doubleArray10, doubleArray15);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        org.apache.commons.math.distribution.TDistribution tDistribution37 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl38 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution37);
        double[] doubleArray44 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray49 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double50 = tTestImpl38.homoscedasticT(doubleArray44, doubleArray49);
        double double51 = tTestImpl4.t(doubleArray34, doubleArray49);
        double double52 = tTestImpl1.t((double) 10.0f, doubleArray49);
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        tTestImpl1.setDistribution(tDistribution53);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary56 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double57 = tTestImpl1.tTest(4.394126037906707d, statisticalSummary56);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + (-0.405429217622299d) + "'", double16 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + (-0.405429217622299d) + "'", double50 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.9755634976417653d + "'", double52 == 0.9755634976417653d);
    }

    @Test
    public void test1143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1143");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary15 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double16 = tTestImpl1.tTest(0.1143321549278642d, statisticalSummary15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
    }

    @Test
    public void test1144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1144");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl0.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double[] doubleArray43 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double44 = tTestImpl23.t((double) '4', doubleArray43);
        org.apache.commons.math.distribution.TDistribution tDistribution45 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl46 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution45);
        double[] doubleArray52 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray57 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double58 = tTestImpl46.homoscedasticT(doubleArray52, doubleArray57);
        double double59 = tTestImpl0.t(doubleArray43, doubleArray57);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary61 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double62 = tTestImpl0.t(0.0d, statisticalSummary61);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + (-0.09656583816243881d) + "'", double44 == (-0.09656583816243881d));
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + (-0.405429217622299d) + "'", double58 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.5172120199559697d + "'", double59 == 0.5172120199559697d);
    }

    @Test
    public void test1145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1145");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl4 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution3);
        double[] doubleArray10 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray15 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double16 = tTestImpl4.homoscedasticT(doubleArray10, doubleArray15);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        org.apache.commons.math.distribution.TDistribution tDistribution37 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl38 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution37);
        double[] doubleArray44 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray49 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double50 = tTestImpl38.homoscedasticT(doubleArray44, doubleArray49);
        double double51 = tTestImpl4.t(doubleArray34, doubleArray49);
        double double52 = tTestImpl1.t((double) 10.0f, doubleArray49);
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        tTestImpl1.setDistribution(tDistribution53);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl56 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray60 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl62 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution61);
        double[] doubleArray68 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray73 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double74 = tTestImpl62.homoscedasticT(doubleArray68, doubleArray73);
        double double75 = tTestImpl56.tTest(doubleArray60, doubleArray73);
        double double76 = tTestImpl1.t((double) 10L, doubleArray73);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary78 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double79 = tTestImpl1.tTest(0.8463073355328574d, statisticalSummary78);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + (-0.405429217622299d) + "'", double16 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + (-0.405429217622299d) + "'", double50 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.9755634976417653d + "'", double52 == 0.9755634976417653d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-0.405429217622299d) + "'", double74 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.2806531524060034d + "'", double75 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.9755634976417653d + "'", double76 == 0.9755634976417653d);
    }

    @Test
    public void test1146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1146");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        tTestImpl0.setDistribution(tDistribution58);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        tTestImpl0.setDistribution(tDistribution60);
        org.apache.commons.math.distribution.TDistribution tDistribution63 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl64 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution63);
        double[] doubleArray70 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray75 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double76 = tTestImpl64.homoscedasticT(doubleArray70, doubleArray75);
        double double77 = tTestImpl0.t((double) 0, doubleArray75);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary79 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean81 = tTestImpl0.tTest(3.8d, statisticalSummary79, (double) 10.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 10.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + (-0.405429217622299d) + "'", double76 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 1.3997215400947067d + "'", double77 == 1.3997215400947067d);
    }

    @Test
    public void test1147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1147");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution44 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl45 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution44);
        double[] doubleArray51 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray56 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double57 = tTestImpl45.homoscedasticT(doubleArray51, doubleArray56);
        double double58 = tTestImpl42.tTest((double) (short) 100, doubleArray51);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl61 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution60);
        double[] doubleArray67 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray72 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double73 = tTestImpl61.homoscedasticT(doubleArray67, doubleArray72);
        double[] doubleArray81 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double82 = tTestImpl61.t((double) '4', doubleArray81);
        double double83 = tTestImpl42.tTest((double) (short) 100, doubleArray81);
        double[] doubleArray89 = new double[] { 1.0f, (-0.09656583816243881d), ' ', 0.8463073355328574d, 1.3965146696271626d };
        double double90 = tTestImpl0.homoscedasticTTest(doubleArray81, doubleArray89);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary92 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double93 = tTestImpl0.t(0.5172120199559697d, statisticalSummary92);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-0.405429217622299d) + "'", double57 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.01613264369976175d + "'", double58 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + (-0.405429217622299d) + "'", double73 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + (-0.09656583816243881d) + "'", double82 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.07560555610353314d + "'", double83 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[1.0, -0.09656583816243881, 32.0, 0.8463073355328574, 1.3965146696271626]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.12673187601587688d + "'", double90 == 0.12673187601587688d);
    }

    @Test
    public void test1148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1148");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution1 = null;
        tTestImpl0.setDistribution(tDistribution1);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        tTestImpl0.setDistribution(tDistribution3);
        org.apache.commons.math.distribution.TDistribution tDistribution6 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl7 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution6);
        double[] doubleArray13 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray18 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double19 = tTestImpl7.homoscedasticT(doubleArray13, doubleArray18);
        double double20 = tTestImpl0.t(3.8d, doubleArray13);
        double[] doubleArray27 = new double[] { 10.0f, 4.442799675467754d, (-2.2d), 0.15639940166959065d, 1.3997215400947067d };
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean29 = tTestImpl0.tTest((double) 10L, doubleArray27, (-1.0d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -1.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-0.405429217622299d) + "'", double19 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.8463073355328574d + "'", double20 == 0.8463073355328574d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, 4.442799675467754, -2.2, 0.15639940166959065, 1.3997215400947067]");
    }

    @Test
    public void test1149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1149");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl21.tTest((double) (short) 100, doubleArray30);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray43 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution44 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl45 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution44);
        double[] doubleArray51 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray56 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double57 = tTestImpl45.homoscedasticT(doubleArray51, doubleArray56);
        double double58 = tTestImpl39.tTest(doubleArray43, doubleArray56);
        double double59 = tTestImpl21.t((double) (short) 10, doubleArray43);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl60 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl63 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution62);
        double[] doubleArray69 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray74 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double75 = tTestImpl63.homoscedasticT(doubleArray69, doubleArray74);
        double double76 = tTestImpl60.tTest((double) (short) 100, doubleArray69);
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl78 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution77);
        double[] doubleArray84 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray89 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double90 = tTestImpl78.homoscedasticT(doubleArray84, doubleArray89);
        double double91 = tTestImpl21.pairedT(doubleArray69, doubleArray84);
        double double92 = tTestImpl0.t((double) (short) 0, doubleArray84);
        org.apache.commons.math.distribution.TDistribution tDistribution93 = null;
        tTestImpl0.setDistribution(tDistribution93);
        org.apache.commons.math.distribution.TDistribution tDistribution95 = null;
        tTestImpl0.setDistribution(tDistribution95);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary97 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary98 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double99 = tTestImpl0.homoscedasticT(statisticalSummary97, statisticalSummary98);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.01613264369976175d + "'", double37 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-0.405429217622299d) + "'", double57 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.2806531524060034d + "'", double58 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 3.8d + "'", double59 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + (-0.405429217622299d) + "'", double75 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.01613264369976175d + "'", double76 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + (-0.405429217622299d) + "'", double90 == (-0.405429217622299d));
        org.junit.Assert.assertTrue(Double.isNaN(double91));
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 1.0377339947605275d + "'", double92 == 1.0377339947605275d);
    }

    @Test
    public void test1150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1150");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        org.apache.commons.math.distribution.TDistribution tDistribution34 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl35 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution34);
        double[] doubleArray41 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray46 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double47 = tTestImpl35.homoscedasticT(doubleArray41, doubleArray46);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl48 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray52 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl54 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution53);
        double[] doubleArray60 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray65 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double66 = tTestImpl54.homoscedasticT(doubleArray60, doubleArray65);
        double double67 = tTestImpl48.tTest(doubleArray52, doubleArray65);
        org.apache.commons.math.distribution.TDistribution tDistribution68 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl69 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution68);
        double[] doubleArray75 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray80 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double81 = tTestImpl69.homoscedasticT(doubleArray75, doubleArray80);
        double double82 = tTestImpl35.t(doubleArray65, doubleArray80);
        double double83 = tTestImpl0.homoscedasticT(doubleArray27, doubleArray80);
        org.apache.commons.math.distribution.TDistribution tDistribution84 = null;
        tTestImpl0.setDistribution(tDistribution84);
        org.apache.commons.math.distribution.TDistribution tDistribution86 = null;
        tTestImpl0.setDistribution(tDistribution86);
        org.apache.commons.math.distribution.TDistribution tDistribution88 = null;
        tTestImpl0.setDistribution(tDistribution88);
        org.apache.commons.math.distribution.TDistribution tDistribution90 = null;
        tTestImpl0.setDistribution(tDistribution90);
        org.apache.commons.math.distribution.TDistribution tDistribution92 = null;
        tTestImpl0.setDistribution(tDistribution92);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary95 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double96 = tTestImpl0.t((double) 1L, statisticalSummary95);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + (-0.405429217622299d) + "'", double47 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + (-0.405429217622299d) + "'", double66 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.2806531524060034d + "'", double67 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + (-0.405429217622299d) + "'", double81 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + (-0.405429217622299d) + "'", double83 == (-0.405429217622299d));
    }

    @Test
    public void test1151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1151");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl22 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution21);
        double[] doubleArray28 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray33 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double34 = tTestImpl22.homoscedasticT(doubleArray28, doubleArray33);
        double double35 = tTestImpl0.t((double) 1L, doubleArray33);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary37 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double38 = tTestImpl0.t((-14.881283513379177d), statisticalSummary37);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-0.405429217622299d) + "'", double34 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.3573057358494125d + "'", double35 == 1.3573057358494125d);
    }

    @Test
    public void test1152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1152");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        tTestImpl0.setDistribution(tDistribution17);
        org.apache.commons.math.distribution.TDistribution tDistribution19 = null;
        tTestImpl0.setDistribution(tDistribution19);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        tTestImpl23.setDistribution(tDistribution24);
        org.apache.commons.math.distribution.TDistribution tDistribution27 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl28 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution27);
        double[] doubleArray34 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray39 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double40 = tTestImpl28.homoscedasticT(doubleArray34, doubleArray39);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray45 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution46 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl47 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution46);
        double[] doubleArray53 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray58 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double59 = tTestImpl47.homoscedasticT(doubleArray53, doubleArray58);
        double double60 = tTestImpl41.tTest(doubleArray45, doubleArray58);
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl62 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution61);
        double[] doubleArray68 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray73 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double74 = tTestImpl62.homoscedasticT(doubleArray68, doubleArray73);
        double double75 = tTestImpl28.t(doubleArray58, doubleArray73);
        double double76 = tTestImpl23.t(0.07560555610353314d, doubleArray58);
        double double77 = tTestImpl0.t((double) (short) 10, doubleArray58);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary79 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean81 = tTestImpl0.tTest((double) 0L, statisticalSummary79, (-0.405429217622299d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -0.405429217622299");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.405429217622299d) + "'", double40 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + (-0.405429217622299d) + "'", double59 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.2806531524060034d + "'", double60 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-0.405429217622299d) + "'", double74 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 1.3965146696271626d + "'", double76 == 1.3965146696271626d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.9755634976417653d + "'", double77 == 0.9755634976417653d);
    }

    @Test
    public void test1153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1153");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        tTestImpl3.setDistribution(tDistribution4);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution8 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl9 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution8);
        double[] doubleArray15 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray20 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double21 = tTestImpl9.homoscedasticT(doubleArray15, doubleArray20);
        double double22 = tTestImpl6.tTest((double) (short) 100, doubleArray15);
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution24);
        double[] doubleArray31 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray36 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double37 = tTestImpl25.homoscedasticT(doubleArray31, doubleArray36);
        double[] doubleArray45 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double46 = tTestImpl25.t((double) '4', doubleArray45);
        double double47 = tTestImpl6.tTest((double) (short) 100, doubleArray45);
        org.apache.commons.math.distribution.TDistribution tDistribution49 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl50 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution49);
        double[] doubleArray56 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray61 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double62 = tTestImpl50.homoscedasticT(doubleArray56, doubleArray61);
        double double63 = tTestImpl6.tTest((double) (byte) 1, doubleArray56);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl65 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution64);
        double[] doubleArray71 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray76 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double77 = tTestImpl65.homoscedasticT(doubleArray71, doubleArray76);
        double[] doubleArray85 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double86 = tTestImpl65.t((double) '4', doubleArray85);
        double double87 = tTestImpl3.t(doubleArray56, doubleArray85);
        double double88 = tTestImpl0.tTest((double) 0, doubleArray56);
        org.apache.commons.math.distribution.TDistribution tDistribution89 = null;
        tTestImpl0.setDistribution(tDistribution89);
        org.apache.commons.math.distribution.TDistribution tDistribution91 = null;
        tTestImpl0.setDistribution(tDistribution91);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary93 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary94 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean96 = tTestImpl0.tTest(statisticalSummary93, statisticalSummary94, 1.3930877336894083d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 1.3930877336894083");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-0.405429217622299d) + "'", double21 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.01613264369976175d + "'", double22 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-0.405429217622299d) + "'", double37 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-0.09656583816243881d) + "'", double46 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.07560555610353314d + "'", double47 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + (-0.405429217622299d) + "'", double62 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.3793626154059051d + "'", double63 == 0.3793626154059051d);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + (-0.405429217622299d) + "'", double77 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + (-0.09656583816243881d) + "'", double86 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + (-0.975807309953049d) + "'", double87 == (-0.975807309953049d));
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.35800486798369846d + "'", double88 == 0.35800486798369846d);
    }

    @Test
    public void test1154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1154");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        org.apache.commons.math.distribution.TDistribution tDistribution34 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl35 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution34);
        double[] doubleArray41 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray46 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double47 = tTestImpl35.homoscedasticT(doubleArray41, doubleArray46);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl48 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray52 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl54 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution53);
        double[] doubleArray60 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray65 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double66 = tTestImpl54.homoscedasticT(doubleArray60, doubleArray65);
        double double67 = tTestImpl48.tTest(doubleArray52, doubleArray65);
        org.apache.commons.math.distribution.TDistribution tDistribution68 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl69 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution68);
        double[] doubleArray75 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray80 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double81 = tTestImpl69.homoscedasticT(doubleArray75, doubleArray80);
        double double82 = tTestImpl35.t(doubleArray65, doubleArray80);
        double double83 = tTestImpl0.homoscedasticT(doubleArray27, doubleArray80);
        org.apache.commons.math.distribution.TDistribution tDistribution84 = null;
        tTestImpl0.setDistribution(tDistribution84);
        org.apache.commons.math.distribution.TDistribution tDistribution86 = null;
        tTestImpl0.setDistribution(tDistribution86);
        org.apache.commons.math.distribution.TDistribution tDistribution88 = null;
        tTestImpl0.setDistribution(tDistribution88);
        java.lang.Class<?> wildcardClass90 = tTestImpl0.getClass();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + (-0.405429217622299d) + "'", double47 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + (-0.405429217622299d) + "'", double66 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.2806531524060034d + "'", double67 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + (-0.405429217622299d) + "'", double81 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + (-0.405429217622299d) + "'", double83 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test1155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1155");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        double double37 = tTestImpl1.t(10.0d, doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution38 = null;
        tTestImpl1.setDistribution(tDistribution38);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        tTestImpl1.setDistribution(tDistribution40);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary43 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double44 = tTestImpl1.tTest((double) 10, statisticalSummary43);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 3.8d + "'", double37 == 3.8d);
    }

    @Test
    public void test1156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1156");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        double[] doubleArray21 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double22 = tTestImpl1.t((double) '4', doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        org.apache.commons.math.distribution.TDistribution tDistribution37 = null;
        tTestImpl24.setDistribution(tDistribution37);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl40 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray44 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution45 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl46 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution45);
        double[] doubleArray52 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray57 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double58 = tTestImpl46.homoscedasticT(doubleArray52, doubleArray57);
        double double59 = tTestImpl40.tTest(doubleArray44, doubleArray57);
        double double60 = tTestImpl24.t(10.0d, doubleArray44);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl63 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution62);
        double[] doubleArray69 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray74 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double75 = tTestImpl63.homoscedasticT(doubleArray69, doubleArray74);
        double double76 = tTestImpl24.t(100.0d, doubleArray74);
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl78 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution77);
        double[] doubleArray84 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray89 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double90 = tTestImpl78.homoscedasticT(doubleArray84, doubleArray89);
        double double91 = tTestImpl1.homoscedasticT(doubleArray74, doubleArray84);
        org.apache.commons.math.distribution.TDistribution tDistribution92 = null;
        tTestImpl1.setDistribution(tDistribution92);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary94 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary95 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double96 = tTestImpl1.tTest(statisticalSummary94, statisticalSummary95);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-0.09656583816243881d) + "'", double22 == (-0.09656583816243881d));
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + (-0.405429217622299d) + "'", double58 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.2806531524060034d + "'", double59 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 3.8d + "'", double60 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + (-0.405429217622299d) + "'", double75 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + (-2.8418588844347075d) + "'", double76 == (-2.8418588844347075d));
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + (-0.405429217622299d) + "'", double90 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.405429217622299d + "'", double91 == 0.405429217622299d);
    }

    @Test
    public void test1157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1157");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary20 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary21 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean23 = tTestImpl0.tTest(statisticalSummary20, statisticalSummary21, (double) 1L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 1.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
    }

    @Test
    public void test1158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1158");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        tTestImpl1.setDistribution(tDistribution4);
        org.apache.commons.math.distribution.TDistribution tDistribution6 = null;
        tTestImpl1.setDistribution(tDistribution6);
        java.lang.Class<?> wildcardClass8 = tTestImpl1.getClass();
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test1159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1159");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution17);
        double[] doubleArray24 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray29 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double30 = tTestImpl18.homoscedasticT(doubleArray24, doubleArray29);
        double double31 = tTestImpl15.tTest((double) (short) 100, doubleArray24);
        double double32 = tTestImpl1.t((double) 10.0f, doubleArray24);
        org.apache.commons.math.distribution.TDistribution tDistribution33 = null;
        tTestImpl1.setDistribution(tDistribution33);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary35 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary36 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double37 = tTestImpl1.homoscedasticTTest(statisticalSummary35, statisticalSummary36);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-0.405429217622299d) + "'", double30 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.01613264369976175d + "'", double31 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.5339796283719219d + "'", double32 == 0.5339796283719219d);
    }

    @Test
    public void test1160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1160");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl22 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution21);
        double[] doubleArray28 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray33 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double34 = tTestImpl22.homoscedasticT(doubleArray28, doubleArray33);
        double double35 = tTestImpl0.t((double) 1L, doubleArray33);
        double[] doubleArray37 = new double[] {};
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean39 = tTestImpl0.tTest((double) (byte) 1, doubleArray37, Double.NaN);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-0.405429217622299d) + "'", double34 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.3573057358494125d + "'", double35 == 1.3573057358494125d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[]");
    }

    @Test
    public void test1161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1161");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl2 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        double double18 = tTestImpl2.tTest((double) (short) 100, doubleArray11);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        double[] doubleArray41 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double42 = tTestImpl21.t((double) '4', doubleArray41);
        double double43 = tTestImpl2.tTest((double) (short) 100, doubleArray41);
        double[] doubleArray50 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double51 = tTestImpl2.tTest(0.405429217622299d, doubleArray50);
        double double52 = tTestImpl0.t(3.8d, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        tTestImpl0.setDistribution(tDistribution53);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl0.setDistribution(tDistribution55);
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        tTestImpl0.setDistribution(tDistribution57);
        org.apache.commons.math.distribution.TDistribution tDistribution59 = null;
        tTestImpl0.setDistribution(tDistribution59);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary61 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary62 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double63 = tTestImpl0.homoscedasticT(statisticalSummary61, statisticalSummary62);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.01613264369976175d + "'", double18 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-0.09656583816243881d) + "'", double42 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.07560555610353314d + "'", double43 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.1143321549278642d + "'", double51 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-10.500000000000002d) + "'", double52 == (-10.500000000000002d));
    }

    @Test
    public void test1162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1162");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl14 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray18 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution19 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl20 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution19);
        double[] doubleArray26 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray31 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double32 = tTestImpl20.homoscedasticT(doubleArray26, doubleArray31);
        double double33 = tTestImpl14.tTest(doubleArray18, doubleArray31);
        org.apache.commons.math.distribution.TDistribution tDistribution34 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl35 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution34);
        double[] doubleArray41 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray46 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double47 = tTestImpl35.homoscedasticT(doubleArray41, doubleArray46);
        double double48 = tTestImpl1.t(doubleArray31, doubleArray46);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary49 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary50 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean52 = tTestImpl1.tTest(statisticalSummary49, statisticalSummary50, 1.3404872472421194d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 1.3404872472421194");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + (-0.405429217622299d) + "'", double32 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.2806531524060034d + "'", double33 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + (-0.405429217622299d) + "'", double47 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
    }

    @Test
    public void test1163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1163");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl2 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        double double18 = tTestImpl2.tTest((double) (short) 100, doubleArray11);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        double[] doubleArray41 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double42 = tTestImpl21.t((double) '4', doubleArray41);
        double double43 = tTestImpl2.tTest((double) (short) 100, doubleArray41);
        double[] doubleArray50 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double51 = tTestImpl2.tTest(0.405429217622299d, doubleArray50);
        double double52 = tTestImpl0.t(3.8d, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        tTestImpl0.setDistribution(tDistribution53);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl0.setDistribution(tDistribution55);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary58 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double59 = tTestImpl0.t((-0.09656583816243881d), statisticalSummary58);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.01613264369976175d + "'", double18 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-0.09656583816243881d) + "'", double42 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.07560555610353314d + "'", double43 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.1143321549278642d + "'", double51 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-10.500000000000002d) + "'", double52 == (-10.500000000000002d));
    }

    @Test
    public void test1164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1164");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution17);
        double[] doubleArray24 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray29 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double30 = tTestImpl18.homoscedasticT(doubleArray24, doubleArray29);
        double double31 = tTestImpl15.tTest((double) (short) 100, doubleArray24);
        double double32 = tTestImpl1.t((double) 10.0f, doubleArray24);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary33 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary34 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double35 = tTestImpl1.t(statisticalSummary33, statisticalSummary34);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-0.405429217622299d) + "'", double30 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.01613264369976175d + "'", double31 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.5339796283719219d + "'", double32 == 0.5339796283719219d);
    }

    @Test
    public void test1165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1165");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray23 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution24);
        double[] doubleArray31 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray36 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double37 = tTestImpl25.homoscedasticT(doubleArray31, doubleArray36);
        double double38 = tTestImpl19.tTest(doubleArray23, doubleArray36);
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl40 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution39);
        double[] doubleArray46 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray51 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double52 = tTestImpl40.homoscedasticT(doubleArray46, doubleArray51);
        double double53 = tTestImpl6.t(doubleArray36, doubleArray51);
        double double54 = tTestImpl1.t(0.07560555610353314d, doubleArray36);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl1.setDistribution(tDistribution55);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary58 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double59 = tTestImpl1.t((double) 10.0f, statisticalSummary58);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-0.405429217622299d) + "'", double37 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.2806531524060034d + "'", double38 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-0.405429217622299d) + "'", double52 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.3965146696271626d + "'", double54 == 1.3965146696271626d);
    }

    @Test
    public void test1166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1166");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl2 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        double double18 = tTestImpl2.tTest((double) (short) 100, doubleArray11);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        double[] doubleArray41 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double42 = tTestImpl21.t((double) '4', doubleArray41);
        double double43 = tTestImpl2.tTest((double) (short) 100, doubleArray41);
        double[] doubleArray50 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double51 = tTestImpl2.tTest(0.405429217622299d, doubleArray50);
        double double52 = tTestImpl0.t(3.8d, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        tTestImpl0.setDistribution(tDistribution53);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl0.setDistribution(tDistribution55);
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        tTestImpl0.setDistribution(tDistribution57);
        org.apache.commons.math.distribution.TDistribution tDistribution59 = null;
        tTestImpl0.setDistribution(tDistribution59);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary61 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary62 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double63 = tTestImpl0.tTest(statisticalSummary61, statisticalSummary62);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.01613264369976175d + "'", double18 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-0.09656583816243881d) + "'", double42 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.07560555610353314d + "'", double43 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.1143321549278642d + "'", double51 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-10.500000000000002d) + "'", double52 == (-10.500000000000002d));
    }

    @Test
    public void test1167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1167");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        double double37 = tTestImpl1.t(10.0d, doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution38 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution38);
        double[] doubleArray45 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray50 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double51 = tTestImpl39.homoscedasticT(doubleArray45, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution52 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl53 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution52);
        double[] doubleArray59 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray64 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double65 = tTestImpl53.homoscedasticT(doubleArray59, doubleArray64);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl67 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution69 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl70 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution69);
        double[] doubleArray76 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray81 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double82 = tTestImpl70.homoscedasticT(doubleArray76, doubleArray81);
        double double83 = tTestImpl67.tTest((double) (short) 100, doubleArray76);
        double double84 = tTestImpl53.t((double) 10.0f, doubleArray76);
        double double85 = tTestImpl1.homoscedasticT(doubleArray50, doubleArray76);
        org.apache.commons.math.distribution.TDistribution tDistribution86 = null;
        tTestImpl1.setDistribution(tDistribution86);
        org.apache.commons.math.distribution.TDistribution tDistribution88 = null;
        tTestImpl1.setDistribution(tDistribution88);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary91 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean93 = tTestImpl1.tTest(0.5339796283719219d, statisticalSummary91, (-10.500000000000002d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -10.500000000000002");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 3.8d + "'", double37 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + (-0.405429217622299d) + "'", double51 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + (-0.405429217622299d) + "'", double65 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + (-0.405429217622299d) + "'", double82 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.01613264369976175d + "'", double83 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.5339796283719219d + "'", double84 == 0.5339796283719219d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.405429217622299d + "'", double85 == 0.405429217622299d);
    }

    @Test
    public void test1168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1168");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl2 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        double double18 = tTestImpl2.tTest((double) (short) 100, doubleArray11);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        double[] doubleArray41 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double42 = tTestImpl21.t((double) '4', doubleArray41);
        double double43 = tTestImpl2.tTest((double) (short) 100, doubleArray41);
        double[] doubleArray50 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double51 = tTestImpl2.tTest(0.405429217622299d, doubleArray50);
        double double52 = tTestImpl0.t(3.8d, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        tTestImpl0.setDistribution(tDistribution53);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl0.setDistribution(tDistribution55);
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        tTestImpl0.setDistribution(tDistribution57);
        org.apache.commons.math.distribution.TDistribution tDistribution59 = null;
        tTestImpl0.setDistribution(tDistribution59);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary62 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double63 = tTestImpl0.tTest(0.982920007042921d, statisticalSummary62);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.01613264369976175d + "'", double18 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-0.09656583816243881d) + "'", double42 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.07560555610353314d + "'", double43 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.1143321549278642d + "'", double51 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-10.500000000000002d) + "'", double52 == (-10.500000000000002d));
    }

    @Test
    public void test1169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1169");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl1.t((-0.975807309953049d), doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl1.setDistribution(tDistribution55);
        double[] doubleArray64 = new double[] { 1L, 10, (short) 0, (-1), (-3.5d), 4.394126037906707d };
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean66 = tTestImpl1.tTest((-2.2d), doubleArray64, (double) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -1.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.4411111919348023d + "'", double54 == 1.4411111919348023d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[1.0, 10.0, 0.0, -1.0, -3.5, 4.394126037906707]");
    }

    @Test
    public void test1170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1170");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        tTestImpl3.setDistribution(tDistribution4);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution8 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl9 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution8);
        double[] doubleArray15 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray20 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double21 = tTestImpl9.homoscedasticT(doubleArray15, doubleArray20);
        double double22 = tTestImpl6.tTest((double) (short) 100, doubleArray15);
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution24);
        double[] doubleArray31 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray36 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double37 = tTestImpl25.homoscedasticT(doubleArray31, doubleArray36);
        double[] doubleArray45 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double46 = tTestImpl25.t((double) '4', doubleArray45);
        double double47 = tTestImpl6.tTest((double) (short) 100, doubleArray45);
        org.apache.commons.math.distribution.TDistribution tDistribution49 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl50 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution49);
        double[] doubleArray56 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray61 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double62 = tTestImpl50.homoscedasticT(doubleArray56, doubleArray61);
        double double63 = tTestImpl6.tTest((double) (byte) 1, doubleArray56);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl65 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution64);
        double[] doubleArray71 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray76 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double77 = tTestImpl65.homoscedasticT(doubleArray71, doubleArray76);
        double[] doubleArray85 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double86 = tTestImpl65.t((double) '4', doubleArray85);
        double double87 = tTestImpl3.t(doubleArray56, doubleArray85);
        double double88 = tTestImpl0.tTest((double) 0, doubleArray56);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary90 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean92 = tTestImpl0.tTest(1.3573057358494125d, statisticalSummary90, 0.15639940166959065d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-0.405429217622299d) + "'", double21 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.01613264369976175d + "'", double22 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-0.405429217622299d) + "'", double37 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-0.09656583816243881d) + "'", double46 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.07560555610353314d + "'", double47 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + (-0.405429217622299d) + "'", double62 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.3793626154059051d + "'", double63 == 0.3793626154059051d);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + (-0.405429217622299d) + "'", double77 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + (-0.09656583816243881d) + "'", double86 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + (-0.975807309953049d) + "'", double87 == (-0.975807309953049d));
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.35800486798369846d + "'", double88 == 0.35800486798369846d);
    }

    @Test
    public void test1171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1171");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl2 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray6 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution7 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl8 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution7);
        double[] doubleArray14 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray19 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double20 = tTestImpl8.homoscedasticT(doubleArray14, doubleArray19);
        double double21 = tTestImpl2.tTest(doubleArray6, doubleArray19);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl2.setDistribution(tDistribution22);
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution24);
        double[] doubleArray31 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray36 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double37 = tTestImpl25.homoscedasticT(doubleArray31, doubleArray36);
        double[] doubleArray45 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double46 = tTestImpl25.t((double) '4', doubleArray45);
        org.apache.commons.math.distribution.TDistribution tDistribution47 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl48 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution47);
        double[] doubleArray54 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray59 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double60 = tTestImpl48.homoscedasticT(doubleArray54, doubleArray59);
        double double61 = tTestImpl2.t(doubleArray45, doubleArray59);
        boolean boolean63 = tTestImpl0.tTest((double) (short) 1, doubleArray59, 0.405429217622299d);
        java.lang.Class<?> wildcardClass64 = tTestImpl0.getClass();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-0.405429217622299d) + "'", double20 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.2806531524060034d + "'", double21 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-0.405429217622299d) + "'", double37 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-0.09656583816243881d) + "'", double46 == (-0.09656583816243881d));
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + (-0.405429217622299d) + "'", double60 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.5172120199559697d + "'", double61 == 0.5172120199559697d);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test1172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1172");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution1 = null;
        tTestImpl0.setDistribution(tDistribution1);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        tTestImpl0.setDistribution(tDistribution3);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary5 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary6 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double7 = tTestImpl0.homoscedasticT(statisticalSummary5, statisticalSummary6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1173");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        tTestImpl42.setDistribution(tDistribution43);
        org.apache.commons.math.distribution.TDistribution tDistribution45 = null;
        tTestImpl42.setDistribution(tDistribution45);
        org.apache.commons.math.distribution.TDistribution tDistribution48 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl49 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution48);
        double[] doubleArray55 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray60 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double61 = tTestImpl49.homoscedasticT(doubleArray55, doubleArray60);
        double double62 = tTestImpl42.t(3.8d, doubleArray55);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl63 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray67 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution68 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl69 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution68);
        double[] doubleArray75 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray80 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double81 = tTestImpl69.homoscedasticT(doubleArray75, doubleArray80);
        double double82 = tTestImpl63.tTest(doubleArray67, doubleArray80);
        double double83 = tTestImpl0.t(doubleArray55, doubleArray80);
        double[] doubleArray85 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean87 = tTestImpl0.tTest((double) (short) 0, doubleArray85, (double) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 10.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + (-0.405429217622299d) + "'", double61 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.8463073355328574d + "'", double62 == 0.8463073355328574d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + (-0.405429217622299d) + "'", double81 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.2806531524060034d + "'", double82 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + (-0.4023317120818342d) + "'", double83 == (-0.4023317120818342d));
    }

    @Test
    public void test1174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1174");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution1 = null;
        tTestImpl0.setDistribution(tDistribution1);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        tTestImpl0.setDistribution(tDistribution3);
        org.apache.commons.math.distribution.TDistribution tDistribution6 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl7 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution6);
        double[] doubleArray13 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray18 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double19 = tTestImpl7.homoscedasticT(doubleArray13, doubleArray18);
        double double20 = tTestImpl0.t(3.8d, doubleArray13);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary22 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double23 = tTestImpl0.t(0.982920007042921d, statisticalSummary22);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-0.405429217622299d) + "'", double19 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.8463073355328574d + "'", double20 == 0.8463073355328574d);
    }

    @Test
    public void test1175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1175");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.distribution.TDistribution tDistribution16 = null;
        tTestImpl1.setDistribution(tDistribution16);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        tTestImpl1.setDistribution(tDistribution18);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl1.setDistribution(tDistribution20);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray27 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution28 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl29 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution28);
        double[] doubleArray35 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray40 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double41 = tTestImpl29.homoscedasticT(doubleArray35, doubleArray40);
        double double42 = tTestImpl23.tTest(doubleArray27, doubleArray40);
        // The following exception was thrown during execution in test generation
        try {
            double double43 = tTestImpl1.tTest(1.4411111919348023d, doubleArray40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + (-0.405429217622299d) + "'", double41 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.2806531524060034d + "'", double42 == 0.2806531524060034d);
    }

    @Test
    public void test1176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1176");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        double[] doubleArray21 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double22 = tTestImpl1.t((double) '4', doubleArray21);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary23 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary24 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean26 = tTestImpl1.tTest(statisticalSummary23, statisticalSummary24, (double) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 52.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-0.09656583816243881d) + "'", double22 == (-0.09656583816243881d));
    }

    @Test
    public void test1177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1177");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution17);
        double[] doubleArray24 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray29 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double30 = tTestImpl18.homoscedasticT(doubleArray24, doubleArray29);
        double double31 = tTestImpl15.tTest((double) (short) 100, doubleArray24);
        double double32 = tTestImpl1.t((double) 10.0f, doubleArray24);
        org.apache.commons.math.distribution.TDistribution tDistribution33 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl34 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution33);
        double[] doubleArray40 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray45 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double46 = tTestImpl34.homoscedasticT(doubleArray40, doubleArray45);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl47 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray51 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution52 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl53 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution52);
        double[] doubleArray59 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray64 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double65 = tTestImpl53.homoscedasticT(doubleArray59, doubleArray64);
        double double66 = tTestImpl47.tTest(doubleArray51, doubleArray64);
        org.apache.commons.math.distribution.TDistribution tDistribution67 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl68 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution67);
        double[] doubleArray74 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray79 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double80 = tTestImpl68.homoscedasticT(doubleArray74, doubleArray79);
        double double81 = tTestImpl34.t(doubleArray64, doubleArray79);
        org.apache.commons.math.distribution.TDistribution tDistribution82 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl83 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution82);
        double[] doubleArray89 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray94 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double95 = tTestImpl83.homoscedasticT(doubleArray89, doubleArray94);
        double double96 = tTestImpl1.pairedT(doubleArray79, doubleArray94);
        java.lang.Class<?> wildcardClass97 = tTestImpl1.getClass();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-0.405429217622299d) + "'", double30 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.01613264369976175d + "'", double31 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.5339796283719219d + "'", double32 == 0.5339796283719219d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-0.405429217622299d) + "'", double46 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + (-0.405429217622299d) + "'", double65 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.2806531524060034d + "'", double66 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + (-0.405429217622299d) + "'", double80 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray94), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + (-0.405429217622299d) + "'", double95 == (-0.405429217622299d));
        org.junit.Assert.assertTrue(Double.isNaN(double96));
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1178");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl21.tTest((double) (short) 100, doubleArray30);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray43 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution44 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl45 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution44);
        double[] doubleArray51 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray56 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double57 = tTestImpl45.homoscedasticT(doubleArray51, doubleArray56);
        double double58 = tTestImpl39.tTest(doubleArray43, doubleArray56);
        double double59 = tTestImpl21.t((double) (short) 10, doubleArray43);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl60 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl63 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution62);
        double[] doubleArray69 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray74 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double75 = tTestImpl63.homoscedasticT(doubleArray69, doubleArray74);
        double double76 = tTestImpl60.tTest((double) (short) 100, doubleArray69);
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl78 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution77);
        double[] doubleArray84 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray89 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double90 = tTestImpl78.homoscedasticT(doubleArray84, doubleArray89);
        double double91 = tTestImpl21.pairedT(doubleArray69, doubleArray84);
        double double92 = tTestImpl0.t((double) (short) 0, doubleArray84);
        org.apache.commons.math.distribution.TDistribution tDistribution93 = null;
        tTestImpl0.setDistribution(tDistribution93);
        org.apache.commons.math.distribution.TDistribution tDistribution95 = null;
        tTestImpl0.setDistribution(tDistribution95);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary97 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary98 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double99 = tTestImpl0.tTest(statisticalSummary97, statisticalSummary98);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.01613264369976175d + "'", double37 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-0.405429217622299d) + "'", double57 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.2806531524060034d + "'", double58 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 3.8d + "'", double59 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + (-0.405429217622299d) + "'", double75 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.01613264369976175d + "'", double76 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + (-0.405429217622299d) + "'", double90 == (-0.405429217622299d));
        org.junit.Assert.assertTrue(Double.isNaN(double91));
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 1.0377339947605275d + "'", double92 == 1.0377339947605275d);
    }

    @Test
    public void test1179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1179");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl4 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution3);
        double[] doubleArray10 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray15 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double16 = tTestImpl4.homoscedasticT(doubleArray10, doubleArray15);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        org.apache.commons.math.distribution.TDistribution tDistribution37 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl38 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution37);
        double[] doubleArray44 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray49 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double50 = tTestImpl38.homoscedasticT(doubleArray44, doubleArray49);
        double double51 = tTestImpl4.t(doubleArray34, doubleArray49);
        double double52 = tTestImpl1.t((double) 10.0f, doubleArray49);
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        tTestImpl1.setDistribution(tDistribution53);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl56 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray60 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl62 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution61);
        double[] doubleArray68 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray73 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double74 = tTestImpl62.homoscedasticT(doubleArray68, doubleArray73);
        double double75 = tTestImpl56.tTest(doubleArray60, doubleArray73);
        double double76 = tTestImpl1.t((double) 10L, doubleArray73);
        java.lang.Class<?> wildcardClass77 = tTestImpl1.getClass();
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + (-0.405429217622299d) + "'", double16 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + (-0.405429217622299d) + "'", double50 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.9755634976417653d + "'", double52 == 0.9755634976417653d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-0.405429217622299d) + "'", double74 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.2806531524060034d + "'", double75 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.9755634976417653d + "'", double76 == 0.9755634976417653d);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test1180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1180");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution42 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl43 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution42);
        double[] doubleArray49 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray54 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double55 = tTestImpl43.homoscedasticT(doubleArray49, doubleArray54);
        org.apache.commons.math.distribution.TDistribution tDistribution56 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl57 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution56);
        double[] doubleArray63 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray68 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double69 = tTestImpl57.homoscedasticT(doubleArray63, doubleArray68);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl71 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution73 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl74 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution73);
        double[] doubleArray80 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray85 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double86 = tTestImpl74.homoscedasticT(doubleArray80, doubleArray85);
        double double87 = tTestImpl71.tTest((double) (short) 100, doubleArray80);
        double double88 = tTestImpl57.t((double) 10.0f, doubleArray80);
        double double89 = tTestImpl0.pairedTTest(doubleArray49, doubleArray80);
        org.apache.commons.math.distribution.TDistribution tDistribution90 = null;
        tTestImpl0.setDistribution(tDistribution90);
        org.apache.commons.math.distribution.TDistribution tDistribution92 = null;
        tTestImpl0.setDistribution(tDistribution92);
        org.apache.commons.math.distribution.TDistribution tDistribution94 = null;
        tTestImpl0.setDistribution(tDistribution94);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary96 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary97 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double98 = tTestImpl0.tTest(statisticalSummary96, statisticalSummary97);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-0.405429217622299d) + "'", double55 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + (-0.405429217622299d) + "'", double69 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + (-0.405429217622299d) + "'", double86 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.01613264369976175d + "'", double87 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.5339796283719219d + "'", double88 == 0.5339796283719219d);
        org.junit.Assert.assertTrue(Double.isNaN(double89));
    }

    @Test
    public void test1181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1181");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        tTestImpl0.setDistribution(tDistribution58);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        tTestImpl0.setDistribution(tDistribution60);
        org.apache.commons.math.distribution.TDistribution tDistribution63 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl64 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution63);
        double[] doubleArray70 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray75 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double76 = tTestImpl64.homoscedasticT(doubleArray70, doubleArray75);
        double double77 = tTestImpl0.t((double) 0, doubleArray75);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary78 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary79 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double80 = tTestImpl0.homoscedasticT(statisticalSummary78, statisticalSummary79);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + (-0.405429217622299d) + "'", double76 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 1.3997215400947067d + "'", double77 == 1.3997215400947067d);
    }

    @Test
    public void test1182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1182");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        tTestImpl1.setDistribution(tDistribution4);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary7 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double8 = tTestImpl1.t((-0.5172120199559697d), statisticalSummary7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1183");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary3 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double4 = tTestImpl1.tTest(0.35800486798369846d, statisticalSummary3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1184");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.distribution.TDistribution tDistribution16 = null;
        tTestImpl1.setDistribution(tDistribution16);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        tTestImpl1.setDistribution(tDistribution18);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary21 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double22 = tTestImpl1.t((-0.09656583816243881d), statisticalSummary21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
    }

    @Test
    public void test1185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1185");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl22 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution21);
        double[] doubleArray28 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray33 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double34 = tTestImpl22.homoscedasticT(doubleArray28, doubleArray33);
        double double35 = tTestImpl0.t((double) 1L, doubleArray33);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl36 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray40 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution41 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution41);
        double[] doubleArray48 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray53 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double54 = tTestImpl42.homoscedasticT(doubleArray48, doubleArray53);
        double double55 = tTestImpl36.tTest(doubleArray40, doubleArray53);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl56 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray60 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl62 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution61);
        double[] doubleArray68 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray73 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double74 = tTestImpl62.homoscedasticT(doubleArray68, doubleArray73);
        double double75 = tTestImpl56.tTest(doubleArray60, doubleArray73);
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl78 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution77);
        double[] doubleArray84 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray89 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double90 = tTestImpl78.homoscedasticT(doubleArray84, doubleArray89);
        double double91 = tTestImpl56.t((double) 1L, doubleArray89);
        double double92 = tTestImpl0.pairedT(doubleArray53, doubleArray89);
        java.lang.Class<?> wildcardClass93 = doubleArray89.getClass();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-0.405429217622299d) + "'", double34 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.3573057358494125d + "'", double35 == 1.3573057358494125d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + (-0.405429217622299d) + "'", double54 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.2806531524060034d + "'", double55 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-0.405429217622299d) + "'", double74 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.2806531524060034d + "'", double75 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + (-0.405429217622299d) + "'", double90 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 1.3573057358494125d + "'", double91 == 1.3573057358494125d);
        org.junit.Assert.assertTrue(Double.isNaN(double92));
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1186");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl4 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution3);
        double[] doubleArray10 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray15 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double16 = tTestImpl4.homoscedasticT(doubleArray10, doubleArray15);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        org.apache.commons.math.distribution.TDistribution tDistribution37 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl38 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution37);
        double[] doubleArray44 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray49 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double50 = tTestImpl38.homoscedasticT(doubleArray44, doubleArray49);
        double double51 = tTestImpl4.t(doubleArray34, doubleArray49);
        double double52 = tTestImpl1.t((double) 10.0f, doubleArray49);
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        tTestImpl1.setDistribution(tDistribution53);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary55 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary56 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double57 = tTestImpl1.t(statisticalSummary55, statisticalSummary56);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + (-0.405429217622299d) + "'", double16 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + (-0.405429217622299d) + "'", double50 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.9755634976417653d + "'", double52 == 0.9755634976417653d);
    }

    @Test
    public void test1187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1187");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        tTestImpl3.setDistribution(tDistribution4);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution8 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl9 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution8);
        double[] doubleArray15 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray20 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double21 = tTestImpl9.homoscedasticT(doubleArray15, doubleArray20);
        double double22 = tTestImpl6.tTest((double) (short) 100, doubleArray15);
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution24);
        double[] doubleArray31 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray36 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double37 = tTestImpl25.homoscedasticT(doubleArray31, doubleArray36);
        double[] doubleArray45 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double46 = tTestImpl25.t((double) '4', doubleArray45);
        double double47 = tTestImpl6.tTest((double) (short) 100, doubleArray45);
        org.apache.commons.math.distribution.TDistribution tDistribution49 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl50 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution49);
        double[] doubleArray56 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray61 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double62 = tTestImpl50.homoscedasticT(doubleArray56, doubleArray61);
        double double63 = tTestImpl6.tTest((double) (byte) 1, doubleArray56);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl65 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution64);
        double[] doubleArray71 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray76 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double77 = tTestImpl65.homoscedasticT(doubleArray71, doubleArray76);
        double[] doubleArray85 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double86 = tTestImpl65.t((double) '4', doubleArray85);
        double double87 = tTestImpl3.t(doubleArray56, doubleArray85);
        double double88 = tTestImpl0.tTest((double) 0, doubleArray56);
        org.apache.commons.math.distribution.TDistribution tDistribution89 = null;
        tTestImpl0.setDistribution(tDistribution89);
        org.apache.commons.math.distribution.TDistribution tDistribution91 = null;
        tTestImpl0.setDistribution(tDistribution91);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary93 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary94 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean96 = tTestImpl0.tTest(statisticalSummary93, statisticalSummary94, (double) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 100.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-0.405429217622299d) + "'", double21 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.01613264369976175d + "'", double22 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-0.405429217622299d) + "'", double37 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-0.09656583816243881d) + "'", double46 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.07560555610353314d + "'", double47 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + (-0.405429217622299d) + "'", double62 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.3793626154059051d + "'", double63 == 0.3793626154059051d);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + (-0.405429217622299d) + "'", double77 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + (-0.09656583816243881d) + "'", double86 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + (-0.975807309953049d) + "'", double87 == (-0.975807309953049d));
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.35800486798369846d + "'", double88 == 0.35800486798369846d);
    }

    @Test
    public void test1188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1188");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl0.t((double) (short) 10, doubleArray22);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution41 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution41);
        double[] doubleArray48 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray53 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double54 = tTestImpl42.homoscedasticT(doubleArray48, doubleArray53);
        double double55 = tTestImpl39.tTest((double) (short) 100, doubleArray48);
        org.apache.commons.math.distribution.TDistribution tDistribution56 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl57 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution56);
        double[] doubleArray63 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray68 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double69 = tTestImpl57.homoscedasticT(doubleArray63, doubleArray68);
        double double70 = tTestImpl0.pairedT(doubleArray48, doubleArray63);
        org.apache.commons.math.distribution.TDistribution tDistribution71 = null;
        tTestImpl0.setDistribution(tDistribution71);
        org.apache.commons.math.distribution.TDistribution tDistribution73 = null;
        tTestImpl0.setDistribution(tDistribution73);
        org.apache.commons.math.distribution.TDistribution tDistribution75 = null;
        tTestImpl0.setDistribution(tDistribution75);
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        tTestImpl0.setDistribution(tDistribution77);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary79 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary80 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean82 = tTestImpl0.tTest(statisticalSummary79, statisticalSummary80, (double) 100.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 100.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 3.8d + "'", double38 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + (-0.405429217622299d) + "'", double54 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.01613264369976175d + "'", double55 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + (-0.405429217622299d) + "'", double69 == (-0.405429217622299d));
        org.junit.Assert.assertTrue(Double.isNaN(double70));
    }

    @Test
    public void test1189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1189");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl21.tTest((double) (short) 100, doubleArray30);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray43 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution44 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl45 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution44);
        double[] doubleArray51 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray56 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double57 = tTestImpl45.homoscedasticT(doubleArray51, doubleArray56);
        double double58 = tTestImpl39.tTest(doubleArray43, doubleArray56);
        double double59 = tTestImpl21.t((double) (short) 10, doubleArray43);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl60 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl63 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution62);
        double[] doubleArray69 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray74 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double75 = tTestImpl63.homoscedasticT(doubleArray69, doubleArray74);
        double double76 = tTestImpl60.tTest((double) (short) 100, doubleArray69);
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl78 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution77);
        double[] doubleArray84 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray89 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double90 = tTestImpl78.homoscedasticT(doubleArray84, doubleArray89);
        double double91 = tTestImpl21.pairedT(doubleArray69, doubleArray84);
        double double92 = tTestImpl0.t((double) (short) 0, doubleArray84);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary93 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary94 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean96 = tTestImpl0.tTest(statisticalSummary93, statisticalSummary94, 0.8463073355328574d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.8463073355328574");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.01613264369976175d + "'", double37 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-0.405429217622299d) + "'", double57 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.2806531524060034d + "'", double58 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 3.8d + "'", double59 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + (-0.405429217622299d) + "'", double75 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.01613264369976175d + "'", double76 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + (-0.405429217622299d) + "'", double90 == (-0.405429217622299d));
        org.junit.Assert.assertTrue(Double.isNaN(double91));
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 1.0377339947605275d + "'", double92 == 1.0377339947605275d);
    }

    @Test
    public void test1190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1190");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl0.t((double) (short) 10, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl55 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl58 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution57);
        double[] doubleArray64 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray69 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double70 = tTestImpl58.homoscedasticT(doubleArray64, doubleArray69);
        double double71 = tTestImpl55.tTest((double) (short) 100, doubleArray64);
        double double72 = tTestImpl41.t((double) 10.0f, doubleArray64);
        boolean boolean74 = tTestImpl0.tTest(0.12673187601587688d, doubleArray64, 0.01613264369976175d);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl76 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray80 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution81 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl82 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution81);
        double[] doubleArray88 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray93 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double94 = tTestImpl82.homoscedasticT(doubleArray88, doubleArray93);
        double double95 = tTestImpl76.tTest(doubleArray80, doubleArray93);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean97 = tTestImpl0.tTest(0.9755634976417653d, doubleArray93, (double) 0.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 3.8d + "'", double38 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + (-0.405429217622299d) + "'", double70 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.01613264369976175d + "'", double71 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.5339796283719219d + "'", double72 == 0.5339796283719219d);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + (-0.405429217622299d) + "'", double94 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 0.2806531524060034d + "'", double95 == 0.2806531524060034d);
    }

    @Test
    public void test1191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1191");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        tTestImpl1.setDistribution(tDistribution39);
        org.apache.commons.math.distribution.TDistribution tDistribution41 = null;
        tTestImpl1.setDistribution(tDistribution41);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary44 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double45 = tTestImpl1.t(0.8463073355328574d, statisticalSummary44);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
    }

    @Test
    public void test1192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1192");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl2 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray6 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution7 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl8 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution7);
        double[] doubleArray14 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray19 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double20 = tTestImpl8.homoscedasticT(doubleArray14, doubleArray19);
        double double21 = tTestImpl2.tTest(doubleArray6, doubleArray19);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl2.setDistribution(tDistribution22);
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution24);
        double[] doubleArray31 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray36 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double37 = tTestImpl25.homoscedasticT(doubleArray31, doubleArray36);
        double[] doubleArray45 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double46 = tTestImpl25.t((double) '4', doubleArray45);
        org.apache.commons.math.distribution.TDistribution tDistribution47 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl48 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution47);
        double[] doubleArray54 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray59 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double60 = tTestImpl48.homoscedasticT(doubleArray54, doubleArray59);
        double double61 = tTestImpl2.t(doubleArray45, doubleArray59);
        boolean boolean63 = tTestImpl0.tTest((double) (short) 1, doubleArray59, 0.405429217622299d);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary64 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary65 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean67 = tTestImpl0.tTest(statisticalSummary64, statisticalSummary65, (double) (-1L));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -1.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-0.405429217622299d) + "'", double20 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.2806531524060034d + "'", double21 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-0.405429217622299d) + "'", double37 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-0.09656583816243881d) + "'", double46 == (-0.09656583816243881d));
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + (-0.405429217622299d) + "'", double60 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.5172120199559697d + "'", double61 == 0.5172120199559697d);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
    }

    @Test
    public void test1193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1193");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        tTestImpl0.setDistribution(tDistribution17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl34 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray38 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl40 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution39);
        double[] doubleArray46 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray51 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double52 = tTestImpl40.homoscedasticT(doubleArray46, doubleArray51);
        double double53 = tTestImpl34.tTest(doubleArray38, doubleArray51);
        org.apache.commons.math.distribution.TDistribution tDistribution54 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl55 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution54);
        double[] doubleArray61 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray66 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double67 = tTestImpl55.homoscedasticT(doubleArray61, doubleArray66);
        double double68 = tTestImpl21.t(doubleArray51, doubleArray66);
        double double69 = tTestImpl0.t(1.3965146696271626d, doubleArray66);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary70 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary71 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean73 = tTestImpl0.tTest(statisticalSummary70, statisticalSummary71, (double) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 35.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-0.405429217622299d) + "'", double52 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.2806531524060034d + "'", double53 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + (-0.405429217622299d) + "'", double67 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.3404872472421194d + "'", double69 == 1.3404872472421194d);
    }

    @Test
    public void test1194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1194");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution42 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl43 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution42);
        double[] doubleArray49 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray54 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double55 = tTestImpl43.homoscedasticT(doubleArray49, doubleArray54);
        org.apache.commons.math.distribution.TDistribution tDistribution56 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl57 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution56);
        double[] doubleArray63 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray68 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double69 = tTestImpl57.homoscedasticT(doubleArray63, doubleArray68);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl71 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution73 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl74 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution73);
        double[] doubleArray80 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray85 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double86 = tTestImpl74.homoscedasticT(doubleArray80, doubleArray85);
        double double87 = tTestImpl71.tTest((double) (short) 100, doubleArray80);
        double double88 = tTestImpl57.t((double) 10.0f, doubleArray80);
        double double89 = tTestImpl0.pairedTTest(doubleArray49, doubleArray80);
        org.apache.commons.math.distribution.TDistribution tDistribution90 = null;
        tTestImpl0.setDistribution(tDistribution90);
        org.apache.commons.math.distribution.TDistribution tDistribution92 = null;
        tTestImpl0.setDistribution(tDistribution92);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary94 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary95 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double96 = tTestImpl0.tTest(statisticalSummary94, statisticalSummary95);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-0.405429217622299d) + "'", double55 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + (-0.405429217622299d) + "'", double69 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + (-0.405429217622299d) + "'", double86 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.01613264369976175d + "'", double87 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.5339796283719219d + "'", double88 == 0.5339796283719219d);
        org.junit.Assert.assertTrue(Double.isNaN(double89));
    }

    @Test
    public void test1195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1195");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution42 = null;
        tTestImpl0.setDistribution(tDistribution42);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary45 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double46 = tTestImpl0.t(0.01613264369976175d, statisticalSummary45);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
    }

    @Test
    public void test1196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1196");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary5 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean7 = tTestImpl1.tTest((double) ' ', statisticalSummary5, 0.5339796283719219d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.5339796283719219");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1197");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl0.t((double) (short) 10, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl55 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl58 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution57);
        double[] doubleArray64 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray69 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double70 = tTestImpl58.homoscedasticT(doubleArray64, doubleArray69);
        double double71 = tTestImpl55.tTest((double) (short) 100, doubleArray64);
        double double72 = tTestImpl41.t((double) 10.0f, doubleArray64);
        boolean boolean74 = tTestImpl0.tTest(0.12673187601587688d, doubleArray64, 0.01613264369976175d);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary75 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary76 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double77 = tTestImpl0.homoscedasticT(statisticalSummary75, statisticalSummary76);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 3.8d + "'", double38 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + (-0.405429217622299d) + "'", double70 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.01613264369976175d + "'", double71 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.5339796283719219d + "'", double72 == 0.5339796283719219d);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test1198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1198");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution1 = null;
        tTestImpl0.setDistribution(tDistribution1);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        tTestImpl0.setDistribution(tDistribution3);
        org.apache.commons.math.distribution.TDistribution tDistribution6 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl7 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution6);
        double[] doubleArray13 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray18 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double19 = tTestImpl7.homoscedasticT(doubleArray13, doubleArray18);
        double double20 = tTestImpl0.t(3.8d, doubleArray13);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        tTestImpl0.setDistribution(tDistribution21);
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        tTestImpl0.setDistribution(tDistribution23);
        java.lang.Class<?> wildcardClass25 = tTestImpl0.getClass();
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-0.405429217622299d) + "'", double19 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.8463073355328574d + "'", double20 == 0.8463073355328574d);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test1199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1199");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl22 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution21);
        double[] doubleArray28 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray33 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double34 = tTestImpl22.homoscedasticT(doubleArray28, doubleArray33);
        org.apache.commons.math.distribution.TDistribution tDistribution35 = null;
        tTestImpl22.setDistribution(tDistribution35);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl38 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray42 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl38.tTest(doubleArray42, doubleArray55);
        double double58 = tTestImpl22.t(10.0d, doubleArray42);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl61 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution60);
        double[] doubleArray67 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray72 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double73 = tTestImpl61.homoscedasticT(doubleArray67, doubleArray72);
        double double74 = tTestImpl22.t(100.0d, doubleArray72);
        double double75 = tTestImpl0.t((double) 0L, doubleArray72);
        org.apache.commons.math.distribution.TDistribution tDistribution76 = null;
        tTestImpl0.setDistribution(tDistribution76);
        java.lang.Class<?> wildcardClass78 = tTestImpl0.getClass();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-0.405429217622299d) + "'", double34 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.2806531524060034d + "'", double57 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 3.8d + "'", double58 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + (-0.405429217622299d) + "'", double73 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-2.8418588844347075d) + "'", double74 == (-2.8418588844347075d));
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 1.3997215400947067d + "'", double75 == 1.3997215400947067d);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test1200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1200");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution42 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl43 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution42);
        double[] doubleArray49 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray54 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double55 = tTestImpl43.homoscedasticT(doubleArray49, doubleArray54);
        org.apache.commons.math.distribution.TDistribution tDistribution56 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl57 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution56);
        double[] doubleArray63 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray68 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double69 = tTestImpl57.homoscedasticT(doubleArray63, doubleArray68);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl71 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution73 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl74 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution73);
        double[] doubleArray80 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray85 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double86 = tTestImpl74.homoscedasticT(doubleArray80, doubleArray85);
        double double87 = tTestImpl71.tTest((double) (short) 100, doubleArray80);
        double double88 = tTestImpl57.t((double) 10.0f, doubleArray80);
        double double89 = tTestImpl0.pairedTTest(doubleArray49, doubleArray80);
        org.apache.commons.math.distribution.TDistribution tDistribution90 = null;
        tTestImpl0.setDistribution(tDistribution90);
        org.apache.commons.math.distribution.TDistribution tDistribution92 = null;
        tTestImpl0.setDistribution(tDistribution92);
        org.apache.commons.math.distribution.TDistribution tDistribution94 = null;
        tTestImpl0.setDistribution(tDistribution94);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary96 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary97 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean99 = tTestImpl0.tTest(statisticalSummary96, statisticalSummary97, (double) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 10.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-0.405429217622299d) + "'", double55 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + (-0.405429217622299d) + "'", double69 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + (-0.405429217622299d) + "'", double86 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.01613264369976175d + "'", double87 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.5339796283719219d + "'", double88 == 0.5339796283719219d);
        org.junit.Assert.assertTrue(Double.isNaN(double89));
    }

    @Test
    public void test1201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1201");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        double double37 = tTestImpl1.t(10.0d, doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution38 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution38);
        double[] doubleArray45 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray50 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double51 = tTestImpl39.homoscedasticT(doubleArray45, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution52 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl53 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution52);
        double[] doubleArray59 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray64 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double65 = tTestImpl53.homoscedasticT(doubleArray59, doubleArray64);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl67 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution69 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl70 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution69);
        double[] doubleArray76 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray81 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double82 = tTestImpl70.homoscedasticT(doubleArray76, doubleArray81);
        double double83 = tTestImpl67.tTest((double) (short) 100, doubleArray76);
        double double84 = tTestImpl53.t((double) 10.0f, doubleArray76);
        double double85 = tTestImpl1.homoscedasticT(doubleArray50, doubleArray76);
        org.apache.commons.math.distribution.TDistribution tDistribution86 = null;
        tTestImpl1.setDistribution(tDistribution86);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary88 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary89 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double90 = tTestImpl1.tTest(statisticalSummary88, statisticalSummary89);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 3.8d + "'", double37 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + (-0.405429217622299d) + "'", double51 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + (-0.405429217622299d) + "'", double65 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + (-0.405429217622299d) + "'", double82 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.01613264369976175d + "'", double83 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.5339796283719219d + "'", double84 == 0.5339796283719219d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.405429217622299d + "'", double85 == 0.405429217622299d);
    }

    @Test
    public void test1202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1202");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl1.t((-0.975807309953049d), doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl1.setDistribution(tDistribution55);
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        tTestImpl1.setDistribution(tDistribution57);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl60 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray64 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution65 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl66 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution65);
        double[] doubleArray72 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray77 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double78 = tTestImpl66.homoscedasticT(doubleArray72, doubleArray77);
        double double79 = tTestImpl60.tTest(doubleArray64, doubleArray77);
        double double80 = tTestImpl1.t((double) 0, doubleArray77);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary82 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double83 = tTestImpl1.t((double) 10.0f, statisticalSummary82);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.4411111919348023d + "'", double54 == 1.4411111919348023d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + (-0.405429217622299d) + "'", double78 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.2806531524060034d + "'", double79 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 1.3997215400947067d + "'", double80 == 1.3997215400947067d);
    }

    @Test
    public void test1203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1203");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl1.t((-0.975807309953049d), doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl1.setDistribution(tDistribution55);
        java.lang.Class<?> wildcardClass57 = tTestImpl1.getClass();
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.4411111919348023d + "'", double54 == 1.4411111919348023d);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test1204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1204");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        double[] doubleArray48 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double49 = tTestImpl0.tTest(0.405429217622299d, doubleArray48);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl51 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution52 = null;
        tTestImpl51.setDistribution(tDistribution52);
        org.apache.commons.math.distribution.TDistribution tDistribution54 = null;
        tTestImpl51.setDistribution(tDistribution54);
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl58 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution57);
        double[] doubleArray64 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray69 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double70 = tTestImpl58.homoscedasticT(doubleArray64, doubleArray69);
        double double71 = tTestImpl51.t(3.8d, doubleArray64);
        double double72 = tTestImpl0.t(1.088109431399388d, doubleArray64);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary73 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary74 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double75 = tTestImpl0.homoscedasticTTest(statisticalSummary73, statisticalSummary74);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.1143321549278642d + "'", double49 == 0.1143321549278642d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + (-0.405429217622299d) + "'", double70 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.8463073355328574d + "'", double71 == 0.8463073355328574d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.982920007042921d + "'", double72 == 0.982920007042921d);
    }

    @Test
    public void test1205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1205");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl54 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray58 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution59 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl60 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution59);
        double[] doubleArray66 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray71 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double72 = tTestImpl60.homoscedasticT(doubleArray66, doubleArray71);
        double double73 = tTestImpl54.tTest(doubleArray58, doubleArray71);
        org.apache.commons.math.distribution.TDistribution tDistribution74 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl75 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution74);
        double[] doubleArray81 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray86 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double87 = tTestImpl75.homoscedasticT(doubleArray81, doubleArray86);
        double double88 = tTestImpl41.t(doubleArray71, doubleArray86);
        double double89 = tTestImpl1.t((double) 0.0f, doubleArray86);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary91 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean93 = tTestImpl1.tTest((double) 100, statisticalSummary91, 3.8d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 3.8");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + (-0.405429217622299d) + "'", double72 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.2806531524060034d + "'", double73 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + (-0.405429217622299d) + "'", double87 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.0d + "'", double88 == 0.0d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 1.3997215400947067d + "'", double89 == 1.3997215400947067d);
    }

    @Test
    public void test1206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1206");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution17);
        double[] doubleArray24 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray29 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double30 = tTestImpl18.homoscedasticT(doubleArray24, doubleArray29);
        double double31 = tTestImpl15.tTest((double) (short) 100, doubleArray24);
        org.apache.commons.math.distribution.TDistribution tDistribution33 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl34 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution33);
        double[] doubleArray40 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray45 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double46 = tTestImpl34.homoscedasticT(doubleArray40, doubleArray45);
        double[] doubleArray54 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double55 = tTestImpl34.t((double) '4', doubleArray54);
        double double56 = tTestImpl15.tTest((double) (short) 100, doubleArray54);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl59 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution58);
        double[] doubleArray65 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray70 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double71 = tTestImpl59.homoscedasticT(doubleArray65, doubleArray70);
        double double72 = tTestImpl15.tTest((double) (byte) 1, doubleArray65);
        org.apache.commons.math.distribution.TDistribution tDistribution73 = null;
        tTestImpl15.setDistribution(tDistribution73);
        org.apache.commons.math.distribution.TDistribution tDistribution75 = null;
        tTestImpl15.setDistribution(tDistribution75);
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        tTestImpl15.setDistribution(tDistribution77);
        org.apache.commons.math.distribution.TDistribution tDistribution79 = null;
        tTestImpl15.setDistribution(tDistribution79);
        org.apache.commons.math.distribution.TDistribution tDistribution81 = null;
        tTestImpl15.setDistribution(tDistribution81);
        double[] doubleArray89 = new double[] { (-2.8418588844347075d), 100.0f, (-1.0f), 0.35800486798369846d, 0.01613264369976175d };
        double double90 = tTestImpl15.t((double) (short) 0, doubleArray89);
        double double91 = tTestImpl1.t(0.5339796283719219d, doubleArray89);
        org.apache.commons.math.distribution.TDistribution tDistribution92 = null;
        tTestImpl1.setDistribution(tDistribution92);
        org.apache.commons.math.distribution.TDistribution tDistribution94 = null;
        tTestImpl1.setDistribution(tDistribution94);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary97 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double98 = tTestImpl1.tTest((double) (short) 0, statisticalSummary97);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-0.405429217622299d) + "'", double30 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.01613264369976175d + "'", double31 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-0.405429217622299d) + "'", double46 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-0.09656583816243881d) + "'", double55 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.07560555610353314d + "'", double56 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + (-0.405429217622299d) + "'", double71 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.3793626154059051d + "'", double72 == 0.3793626154059051d);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[-2.8418588844347075, 100.0, -1.0, 0.35800486798369846, 0.01613264369976175]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.9566618438474437d + "'", double90 == 0.9566618438474437d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.9302024075262618d + "'", double91 == 0.9302024075262618d);
    }

    @Test
    public void test1207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1207");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl1.t((-0.975807309953049d), doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl1.setDistribution(tDistribution55);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary58 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean60 = tTestImpl1.tTest(4.442799675467754d, statisticalSummary58, 0.5172120199559697d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.5172120199559697");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.4411111919348023d + "'", double54 == 1.4411111919348023d);
    }

    @Test
    public void test1208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1208");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution44 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl45 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution44);
        double[] doubleArray51 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray56 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double57 = tTestImpl45.homoscedasticT(doubleArray51, doubleArray56);
        double double58 = tTestImpl42.tTest((double) (short) 100, doubleArray51);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl61 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution60);
        double[] doubleArray67 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray72 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double73 = tTestImpl61.homoscedasticT(doubleArray67, doubleArray72);
        double[] doubleArray81 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double82 = tTestImpl61.t((double) '4', doubleArray81);
        double double83 = tTestImpl42.tTest((double) (short) 100, doubleArray81);
        double[] doubleArray89 = new double[] { 1.0f, (-0.09656583816243881d), ' ', 0.8463073355328574d, 1.3965146696271626d };
        double double90 = tTestImpl0.homoscedasticTTest(doubleArray81, doubleArray89);
        org.apache.commons.math.distribution.TDistribution tDistribution91 = null;
        tTestImpl0.setDistribution(tDistribution91);
        java.lang.Class<?> wildcardClass93 = tTestImpl0.getClass();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-0.405429217622299d) + "'", double57 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.01613264369976175d + "'", double58 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + (-0.405429217622299d) + "'", double73 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + (-0.09656583816243881d) + "'", double82 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.07560555610353314d + "'", double83 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[1.0, -0.09656583816243881, 32.0, 0.8463073355328574, 1.3965146696271626]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.12673187601587688d + "'", double90 == 0.12673187601587688d);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1209");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        double double37 = tTestImpl1.t(10.0d, doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl40 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution39);
        double[] doubleArray46 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray51 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double52 = tTestImpl40.homoscedasticT(doubleArray46, doubleArray51);
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        tTestImpl40.setDistribution(tDistribution53);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl56 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray60 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl62 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution61);
        double[] doubleArray68 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray73 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double74 = tTestImpl62.homoscedasticT(doubleArray68, doubleArray73);
        double double75 = tTestImpl56.tTest(doubleArray60, doubleArray73);
        double double76 = tTestImpl40.t(10.0d, doubleArray60);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean78 = tTestImpl1.tTest((double) (byte) 100, doubleArray60, 0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 3.8d + "'", double37 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-0.405429217622299d) + "'", double52 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-0.405429217622299d) + "'", double74 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.2806531524060034d + "'", double75 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 3.8d + "'", double76 == 3.8d);
    }

    @Test
    public void test1210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1210");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.distribution.TDistribution tDistribution16 = null;
        tTestImpl1.setDistribution(tDistribution16);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        tTestImpl1.setDistribution(tDistribution18);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl1.setDistribution(tDistribution20);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary22 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary23 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double24 = tTestImpl1.homoscedasticT(statisticalSummary22, statisticalSummary23);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
    }

    @Test
    public void test1211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1211");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        tTestImpl0.setDistribution(tDistribution58);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        tTestImpl0.setDistribution(tDistribution60);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        tTestImpl0.setDistribution(tDistribution62);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        tTestImpl0.setDistribution(tDistribution64);
        org.apache.commons.math.distribution.TDistribution tDistribution66 = null;
        tTestImpl0.setDistribution(tDistribution66);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary69 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean71 = tTestImpl0.tTest((double) (byte) 1, statisticalSummary69, 0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
    }

    @Test
    public void test1212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1212");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary4 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary5 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean7 = tTestImpl1.tTest(statisticalSummary4, statisticalSummary5, (double) 100.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 100.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1213");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.distribution.TDistribution tDistribution16 = null;
        tTestImpl1.setDistribution(tDistribution16);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary19 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean21 = tTestImpl1.tTest((-2.2d), statisticalSummary19, (double) 1L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 1.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
    }

    @Test
    public void test1214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1214");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary3 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double4 = tTestImpl1.t((double) (-1.0f), statisticalSummary3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1215");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        tTestImpl0.setDistribution(tDistribution58);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        tTestImpl0.setDistribution(tDistribution60);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        tTestImpl0.setDistribution(tDistribution62);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        tTestImpl0.setDistribution(tDistribution64);
        java.lang.Class<?> wildcardClass66 = tTestImpl0.getClass();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test1216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1216");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl21.tTest((double) (short) 100, doubleArray30);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray43 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution44 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl45 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution44);
        double[] doubleArray51 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray56 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double57 = tTestImpl45.homoscedasticT(doubleArray51, doubleArray56);
        double double58 = tTestImpl39.tTest(doubleArray43, doubleArray56);
        double double59 = tTestImpl21.t((double) (short) 10, doubleArray43);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl60 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl63 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution62);
        double[] doubleArray69 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray74 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double75 = tTestImpl63.homoscedasticT(doubleArray69, doubleArray74);
        double double76 = tTestImpl60.tTest((double) (short) 100, doubleArray69);
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl78 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution77);
        double[] doubleArray84 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray89 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double90 = tTestImpl78.homoscedasticT(doubleArray84, doubleArray89);
        double double91 = tTestImpl21.pairedT(doubleArray69, doubleArray84);
        double double92 = tTestImpl0.t((double) (short) 0, doubleArray84);
        org.apache.commons.math.distribution.TDistribution tDistribution93 = null;
        tTestImpl0.setDistribution(tDistribution93);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary96 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double97 = tTestImpl0.t((-0.5172120199559697d), statisticalSummary96);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.01613264369976175d + "'", double37 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-0.405429217622299d) + "'", double57 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.2806531524060034d + "'", double58 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 3.8d + "'", double59 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + (-0.405429217622299d) + "'", double75 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.01613264369976175d + "'", double76 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + (-0.405429217622299d) + "'", double90 == (-0.405429217622299d));
        org.junit.Assert.assertTrue(Double.isNaN(double91));
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 1.0377339947605275d + "'", double92 == 1.0377339947605275d);
    }

    @Test
    public void test1217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1217");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        double double37 = tTestImpl1.t(10.0d, doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution38 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution38);
        double[] doubleArray45 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray50 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double51 = tTestImpl39.homoscedasticT(doubleArray45, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution52 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl53 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution52);
        double[] doubleArray59 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray64 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double65 = tTestImpl53.homoscedasticT(doubleArray59, doubleArray64);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl67 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution69 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl70 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution69);
        double[] doubleArray76 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray81 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double82 = tTestImpl70.homoscedasticT(doubleArray76, doubleArray81);
        double double83 = tTestImpl67.tTest((double) (short) 100, doubleArray76);
        double double84 = tTestImpl53.t((double) 10.0f, doubleArray76);
        double double85 = tTestImpl1.homoscedasticT(doubleArray50, doubleArray76);
        org.apache.commons.math.distribution.TDistribution tDistribution86 = null;
        tTestImpl1.setDistribution(tDistribution86);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary88 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary89 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean91 = tTestImpl1.tTest(statisticalSummary88, statisticalSummary89, 0.9566618438474437d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.9566618438474437");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 3.8d + "'", double37 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + (-0.405429217622299d) + "'", double51 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + (-0.405429217622299d) + "'", double65 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + (-0.405429217622299d) + "'", double82 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.01613264369976175d + "'", double83 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.5339796283719219d + "'", double84 == 0.5339796283719219d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.405429217622299d + "'", double85 == 0.405429217622299d);
    }

    @Test
    public void test1218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1218");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl54 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray58 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution59 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl60 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution59);
        double[] doubleArray66 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray71 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double72 = tTestImpl60.homoscedasticT(doubleArray66, doubleArray71);
        double double73 = tTestImpl54.tTest(doubleArray58, doubleArray71);
        org.apache.commons.math.distribution.TDistribution tDistribution74 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl75 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution74);
        double[] doubleArray81 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray86 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double87 = tTestImpl75.homoscedasticT(doubleArray81, doubleArray86);
        double double88 = tTestImpl41.t(doubleArray71, doubleArray86);
        double double89 = tTestImpl1.t((double) 0.0f, doubleArray86);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary91 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean93 = tTestImpl1.tTest((-1.587268255506484d), statisticalSummary91, 0.12673187601587688d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + (-0.405429217622299d) + "'", double72 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.2806531524060034d + "'", double73 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + (-0.405429217622299d) + "'", double87 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.0d + "'", double88 == 0.0d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 1.3997215400947067d + "'", double89 == 1.3997215400947067d);
    }

    @Test
    public void test1219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1219");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        org.apache.commons.math.distribution.TDistribution tDistribution34 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl35 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution34);
        double[] doubleArray41 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray46 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double47 = tTestImpl35.homoscedasticT(doubleArray41, doubleArray46);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl48 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray52 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl54 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution53);
        double[] doubleArray60 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray65 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double66 = tTestImpl54.homoscedasticT(doubleArray60, doubleArray65);
        double double67 = tTestImpl48.tTest(doubleArray52, doubleArray65);
        org.apache.commons.math.distribution.TDistribution tDistribution68 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl69 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution68);
        double[] doubleArray75 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray80 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double81 = tTestImpl69.homoscedasticT(doubleArray75, doubleArray80);
        double double82 = tTestImpl35.t(doubleArray65, doubleArray80);
        double double83 = tTestImpl0.homoscedasticT(doubleArray27, doubleArray80);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary85 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double86 = tTestImpl0.tTest((double) 1L, statisticalSummary85);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + (-0.405429217622299d) + "'", double47 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + (-0.405429217622299d) + "'", double66 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.2806531524060034d + "'", double67 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + (-0.405429217622299d) + "'", double81 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + (-0.405429217622299d) + "'", double83 == (-0.405429217622299d));
    }

    @Test
    public void test1220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1220");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl4 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution3);
        double[] doubleArray10 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray15 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double16 = tTestImpl4.homoscedasticT(doubleArray10, doubleArray15);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        org.apache.commons.math.distribution.TDistribution tDistribution37 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl38 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution37);
        double[] doubleArray44 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray49 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double50 = tTestImpl38.homoscedasticT(doubleArray44, doubleArray49);
        double double51 = tTestImpl4.t(doubleArray34, doubleArray49);
        double double52 = tTestImpl1.t((double) 10.0f, doubleArray49);
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        tTestImpl1.setDistribution(tDistribution53);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl56 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray60 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl62 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution61);
        double[] doubleArray68 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray73 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double74 = tTestImpl62.homoscedasticT(doubleArray68, doubleArray73);
        double double75 = tTestImpl56.tTest(doubleArray60, doubleArray73);
        double double76 = tTestImpl1.t((double) 10L, doubleArray73);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary78 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double79 = tTestImpl1.tTest((-0.5172120199559697d), statisticalSummary78);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + (-0.405429217622299d) + "'", double16 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + (-0.405429217622299d) + "'", double50 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.9755634976417653d + "'", double52 == 0.9755634976417653d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-0.405429217622299d) + "'", double74 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.2806531524060034d + "'", double75 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.9755634976417653d + "'", double76 == 0.9755634976417653d);
    }

    @Test
    public void test1221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1221");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        tTestImpl3.setDistribution(tDistribution4);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution8 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl9 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution8);
        double[] doubleArray15 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray20 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double21 = tTestImpl9.homoscedasticT(doubleArray15, doubleArray20);
        double double22 = tTestImpl6.tTest((double) (short) 100, doubleArray15);
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution24);
        double[] doubleArray31 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray36 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double37 = tTestImpl25.homoscedasticT(doubleArray31, doubleArray36);
        double[] doubleArray45 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double46 = tTestImpl25.t((double) '4', doubleArray45);
        double double47 = tTestImpl6.tTest((double) (short) 100, doubleArray45);
        org.apache.commons.math.distribution.TDistribution tDistribution49 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl50 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution49);
        double[] doubleArray56 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray61 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double62 = tTestImpl50.homoscedasticT(doubleArray56, doubleArray61);
        double double63 = tTestImpl6.tTest((double) (byte) 1, doubleArray56);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl65 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution64);
        double[] doubleArray71 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray76 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double77 = tTestImpl65.homoscedasticT(doubleArray71, doubleArray76);
        double[] doubleArray85 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double86 = tTestImpl65.t((double) '4', doubleArray85);
        double double87 = tTestImpl3.t(doubleArray56, doubleArray85);
        double double88 = tTestImpl0.tTest((double) 0, doubleArray56);
        org.apache.commons.math.distribution.TDistribution tDistribution89 = null;
        tTestImpl0.setDistribution(tDistribution89);
        org.apache.commons.math.distribution.TDistribution tDistribution91 = null;
        tTestImpl0.setDistribution(tDistribution91);
        java.lang.Class<?> wildcardClass93 = tTestImpl0.getClass();
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-0.405429217622299d) + "'", double21 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.01613264369976175d + "'", double22 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-0.405429217622299d) + "'", double37 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-0.09656583816243881d) + "'", double46 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.07560555610353314d + "'", double47 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + (-0.405429217622299d) + "'", double62 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.3793626154059051d + "'", double63 == 0.3793626154059051d);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + (-0.405429217622299d) + "'", double77 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + (-0.09656583816243881d) + "'", double86 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + (-0.975807309953049d) + "'", double87 == (-0.975807309953049d));
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.35800486798369846d + "'", double88 == 0.35800486798369846d);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1222");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl1.t((-0.975807309953049d), doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl1.setDistribution(tDistribution55);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary58 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double59 = tTestImpl1.t(0.1143321549278642d, statisticalSummary58);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.4411111919348023d + "'", double54 == 1.4411111919348023d);
    }

    @Test
    public void test1223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1223");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl0.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double[] doubleArray43 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double44 = tTestImpl23.t((double) '4', doubleArray43);
        org.apache.commons.math.distribution.TDistribution tDistribution45 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl46 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution45);
        double[] doubleArray52 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray57 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double58 = tTestImpl46.homoscedasticT(doubleArray52, doubleArray57);
        double double59 = tTestImpl0.t(doubleArray43, doubleArray57);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary61 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double62 = tTestImpl0.tTest((double) ' ', statisticalSummary61);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + (-0.09656583816243881d) + "'", double44 == (-0.09656583816243881d));
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + (-0.405429217622299d) + "'", double58 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.5172120199559697d + "'", double59 == 0.5172120199559697d);
    }

    @Test
    public void test1224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1224");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl1.t((-0.975807309953049d), doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl1.setDistribution(tDistribution55);
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        tTestImpl1.setDistribution(tDistribution57);
        org.apache.commons.math.distribution.TDistribution tDistribution59 = null;
        tTestImpl1.setDistribution(tDistribution59);
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        tTestImpl1.setDistribution(tDistribution61);
        double[] doubleArray68 = new double[] { 0.405429217622299d, (byte) -1, 10.0f, 0.5172120199559697d };
        double double69 = tTestImpl1.t(1.0377339947605275d, doubleArray68);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary71 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double72 = tTestImpl1.t((-0.4023317120818342d), statisticalSummary71);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.4411111919348023d + "'", double54 == 1.4411111919348023d);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[0.405429217622299, -1.0, 10.0, 0.5172120199559697]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.5703029263335007d + "'", double69 == 0.5703029263335007d);
    }

    @Test
    public void test1225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1225");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl22 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution21);
        double[] doubleArray28 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray33 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double34 = tTestImpl22.homoscedasticT(doubleArray28, doubleArray33);
        double double35 = tTestImpl0.t((double) 1L, doubleArray33);
        org.apache.commons.math.distribution.TDistribution tDistribution37 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl38 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution37);
        double[] doubleArray44 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray49 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double50 = tTestImpl38.homoscedasticT(doubleArray44, doubleArray49);
        double[] doubleArray58 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double59 = tTestImpl38.t((double) '4', doubleArray58);
        double double60 = tTestImpl0.t((double) (byte) 10, doubleArray58);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary61 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary62 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double63 = tTestImpl0.homoscedasticT(statisticalSummary61, statisticalSummary62);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-0.405429217622299d) + "'", double34 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.3573057358494125d + "'", double35 == 1.3573057358494125d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + (-0.405429217622299d) + "'", double50 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + (-0.09656583816243881d) + "'", double59 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.7753257939094542d + "'", double60 == 1.7753257939094542d);
    }

    @Test
    public void test1226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1226");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        double double37 = tTestImpl1.t(10.0d, doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution38 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution38);
        double[] doubleArray45 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray50 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double51 = tTestImpl39.homoscedasticT(doubleArray45, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution52 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl53 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution52);
        double[] doubleArray59 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray64 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double65 = tTestImpl53.homoscedasticT(doubleArray59, doubleArray64);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl67 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution69 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl70 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution69);
        double[] doubleArray76 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray81 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double82 = tTestImpl70.homoscedasticT(doubleArray76, doubleArray81);
        double double83 = tTestImpl67.tTest((double) (short) 100, doubleArray76);
        double double84 = tTestImpl53.t((double) 10.0f, doubleArray76);
        double double85 = tTestImpl1.homoscedasticT(doubleArray50, doubleArray76);
        org.apache.commons.math.distribution.TDistribution tDistribution86 = null;
        tTestImpl1.setDistribution(tDistribution86);
        org.apache.commons.math.distribution.TDistribution tDistribution88 = null;
        tTestImpl1.setDistribution(tDistribution88);
        org.apache.commons.math.distribution.TDistribution tDistribution90 = null;
        tTestImpl1.setDistribution(tDistribution90);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary92 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary93 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double94 = tTestImpl1.t(statisticalSummary92, statisticalSummary93);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 3.8d + "'", double37 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + (-0.405429217622299d) + "'", double51 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + (-0.405429217622299d) + "'", double65 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + (-0.405429217622299d) + "'", double82 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.01613264369976175d + "'", double83 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.5339796283719219d + "'", double84 == 0.5339796283719219d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.405429217622299d + "'", double85 == 0.405429217622299d);
    }

    @Test
    public void test1227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1227");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        org.apache.commons.math.distribution.TDistribution tDistribution34 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl35 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution34);
        double[] doubleArray41 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray46 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double47 = tTestImpl35.homoscedasticT(doubleArray41, doubleArray46);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl48 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray52 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl54 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution53);
        double[] doubleArray60 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray65 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double66 = tTestImpl54.homoscedasticT(doubleArray60, doubleArray65);
        double double67 = tTestImpl48.tTest(doubleArray52, doubleArray65);
        org.apache.commons.math.distribution.TDistribution tDistribution68 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl69 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution68);
        double[] doubleArray75 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray80 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double81 = tTestImpl69.homoscedasticT(doubleArray75, doubleArray80);
        double double82 = tTestImpl35.t(doubleArray65, doubleArray80);
        double double83 = tTestImpl0.homoscedasticT(doubleArray27, doubleArray80);
        org.apache.commons.math.distribution.TDistribution tDistribution84 = null;
        tTestImpl0.setDistribution(tDistribution84);
        org.apache.commons.math.distribution.TDistribution tDistribution86 = null;
        tTestImpl0.setDistribution(tDistribution86);
        org.apache.commons.math.distribution.TDistribution tDistribution88 = null;
        tTestImpl0.setDistribution(tDistribution88);
        org.apache.commons.math.distribution.TDistribution tDistribution90 = null;
        tTestImpl0.setDistribution(tDistribution90);
        org.apache.commons.math.distribution.TDistribution tDistribution92 = null;
        tTestImpl0.setDistribution(tDistribution92);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary94 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary95 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean97 = tTestImpl0.tTest(statisticalSummary94, statisticalSummary95, 0.5172120199559697d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.5172120199559697");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + (-0.405429217622299d) + "'", double47 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + (-0.405429217622299d) + "'", double66 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.2806531524060034d + "'", double67 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + (-0.405429217622299d) + "'", double81 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + (-0.405429217622299d) + "'", double83 == (-0.405429217622299d));
    }

    @Test
    public void test1228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1228");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl0.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl0.setDistribution(tDistribution22);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution27 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl28 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution27);
        double[] doubleArray34 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray39 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double40 = tTestImpl28.homoscedasticT(doubleArray34, doubleArray39);
        double double41 = tTestImpl25.tTest((double) (short) 100, doubleArray34);
        double double42 = tTestImpl0.t((double) (byte) 1, doubleArray34);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary43 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary44 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double45 = tTestImpl0.tTest(statisticalSummary43, statisticalSummary44);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.405429217622299d) + "'", double40 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.01613264369976175d + "'", double41 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.987358558121667d + "'", double42 == 0.987358558121667d);
    }

    @Test
    public void test1229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1229");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        tTestImpl1.setDistribution(tDistribution4);
        org.apache.commons.math.distribution.TDistribution tDistribution7 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl8 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution7);
        double[] doubleArray14 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray19 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double20 = tTestImpl8.homoscedasticT(doubleArray14, doubleArray19);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray25 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution26 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl27 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution26);
        double[] doubleArray33 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray38 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double39 = tTestImpl27.homoscedasticT(doubleArray33, doubleArray38);
        double double40 = tTestImpl21.tTest(doubleArray25, doubleArray38);
        org.apache.commons.math.distribution.TDistribution tDistribution41 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution41);
        double[] doubleArray48 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray53 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double54 = tTestImpl42.homoscedasticT(doubleArray48, doubleArray53);
        double double55 = tTestImpl8.t(doubleArray38, doubleArray53);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean57 = tTestImpl1.tTest(100.0d, doubleArray53, (double) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-0.405429217622299d) + "'", double20 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + (-0.405429217622299d) + "'", double39 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.2806531524060034d + "'", double40 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + (-0.405429217622299d) + "'", double54 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
    }

    @Test
    public void test1230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1230");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        double double37 = tTestImpl1.t(10.0d, doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution38 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution38);
        double[] doubleArray45 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray50 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double51 = tTestImpl39.homoscedasticT(doubleArray45, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution52 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl53 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution52);
        double[] doubleArray59 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray64 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double65 = tTestImpl53.homoscedasticT(doubleArray59, doubleArray64);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl67 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution69 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl70 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution69);
        double[] doubleArray76 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray81 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double82 = tTestImpl70.homoscedasticT(doubleArray76, doubleArray81);
        double double83 = tTestImpl67.tTest((double) (short) 100, doubleArray76);
        double double84 = tTestImpl53.t((double) 10.0f, doubleArray76);
        double double85 = tTestImpl1.homoscedasticT(doubleArray50, doubleArray76);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary87 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean89 = tTestImpl1.tTest((-1.1115227041167497d), statisticalSummary87, 0.35800486798369846d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 3.8d + "'", double37 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + (-0.405429217622299d) + "'", double51 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + (-0.405429217622299d) + "'", double65 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + (-0.405429217622299d) + "'", double82 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.01613264369976175d + "'", double83 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.5339796283719219d + "'", double84 == 0.5339796283719219d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.405429217622299d + "'", double85 == 0.405429217622299d);
    }

    @Test
    public void test1231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1231");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution1 = null;
        tTestImpl0.setDistribution(tDistribution1);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        tTestImpl0.setDistribution(tDistribution3);
        org.apache.commons.math.distribution.TDistribution tDistribution6 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl7 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution6);
        double[] doubleArray13 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray18 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double19 = tTestImpl7.homoscedasticT(doubleArray13, doubleArray18);
        double double20 = tTestImpl0.t(3.8d, doubleArray13);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        tTestImpl0.setDistribution(tDistribution21);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary24 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean26 = tTestImpl0.tTest((double) (byte) -1, statisticalSummary24, (-3.5d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -3.5");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-0.405429217622299d) + "'", double19 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.8463073355328574d + "'", double20 == 0.8463073355328574d);
    }

    @Test
    public void test1232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1232");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl1.t((-0.975807309953049d), doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl1.setDistribution(tDistribution55);
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        tTestImpl1.setDistribution(tDistribution57);
        org.apache.commons.math.distribution.TDistribution tDistribution59 = null;
        tTestImpl1.setDistribution(tDistribution59);
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        tTestImpl1.setDistribution(tDistribution61);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary63 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary64 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double65 = tTestImpl1.t(statisticalSummary63, statisticalSummary64);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.4411111919348023d + "'", double54 == 1.4411111919348023d);
    }

    @Test
    public void test1233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1233");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        tTestImpl0.setDistribution(tDistribution58);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        tTestImpl0.setDistribution(tDistribution60);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        tTestImpl0.setDistribution(tDistribution62);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        tTestImpl0.setDistribution(tDistribution64);
        org.apache.commons.math.distribution.TDistribution tDistribution66 = null;
        tTestImpl0.setDistribution(tDistribution66);
        double[] doubleArray74 = new double[] { (-2.8418588844347075d), 100.0f, (-1.0f), 0.35800486798369846d, 0.01613264369976175d };
        double double75 = tTestImpl0.t((double) (short) 0, doubleArray74);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl77 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray81 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution82 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl83 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution82);
        double[] doubleArray89 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray94 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double95 = tTestImpl83.homoscedasticT(doubleArray89, doubleArray94);
        double double96 = tTestImpl77.tTest(doubleArray81, doubleArray94);
        double double97 = tTestImpl0.t(0.0d, doubleArray81);
        java.lang.Class<?> wildcardClass98 = doubleArray81.getClass();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-2.8418588844347075, 100.0, -1.0, 0.35800486798369846, 0.01613264369976175]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.9566618438474437d + "'", double75 == 0.9566618438474437d);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray94), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + (-0.405429217622299d) + "'", double95 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 0.2806531524060034d + "'", double96 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 4.466666666666667d + "'", double97 == 4.466666666666667d);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test1234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1234");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl0.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl0.setDistribution(tDistribution22);
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        tTestImpl0.setDistribution(tDistribution24);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary27 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double28 = tTestImpl0.tTest((-1.0d), statisticalSummary27);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
    }

    @Test
    public void test1235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1235");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl0.t((double) (short) 10, doubleArray22);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution41 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution41);
        double[] doubleArray48 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray53 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double54 = tTestImpl42.homoscedasticT(doubleArray48, doubleArray53);
        double double55 = tTestImpl39.tTest((double) (short) 100, doubleArray48);
        org.apache.commons.math.distribution.TDistribution tDistribution56 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl57 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution56);
        double[] doubleArray63 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray68 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double69 = tTestImpl57.homoscedasticT(doubleArray63, doubleArray68);
        double double70 = tTestImpl0.pairedT(doubleArray48, doubleArray63);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary72 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean74 = tTestImpl0.tTest((-0.975807309953049d), statisticalSummary72, 0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 3.8d + "'", double38 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + (-0.405429217622299d) + "'", double54 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.01613264369976175d + "'", double55 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + (-0.405429217622299d) + "'", double69 == (-0.405429217622299d));
        org.junit.Assert.assertTrue(Double.isNaN(double70));
    }

    @Test
    public void test1236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1236");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        tTestImpl1.setDistribution(tDistribution4);
        org.apache.commons.math.distribution.TDistribution tDistribution6 = null;
        tTestImpl1.setDistribution(tDistribution6);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary9 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double10 = tTestImpl1.t(0.3793626154059051d, statisticalSummary9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1237");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl21.tTest((double) (short) 100, doubleArray30);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray43 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution44 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl45 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution44);
        double[] doubleArray51 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray56 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double57 = tTestImpl45.homoscedasticT(doubleArray51, doubleArray56);
        double double58 = tTestImpl39.tTest(doubleArray43, doubleArray56);
        double double59 = tTestImpl21.t((double) (short) 10, doubleArray43);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl60 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl63 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution62);
        double[] doubleArray69 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray74 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double75 = tTestImpl63.homoscedasticT(doubleArray69, doubleArray74);
        double double76 = tTestImpl60.tTest((double) (short) 100, doubleArray69);
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl78 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution77);
        double[] doubleArray84 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray89 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double90 = tTestImpl78.homoscedasticT(doubleArray84, doubleArray89);
        double double91 = tTestImpl21.pairedT(doubleArray69, doubleArray84);
        double double92 = tTestImpl0.t((double) (short) 0, doubleArray84);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary94 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean96 = tTestImpl0.tTest(0.1143321549278642d, statisticalSummary94, (double) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -1.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.01613264369976175d + "'", double37 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-0.405429217622299d) + "'", double57 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.2806531524060034d + "'", double58 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 3.8d + "'", double59 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + (-0.405429217622299d) + "'", double75 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.01613264369976175d + "'", double76 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + (-0.405429217622299d) + "'", double90 == (-0.405429217622299d));
        org.junit.Assert.assertTrue(Double.isNaN(double91));
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 1.0377339947605275d + "'", double92 == 1.0377339947605275d);
    }

    @Test
    public void test1238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1238");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        double[] doubleArray21 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double22 = tTestImpl1.t((double) '4', doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        tTestImpl1.setDistribution(tDistribution23);
        org.apache.commons.math.distribution.TDistribution tDistribution25 = null;
        tTestImpl1.setDistribution(tDistribution25);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary27 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary28 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double29 = tTestImpl1.homoscedasticTTest(statisticalSummary27, statisticalSummary28);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-0.09656583816243881d) + "'", double22 == (-0.09656583816243881d));
    }

    @Test
    public void test1239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1239");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.distribution.TDistribution tDistribution16 = null;
        tTestImpl1.setDistribution(tDistribution16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray25 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution26 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl27 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution26);
        double[] doubleArray33 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray38 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double39 = tTestImpl27.homoscedasticT(doubleArray33, doubleArray38);
        double double40 = tTestImpl21.tTest(doubleArray25, doubleArray38);
        org.apache.commons.math.distribution.TDistribution tDistribution41 = null;
        tTestImpl21.setDistribution(tDistribution41);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double[] doubleArray64 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double65 = tTestImpl44.t((double) '4', doubleArray64);
        org.apache.commons.math.distribution.TDistribution tDistribution66 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl67 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution66);
        double[] doubleArray73 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray78 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double79 = tTestImpl67.homoscedasticT(doubleArray73, doubleArray78);
        double double80 = tTestImpl21.t(doubleArray64, doubleArray78);
        boolean boolean82 = tTestImpl19.tTest((double) (short) 1, doubleArray78, 0.405429217622299d);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean84 = tTestImpl1.tTest((double) 0, doubleArray78, (-0.4023317120818342d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -0.4023317120818342");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + (-0.405429217622299d) + "'", double39 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.2806531524060034d + "'", double40 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + (-0.09656583816243881d) + "'", double65 == (-0.09656583816243881d));
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + (-0.405429217622299d) + "'", double79 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.5172120199559697d + "'", double80 == 0.5172120199559697d);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
    }

    @Test
    public void test1240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1240");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl19.setDistribution(tDistribution20);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution27 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl28 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution27);
        double[] doubleArray34 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray39 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double40 = tTestImpl28.homoscedasticT(doubleArray34, doubleArray39);
        double double41 = tTestImpl25.tTest((double) (short) 100, doubleArray34);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double[] doubleArray64 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double65 = tTestImpl44.t((double) '4', doubleArray64);
        double double66 = tTestImpl25.tTest((double) (short) 100, doubleArray64);
        double[] doubleArray73 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double74 = tTestImpl25.tTest(0.405429217622299d, doubleArray73);
        double double75 = tTestImpl23.t(3.8d, doubleArray73);
        double double76 = tTestImpl19.t((double) (short) 1, doubleArray73);
        double double77 = tTestImpl0.tTest(0.0d, doubleArray73);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary79 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double80 = tTestImpl0.tTest((double) (byte) 1, statisticalSummary79);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.405429217622299d) + "'", double40 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.01613264369976175d + "'", double41 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + (-0.09656583816243881d) + "'", double65 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.07560555610353314d + "'", double66 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.1143321549278642d + "'", double74 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + (-10.500000000000002d) + "'", double75 == (-10.500000000000002d));
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + (-3.5d) + "'", double76 == (-3.5d));
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.37390096630005876d + "'", double77 == 0.37390096630005876d);
    }

    @Test
    public void test1241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1241");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl21.tTest((double) (short) 100, doubleArray30);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray43 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution44 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl45 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution44);
        double[] doubleArray51 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray56 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double57 = tTestImpl45.homoscedasticT(doubleArray51, doubleArray56);
        double double58 = tTestImpl39.tTest(doubleArray43, doubleArray56);
        double double59 = tTestImpl21.t((double) (short) 10, doubleArray43);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl60 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl63 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution62);
        double[] doubleArray69 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray74 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double75 = tTestImpl63.homoscedasticT(doubleArray69, doubleArray74);
        double double76 = tTestImpl60.tTest((double) (short) 100, doubleArray69);
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl78 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution77);
        double[] doubleArray84 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray89 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double90 = tTestImpl78.homoscedasticT(doubleArray84, doubleArray89);
        double double91 = tTestImpl21.pairedT(doubleArray69, doubleArray84);
        double double92 = tTestImpl0.t((double) (short) 0, doubleArray84);
        org.apache.commons.math.distribution.TDistribution tDistribution93 = null;
        tTestImpl0.setDistribution(tDistribution93);
        org.apache.commons.math.distribution.TDistribution tDistribution95 = null;
        tTestImpl0.setDistribution(tDistribution95);
        double[] doubleArray98 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double99 = tTestImpl0.t(0.1143321549278642d, doubleArray98);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.01613264369976175d + "'", double37 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-0.405429217622299d) + "'", double57 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.2806531524060034d + "'", double58 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 3.8d + "'", double59 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + (-0.405429217622299d) + "'", double75 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.01613264369976175d + "'", double76 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + (-0.405429217622299d) + "'", double90 == (-0.405429217622299d));
        org.junit.Assert.assertTrue(Double.isNaN(double91));
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 1.0377339947605275d + "'", double92 == 1.0377339947605275d);
    }

    @Test
    public void test1242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1242");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        double double37 = tTestImpl1.t(10.0d, doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution38 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution38);
        double[] doubleArray45 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray50 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double51 = tTestImpl39.homoscedasticT(doubleArray45, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution52 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl53 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution52);
        double[] doubleArray59 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray64 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double65 = tTestImpl53.homoscedasticT(doubleArray59, doubleArray64);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl67 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution69 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl70 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution69);
        double[] doubleArray76 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray81 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double82 = tTestImpl70.homoscedasticT(doubleArray76, doubleArray81);
        double double83 = tTestImpl67.tTest((double) (short) 100, doubleArray76);
        double double84 = tTestImpl53.t((double) 10.0f, doubleArray76);
        double double85 = tTestImpl1.homoscedasticT(doubleArray50, doubleArray76);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary86 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary87 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double88 = tTestImpl1.homoscedasticT(statisticalSummary86, statisticalSummary87);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 3.8d + "'", double37 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + (-0.405429217622299d) + "'", double51 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + (-0.405429217622299d) + "'", double65 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + (-0.405429217622299d) + "'", double82 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.01613264369976175d + "'", double83 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.5339796283719219d + "'", double84 == 0.5339796283719219d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.405429217622299d + "'", double85 == 0.405429217622299d);
    }

    @Test
    public void test1243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1243");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        org.apache.commons.math.distribution.TDistribution tDistribution34 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl35 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution34);
        double[] doubleArray41 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray46 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double47 = tTestImpl35.homoscedasticT(doubleArray41, doubleArray46);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl48 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray52 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl54 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution53);
        double[] doubleArray60 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray65 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double66 = tTestImpl54.homoscedasticT(doubleArray60, doubleArray65);
        double double67 = tTestImpl48.tTest(doubleArray52, doubleArray65);
        org.apache.commons.math.distribution.TDistribution tDistribution68 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl69 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution68);
        double[] doubleArray75 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray80 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double81 = tTestImpl69.homoscedasticT(doubleArray75, doubleArray80);
        double double82 = tTestImpl35.t(doubleArray65, doubleArray80);
        double double83 = tTestImpl0.homoscedasticT(doubleArray27, doubleArray80);
        org.apache.commons.math.distribution.TDistribution tDistribution84 = null;
        tTestImpl0.setDistribution(tDistribution84);
        org.apache.commons.math.distribution.TDistribution tDistribution86 = null;
        tTestImpl0.setDistribution(tDistribution86);
        org.apache.commons.math.distribution.TDistribution tDistribution88 = null;
        tTestImpl0.setDistribution(tDistribution88);
        org.apache.commons.math.distribution.TDistribution tDistribution90 = null;
        tTestImpl0.setDistribution(tDistribution90);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary92 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary93 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double94 = tTestImpl0.t(statisticalSummary92, statisticalSummary93);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + (-0.405429217622299d) + "'", double47 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + (-0.405429217622299d) + "'", double66 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.2806531524060034d + "'", double67 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + (-0.405429217622299d) + "'", double81 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + (-0.405429217622299d) + "'", double83 == (-0.405429217622299d));
    }

    @Test
    public void test1244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1244");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        double[] doubleArray21 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double22 = tTestImpl1.t((double) '4', doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        tTestImpl1.setDistribution(tDistribution23);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary26 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean28 = tTestImpl1.tTest(1.7753257939094542d, statisticalSummary26, (-0.975807309953049d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -0.975807309953049");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-0.09656583816243881d) + "'", double22 == (-0.09656583816243881d));
    }

    @Test
    public void test1245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1245");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        org.apache.commons.math.distribution.TDistribution tDistribution34 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl35 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution34);
        double[] doubleArray41 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray46 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double47 = tTestImpl35.homoscedasticT(doubleArray41, doubleArray46);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl48 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray52 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl54 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution53);
        double[] doubleArray60 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray65 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double66 = tTestImpl54.homoscedasticT(doubleArray60, doubleArray65);
        double double67 = tTestImpl48.tTest(doubleArray52, doubleArray65);
        org.apache.commons.math.distribution.TDistribution tDistribution68 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl69 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution68);
        double[] doubleArray75 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray80 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double81 = tTestImpl69.homoscedasticT(doubleArray75, doubleArray80);
        double double82 = tTestImpl35.t(doubleArray65, doubleArray80);
        double double83 = tTestImpl0.homoscedasticT(doubleArray27, doubleArray80);
        org.apache.commons.math.distribution.TDistribution tDistribution84 = null;
        tTestImpl0.setDistribution(tDistribution84);
        org.apache.commons.math.distribution.TDistribution tDistribution86 = null;
        tTestImpl0.setDistribution(tDistribution86);
        org.apache.commons.math.distribution.TDistribution tDistribution88 = null;
        tTestImpl0.setDistribution(tDistribution88);
        org.apache.commons.math.distribution.TDistribution tDistribution90 = null;
        tTestImpl0.setDistribution(tDistribution90);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary92 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary93 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean95 = tTestImpl0.tTest(statisticalSummary92, statisticalSummary93, 0.1143321549278642d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + (-0.405429217622299d) + "'", double47 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + (-0.405429217622299d) + "'", double66 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.2806531524060034d + "'", double67 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + (-0.405429217622299d) + "'", double81 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + (-0.405429217622299d) + "'", double83 == (-0.405429217622299d));
    }

    @Test
    public void test1246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1246");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        org.apache.commons.math.distribution.TDistribution tDistribution34 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl35 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution34);
        double[] doubleArray41 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray46 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double47 = tTestImpl35.homoscedasticT(doubleArray41, doubleArray46);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl48 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray52 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl54 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution53);
        double[] doubleArray60 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray65 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double66 = tTestImpl54.homoscedasticT(doubleArray60, doubleArray65);
        double double67 = tTestImpl48.tTest(doubleArray52, doubleArray65);
        org.apache.commons.math.distribution.TDistribution tDistribution68 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl69 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution68);
        double[] doubleArray75 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray80 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double81 = tTestImpl69.homoscedasticT(doubleArray75, doubleArray80);
        double double82 = tTestImpl35.t(doubleArray65, doubleArray80);
        double double83 = tTestImpl0.homoscedasticT(doubleArray27, doubleArray80);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary84 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary85 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double86 = tTestImpl0.t(statisticalSummary84, statisticalSummary85);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + (-0.405429217622299d) + "'", double47 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + (-0.405429217622299d) + "'", double66 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.2806531524060034d + "'", double67 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + (-0.405429217622299d) + "'", double81 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + (-0.405429217622299d) + "'", double83 == (-0.405429217622299d));
    }

    @Test
    public void test1247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1247");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        tTestImpl0.setDistribution(tDistribution58);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        tTestImpl0.setDistribution(tDistribution60);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        tTestImpl0.setDistribution(tDistribution62);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        tTestImpl0.setDistribution(tDistribution64);
        org.apache.commons.math.distribution.TDistribution tDistribution66 = null;
        tTestImpl0.setDistribution(tDistribution66);
        double[] doubleArray74 = new double[] { (-2.8418588844347075d), 100.0f, (-1.0f), 0.35800486798369846d, 0.01613264369976175d };
        double double75 = tTestImpl0.t((double) (short) 0, doubleArray74);
        org.apache.commons.math.distribution.TDistribution tDistribution76 = null;
        tTestImpl0.setDistribution(tDistribution76);
        org.apache.commons.math.distribution.TDistribution tDistribution78 = null;
        tTestImpl0.setDistribution(tDistribution78);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary80 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary81 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double82 = tTestImpl0.t(statisticalSummary80, statisticalSummary81);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-2.8418588844347075, 100.0, -1.0, 0.35800486798369846, 0.01613264369976175]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.9566618438474437d + "'", double75 == 0.9566618438474437d);
    }

    @Test
    public void test1248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1248");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        double double37 = tTestImpl1.t(10.0d, doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution38 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution38);
        double[] doubleArray45 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray50 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double51 = tTestImpl39.homoscedasticT(doubleArray45, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution52 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl53 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution52);
        double[] doubleArray59 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray64 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double65 = tTestImpl53.homoscedasticT(doubleArray59, doubleArray64);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl67 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution69 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl70 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution69);
        double[] doubleArray76 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray81 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double82 = tTestImpl70.homoscedasticT(doubleArray76, doubleArray81);
        double double83 = tTestImpl67.tTest((double) (short) 100, doubleArray76);
        double double84 = tTestImpl53.t((double) 10.0f, doubleArray76);
        double double85 = tTestImpl1.homoscedasticT(doubleArray50, doubleArray76);
        org.apache.commons.math.distribution.TDistribution tDistribution86 = null;
        tTestImpl1.setDistribution(tDistribution86);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary89 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double90 = tTestImpl1.tTest((double) (byte) 100, statisticalSummary89);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 3.8d + "'", double37 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + (-0.405429217622299d) + "'", double51 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + (-0.405429217622299d) + "'", double65 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + (-0.405429217622299d) + "'", double82 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.01613264369976175d + "'", double83 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.5339796283719219d + "'", double84 == 0.5339796283719219d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.405429217622299d + "'", double85 == 0.405429217622299d);
    }

    @Test
    public void test1249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1249");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        tTestImpl0.setDistribution(tDistribution58);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        tTestImpl0.setDistribution(tDistribution60);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        tTestImpl0.setDistribution(tDistribution62);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        tTestImpl0.setDistribution(tDistribution64);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary66 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary67 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean69 = tTestImpl0.tTest(statisticalSummary66, statisticalSummary67, 0.5339796283719219d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.5339796283719219");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
    }

    @Test
    public void test1250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1250");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl1.t((-0.975807309953049d), doubleArray52);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary56 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double57 = tTestImpl1.tTest(1.3965146696271626d, statisticalSummary56);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.4411111919348023d + "'", double54 == 1.4411111919348023d);
    }

    @Test
    public void test1251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1251");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution42 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl43 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution42);
        double[] doubleArray49 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray54 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double55 = tTestImpl43.homoscedasticT(doubleArray49, doubleArray54);
        org.apache.commons.math.distribution.TDistribution tDistribution56 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl57 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution56);
        double[] doubleArray63 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray68 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double69 = tTestImpl57.homoscedasticT(doubleArray63, doubleArray68);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl71 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution73 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl74 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution73);
        double[] doubleArray80 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray85 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double86 = tTestImpl74.homoscedasticT(doubleArray80, doubleArray85);
        double double87 = tTestImpl71.tTest((double) (short) 100, doubleArray80);
        double double88 = tTestImpl57.t((double) 10.0f, doubleArray80);
        double double89 = tTestImpl0.pairedTTest(doubleArray49, doubleArray80);
        org.apache.commons.math.distribution.TDistribution tDistribution90 = null;
        tTestImpl0.setDistribution(tDistribution90);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary93 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean95 = tTestImpl0.tTest((double) (short) 1, statisticalSummary93, (double) 1.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 1.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-0.405429217622299d) + "'", double55 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + (-0.405429217622299d) + "'", double69 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + (-0.405429217622299d) + "'", double86 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.01613264369976175d + "'", double87 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.5339796283719219d + "'", double88 == 0.5339796283719219d);
        org.junit.Assert.assertTrue(Double.isNaN(double89));
    }

    @Test
    public void test1252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1252");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        org.apache.commons.math.distribution.TDistribution tDistribution34 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl35 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution34);
        double[] doubleArray41 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray46 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double47 = tTestImpl35.homoscedasticT(doubleArray41, doubleArray46);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl48 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray52 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl54 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution53);
        double[] doubleArray60 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray65 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double66 = tTestImpl54.homoscedasticT(doubleArray60, doubleArray65);
        double double67 = tTestImpl48.tTest(doubleArray52, doubleArray65);
        org.apache.commons.math.distribution.TDistribution tDistribution68 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl69 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution68);
        double[] doubleArray75 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray80 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double81 = tTestImpl69.homoscedasticT(doubleArray75, doubleArray80);
        double double82 = tTestImpl35.t(doubleArray65, doubleArray80);
        double double83 = tTestImpl0.homoscedasticT(doubleArray27, doubleArray80);
        org.apache.commons.math.distribution.TDistribution tDistribution84 = null;
        tTestImpl0.setDistribution(tDistribution84);
        org.apache.commons.math.distribution.TDistribution tDistribution86 = null;
        tTestImpl0.setDistribution(tDistribution86);
        org.apache.commons.math.distribution.TDistribution tDistribution88 = null;
        tTestImpl0.setDistribution(tDistribution88);
        org.apache.commons.math.distribution.TDistribution tDistribution90 = null;
        tTestImpl0.setDistribution(tDistribution90);
        org.apache.commons.math.distribution.TDistribution tDistribution92 = null;
        tTestImpl0.setDistribution(tDistribution92);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary94 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary95 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean97 = tTestImpl0.tTest(statisticalSummary94, statisticalSummary95, 0.9566618438474437d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.9566618438474437");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + (-0.405429217622299d) + "'", double47 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + (-0.405429217622299d) + "'", double66 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.2806531524060034d + "'", double67 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + (-0.405429217622299d) + "'", double81 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + (-0.405429217622299d) + "'", double83 == (-0.405429217622299d));
    }

    @Test
    public void test1253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1253");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution44 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl45 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution44);
        double[] doubleArray51 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray56 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double57 = tTestImpl45.homoscedasticT(doubleArray51, doubleArray56);
        double double58 = tTestImpl42.tTest((double) (short) 100, doubleArray51);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl61 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution60);
        double[] doubleArray67 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray72 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double73 = tTestImpl61.homoscedasticT(doubleArray67, doubleArray72);
        double[] doubleArray81 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double82 = tTestImpl61.t((double) '4', doubleArray81);
        double double83 = tTestImpl42.tTest((double) (short) 100, doubleArray81);
        double[] doubleArray89 = new double[] { 1.0f, (-0.09656583816243881d), ' ', 0.8463073355328574d, 1.3965146696271626d };
        double double90 = tTestImpl0.homoscedasticTTest(doubleArray81, doubleArray89);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary91 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary92 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean94 = tTestImpl0.tTest(statisticalSummary91, statisticalSummary92, 0.1143321549278642d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-0.405429217622299d) + "'", double57 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.01613264369976175d + "'", double58 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + (-0.405429217622299d) + "'", double73 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + (-0.09656583816243881d) + "'", double82 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.07560555610353314d + "'", double83 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[1.0, -0.09656583816243881, 32.0, 0.8463073355328574, 1.3965146696271626]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.12673187601587688d + "'", double90 == 0.12673187601587688d);
    }

    @Test
    public void test1254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1254");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution1 = null;
        tTestImpl0.setDistribution(tDistribution1);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        tTestImpl0.setDistribution(tDistribution3);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary6 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double7 = tTestImpl0.tTest(Double.NaN, statisticalSummary6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1255");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl0.t((double) (short) 10, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl55 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl58 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution57);
        double[] doubleArray64 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray69 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double70 = tTestImpl58.homoscedasticT(doubleArray64, doubleArray69);
        double double71 = tTestImpl55.tTest((double) (short) 100, doubleArray64);
        double double72 = tTestImpl41.t((double) 10.0f, doubleArray64);
        boolean boolean74 = tTestImpl0.tTest(0.12673187601587688d, doubleArray64, 0.01613264369976175d);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary76 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean78 = tTestImpl0.tTest(3.8d, statisticalSummary76, 1.3965146696271626d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 1.3965146696271626");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 3.8d + "'", double38 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + (-0.405429217622299d) + "'", double70 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.01613264369976175d + "'", double71 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.5339796283719219d + "'", double72 == 0.5339796283719219d);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test1256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1256");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution7 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl8 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution7);
        double[] doubleArray14 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray19 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double20 = tTestImpl8.homoscedasticT(doubleArray14, doubleArray19);
        double double21 = tTestImpl5.tTest((double) (short) 100, doubleArray14);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl5.setDistribution(tDistribution22);
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        tTestImpl5.setDistribution(tDistribution24);
        org.apache.commons.math.distribution.TDistribution tDistribution27 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl28 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution27);
        org.apache.commons.math.distribution.TDistribution tDistribution29 = null;
        tTestImpl28.setDistribution(tDistribution29);
        org.apache.commons.math.distribution.TDistribution tDistribution32 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl33 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution32);
        double[] doubleArray39 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray44 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double45 = tTestImpl33.homoscedasticT(doubleArray39, doubleArray44);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl46 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray50 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution51 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl52 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution51);
        double[] doubleArray58 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray63 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double64 = tTestImpl52.homoscedasticT(doubleArray58, doubleArray63);
        double double65 = tTestImpl46.tTest(doubleArray50, doubleArray63);
        org.apache.commons.math.distribution.TDistribution tDistribution66 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl67 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution66);
        double[] doubleArray73 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray78 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double79 = tTestImpl67.homoscedasticT(doubleArray73, doubleArray78);
        double double80 = tTestImpl33.t(doubleArray63, doubleArray78);
        double double81 = tTestImpl28.t(0.07560555610353314d, doubleArray63);
        double double82 = tTestImpl5.t((double) (short) 10, doubleArray63);
        double double83 = tTestImpl1.t((-0.975807309953049d), doubleArray63);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary84 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary85 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double86 = tTestImpl1.t(statisticalSummary84, statisticalSummary85);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-0.405429217622299d) + "'", double20 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.01613264369976175d + "'", double21 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + (-0.405429217622299d) + "'", double45 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + (-0.405429217622299d) + "'", double64 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.2806531524060034d + "'", double65 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + (-0.405429217622299d) + "'", double79 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 1.3965146696271626d + "'", double81 == 1.3965146696271626d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.9755634976417653d + "'", double82 == 0.9755634976417653d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.4411111919348023d + "'", double83 == 1.4411111919348023d);
    }

    @Test
    public void test1257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1257");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        double[] doubleArray48 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double49 = tTestImpl0.tTest(0.405429217622299d, doubleArray48);
        double[] doubleArray57 = new double[] { 10L, 0.9566618438474437d, 1.0f, 0.15639940166959065d, (short) 0, 0.15639940166959065d };
        double double58 = tTestImpl0.tTest(10.0d, doubleArray57);
        org.apache.commons.math.distribution.TDistribution tDistribution59 = null;
        tTestImpl0.setDistribution(tDistribution59);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary61 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary62 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double63 = tTestImpl0.homoscedasticTTest(statisticalSummary61, statisticalSummary62);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.1143321549278642d + "'", double49 == 0.1143321549278642d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 0.9566618438474437, 1.0, 0.15639940166959065, 0.0, 0.15639940166959065]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.004213458414249471d + "'", double58 == 0.004213458414249471d);
    }

    @Test
    public void test1258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1258");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution17);
        double[] doubleArray24 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray29 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double30 = tTestImpl18.homoscedasticT(doubleArray24, doubleArray29);
        double double31 = tTestImpl15.tTest((double) (short) 100, doubleArray24);
        org.apache.commons.math.distribution.TDistribution tDistribution33 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl34 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution33);
        double[] doubleArray40 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray45 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double46 = tTestImpl34.homoscedasticT(doubleArray40, doubleArray45);
        double[] doubleArray54 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double55 = tTestImpl34.t((double) '4', doubleArray54);
        double double56 = tTestImpl15.tTest((double) (short) 100, doubleArray54);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl59 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution58);
        double[] doubleArray65 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray70 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double71 = tTestImpl59.homoscedasticT(doubleArray65, doubleArray70);
        double double72 = tTestImpl15.tTest((double) (byte) 1, doubleArray65);
        org.apache.commons.math.distribution.TDistribution tDistribution73 = null;
        tTestImpl15.setDistribution(tDistribution73);
        org.apache.commons.math.distribution.TDistribution tDistribution75 = null;
        tTestImpl15.setDistribution(tDistribution75);
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        tTestImpl15.setDistribution(tDistribution77);
        org.apache.commons.math.distribution.TDistribution tDistribution79 = null;
        tTestImpl15.setDistribution(tDistribution79);
        org.apache.commons.math.distribution.TDistribution tDistribution81 = null;
        tTestImpl15.setDistribution(tDistribution81);
        double[] doubleArray89 = new double[] { (-2.8418588844347075d), 100.0f, (-1.0f), 0.35800486798369846d, 0.01613264369976175d };
        double double90 = tTestImpl15.t((double) (short) 0, doubleArray89);
        double double91 = tTestImpl1.t(0.5339796283719219d, doubleArray89);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary92 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary93 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double94 = tTestImpl1.tTest(statisticalSummary92, statisticalSummary93);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-0.405429217622299d) + "'", double30 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.01613264369976175d + "'", double31 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-0.405429217622299d) + "'", double46 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-0.09656583816243881d) + "'", double55 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.07560555610353314d + "'", double56 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + (-0.405429217622299d) + "'", double71 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.3793626154059051d + "'", double72 == 0.3793626154059051d);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[-2.8418588844347075, 100.0, -1.0, 0.35800486798369846, 0.01613264369976175]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.9566618438474437d + "'", double90 == 0.9566618438474437d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.9302024075262618d + "'", double91 == 0.9302024075262618d);
    }

    @Test
    public void test1259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1259");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary58 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary59 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean61 = tTestImpl0.tTest(statisticalSummary58, statisticalSummary59, 4.442799675467754d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 4.442799675467754");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
    }

    @Test
    public void test1260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1260");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl2 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        double double18 = tTestImpl2.tTest((double) (short) 100, doubleArray11);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        double[] doubleArray41 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double42 = tTestImpl21.t((double) '4', doubleArray41);
        double double43 = tTestImpl2.tTest((double) (short) 100, doubleArray41);
        double[] doubleArray50 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double51 = tTestImpl2.tTest(0.405429217622299d, doubleArray50);
        double double52 = tTestImpl0.t(3.8d, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        tTestImpl0.setDistribution(tDistribution53);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl0.setDistribution(tDistribution55);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl58 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray62 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution63 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl64 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution63);
        double[] doubleArray70 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray75 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double76 = tTestImpl64.homoscedasticT(doubleArray70, doubleArray75);
        double double77 = tTestImpl58.tTest(doubleArray62, doubleArray75);
        org.apache.commons.math.distribution.TDistribution tDistribution79 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl80 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution79);
        double[] doubleArray86 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray91 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double92 = tTestImpl80.homoscedasticT(doubleArray86, doubleArray91);
        double double93 = tTestImpl58.t((double) 1L, doubleArray91);
        double double94 = tTestImpl0.t((double) 0.0f, doubleArray91);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary95 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary96 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean98 = tTestImpl0.tTest(statisticalSummary95, statisticalSummary96, (double) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 35.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.01613264369976175d + "'", double18 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-0.09656583816243881d) + "'", double42 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.07560555610353314d + "'", double43 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.1143321549278642d + "'", double51 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-10.500000000000002d) + "'", double52 == (-10.500000000000002d));
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + (-0.405429217622299d) + "'", double76 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.2806531524060034d + "'", double77 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + (-0.405429217622299d) + "'", double92 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 1.3573057358494125d + "'", double93 == 1.3573057358494125d);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 1.3997215400947067d + "'", double94 == 1.3997215400947067d);
    }

    @Test
    public void test1261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1261");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        org.apache.commons.math.distribution.TDistribution tDistribution16 = null;
        tTestImpl3.setDistribution(tDistribution16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray23 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution24);
        double[] doubleArray31 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray36 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double37 = tTestImpl25.homoscedasticT(doubleArray31, doubleArray36);
        double double38 = tTestImpl19.tTest(doubleArray23, doubleArray36);
        double double39 = tTestImpl3.t(10.0d, doubleArray23);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution54 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl55 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution54);
        double[] doubleArray61 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray66 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double67 = tTestImpl55.homoscedasticT(doubleArray61, doubleArray66);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl69 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution71 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl72 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution71);
        double[] doubleArray78 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray83 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double84 = tTestImpl72.homoscedasticT(doubleArray78, doubleArray83);
        double double85 = tTestImpl69.tTest((double) (short) 100, doubleArray78);
        double double86 = tTestImpl55.t((double) 10.0f, doubleArray78);
        double double87 = tTestImpl3.homoscedasticT(doubleArray52, doubleArray78);
        double double88 = tTestImpl0.t((double) 100.0f, doubleArray78);
        double[] doubleArray90 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double91 = tTestImpl0.t((-0.09656583816243881d), doubleArray90);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-0.405429217622299d) + "'", double37 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.2806531524060034d + "'", double38 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 3.8d + "'", double39 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + (-0.405429217622299d) + "'", double67 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + (-0.405429217622299d) + "'", double84 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.01613264369976175d + "'", double85 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.5339796283719219d + "'", double86 == 0.5339796283719219d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.405429217622299d + "'", double87 == 0.405429217622299d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + (-3.9998096691255283d) + "'", double88 == (-3.9998096691255283d));
    }

    @Test
    public void test1262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1262");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution1 = null;
        tTestImpl0.setDistribution(tDistribution1);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl4 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution6 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl7 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution6);
        double[] doubleArray13 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray18 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double19 = tTestImpl7.homoscedasticT(doubleArray13, doubleArray18);
        double double20 = tTestImpl4.tTest((double) (short) 100, doubleArray13);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double[] doubleArray43 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double44 = tTestImpl23.t((double) '4', doubleArray43);
        double double45 = tTestImpl4.tTest((double) (short) 100, doubleArray43);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl46 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution48 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl49 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution48);
        double[] doubleArray55 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray60 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double61 = tTestImpl49.homoscedasticT(doubleArray55, doubleArray60);
        double double62 = tTestImpl46.tTest((double) (short) 100, doubleArray55);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl65 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution64);
        double[] doubleArray71 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray76 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double77 = tTestImpl65.homoscedasticT(doubleArray71, doubleArray76);
        double[] doubleArray85 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double86 = tTestImpl65.t((double) '4', doubleArray85);
        double double87 = tTestImpl46.tTest((double) (short) 100, doubleArray85);
        double[] doubleArray93 = new double[] { 1.0f, (-0.09656583816243881d), ' ', 0.8463073355328574d, 1.3965146696271626d };
        double double94 = tTestImpl4.homoscedasticTTest(doubleArray85, doubleArray93);
        double double95 = tTestImpl0.t((double) 100, doubleArray93);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary96 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary97 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean99 = tTestImpl0.tTest(statisticalSummary96, statisticalSummary97, (-0.09656583816243881d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -0.09656583816243881");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-0.405429217622299d) + "'", double19 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.01613264369976175d + "'", double20 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + (-0.09656583816243881d) + "'", double44 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.07560555610353314d + "'", double45 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + (-0.405429217622299d) + "'", double61 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.01613264369976175d + "'", double62 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + (-0.405429217622299d) + "'", double77 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + (-0.09656583816243881d) + "'", double86 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.07560555610353314d + "'", double87 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[1.0, -0.09656583816243881, 32.0, 0.8463073355328574, 1.3965146696271626]");
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 0.12673187601587688d + "'", double94 == 0.12673187601587688d);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + (-14.881283513379177d) + "'", double95 == (-14.881283513379177d));
    }

    @Test
    public void test1263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1263");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution42 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl43 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution42);
        double[] doubleArray49 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray54 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double55 = tTestImpl43.homoscedasticT(doubleArray49, doubleArray54);
        org.apache.commons.math.distribution.TDistribution tDistribution56 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl57 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution56);
        double[] doubleArray63 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray68 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double69 = tTestImpl57.homoscedasticT(doubleArray63, doubleArray68);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl71 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution73 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl74 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution73);
        double[] doubleArray80 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray85 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double86 = tTestImpl74.homoscedasticT(doubleArray80, doubleArray85);
        double double87 = tTestImpl71.tTest((double) (short) 100, doubleArray80);
        double double88 = tTestImpl57.t((double) 10.0f, doubleArray80);
        double double89 = tTestImpl0.pairedTTest(doubleArray49, doubleArray80);
        org.apache.commons.math.distribution.TDistribution tDistribution90 = null;
        tTestImpl0.setDistribution(tDistribution90);
        org.apache.commons.math.distribution.TDistribution tDistribution92 = null;
        tTestImpl0.setDistribution(tDistribution92);
        org.apache.commons.math.distribution.TDistribution tDistribution94 = null;
        tTestImpl0.setDistribution(tDistribution94);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary96 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary97 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double98 = tTestImpl0.t(statisticalSummary96, statisticalSummary97);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-0.405429217622299d) + "'", double55 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + (-0.405429217622299d) + "'", double69 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + (-0.405429217622299d) + "'", double86 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.01613264369976175d + "'", double87 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.5339796283719219d + "'", double88 == 0.5339796283719219d);
        org.junit.Assert.assertTrue(Double.isNaN(double89));
    }

    @Test
    public void test1264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1264");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        tTestImpl42.setDistribution(tDistribution43);
        org.apache.commons.math.distribution.TDistribution tDistribution45 = null;
        tTestImpl42.setDistribution(tDistribution45);
        org.apache.commons.math.distribution.TDistribution tDistribution48 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl49 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution48);
        double[] doubleArray55 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray60 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double61 = tTestImpl49.homoscedasticT(doubleArray55, doubleArray60);
        double double62 = tTestImpl42.t(3.8d, doubleArray55);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl63 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray67 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution68 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl69 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution68);
        double[] doubleArray75 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray80 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double81 = tTestImpl69.homoscedasticT(doubleArray75, doubleArray80);
        double double82 = tTestImpl63.tTest(doubleArray67, doubleArray80);
        double double83 = tTestImpl0.t(doubleArray55, doubleArray80);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary85 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double86 = tTestImpl0.tTest(1.3573057358494125d, statisticalSummary85);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + (-0.405429217622299d) + "'", double61 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.8463073355328574d + "'", double62 == 0.8463073355328574d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + (-0.405429217622299d) + "'", double81 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.2806531524060034d + "'", double82 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + (-0.4023317120818342d) + "'", double83 == (-0.4023317120818342d));
    }

    @Test
    public void test1265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1265");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        double[] doubleArray48 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double49 = tTestImpl0.tTest(0.405429217622299d, doubleArray48);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl51 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl54 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution53);
        double[] doubleArray60 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray65 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double66 = tTestImpl54.homoscedasticT(doubleArray60, doubleArray65);
        double double67 = tTestImpl51.tTest((double) (short) 100, doubleArray60);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl69 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray73 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution74 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl75 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution74);
        double[] doubleArray81 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray86 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double87 = tTestImpl75.homoscedasticT(doubleArray81, doubleArray86);
        double double88 = tTestImpl69.tTest(doubleArray73, doubleArray86);
        double double89 = tTestImpl51.t((double) (short) 10, doubleArray73);
        double double90 = tTestImpl0.t(1.088109431399388d, doubleArray73);
        java.lang.Class<?> wildcardClass91 = tTestImpl0.getClass();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.1143321549278642d + "'", double49 == 0.1143321549278642d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + (-0.405429217622299d) + "'", double66 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.01613264369976175d + "'", double67 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + (-0.405429217622299d) + "'", double87 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.2806531524060034d + "'", double88 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 3.8d + "'", double89 == 3.8d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 4.394126037906707d + "'", double90 == 4.394126037906707d);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1266");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl21.tTest((double) (short) 100, doubleArray30);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray43 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution44 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl45 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution44);
        double[] doubleArray51 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray56 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double57 = tTestImpl45.homoscedasticT(doubleArray51, doubleArray56);
        double double58 = tTestImpl39.tTest(doubleArray43, doubleArray56);
        double double59 = tTestImpl21.t((double) (short) 10, doubleArray43);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl60 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl63 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution62);
        double[] doubleArray69 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray74 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double75 = tTestImpl63.homoscedasticT(doubleArray69, doubleArray74);
        double double76 = tTestImpl60.tTest((double) (short) 100, doubleArray69);
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl78 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution77);
        double[] doubleArray84 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray89 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double90 = tTestImpl78.homoscedasticT(doubleArray84, doubleArray89);
        double double91 = tTestImpl21.pairedT(doubleArray69, doubleArray84);
        double double92 = tTestImpl0.t((double) (short) 0, doubleArray84);
        org.apache.commons.math.distribution.TDistribution tDistribution93 = null;
        tTestImpl0.setDistribution(tDistribution93);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary95 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary96 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean98 = tTestImpl0.tTest(statisticalSummary95, statisticalSummary96, 0.987358558121667d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.987358558121667");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.01613264369976175d + "'", double37 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-0.405429217622299d) + "'", double57 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.2806531524060034d + "'", double58 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 3.8d + "'", double59 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + (-0.405429217622299d) + "'", double75 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.01613264369976175d + "'", double76 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + (-0.405429217622299d) + "'", double90 == (-0.405429217622299d));
        org.junit.Assert.assertTrue(Double.isNaN(double91));
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 1.0377339947605275d + "'", double92 == 1.0377339947605275d);
    }

    @Test
    public void test1267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1267");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        tTestImpl0.setDistribution(tDistribution58);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        tTestImpl0.setDistribution(tDistribution60);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        tTestImpl0.setDistribution(tDistribution62);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary64 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary65 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double66 = tTestImpl0.homoscedasticT(statisticalSummary64, statisticalSummary65);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
    }

    @Test
    public void test1268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1268");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl21.tTest((double) (short) 100, doubleArray30);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray43 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution44 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl45 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution44);
        double[] doubleArray51 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray56 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double57 = tTestImpl45.homoscedasticT(doubleArray51, doubleArray56);
        double double58 = tTestImpl39.tTest(doubleArray43, doubleArray56);
        double double59 = tTestImpl21.t((double) (short) 10, doubleArray43);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl60 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl63 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution62);
        double[] doubleArray69 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray74 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double75 = tTestImpl63.homoscedasticT(doubleArray69, doubleArray74);
        double double76 = tTestImpl60.tTest((double) (short) 100, doubleArray69);
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl78 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution77);
        double[] doubleArray84 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray89 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double90 = tTestImpl78.homoscedasticT(doubleArray84, doubleArray89);
        double double91 = tTestImpl21.pairedT(doubleArray69, doubleArray84);
        double double92 = tTestImpl0.t((double) (short) 0, doubleArray84);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary93 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary94 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double95 = tTestImpl0.homoscedasticTTest(statisticalSummary93, statisticalSummary94);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.01613264369976175d + "'", double37 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-0.405429217622299d) + "'", double57 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.2806531524060034d + "'", double58 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 3.8d + "'", double59 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + (-0.405429217622299d) + "'", double75 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.01613264369976175d + "'", double76 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + (-0.405429217622299d) + "'", double90 == (-0.405429217622299d));
        org.junit.Assert.assertTrue(Double.isNaN(double91));
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 1.0377339947605275d + "'", double92 == 1.0377339947605275d);
    }

    @Test
    public void test1269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1269");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl22 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution21);
        double[] doubleArray28 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray33 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double34 = tTestImpl22.homoscedasticT(doubleArray28, doubleArray33);
        double double35 = tTestImpl0.t((double) 1L, doubleArray33);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl36 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray40 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution41 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution41);
        double[] doubleArray48 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray53 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double54 = tTestImpl42.homoscedasticT(doubleArray48, doubleArray53);
        double double55 = tTestImpl36.tTest(doubleArray40, doubleArray53);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl56 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray60 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl62 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution61);
        double[] doubleArray68 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray73 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double74 = tTestImpl62.homoscedasticT(doubleArray68, doubleArray73);
        double double75 = tTestImpl56.tTest(doubleArray60, doubleArray73);
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl78 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution77);
        double[] doubleArray84 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray89 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double90 = tTestImpl78.homoscedasticT(doubleArray84, doubleArray89);
        double double91 = tTestImpl56.t((double) 1L, doubleArray89);
        double double92 = tTestImpl0.pairedT(doubleArray53, doubleArray89);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary94 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean96 = tTestImpl0.tTest(4.394126037906707d, statisticalSummary94, (-0.975807309953049d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -0.975807309953049");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-0.405429217622299d) + "'", double34 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.3573057358494125d + "'", double35 == 1.3573057358494125d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + (-0.405429217622299d) + "'", double54 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.2806531524060034d + "'", double55 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-0.405429217622299d) + "'", double74 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.2806531524060034d + "'", double75 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + (-0.405429217622299d) + "'", double90 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 1.3573057358494125d + "'", double91 == 1.3573057358494125d);
        org.junit.Assert.assertTrue(Double.isNaN(double92));
    }

    @Test
    public void test1270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1270");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl2 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        double double18 = tTestImpl2.tTest((double) (short) 100, doubleArray11);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        double[] doubleArray41 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double42 = tTestImpl21.t((double) '4', doubleArray41);
        double double43 = tTestImpl2.tTest((double) (short) 100, doubleArray41);
        double[] doubleArray50 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double51 = tTestImpl2.tTest(0.405429217622299d, doubleArray50);
        double double52 = tTestImpl0.t(3.8d, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        tTestImpl0.setDistribution(tDistribution53);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl0.setDistribution(tDistribution55);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary57 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary58 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double59 = tTestImpl0.t(statisticalSummary57, statisticalSummary58);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.01613264369976175d + "'", double18 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-0.09656583816243881d) + "'", double42 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.07560555610353314d + "'", double43 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.1143321549278642d + "'", double51 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-10.500000000000002d) + "'", double52 == (-10.500000000000002d));
    }

    @Test
    public void test1271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1271");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution17);
        double[] doubleArray24 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray29 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double30 = tTestImpl18.homoscedasticT(doubleArray24, doubleArray29);
        double double31 = tTestImpl15.tTest((double) (short) 100, doubleArray24);
        org.apache.commons.math.distribution.TDistribution tDistribution33 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl34 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution33);
        double[] doubleArray40 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray45 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double46 = tTestImpl34.homoscedasticT(doubleArray40, doubleArray45);
        double[] doubleArray54 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double55 = tTestImpl34.t((double) '4', doubleArray54);
        double double56 = tTestImpl15.tTest((double) (short) 100, doubleArray54);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl59 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution58);
        double[] doubleArray65 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray70 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double71 = tTestImpl59.homoscedasticT(doubleArray65, doubleArray70);
        double double72 = tTestImpl15.tTest((double) (byte) 1, doubleArray65);
        double double73 = tTestImpl1.t((double) 10L, doubleArray65);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary74 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary75 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double76 = tTestImpl1.homoscedasticTTest(statisticalSummary74, statisticalSummary75);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-0.405429217622299d) + "'", double30 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.01613264369976175d + "'", double31 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-0.405429217622299d) + "'", double46 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-0.09656583816243881d) + "'", double55 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.07560555610353314d + "'", double56 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + (-0.405429217622299d) + "'", double71 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.3793626154059051d + "'", double72 == 0.3793626154059051d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.5339796283719219d + "'", double73 == 0.5339796283719219d);
    }

    @Test
    public void test1272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1272");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl0.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl0.setDistribution(tDistribution22);
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        tTestImpl0.setDistribution(tDistribution24);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary27 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double28 = tTestImpl0.tTest(0.0d, statisticalSummary27);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
    }

    @Test
    public void test1273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1273");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        tTestImpl0.setDistribution(tDistribution58);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        tTestImpl0.setDistribution(tDistribution60);
        org.apache.commons.math.distribution.TDistribution tDistribution63 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl64 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution63);
        double[] doubleArray70 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray75 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double76 = tTestImpl64.homoscedasticT(doubleArray70, doubleArray75);
        double double77 = tTestImpl0.t((double) 0, doubleArray75);
        org.apache.commons.math.distribution.TDistribution tDistribution78 = null;
        tTestImpl0.setDistribution(tDistribution78);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary81 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double82 = tTestImpl0.tTest(0.2806531524060034d, statisticalSummary81);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + (-0.405429217622299d) + "'", double76 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 1.3997215400947067d + "'", double77 == 1.3997215400947067d);
    }

    @Test
    public void test1274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1274");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        tTestImpl3.setDistribution(tDistribution4);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution8 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl9 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution8);
        double[] doubleArray15 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray20 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double21 = tTestImpl9.homoscedasticT(doubleArray15, doubleArray20);
        double double22 = tTestImpl6.tTest((double) (short) 100, doubleArray15);
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution24);
        double[] doubleArray31 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray36 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double37 = tTestImpl25.homoscedasticT(doubleArray31, doubleArray36);
        double[] doubleArray45 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double46 = tTestImpl25.t((double) '4', doubleArray45);
        double double47 = tTestImpl6.tTest((double) (short) 100, doubleArray45);
        org.apache.commons.math.distribution.TDistribution tDistribution49 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl50 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution49);
        double[] doubleArray56 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray61 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double62 = tTestImpl50.homoscedasticT(doubleArray56, doubleArray61);
        double double63 = tTestImpl6.tTest((double) (byte) 1, doubleArray56);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl65 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution64);
        double[] doubleArray71 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray76 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double77 = tTestImpl65.homoscedasticT(doubleArray71, doubleArray76);
        double[] doubleArray85 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double86 = tTestImpl65.t((double) '4', doubleArray85);
        double double87 = tTestImpl3.t(doubleArray56, doubleArray85);
        double double88 = tTestImpl0.tTest((double) 0, doubleArray56);
        org.apache.commons.math.distribution.TDistribution tDistribution89 = null;
        tTestImpl0.setDistribution(tDistribution89);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary91 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary92 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double93 = tTestImpl0.homoscedasticT(statisticalSummary91, statisticalSummary92);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-0.405429217622299d) + "'", double21 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.01613264369976175d + "'", double22 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-0.405429217622299d) + "'", double37 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-0.09656583816243881d) + "'", double46 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.07560555610353314d + "'", double47 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + (-0.405429217622299d) + "'", double62 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.3793626154059051d + "'", double63 == 0.3793626154059051d);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + (-0.405429217622299d) + "'", double77 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + (-0.09656583816243881d) + "'", double86 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + (-0.975807309953049d) + "'", double87 == (-0.975807309953049d));
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.35800486798369846d + "'", double88 == 0.35800486798369846d);
    }

    @Test
    public void test1275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1275");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl0.t((double) (short) 10, doubleArray22);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution41 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution41);
        double[] doubleArray48 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray53 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double54 = tTestImpl42.homoscedasticT(doubleArray48, doubleArray53);
        double double55 = tTestImpl39.tTest((double) (short) 100, doubleArray48);
        org.apache.commons.math.distribution.TDistribution tDistribution56 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl57 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution56);
        double[] doubleArray63 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray68 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double69 = tTestImpl57.homoscedasticT(doubleArray63, doubleArray68);
        double double70 = tTestImpl0.pairedT(doubleArray48, doubleArray63);
        org.apache.commons.math.distribution.TDistribution tDistribution71 = null;
        tTestImpl0.setDistribution(tDistribution71);
        org.apache.commons.math.distribution.TDistribution tDistribution73 = null;
        tTestImpl0.setDistribution(tDistribution73);
        double[] doubleArray76 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double77 = tTestImpl0.tTest(1.3965146696271626d, doubleArray76);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 3.8d + "'", double38 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + (-0.405429217622299d) + "'", double54 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.01613264369976175d + "'", double55 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + (-0.405429217622299d) + "'", double69 == (-0.405429217622299d));
        org.junit.Assert.assertTrue(Double.isNaN(double70));
    }

    @Test
    public void test1276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1276");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        tTestImpl1.setDistribution(tDistribution4);
        org.apache.commons.math.distribution.TDistribution tDistribution6 = null;
        tTestImpl1.setDistribution(tDistribution6);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl9 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray13 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution14);
        double[] doubleArray21 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray26 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double27 = tTestImpl15.homoscedasticT(doubleArray21, doubleArray26);
        double double28 = tTestImpl9.tTest(doubleArray13, doubleArray26);
        org.apache.commons.math.distribution.TDistribution tDistribution30 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl31 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution30);
        double[] doubleArray37 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray42 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double43 = tTestImpl31.homoscedasticT(doubleArray37, doubleArray42);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray48 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution49 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl50 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution49);
        double[] doubleArray56 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray61 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double62 = tTestImpl50.homoscedasticT(doubleArray56, doubleArray61);
        double double63 = tTestImpl44.tTest(doubleArray48, doubleArray61);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl65 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution64);
        double[] doubleArray71 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray76 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double77 = tTestImpl65.homoscedasticT(doubleArray71, doubleArray76);
        double double78 = tTestImpl31.t(doubleArray61, doubleArray76);
        boolean boolean80 = tTestImpl9.tTest((double) (short) 0, doubleArray61, Double.NaN);
        double double81 = tTestImpl1.t((double) (short) 100, doubleArray61);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary82 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary83 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean85 = tTestImpl1.tTest(statisticalSummary82, statisticalSummary83, 0.01613264369976175d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + (-0.405429217622299d) + "'", double27 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.2806531524060034d + "'", double28 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + (-0.405429217622299d) + "'", double43 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + (-0.405429217622299d) + "'", double62 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.2806531524060034d + "'", double63 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + (-0.405429217622299d) + "'", double77 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + (-2.8418588844347075d) + "'", double81 == (-2.8418588844347075d));
    }

    @Test
    public void test1277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1277");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        tTestImpl3.setDistribution(tDistribution4);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution8 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl9 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution8);
        double[] doubleArray15 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray20 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double21 = tTestImpl9.homoscedasticT(doubleArray15, doubleArray20);
        double double22 = tTestImpl6.tTest((double) (short) 100, doubleArray15);
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution24);
        double[] doubleArray31 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray36 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double37 = tTestImpl25.homoscedasticT(doubleArray31, doubleArray36);
        double[] doubleArray45 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double46 = tTestImpl25.t((double) '4', doubleArray45);
        double double47 = tTestImpl6.tTest((double) (short) 100, doubleArray45);
        org.apache.commons.math.distribution.TDistribution tDistribution49 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl50 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution49);
        double[] doubleArray56 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray61 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double62 = tTestImpl50.homoscedasticT(doubleArray56, doubleArray61);
        double double63 = tTestImpl6.tTest((double) (byte) 1, doubleArray56);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl65 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution64);
        double[] doubleArray71 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray76 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double77 = tTestImpl65.homoscedasticT(doubleArray71, doubleArray76);
        double[] doubleArray85 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double86 = tTestImpl65.t((double) '4', doubleArray85);
        double double87 = tTestImpl3.t(doubleArray56, doubleArray85);
        double double88 = tTestImpl0.tTest((double) 0, doubleArray56);
        org.apache.commons.math.distribution.TDistribution tDistribution89 = null;
        tTestImpl0.setDistribution(tDistribution89);
        double[] doubleArray92 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean94 = tTestImpl0.tTest(0.1143321549278642d, doubleArray92, 0.5172120199559697d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.5172120199559697");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-0.405429217622299d) + "'", double21 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.01613264369976175d + "'", double22 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-0.405429217622299d) + "'", double37 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-0.09656583816243881d) + "'", double46 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.07560555610353314d + "'", double47 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + (-0.405429217622299d) + "'", double62 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.3793626154059051d + "'", double63 == 0.3793626154059051d);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + (-0.405429217622299d) + "'", double77 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + (-0.09656583816243881d) + "'", double86 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + (-0.975807309953049d) + "'", double87 == (-0.975807309953049d));
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.35800486798369846d + "'", double88 == 0.35800486798369846d);
    }

    @Test
    public void test1278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1278");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl0.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl0.setDistribution(tDistribution22);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution27 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl28 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution27);
        double[] doubleArray34 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray39 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double40 = tTestImpl28.homoscedasticT(doubleArray34, doubleArray39);
        double double41 = tTestImpl25.tTest((double) (short) 100, doubleArray34);
        double double42 = tTestImpl0.t((double) (byte) 1, doubleArray34);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution45 = null;
        tTestImpl44.setDistribution(tDistribution45);
        org.apache.commons.math.distribution.TDistribution tDistribution47 = null;
        tTestImpl44.setDistribution(tDistribution47);
        org.apache.commons.math.distribution.TDistribution tDistribution50 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl51 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution50);
        double[] doubleArray57 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray62 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double63 = tTestImpl51.homoscedasticT(doubleArray57, doubleArray62);
        double double64 = tTestImpl44.t(3.8d, doubleArray57);
        // The following exception was thrown during execution in test generation
        try {
            double double65 = tTestImpl0.tTest(2.2210142777360953d, doubleArray57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.405429217622299d) + "'", double40 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.01613264369976175d + "'", double41 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.987358558121667d + "'", double42 == 0.987358558121667d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + (-0.405429217622299d) + "'", double63 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.8463073355328574d + "'", double64 == 0.8463073355328574d);
    }

    @Test
    public void test1279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1279");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution1 = null;
        tTestImpl0.setDistribution(tDistribution1);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        tTestImpl0.setDistribution(tDistribution3);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary5 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary6 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double7 = tTestImpl0.t(statisticalSummary5, statisticalSummary6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1280");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.distribution.TDistribution tDistribution16 = null;
        tTestImpl1.setDistribution(tDistribution16);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        tTestImpl1.setDistribution(tDistribution18);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl1.setDistribution(tDistribution20);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary23 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean25 = tTestImpl1.tTest((double) (short) 1, statisticalSummary23, 0.9566618438474437d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.9566618438474437");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
    }

    @Test
    public void test1281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1281");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary5 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean7 = tTestImpl1.tTest(Double.NaN, statisticalSummary5, (-0.5172120199559697d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -0.5172120199559697");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1282");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        tTestImpl1.setDistribution(tDistribution4);
        org.apache.commons.math.distribution.TDistribution tDistribution6 = null;
        tTestImpl1.setDistribution(tDistribution6);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl9 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray13 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution14);
        double[] doubleArray21 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray26 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double27 = tTestImpl15.homoscedasticT(doubleArray21, doubleArray26);
        double double28 = tTestImpl9.tTest(doubleArray13, doubleArray26);
        org.apache.commons.math.distribution.TDistribution tDistribution30 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl31 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution30);
        double[] doubleArray37 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray42 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double43 = tTestImpl31.homoscedasticT(doubleArray37, doubleArray42);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray48 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution49 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl50 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution49);
        double[] doubleArray56 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray61 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double62 = tTestImpl50.homoscedasticT(doubleArray56, doubleArray61);
        double double63 = tTestImpl44.tTest(doubleArray48, doubleArray61);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl65 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution64);
        double[] doubleArray71 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray76 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double77 = tTestImpl65.homoscedasticT(doubleArray71, doubleArray76);
        double double78 = tTestImpl31.t(doubleArray61, doubleArray76);
        boolean boolean80 = tTestImpl9.tTest((double) (short) 0, doubleArray61, Double.NaN);
        double double81 = tTestImpl1.t((double) (short) 100, doubleArray61);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary82 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary83 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double84 = tTestImpl1.tTest(statisticalSummary82, statisticalSummary83);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + (-0.405429217622299d) + "'", double27 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.2806531524060034d + "'", double28 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + (-0.405429217622299d) + "'", double43 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + (-0.405429217622299d) + "'", double62 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.2806531524060034d + "'", double63 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + (-0.405429217622299d) + "'", double77 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + (-2.8418588844347075d) + "'", double81 == (-2.8418588844347075d));
    }

    @Test
    public void test1283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1283");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        tTestImpl0.setDistribution(tDistribution58);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        tTestImpl0.setDistribution(tDistribution60);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        tTestImpl0.setDistribution(tDistribution62);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        tTestImpl0.setDistribution(tDistribution64);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary66 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary67 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double68 = tTestImpl0.tTest(statisticalSummary66, statisticalSummary67);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
    }

    @Test
    public void test1284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1284");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution44 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl45 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution44);
        double[] doubleArray51 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray56 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double57 = tTestImpl45.homoscedasticT(doubleArray51, doubleArray56);
        double double58 = tTestImpl42.tTest((double) (short) 100, doubleArray51);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl61 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution60);
        double[] doubleArray67 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray72 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double73 = tTestImpl61.homoscedasticT(doubleArray67, doubleArray72);
        double[] doubleArray81 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double82 = tTestImpl61.t((double) '4', doubleArray81);
        double double83 = tTestImpl42.tTest((double) (short) 100, doubleArray81);
        double[] doubleArray89 = new double[] { 1.0f, (-0.09656583816243881d), ' ', 0.8463073355328574d, 1.3965146696271626d };
        double double90 = tTestImpl0.homoscedasticTTest(doubleArray81, doubleArray89);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary91 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary92 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean94 = tTestImpl0.tTest(statisticalSummary91, statisticalSummary92, 0.07560555610353314d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-0.405429217622299d) + "'", double57 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.01613264369976175d + "'", double58 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + (-0.405429217622299d) + "'", double73 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + (-0.09656583816243881d) + "'", double82 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.07560555610353314d + "'", double83 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[1.0, -0.09656583816243881, 32.0, 0.8463073355328574, 1.3965146696271626]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.12673187601587688d + "'", double90 == 0.12673187601587688d);
    }

    @Test
    public void test1285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1285");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary21 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double22 = tTestImpl0.t((double) (-1), statisticalSummary21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
    }

    @Test
    public void test1286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1286");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution1 = null;
        tTestImpl0.setDistribution(tDistribution1);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        tTestImpl0.setDistribution(tDistribution3);
        org.apache.commons.math.distribution.TDistribution tDistribution6 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl7 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution6);
        double[] doubleArray13 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray18 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double19 = tTestImpl7.homoscedasticT(doubleArray13, doubleArray18);
        double double20 = tTestImpl0.t(3.8d, doubleArray13);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl22 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray26 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution27 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl28 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution27);
        double[] doubleArray34 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray39 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double40 = tTestImpl28.homoscedasticT(doubleArray34, doubleArray39);
        double double41 = tTestImpl22.tTest(doubleArray26, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl22.t((double) 1L, doubleArray55);
        // The following exception was thrown during execution in test generation
        try {
            double double58 = tTestImpl0.tTest((double) (byte) 0, doubleArray55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-0.405429217622299d) + "'", double19 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.8463073355328574d + "'", double20 == 0.8463073355328574d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.405429217622299d) + "'", double40 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.2806531524060034d + "'", double41 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.3573057358494125d + "'", double57 == 1.3573057358494125d);
    }

    @Test
    public void test1287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1287");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution42 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl43 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution42);
        double[] doubleArray49 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray54 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double55 = tTestImpl43.homoscedasticT(doubleArray49, doubleArray54);
        org.apache.commons.math.distribution.TDistribution tDistribution56 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl57 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution56);
        double[] doubleArray63 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray68 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double69 = tTestImpl57.homoscedasticT(doubleArray63, doubleArray68);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl71 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution73 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl74 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution73);
        double[] doubleArray80 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray85 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double86 = tTestImpl74.homoscedasticT(doubleArray80, doubleArray85);
        double double87 = tTestImpl71.tTest((double) (short) 100, doubleArray80);
        double double88 = tTestImpl57.t((double) 10.0f, doubleArray80);
        double double89 = tTestImpl0.pairedTTest(doubleArray49, doubleArray80);
        org.apache.commons.math.distribution.TDistribution tDistribution90 = null;
        tTestImpl0.setDistribution(tDistribution90);
        org.apache.commons.math.distribution.TDistribution tDistribution92 = null;
        tTestImpl0.setDistribution(tDistribution92);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary94 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary95 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean97 = tTestImpl0.tTest(statisticalSummary94, statisticalSummary95, (-1.1115227041167497d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -1.1115227041167497");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-0.405429217622299d) + "'", double55 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + (-0.405429217622299d) + "'", double69 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + (-0.405429217622299d) + "'", double86 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.01613264369976175d + "'", double87 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.5339796283719219d + "'", double88 == 0.5339796283719219d);
        org.junit.Assert.assertTrue(Double.isNaN(double89));
    }

    @Test
    public void test1288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1288");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl1.t((-0.975807309953049d), doubleArray52);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary56 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean58 = tTestImpl1.tTest((double) (byte) 1, statisticalSummary56, 1.3573057358494125d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 1.3573057358494125");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.4411111919348023d + "'", double54 == 1.4411111919348023d);
    }

    @Test
    public void test1289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1289");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution44 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl45 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution44);
        double[] doubleArray51 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray56 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double57 = tTestImpl45.homoscedasticT(doubleArray51, doubleArray56);
        double double58 = tTestImpl42.tTest((double) (short) 100, doubleArray51);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl60 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray64 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution65 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl66 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution65);
        double[] doubleArray72 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray77 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double78 = tTestImpl66.homoscedasticT(doubleArray72, doubleArray77);
        double double79 = tTestImpl60.tTest(doubleArray64, doubleArray77);
        double double80 = tTestImpl42.t((double) (short) 10, doubleArray64);
        org.apache.commons.math.distribution.TDistribution tDistribution81 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl82 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution81);
        double[] doubleArray88 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray93 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double94 = tTestImpl82.homoscedasticT(doubleArray88, doubleArray93);
        double double95 = tTestImpl0.homoscedasticTTest(doubleArray64, doubleArray88);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary97 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double98 = tTestImpl0.t((-1.587268255506484d), statisticalSummary97);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-0.405429217622299d) + "'", double57 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.01613264369976175d + "'", double58 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + (-0.405429217622299d) + "'", double78 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.2806531524060034d + "'", double79 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 3.8d + "'", double80 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + (-0.405429217622299d) + "'", double94 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 0.15639940166959065d + "'", double95 == 0.15639940166959065d);
    }

    @Test
    public void test1290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1290");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        org.apache.commons.math.distribution.TDistribution tDistribution34 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl35 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution34);
        double[] doubleArray41 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray46 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double47 = tTestImpl35.homoscedasticT(doubleArray41, doubleArray46);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl48 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray52 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl54 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution53);
        double[] doubleArray60 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray65 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double66 = tTestImpl54.homoscedasticT(doubleArray60, doubleArray65);
        double double67 = tTestImpl48.tTest(doubleArray52, doubleArray65);
        org.apache.commons.math.distribution.TDistribution tDistribution68 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl69 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution68);
        double[] doubleArray75 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray80 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double81 = tTestImpl69.homoscedasticT(doubleArray75, doubleArray80);
        double double82 = tTestImpl35.t(doubleArray65, doubleArray80);
        double double83 = tTestImpl0.homoscedasticT(doubleArray27, doubleArray80);
        org.apache.commons.math.distribution.TDistribution tDistribution84 = null;
        tTestImpl0.setDistribution(tDistribution84);
        org.apache.commons.math.distribution.TDistribution tDistribution86 = null;
        tTestImpl0.setDistribution(tDistribution86);
        org.apache.commons.math.distribution.TDistribution tDistribution88 = null;
        tTestImpl0.setDistribution(tDistribution88);
        org.apache.commons.math.distribution.TDistribution tDistribution90 = null;
        tTestImpl0.setDistribution(tDistribution90);
        org.apache.commons.math.distribution.TDistribution tDistribution92 = null;
        tTestImpl0.setDistribution(tDistribution92);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary94 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary95 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double96 = tTestImpl0.homoscedasticTTest(statisticalSummary94, statisticalSummary95);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + (-0.405429217622299d) + "'", double47 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + (-0.405429217622299d) + "'", double66 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.2806531524060034d + "'", double67 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + (-0.405429217622299d) + "'", double81 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + (-0.405429217622299d) + "'", double83 == (-0.405429217622299d));
    }

    @Test
    public void test1291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1291");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        tTestImpl0.setDistribution(tDistribution58);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        tTestImpl0.setDistribution(tDistribution60);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary63 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double64 = tTestImpl0.t(0.07560555610353314d, statisticalSummary63);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
    }

    @Test
    public void test1292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1292");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl1.t((-0.975807309953049d), doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl1.setDistribution(tDistribution55);
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        tTestImpl1.setDistribution(tDistribution57);
        org.apache.commons.math.distribution.TDistribution tDistribution59 = null;
        tTestImpl1.setDistribution(tDistribution59);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary61 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary62 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double63 = tTestImpl1.t(statisticalSummary61, statisticalSummary62);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.4411111919348023d + "'", double54 == 1.4411111919348023d);
    }

    @Test
    public void test1293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1293");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl22 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution21);
        double[] doubleArray28 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray33 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double34 = tTestImpl22.homoscedasticT(doubleArray28, doubleArray33);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl35 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray39 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl35.tTest(doubleArray39, doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl56 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution55);
        double[] doubleArray62 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray67 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double68 = tTestImpl56.homoscedasticT(doubleArray62, doubleArray67);
        double double69 = tTestImpl22.t(doubleArray52, doubleArray67);
        boolean boolean71 = tTestImpl0.tTest((double) (short) 0, doubleArray52, Double.NaN);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary73 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double74 = tTestImpl0.tTest((double) 10, statisticalSummary73);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-0.405429217622299d) + "'", double34 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.2806531524060034d + "'", double54 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + (-0.405429217622299d) + "'", double68 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test1294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1294");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution42 = null;
        tTestImpl0.setDistribution(tDistribution42);
        org.apache.commons.math.distribution.TDistribution tDistribution44 = null;
        tTestImpl0.setDistribution(tDistribution44);
        org.apache.commons.math.distribution.TDistribution tDistribution46 = null;
        tTestImpl0.setDistribution(tDistribution46);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary48 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary49 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double50 = tTestImpl0.homoscedasticTTest(statisticalSummary48, statisticalSummary49);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
    }

    @Test
    public void test1295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1295");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        tTestImpl42.setDistribution(tDistribution43);
        org.apache.commons.math.distribution.TDistribution tDistribution45 = null;
        tTestImpl42.setDistribution(tDistribution45);
        org.apache.commons.math.distribution.TDistribution tDistribution48 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl49 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution48);
        double[] doubleArray55 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray60 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double61 = tTestImpl49.homoscedasticT(doubleArray55, doubleArray60);
        double double62 = tTestImpl42.t(3.8d, doubleArray55);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl63 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray67 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution68 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl69 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution68);
        double[] doubleArray75 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray80 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double81 = tTestImpl69.homoscedasticT(doubleArray75, doubleArray80);
        double double82 = tTestImpl63.tTest(doubleArray67, doubleArray80);
        double double83 = tTestImpl0.t(doubleArray55, doubleArray80);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary85 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double86 = tTestImpl0.tTest(10.0d, statisticalSummary85);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + (-0.405429217622299d) + "'", double61 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.8463073355328574d + "'", double62 == 0.8463073355328574d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + (-0.405429217622299d) + "'", double81 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.2806531524060034d + "'", double82 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + (-0.4023317120818342d) + "'", double83 == (-0.4023317120818342d));
    }

    @Test
    public void test1296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1296");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution42 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl43 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution42);
        double[] doubleArray49 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray54 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double55 = tTestImpl43.homoscedasticT(doubleArray49, doubleArray54);
        org.apache.commons.math.distribution.TDistribution tDistribution56 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl57 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution56);
        double[] doubleArray63 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray68 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double69 = tTestImpl57.homoscedasticT(doubleArray63, doubleArray68);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl71 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution73 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl74 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution73);
        double[] doubleArray80 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray85 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double86 = tTestImpl74.homoscedasticT(doubleArray80, doubleArray85);
        double double87 = tTestImpl71.tTest((double) (short) 100, doubleArray80);
        double double88 = tTestImpl57.t((double) 10.0f, doubleArray80);
        double double89 = tTestImpl0.pairedTTest(doubleArray49, doubleArray80);
        org.apache.commons.math.distribution.TDistribution tDistribution90 = null;
        tTestImpl0.setDistribution(tDistribution90);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary92 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary93 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double94 = tTestImpl0.t(statisticalSummary92, statisticalSummary93);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-0.405429217622299d) + "'", double55 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + (-0.405429217622299d) + "'", double69 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + (-0.405429217622299d) + "'", double86 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.01613264369976175d + "'", double87 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.5339796283719219d + "'", double88 == 0.5339796283719219d);
        org.junit.Assert.assertTrue(Double.isNaN(double89));
    }

    @Test
    public void test1297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1297");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        double double37 = tTestImpl1.t(10.0d, doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution38 = null;
        tTestImpl1.setDistribution(tDistribution38);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary40 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary41 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double42 = tTestImpl1.homoscedasticTTest(statisticalSummary40, statisticalSummary41);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 3.8d + "'", double37 == 3.8d);
    }

    @Test
    public void test1298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1298");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        double double37 = tTestImpl1.t(10.0d, doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution38 = null;
        tTestImpl1.setDistribution(tDistribution38);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        tTestImpl1.setDistribution(tDistribution40);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary42 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary43 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double44 = tTestImpl1.t(statisticalSummary42, statisticalSummary43);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 3.8d + "'", double37 == 3.8d);
    }

    @Test
    public void test1299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1299");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl22 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution21);
        double[] doubleArray28 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray33 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double34 = tTestImpl22.homoscedasticT(doubleArray28, doubleArray33);
        org.apache.commons.math.distribution.TDistribution tDistribution35 = null;
        tTestImpl22.setDistribution(tDistribution35);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl38 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray42 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl38.tTest(doubleArray42, doubleArray55);
        double double58 = tTestImpl22.t(10.0d, doubleArray42);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl61 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution60);
        double[] doubleArray67 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray72 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double73 = tTestImpl61.homoscedasticT(doubleArray67, doubleArray72);
        double double74 = tTestImpl22.t(100.0d, doubleArray72);
        double double75 = tTestImpl0.t((double) 0L, doubleArray72);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary77 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double78 = tTestImpl0.t((-0.975807309953049d), statisticalSummary77);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-0.405429217622299d) + "'", double34 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.2806531524060034d + "'", double57 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 3.8d + "'", double58 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + (-0.405429217622299d) + "'", double73 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-2.8418588844347075d) + "'", double74 == (-2.8418588844347075d));
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 1.3997215400947067d + "'", double75 == 1.3997215400947067d);
    }

    @Test
    public void test1300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1300");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl1.t((-0.975807309953049d), doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl1.setDistribution(tDistribution55);
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        tTestImpl1.setDistribution(tDistribution57);
        org.apache.commons.math.distribution.TDistribution tDistribution59 = null;
        tTestImpl1.setDistribution(tDistribution59);
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        tTestImpl1.setDistribution(tDistribution61);
        double[] doubleArray68 = new double[] { 0.405429217622299d, (byte) -1, 10.0f, 0.5172120199559697d };
        double double69 = tTestImpl1.t(1.0377339947605275d, doubleArray68);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary71 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double72 = tTestImpl1.t(0.07560555610353314d, statisticalSummary71);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.4411111919348023d + "'", double54 == 1.4411111919348023d);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[0.405429217622299, -1.0, 10.0, 0.5172120199559697]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.5703029263335007d + "'", double69 == 0.5703029263335007d);
    }

    @Test
    public void test1301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1301");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl0.t((double) (short) 10, doubleArray22);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution41 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution41);
        double[] doubleArray48 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray53 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double54 = tTestImpl42.homoscedasticT(doubleArray48, doubleArray53);
        double double55 = tTestImpl39.tTest((double) (short) 100, doubleArray48);
        org.apache.commons.math.distribution.TDistribution tDistribution56 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl57 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution56);
        double[] doubleArray63 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray68 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double69 = tTestImpl57.homoscedasticT(doubleArray63, doubleArray68);
        double double70 = tTestImpl0.pairedT(doubleArray48, doubleArray63);
        org.apache.commons.math.distribution.TDistribution tDistribution71 = null;
        tTestImpl0.setDistribution(tDistribution71);
        org.apache.commons.math.distribution.TDistribution tDistribution73 = null;
        tTestImpl0.setDistribution(tDistribution73);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary76 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double77 = tTestImpl0.tTest(0.004213458414249471d, statisticalSummary76);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 3.8d + "'", double38 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + (-0.405429217622299d) + "'", double54 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.01613264369976175d + "'", double55 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + (-0.405429217622299d) + "'", double69 == (-0.405429217622299d));
        org.junit.Assert.assertTrue(Double.isNaN(double70));
    }

    @Test
    public void test1302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1302");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        tTestImpl3.setDistribution(tDistribution4);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution8 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl9 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution8);
        double[] doubleArray15 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray20 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double21 = tTestImpl9.homoscedasticT(doubleArray15, doubleArray20);
        double double22 = tTestImpl6.tTest((double) (short) 100, doubleArray15);
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution24);
        double[] doubleArray31 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray36 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double37 = tTestImpl25.homoscedasticT(doubleArray31, doubleArray36);
        double[] doubleArray45 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double46 = tTestImpl25.t((double) '4', doubleArray45);
        double double47 = tTestImpl6.tTest((double) (short) 100, doubleArray45);
        org.apache.commons.math.distribution.TDistribution tDistribution49 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl50 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution49);
        double[] doubleArray56 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray61 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double62 = tTestImpl50.homoscedasticT(doubleArray56, doubleArray61);
        double double63 = tTestImpl6.tTest((double) (byte) 1, doubleArray56);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl65 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution64);
        double[] doubleArray71 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray76 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double77 = tTestImpl65.homoscedasticT(doubleArray71, doubleArray76);
        double[] doubleArray85 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double86 = tTestImpl65.t((double) '4', doubleArray85);
        double double87 = tTestImpl3.t(doubleArray56, doubleArray85);
        double double88 = tTestImpl0.tTest((double) 0, doubleArray56);
        org.apache.commons.math.distribution.TDistribution tDistribution89 = null;
        tTestImpl0.setDistribution(tDistribution89);
        org.apache.commons.math.distribution.TDistribution tDistribution91 = null;
        tTestImpl0.setDistribution(tDistribution91);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary93 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary94 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double95 = tTestImpl0.homoscedasticT(statisticalSummary93, statisticalSummary94);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-0.405429217622299d) + "'", double21 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.01613264369976175d + "'", double22 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-0.405429217622299d) + "'", double37 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-0.09656583816243881d) + "'", double46 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.07560555610353314d + "'", double47 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + (-0.405429217622299d) + "'", double62 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.3793626154059051d + "'", double63 == 0.3793626154059051d);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + (-0.405429217622299d) + "'", double77 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + (-0.09656583816243881d) + "'", double86 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + (-0.975807309953049d) + "'", double87 == (-0.975807309953049d));
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.35800486798369846d + "'", double88 == 0.35800486798369846d);
    }

    @Test
    public void test1303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1303");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl1.t((-0.975807309953049d), doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl1.setDistribution(tDistribution55);
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        tTestImpl1.setDistribution(tDistribution57);
        org.apache.commons.math.distribution.TDistribution tDistribution59 = null;
        tTestImpl1.setDistribution(tDistribution59);
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        tTestImpl1.setDistribution(tDistribution61);
        double[] doubleArray68 = new double[] { 0.405429217622299d, (byte) -1, 10.0f, 0.5172120199559697d };
        double double69 = tTestImpl1.t(1.0377339947605275d, doubleArray68);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary71 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double72 = tTestImpl1.t((double) ' ', statisticalSummary71);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.4411111919348023d + "'", double54 == 1.4411111919348023d);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[0.405429217622299, -1.0, 10.0, 0.5172120199559697]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.5703029263335007d + "'", double69 == 0.5703029263335007d);
    }

    @Test
    public void test1304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1304");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution1 = null;
        tTestImpl0.setDistribution(tDistribution1);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl4 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution6 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl7 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution6);
        double[] doubleArray13 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray18 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double19 = tTestImpl7.homoscedasticT(doubleArray13, doubleArray18);
        double double20 = tTestImpl4.tTest((double) (short) 100, doubleArray13);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double[] doubleArray43 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double44 = tTestImpl23.t((double) '4', doubleArray43);
        double double45 = tTestImpl4.tTest((double) (short) 100, doubleArray43);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl46 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution48 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl49 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution48);
        double[] doubleArray55 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray60 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double61 = tTestImpl49.homoscedasticT(doubleArray55, doubleArray60);
        double double62 = tTestImpl46.tTest((double) (short) 100, doubleArray55);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl65 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution64);
        double[] doubleArray71 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray76 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double77 = tTestImpl65.homoscedasticT(doubleArray71, doubleArray76);
        double[] doubleArray85 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double86 = tTestImpl65.t((double) '4', doubleArray85);
        double double87 = tTestImpl46.tTest((double) (short) 100, doubleArray85);
        double[] doubleArray93 = new double[] { 1.0f, (-0.09656583816243881d), ' ', 0.8463073355328574d, 1.3965146696271626d };
        double double94 = tTestImpl4.homoscedasticTTest(doubleArray85, doubleArray93);
        double double95 = tTestImpl0.t((double) 100, doubleArray93);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary96 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary97 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double98 = tTestImpl0.homoscedasticT(statisticalSummary96, statisticalSummary97);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-0.405429217622299d) + "'", double19 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.01613264369976175d + "'", double20 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + (-0.09656583816243881d) + "'", double44 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.07560555610353314d + "'", double45 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + (-0.405429217622299d) + "'", double61 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.01613264369976175d + "'", double62 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + (-0.405429217622299d) + "'", double77 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + (-0.09656583816243881d) + "'", double86 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.07560555610353314d + "'", double87 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[1.0, -0.09656583816243881, 32.0, 0.8463073355328574, 1.3965146696271626]");
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 0.12673187601587688d + "'", double94 == 0.12673187601587688d);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + (-14.881283513379177d) + "'", double95 == (-14.881283513379177d));
    }

    @Test
    public void test1305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1305");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        tTestImpl0.setDistribution(tDistribution58);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        tTestImpl0.setDistribution(tDistribution60);
        org.apache.commons.math.distribution.TDistribution tDistribution63 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl64 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution63);
        double[] doubleArray70 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray75 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double76 = tTestImpl64.homoscedasticT(doubleArray70, doubleArray75);
        double double77 = tTestImpl0.t((double) 0, doubleArray75);
        org.apache.commons.math.distribution.TDistribution tDistribution78 = null;
        tTestImpl0.setDistribution(tDistribution78);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary80 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary81 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean83 = tTestImpl0.tTest(statisticalSummary80, statisticalSummary81, (double) 10.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 10.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + (-0.405429217622299d) + "'", double76 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 1.3997215400947067d + "'", double77 == 1.3997215400947067d);
    }

    @Test
    public void test1306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1306");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution17);
        double[] doubleArray24 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray29 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double30 = tTestImpl18.homoscedasticT(doubleArray24, doubleArray29);
        double double31 = tTestImpl15.tTest((double) (short) 100, doubleArray24);
        org.apache.commons.math.distribution.TDistribution tDistribution33 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl34 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution33);
        double[] doubleArray40 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray45 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double46 = tTestImpl34.homoscedasticT(doubleArray40, doubleArray45);
        double[] doubleArray54 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double55 = tTestImpl34.t((double) '4', doubleArray54);
        double double56 = tTestImpl15.tTest((double) (short) 100, doubleArray54);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl59 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution58);
        double[] doubleArray65 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray70 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double71 = tTestImpl59.homoscedasticT(doubleArray65, doubleArray70);
        double double72 = tTestImpl15.tTest((double) (byte) 1, doubleArray65);
        org.apache.commons.math.distribution.TDistribution tDistribution73 = null;
        tTestImpl15.setDistribution(tDistribution73);
        org.apache.commons.math.distribution.TDistribution tDistribution75 = null;
        tTestImpl15.setDistribution(tDistribution75);
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        tTestImpl15.setDistribution(tDistribution77);
        org.apache.commons.math.distribution.TDistribution tDistribution79 = null;
        tTestImpl15.setDistribution(tDistribution79);
        org.apache.commons.math.distribution.TDistribution tDistribution81 = null;
        tTestImpl15.setDistribution(tDistribution81);
        double[] doubleArray89 = new double[] { (-2.8418588844347075d), 100.0f, (-1.0f), 0.35800486798369846d, 0.01613264369976175d };
        double double90 = tTestImpl15.t((double) (short) 0, doubleArray89);
        double double91 = tTestImpl1.t(0.5339796283719219d, doubleArray89);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary92 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary93 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean95 = tTestImpl1.tTest(statisticalSummary92, statisticalSummary93, 0.982920007042921d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.982920007042921");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-0.405429217622299d) + "'", double30 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.01613264369976175d + "'", double31 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-0.405429217622299d) + "'", double46 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-0.09656583816243881d) + "'", double55 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.07560555610353314d + "'", double56 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + (-0.405429217622299d) + "'", double71 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.3793626154059051d + "'", double72 == 0.3793626154059051d);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[-2.8418588844347075, 100.0, -1.0, 0.35800486798369846, 0.01613264369976175]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.9566618438474437d + "'", double90 == 0.9566618438474437d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.9302024075262618d + "'", double91 == 0.9302024075262618d);
    }

    @Test
    public void test1307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1307");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        double[] doubleArray48 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double49 = tTestImpl0.tTest(0.405429217622299d, doubleArray48);
        double[] doubleArray57 = new double[] { 10L, 0.9566618438474437d, 1.0f, 0.15639940166959065d, (short) 0, 0.15639940166959065d };
        double double58 = tTestImpl0.tTest(10.0d, doubleArray57);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary60 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double61 = tTestImpl0.tTest((double) (short) 100, statisticalSummary60);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.1143321549278642d + "'", double49 == 0.1143321549278642d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 0.9566618438474437, 1.0, 0.15639940166959065, 0.0, 0.15639940166959065]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.004213458414249471d + "'", double58 == 0.004213458414249471d);
    }

    @Test
    public void test1308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1308");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl22 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution21);
        double[] doubleArray28 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray33 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double34 = tTestImpl22.homoscedasticT(doubleArray28, doubleArray33);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl35 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray39 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl35.tTest(doubleArray39, doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl56 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution55);
        double[] doubleArray62 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray67 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double68 = tTestImpl56.homoscedasticT(doubleArray62, doubleArray67);
        double double69 = tTestImpl22.t(doubleArray52, doubleArray67);
        boolean boolean71 = tTestImpl0.tTest((double) (short) 0, doubleArray52, Double.NaN);
        org.apache.commons.math.distribution.TDistribution tDistribution72 = null;
        tTestImpl0.setDistribution(tDistribution72);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary75 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double76 = tTestImpl0.tTest((double) (short) 100, statisticalSummary75);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-0.405429217622299d) + "'", double34 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.2806531524060034d + "'", double54 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + (-0.405429217622299d) + "'", double68 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test1309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1309");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution17);
        double[] doubleArray24 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray29 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double30 = tTestImpl18.homoscedasticT(doubleArray24, doubleArray29);
        double double31 = tTestImpl15.tTest((double) (short) 100, doubleArray24);
        double double32 = tTestImpl1.t((double) 10.0f, doubleArray24);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary34 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean36 = tTestImpl1.tTest(0.07560555610353314d, statisticalSummary34, 0.982920007042921d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.982920007042921");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-0.405429217622299d) + "'", double30 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.01613264369976175d + "'", double31 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.5339796283719219d + "'", double32 == 0.5339796283719219d);
    }

    @Test
    public void test1310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1310");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution17);
        double[] doubleArray24 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray29 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double30 = tTestImpl18.homoscedasticT(doubleArray24, doubleArray29);
        double double31 = tTestImpl15.tTest((double) (short) 100, doubleArray24);
        org.apache.commons.math.distribution.TDistribution tDistribution33 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl34 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution33);
        double[] doubleArray40 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray45 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double46 = tTestImpl34.homoscedasticT(doubleArray40, doubleArray45);
        double[] doubleArray54 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double55 = tTestImpl34.t((double) '4', doubleArray54);
        double double56 = tTestImpl15.tTest((double) (short) 100, doubleArray54);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl59 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution58);
        double[] doubleArray65 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray70 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double71 = tTestImpl59.homoscedasticT(doubleArray65, doubleArray70);
        double double72 = tTestImpl15.tTest((double) (byte) 1, doubleArray65);
        org.apache.commons.math.distribution.TDistribution tDistribution73 = null;
        tTestImpl15.setDistribution(tDistribution73);
        org.apache.commons.math.distribution.TDistribution tDistribution75 = null;
        tTestImpl15.setDistribution(tDistribution75);
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        tTestImpl15.setDistribution(tDistribution77);
        org.apache.commons.math.distribution.TDistribution tDistribution79 = null;
        tTestImpl15.setDistribution(tDistribution79);
        org.apache.commons.math.distribution.TDistribution tDistribution81 = null;
        tTestImpl15.setDistribution(tDistribution81);
        double[] doubleArray89 = new double[] { (-2.8418588844347075d), 100.0f, (-1.0f), 0.35800486798369846d, 0.01613264369976175d };
        double double90 = tTestImpl15.t((double) (short) 0, doubleArray89);
        double double91 = tTestImpl1.t(0.5339796283719219d, doubleArray89);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary92 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary93 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean95 = tTestImpl1.tTest(statisticalSummary92, statisticalSummary93, 0.15639940166959065d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-0.405429217622299d) + "'", double30 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.01613264369976175d + "'", double31 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-0.405429217622299d) + "'", double46 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-0.09656583816243881d) + "'", double55 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.07560555610353314d + "'", double56 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + (-0.405429217622299d) + "'", double71 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.3793626154059051d + "'", double72 == 0.3793626154059051d);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[-2.8418588844347075, 100.0, -1.0, 0.35800486798369846, 0.01613264369976175]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.9566618438474437d + "'", double90 == 0.9566618438474437d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.9302024075262618d + "'", double91 == 0.9302024075262618d);
    }

    @Test
    public void test1311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1311");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary43 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean45 = tTestImpl0.tTest((double) (byte) 100, statisticalSummary43, (double) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 10.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
    }

    @Test
    public void test1312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1312");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        double[] doubleArray21 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double22 = tTestImpl1.t((double) '4', doubleArray21);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary24 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean26 = tTestImpl1.tTest((-1.587268255506484d), statisticalSummary24, 0.405429217622299d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-0.09656583816243881d) + "'", double22 == (-0.09656583816243881d));
    }

    @Test
    public void test1313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1313");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        tTestImpl1.setDistribution(tDistribution4);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray10 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution11 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl12 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution11);
        double[] doubleArray18 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray23 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double24 = tTestImpl12.homoscedasticT(doubleArray18, doubleArray23);
        double double25 = tTestImpl6.tTest(doubleArray10, doubleArray23);
        org.apache.commons.math.distribution.TDistribution tDistribution26 = null;
        tTestImpl6.setDistribution(tDistribution26);
        org.apache.commons.math.distribution.TDistribution tDistribution28 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl29 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution28);
        double[] doubleArray35 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray40 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double41 = tTestImpl29.homoscedasticT(doubleArray35, doubleArray40);
        double[] doubleArray49 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double50 = tTestImpl29.t((double) '4', doubleArray49);
        org.apache.commons.math.distribution.TDistribution tDistribution51 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl52 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution51);
        double[] doubleArray58 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray63 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double64 = tTestImpl52.homoscedasticT(doubleArray58, doubleArray63);
        double double65 = tTestImpl6.t(doubleArray49, doubleArray63);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl66 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution68 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl69 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution68);
        double[] doubleArray75 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray80 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double81 = tTestImpl69.homoscedasticT(doubleArray75, doubleArray80);
        double double82 = tTestImpl66.tTest((double) (short) 100, doubleArray75);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean84 = tTestImpl1.tTest(doubleArray49, doubleArray75, 0.9566618438474437d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.9566618438474437");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-0.405429217622299d) + "'", double24 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.2806531524060034d + "'", double25 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + (-0.405429217622299d) + "'", double41 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + (-0.09656583816243881d) + "'", double50 == (-0.09656583816243881d));
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + (-0.405429217622299d) + "'", double64 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.5172120199559697d + "'", double65 == 0.5172120199559697d);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + (-0.405429217622299d) + "'", double81 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.01613264369976175d + "'", double82 == 0.01613264369976175d);
    }

    @Test
    public void test1314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1314");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        tTestImpl0.setDistribution(tDistribution58);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        tTestImpl0.setDistribution(tDistribution60);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        tTestImpl0.setDistribution(tDistribution62);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        tTestImpl0.setDistribution(tDistribution64);
        org.apache.commons.math.distribution.TDistribution tDistribution66 = null;
        tTestImpl0.setDistribution(tDistribution66);
        double[] doubleArray74 = new double[] { (-2.8418588844347075d), 100.0f, (-1.0f), 0.35800486798369846d, 0.01613264369976175d };
        double double75 = tTestImpl0.t((double) (short) 0, doubleArray74);
        org.apache.commons.math.distribution.TDistribution tDistribution76 = null;
        tTestImpl0.setDistribution(tDistribution76);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary79 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double80 = tTestImpl0.t(0.9755634976417653d, statisticalSummary79);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-2.8418588844347075, 100.0, -1.0, 0.35800486798369846, 0.01613264369976175]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.9566618438474437d + "'", double75 == 0.9566618438474437d);
    }

    @Test
    public void test1315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1315");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl0.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl0.setDistribution(tDistribution22);
        org.apache.commons.math.distribution.TDistribution tDistribution25 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl26 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution25);
        org.apache.commons.math.distribution.TDistribution tDistribution27 = null;
        tTestImpl26.setDistribution(tDistribution27);
        org.apache.commons.math.distribution.TDistribution tDistribution29 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl30 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution29);
        double[] doubleArray36 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray41 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double42 = tTestImpl30.homoscedasticT(doubleArray36, doubleArray41);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl43 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray47 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution48 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl49 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution48);
        double[] doubleArray55 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray60 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double61 = tTestImpl49.homoscedasticT(doubleArray55, doubleArray60);
        double double62 = tTestImpl43.tTest(doubleArray47, doubleArray60);
        double double63 = tTestImpl26.homoscedasticT(doubleArray41, doubleArray47);
        double double64 = tTestImpl0.t((double) (byte) 100, doubleArray47);
        java.lang.Class<?> wildcardClass65 = tTestImpl0.getClass();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-0.405429217622299d) + "'", double42 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + (-0.405429217622299d) + "'", double61 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.2806531524060034d + "'", double62 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + (-1.1115227041167497d) + "'", double63 == (-1.1115227041167497d));
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + (-2.2d) + "'", double64 == (-2.2d));
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test1316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1316");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl21.tTest((double) (short) 100, doubleArray30);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray43 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution44 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl45 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution44);
        double[] doubleArray51 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray56 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double57 = tTestImpl45.homoscedasticT(doubleArray51, doubleArray56);
        double double58 = tTestImpl39.tTest(doubleArray43, doubleArray56);
        double double59 = tTestImpl21.t((double) (short) 10, doubleArray43);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl60 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl63 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution62);
        double[] doubleArray69 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray74 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double75 = tTestImpl63.homoscedasticT(doubleArray69, doubleArray74);
        double double76 = tTestImpl60.tTest((double) (short) 100, doubleArray69);
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl78 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution77);
        double[] doubleArray84 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray89 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double90 = tTestImpl78.homoscedasticT(doubleArray84, doubleArray89);
        double double91 = tTestImpl21.pairedT(doubleArray69, doubleArray84);
        double double92 = tTestImpl0.t((double) (short) 0, doubleArray84);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary93 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary94 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean96 = tTestImpl0.tTest(statisticalSummary93, statisticalSummary94, (double) 10L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 10.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.01613264369976175d + "'", double37 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-0.405429217622299d) + "'", double57 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.2806531524060034d + "'", double58 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 3.8d + "'", double59 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + (-0.405429217622299d) + "'", double75 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.01613264369976175d + "'", double76 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + (-0.405429217622299d) + "'", double90 == (-0.405429217622299d));
        org.junit.Assert.assertTrue(Double.isNaN(double91));
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 1.0377339947605275d + "'", double92 == 1.0377339947605275d);
    }

    @Test
    public void test1317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1317");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        tTestImpl0.setDistribution(tDistribution17);
        org.apache.commons.math.distribution.TDistribution tDistribution19 = null;
        tTestImpl0.setDistribution(tDistribution19);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        tTestImpl23.setDistribution(tDistribution24);
        org.apache.commons.math.distribution.TDistribution tDistribution27 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl28 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution27);
        double[] doubleArray34 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray39 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double40 = tTestImpl28.homoscedasticT(doubleArray34, doubleArray39);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray45 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution46 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl47 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution46);
        double[] doubleArray53 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray58 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double59 = tTestImpl47.homoscedasticT(doubleArray53, doubleArray58);
        double double60 = tTestImpl41.tTest(doubleArray45, doubleArray58);
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl62 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution61);
        double[] doubleArray68 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray73 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double74 = tTestImpl62.homoscedasticT(doubleArray68, doubleArray73);
        double double75 = tTestImpl28.t(doubleArray58, doubleArray73);
        double double76 = tTestImpl23.t(0.07560555610353314d, doubleArray58);
        double double77 = tTestImpl0.t((double) (short) 10, doubleArray58);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary78 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary79 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean81 = tTestImpl0.tTest(statisticalSummary78, statisticalSummary79, 10.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 10.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.405429217622299d) + "'", double40 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + (-0.405429217622299d) + "'", double59 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.2806531524060034d + "'", double60 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-0.405429217622299d) + "'", double74 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 1.3965146696271626d + "'", double76 == 1.3965146696271626d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.9755634976417653d + "'", double77 == 0.9755634976417653d);
    }

    @Test
    public void test1318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1318");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl2 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray6 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution7 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl8 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution7);
        double[] doubleArray14 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray19 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double20 = tTestImpl8.homoscedasticT(doubleArray14, doubleArray19);
        double double21 = tTestImpl2.tTest(doubleArray6, doubleArray19);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution25 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl26 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution25);
        double[] doubleArray32 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray37 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double38 = tTestImpl26.homoscedasticT(doubleArray32, doubleArray37);
        double double39 = tTestImpl23.tTest((double) (short) 100, doubleArray32);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray45 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution46 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl47 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution46);
        double[] doubleArray53 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray58 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double59 = tTestImpl47.homoscedasticT(doubleArray53, doubleArray58);
        double double60 = tTestImpl41.tTest(doubleArray45, doubleArray58);
        double double61 = tTestImpl23.t((double) (short) 10, doubleArray45);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl62 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl65 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution64);
        double[] doubleArray71 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray76 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double77 = tTestImpl65.homoscedasticT(doubleArray71, doubleArray76);
        double double78 = tTestImpl62.tTest((double) (short) 100, doubleArray71);
        org.apache.commons.math.distribution.TDistribution tDistribution79 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl80 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution79);
        double[] doubleArray86 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray91 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double92 = tTestImpl80.homoscedasticT(doubleArray86, doubleArray91);
        double double93 = tTestImpl23.pairedT(doubleArray71, doubleArray86);
        double double94 = tTestImpl2.t((double) (short) 0, doubleArray86);
        double[] doubleArray95 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean97 = tTestImpl1.pairedTTest(doubleArray86, doubleArray95, (-1.1115227041167497d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -1.1115227041167497");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-0.405429217622299d) + "'", double20 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.2806531524060034d + "'", double21 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-0.405429217622299d) + "'", double38 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.01613264369976175d + "'", double39 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + (-0.405429217622299d) + "'", double59 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.2806531524060034d + "'", double60 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 3.8d + "'", double61 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + (-0.405429217622299d) + "'", double77 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.01613264369976175d + "'", double78 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + (-0.405429217622299d) + "'", double92 == (-0.405429217622299d));
        org.junit.Assert.assertTrue(Double.isNaN(double93));
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 1.0377339947605275d + "'", double94 == 1.0377339947605275d);
    }

    @Test
    public void test1319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1319");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl21.tTest((double) (short) 100, doubleArray30);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray43 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution44 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl45 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution44);
        double[] doubleArray51 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray56 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double57 = tTestImpl45.homoscedasticT(doubleArray51, doubleArray56);
        double double58 = tTestImpl39.tTest(doubleArray43, doubleArray56);
        double double59 = tTestImpl21.t((double) (short) 10, doubleArray43);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl60 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl63 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution62);
        double[] doubleArray69 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray74 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double75 = tTestImpl63.homoscedasticT(doubleArray69, doubleArray74);
        double double76 = tTestImpl60.tTest((double) (short) 100, doubleArray69);
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl78 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution77);
        double[] doubleArray84 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray89 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double90 = tTestImpl78.homoscedasticT(doubleArray84, doubleArray89);
        double double91 = tTestImpl21.pairedT(doubleArray69, doubleArray84);
        double double92 = tTestImpl0.t((double) (short) 0, doubleArray84);
        org.apache.commons.math.distribution.TDistribution tDistribution93 = null;
        tTestImpl0.setDistribution(tDistribution93);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary96 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double97 = tTestImpl0.tTest((double) (short) 100, statisticalSummary96);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.01613264369976175d + "'", double37 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-0.405429217622299d) + "'", double57 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.2806531524060034d + "'", double58 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 3.8d + "'", double59 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + (-0.405429217622299d) + "'", double75 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.01613264369976175d + "'", double76 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + (-0.405429217622299d) + "'", double90 == (-0.405429217622299d));
        org.junit.Assert.assertTrue(Double.isNaN(double91));
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 1.0377339947605275d + "'", double92 == 1.0377339947605275d);
    }

    @Test
    public void test1320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1320");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.distribution.TDistribution tDistribution16 = null;
        tTestImpl1.setDistribution(tDistribution16);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        tTestImpl1.setDistribution(tDistribution18);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl1.setDistribution(tDistribution20);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray27 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution28 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl29 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution28);
        double[] doubleArray35 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray40 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double41 = tTestImpl29.homoscedasticT(doubleArray35, doubleArray40);
        double double42 = tTestImpl23.tTest(doubleArray27, doubleArray40);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        tTestImpl23.setDistribution(tDistribution43);
        org.apache.commons.math.distribution.TDistribution tDistribution45 = null;
        tTestImpl23.setDistribution(tDistribution45);
        org.apache.commons.math.distribution.TDistribution tDistribution48 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl49 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution48);
        org.apache.commons.math.distribution.TDistribution tDistribution50 = null;
        tTestImpl49.setDistribution(tDistribution50);
        org.apache.commons.math.distribution.TDistribution tDistribution52 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl53 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution52);
        double[] doubleArray59 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray64 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double65 = tTestImpl53.homoscedasticT(doubleArray59, doubleArray64);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl66 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray70 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution71 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl72 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution71);
        double[] doubleArray78 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray83 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double84 = tTestImpl72.homoscedasticT(doubleArray78, doubleArray83);
        double double85 = tTestImpl66.tTest(doubleArray70, doubleArray83);
        double double86 = tTestImpl49.homoscedasticT(doubleArray64, doubleArray70);
        double double87 = tTestImpl23.t((double) (byte) 100, doubleArray70);
        // The following exception was thrown during execution in test generation
        try {
            double double88 = tTestImpl1.tTest(0.5339796283719219d, doubleArray70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + (-0.405429217622299d) + "'", double41 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.2806531524060034d + "'", double42 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + (-0.405429217622299d) + "'", double65 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + (-0.405429217622299d) + "'", double84 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.2806531524060034d + "'", double85 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + (-1.1115227041167497d) + "'", double86 == (-1.1115227041167497d));
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + (-2.2d) + "'", double87 == (-2.2d));
    }

    @Test
    public void test1321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1321");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution17);
        double[] doubleArray24 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray29 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double30 = tTestImpl18.homoscedasticT(doubleArray24, doubleArray29);
        double double31 = tTestImpl15.tTest((double) (short) 100, doubleArray24);
        org.apache.commons.math.distribution.TDistribution tDistribution33 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl34 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution33);
        double[] doubleArray40 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray45 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double46 = tTestImpl34.homoscedasticT(doubleArray40, doubleArray45);
        double[] doubleArray54 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double55 = tTestImpl34.t((double) '4', doubleArray54);
        double double56 = tTestImpl15.tTest((double) (short) 100, doubleArray54);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl59 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution58);
        double[] doubleArray65 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray70 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double71 = tTestImpl59.homoscedasticT(doubleArray65, doubleArray70);
        double double72 = tTestImpl15.tTest((double) (byte) 1, doubleArray65);
        org.apache.commons.math.distribution.TDistribution tDistribution73 = null;
        tTestImpl15.setDistribution(tDistribution73);
        org.apache.commons.math.distribution.TDistribution tDistribution75 = null;
        tTestImpl15.setDistribution(tDistribution75);
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        tTestImpl15.setDistribution(tDistribution77);
        org.apache.commons.math.distribution.TDistribution tDistribution79 = null;
        tTestImpl15.setDistribution(tDistribution79);
        org.apache.commons.math.distribution.TDistribution tDistribution81 = null;
        tTestImpl15.setDistribution(tDistribution81);
        double[] doubleArray89 = new double[] { (-2.8418588844347075d), 100.0f, (-1.0f), 0.35800486798369846d, 0.01613264369976175d };
        double double90 = tTestImpl15.t((double) (short) 0, doubleArray89);
        double double91 = tTestImpl1.t(0.5339796283719219d, doubleArray89);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary93 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double94 = tTestImpl1.t((-1.0d), statisticalSummary93);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-0.405429217622299d) + "'", double30 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.01613264369976175d + "'", double31 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-0.405429217622299d) + "'", double46 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-0.09656583816243881d) + "'", double55 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.07560555610353314d + "'", double56 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + (-0.405429217622299d) + "'", double71 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.3793626154059051d + "'", double72 == 0.3793626154059051d);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[-2.8418588844347075, 100.0, -1.0, 0.35800486798369846, 0.01613264369976175]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.9566618438474437d + "'", double90 == 0.9566618438474437d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.9302024075262618d + "'", double91 == 0.9302024075262618d);
    }

    @Test
    public void test1322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1322");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        org.apache.commons.math.distribution.TDistribution tDistribution34 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl35 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution34);
        double[] doubleArray41 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray46 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double47 = tTestImpl35.homoscedasticT(doubleArray41, doubleArray46);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl48 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray52 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl54 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution53);
        double[] doubleArray60 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray65 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double66 = tTestImpl54.homoscedasticT(doubleArray60, doubleArray65);
        double double67 = tTestImpl48.tTest(doubleArray52, doubleArray65);
        org.apache.commons.math.distribution.TDistribution tDistribution68 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl69 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution68);
        double[] doubleArray75 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray80 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double81 = tTestImpl69.homoscedasticT(doubleArray75, doubleArray80);
        double double82 = tTestImpl35.t(doubleArray65, doubleArray80);
        double double83 = tTestImpl0.homoscedasticT(doubleArray27, doubleArray80);
        org.apache.commons.math.distribution.TDistribution tDistribution84 = null;
        tTestImpl0.setDistribution(tDistribution84);
        org.apache.commons.math.distribution.TDistribution tDistribution86 = null;
        tTestImpl0.setDistribution(tDistribution86);
        org.apache.commons.math.distribution.TDistribution tDistribution88 = null;
        tTestImpl0.setDistribution(tDistribution88);
        org.apache.commons.math.distribution.TDistribution tDistribution90 = null;
        tTestImpl0.setDistribution(tDistribution90);
        org.apache.commons.math.distribution.TDistribution tDistribution92 = null;
        tTestImpl0.setDistribution(tDistribution92);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary95 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean97 = tTestImpl0.tTest((double) (byte) 100, statisticalSummary95, (-14.881283513379177d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -14.881283513379177");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + (-0.405429217622299d) + "'", double47 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + (-0.405429217622299d) + "'", double66 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.2806531524060034d + "'", double67 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + (-0.405429217622299d) + "'", double81 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + (-0.405429217622299d) + "'", double83 == (-0.405429217622299d));
    }

    @Test
    public void test1323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1323");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl0.t((double) (short) 10, doubleArray22);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution41 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution41);
        double[] doubleArray48 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray53 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double54 = tTestImpl42.homoscedasticT(doubleArray48, doubleArray53);
        double double55 = tTestImpl39.tTest((double) (short) 100, doubleArray48);
        org.apache.commons.math.distribution.TDistribution tDistribution56 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl57 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution56);
        double[] doubleArray63 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray68 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double69 = tTestImpl57.homoscedasticT(doubleArray63, doubleArray68);
        double double70 = tTestImpl0.pairedT(doubleArray48, doubleArray63);
        org.apache.commons.math.distribution.TDistribution tDistribution71 = null;
        tTestImpl0.setDistribution(tDistribution71);
        org.apache.commons.math.distribution.TDistribution tDistribution73 = null;
        tTestImpl0.setDistribution(tDistribution73);
        org.apache.commons.math.distribution.TDistribution tDistribution75 = null;
        tTestImpl0.setDistribution(tDistribution75);
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        tTestImpl0.setDistribution(tDistribution77);
        java.lang.Class<?> wildcardClass79 = tTestImpl0.getClass();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 3.8d + "'", double38 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + (-0.405429217622299d) + "'", double54 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.01613264369976175d + "'", double55 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + (-0.405429217622299d) + "'", double69 == (-0.405429217622299d));
        org.junit.Assert.assertTrue(Double.isNaN(double70));
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test1324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1324");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl1.t((-0.975807309953049d), doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl1.setDistribution(tDistribution55);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary57 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary58 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double59 = tTestImpl1.homoscedasticT(statisticalSummary57, statisticalSummary58);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.4411111919348023d + "'", double54 == 1.4411111919348023d);
    }

    @Test
    public void test1325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1325");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution17);
        double[] doubleArray24 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray29 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double30 = tTestImpl18.homoscedasticT(doubleArray24, doubleArray29);
        double double31 = tTestImpl15.tTest((double) (short) 100, doubleArray24);
        org.apache.commons.math.distribution.TDistribution tDistribution33 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl34 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution33);
        double[] doubleArray40 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray45 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double46 = tTestImpl34.homoscedasticT(doubleArray40, doubleArray45);
        double[] doubleArray54 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double55 = tTestImpl34.t((double) '4', doubleArray54);
        double double56 = tTestImpl15.tTest((double) (short) 100, doubleArray54);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl59 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution58);
        double[] doubleArray65 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray70 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double71 = tTestImpl59.homoscedasticT(doubleArray65, doubleArray70);
        double double72 = tTestImpl15.tTest((double) (byte) 1, doubleArray65);
        double double73 = tTestImpl1.t((-1.0d), doubleArray65);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary75 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double76 = tTestImpl1.t(1.3930877336894083d, statisticalSummary75);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-0.405429217622299d) + "'", double30 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.01613264369976175d + "'", double31 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-0.405429217622299d) + "'", double46 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-0.09656583816243881d) + "'", double55 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.07560555610353314d + "'", double56 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + (-0.405429217622299d) + "'", double71 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.3793626154059051d + "'", double72 == 0.3793626154059051d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 1.088109431399388d + "'", double73 == 1.088109431399388d);
    }

    @Test
    public void test1326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1326");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl0.t((double) (short) 10, doubleArray22);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution41 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution41);
        double[] doubleArray48 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray53 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double54 = tTestImpl42.homoscedasticT(doubleArray48, doubleArray53);
        double double55 = tTestImpl39.tTest((double) (short) 100, doubleArray48);
        org.apache.commons.math.distribution.TDistribution tDistribution56 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl57 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution56);
        double[] doubleArray63 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray68 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double69 = tTestImpl57.homoscedasticT(doubleArray63, doubleArray68);
        double double70 = tTestImpl0.pairedT(doubleArray48, doubleArray63);
        org.apache.commons.math.distribution.TDistribution tDistribution71 = null;
        tTestImpl0.setDistribution(tDistribution71);
        org.apache.commons.math.distribution.TDistribution tDistribution73 = null;
        tTestImpl0.setDistribution(tDistribution73);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary76 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean78 = tTestImpl0.tTest(0.07560555610353314d, statisticalSummary76, 0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 3.8d + "'", double38 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + (-0.405429217622299d) + "'", double54 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.01613264369976175d + "'", double55 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + (-0.405429217622299d) + "'", double69 == (-0.405429217622299d));
        org.junit.Assert.assertTrue(Double.isNaN(double70));
    }

    @Test
    public void test1327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1327");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary21 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double22 = tTestImpl0.tTest(0.405429217622299d, statisticalSummary21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
    }

    @Test
    public void test1328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1328");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution42 = null;
        tTestImpl0.setDistribution(tDistribution42);
        org.apache.commons.math.distribution.TDistribution tDistribution44 = null;
        tTestImpl0.setDistribution(tDistribution44);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary46 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary47 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double48 = tTestImpl0.tTest(statisticalSummary46, statisticalSummary47);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
    }

    @Test
    public void test1329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1329");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl1.t((-0.975807309953049d), doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl1.setDistribution(tDistribution55);
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        tTestImpl1.setDistribution(tDistribution57);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary59 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary60 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double61 = tTestImpl1.homoscedasticTTest(statisticalSummary59, statisticalSummary60);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.4411111919348023d + "'", double54 == 1.4411111919348023d);
    }

    @Test
    public void test1330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1330");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        double[] doubleArray48 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double49 = tTestImpl0.tTest(0.405429217622299d, doubleArray48);
        double[] doubleArray57 = new double[] { 10L, 0.9566618438474437d, 1.0f, 0.15639940166959065d, (short) 0, 0.15639940166959065d };
        double double58 = tTestImpl0.tTest(10.0d, doubleArray57);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary59 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary60 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double61 = tTestImpl0.t(statisticalSummary59, statisticalSummary60);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.1143321549278642d + "'", double49 == 0.1143321549278642d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 0.9566618438474437, 1.0, 0.15639940166959065, 0.0, 0.15639940166959065]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.004213458414249471d + "'", double58 == 0.004213458414249471d);
    }

    @Test
    public void test1331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1331");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        double double37 = tTestImpl1.t(10.0d, doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution38 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution38);
        double[] doubleArray45 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray50 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double51 = tTestImpl39.homoscedasticT(doubleArray45, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution52 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl53 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution52);
        double[] doubleArray59 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray64 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double65 = tTestImpl53.homoscedasticT(doubleArray59, doubleArray64);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl67 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution69 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl70 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution69);
        double[] doubleArray76 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray81 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double82 = tTestImpl70.homoscedasticT(doubleArray76, doubleArray81);
        double double83 = tTestImpl67.tTest((double) (short) 100, doubleArray76);
        double double84 = tTestImpl53.t((double) 10.0f, doubleArray76);
        double double85 = tTestImpl1.homoscedasticT(doubleArray50, doubleArray76);
        org.apache.commons.math.distribution.TDistribution tDistribution86 = null;
        tTestImpl1.setDistribution(tDistribution86);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary88 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary89 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double90 = tTestImpl1.homoscedasticT(statisticalSummary88, statisticalSummary89);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 3.8d + "'", double37 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + (-0.405429217622299d) + "'", double51 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + (-0.405429217622299d) + "'", double65 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + (-0.405429217622299d) + "'", double82 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.01613264369976175d + "'", double83 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.5339796283719219d + "'", double84 == 0.5339796283719219d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.405429217622299d + "'", double85 == 0.405429217622299d);
    }

    @Test
    public void test1332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1332");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution15 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl16 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution15);
        double[] doubleArray22 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray27 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double28 = tTestImpl16.homoscedasticT(doubleArray22, doubleArray27);
        double[] doubleArray36 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double37 = tTestImpl16.t((double) '4', doubleArray36);
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl40 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution39);
        org.apache.commons.math.distribution.TDistribution tDistribution41 = null;
        tTestImpl40.setDistribution(tDistribution41);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl57 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray61 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl63 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution62);
        double[] doubleArray69 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray74 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double75 = tTestImpl63.homoscedasticT(doubleArray69, doubleArray74);
        double double76 = tTestImpl57.tTest(doubleArray61, doubleArray74);
        double double77 = tTestImpl40.homoscedasticT(doubleArray55, doubleArray61);
        double double78 = tTestImpl16.t(0.35800486798369846d, doubleArray61);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean80 = tTestImpl1.tTest((-3.5d), doubleArray61, (double) 100.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 100.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + (-0.405429217622299d) + "'", double28 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-0.09656583816243881d) + "'", double37 == (-0.09656583816243881d));
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + (-0.405429217622299d) + "'", double75 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.2806531524060034d + "'", double76 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + (-1.1115227041167497d) + "'", double77 == (-1.1115227041167497d));
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 4.442799675467754d + "'", double78 == 4.442799675467754d);
    }

    @Test
    public void test1333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1333");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        org.apache.commons.math.distribution.TDistribution tDistribution34 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl35 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution34);
        double[] doubleArray41 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray46 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double47 = tTestImpl35.homoscedasticT(doubleArray41, doubleArray46);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl48 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray52 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl54 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution53);
        double[] doubleArray60 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray65 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double66 = tTestImpl54.homoscedasticT(doubleArray60, doubleArray65);
        double double67 = tTestImpl48.tTest(doubleArray52, doubleArray65);
        org.apache.commons.math.distribution.TDistribution tDistribution68 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl69 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution68);
        double[] doubleArray75 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray80 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double81 = tTestImpl69.homoscedasticT(doubleArray75, doubleArray80);
        double double82 = tTestImpl35.t(doubleArray65, doubleArray80);
        double double83 = tTestImpl0.homoscedasticT(doubleArray27, doubleArray80);
        org.apache.commons.math.distribution.TDistribution tDistribution84 = null;
        tTestImpl0.setDistribution(tDistribution84);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary87 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double88 = tTestImpl0.t(0.3793626154059051d, statisticalSummary87);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + (-0.405429217622299d) + "'", double47 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + (-0.405429217622299d) + "'", double66 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.2806531524060034d + "'", double67 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + (-0.405429217622299d) + "'", double81 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + (-0.405429217622299d) + "'", double83 == (-0.405429217622299d));
    }

    @Test
    public void test1334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1334");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution44 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl45 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution44);
        double[] doubleArray51 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray56 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double57 = tTestImpl45.homoscedasticT(doubleArray51, doubleArray56);
        double double58 = tTestImpl42.tTest((double) (short) 100, doubleArray51);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl60 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray64 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution65 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl66 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution65);
        double[] doubleArray72 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray77 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double78 = tTestImpl66.homoscedasticT(doubleArray72, doubleArray77);
        double double79 = tTestImpl60.tTest(doubleArray64, doubleArray77);
        double double80 = tTestImpl42.t((double) (short) 10, doubleArray64);
        org.apache.commons.math.distribution.TDistribution tDistribution81 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl82 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution81);
        double[] doubleArray88 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray93 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double94 = tTestImpl82.homoscedasticT(doubleArray88, doubleArray93);
        double double95 = tTestImpl0.homoscedasticTTest(doubleArray64, doubleArray88);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary96 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary97 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean99 = tTestImpl0.tTest(statisticalSummary96, statisticalSummary97, 0.1143321549278642d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-0.405429217622299d) + "'", double57 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.01613264369976175d + "'", double58 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + (-0.405429217622299d) + "'", double78 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.2806531524060034d + "'", double79 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 3.8d + "'", double80 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + (-0.405429217622299d) + "'", double94 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 0.15639940166959065d + "'", double95 == 0.15639940166959065d);
    }

    @Test
    public void test1335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1335");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        tTestImpl0.setDistribution(tDistribution58);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        tTestImpl0.setDistribution(tDistribution60);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        tTestImpl0.setDistribution(tDistribution62);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary64 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary65 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double66 = tTestImpl0.t(statisticalSummary64, statisticalSummary65);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
    }

    @Test
    public void test1336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1336");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution17);
        double[] doubleArray24 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray29 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double30 = tTestImpl18.homoscedasticT(doubleArray24, doubleArray29);
        double double31 = tTestImpl15.tTest((double) (short) 100, doubleArray24);
        double double32 = tTestImpl1.t((double) 10.0f, doubleArray24);
        java.lang.Class<?> wildcardClass33 = tTestImpl1.getClass();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-0.405429217622299d) + "'", double30 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.01613264369976175d + "'", double31 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.5339796283719219d + "'", double32 == 0.5339796283719219d);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test1337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1337");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        // The following exception was thrown during execution in test generation
        try {
            double double54 = tTestImpl1.tTest(0.987358558121667d, doubleArray47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
    }

    @Test
    public void test1338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1338");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl22 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution21);
        double[] doubleArray28 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray33 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double34 = tTestImpl22.homoscedasticT(doubleArray28, doubleArray33);
        double double35 = tTestImpl0.t((double) 1L, doubleArray33);
        org.apache.commons.math.distribution.TDistribution tDistribution37 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl38 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution37);
        double[] doubleArray44 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray49 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double50 = tTestImpl38.homoscedasticT(doubleArray44, doubleArray49);
        double[] doubleArray58 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double59 = tTestImpl38.t((double) '4', doubleArray58);
        double double60 = tTestImpl0.t((double) (byte) 10, doubleArray58);
        java.lang.Class<?> wildcardClass61 = doubleArray58.getClass();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-0.405429217622299d) + "'", double34 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.3573057358494125d + "'", double35 == 1.3573057358494125d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + (-0.405429217622299d) + "'", double50 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + (-0.09656583816243881d) + "'", double59 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.7753257939094542d + "'", double60 == 1.7753257939094542d);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test1339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1339");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution44 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl45 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution44);
        double[] doubleArray51 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray56 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double57 = tTestImpl45.homoscedasticT(doubleArray51, doubleArray56);
        double double58 = tTestImpl42.tTest((double) (short) 100, doubleArray51);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl61 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution60);
        double[] doubleArray67 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray72 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double73 = tTestImpl61.homoscedasticT(doubleArray67, doubleArray72);
        double[] doubleArray81 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double82 = tTestImpl61.t((double) '4', doubleArray81);
        double double83 = tTestImpl42.tTest((double) (short) 100, doubleArray81);
        double[] doubleArray89 = new double[] { 1.0f, (-0.09656583816243881d), ' ', 0.8463073355328574d, 1.3965146696271626d };
        double double90 = tTestImpl0.homoscedasticTTest(doubleArray81, doubleArray89);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary91 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary92 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean94 = tTestImpl0.tTest(statisticalSummary91, statisticalSummary92, (double) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -1.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-0.405429217622299d) + "'", double57 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.01613264369976175d + "'", double58 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + (-0.405429217622299d) + "'", double73 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + (-0.09656583816243881d) + "'", double82 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.07560555610353314d + "'", double83 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[1.0, -0.09656583816243881, 32.0, 0.8463073355328574, 1.3965146696271626]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.12673187601587688d + "'", double90 == 0.12673187601587688d);
    }

    @Test
    public void test1340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1340");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl22 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution21);
        double[] doubleArray28 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray33 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double34 = tTestImpl22.homoscedasticT(doubleArray28, doubleArray33);
        double double35 = tTestImpl0.t((double) 1L, doubleArray33);
        org.apache.commons.math.distribution.TDistribution tDistribution37 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl38 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution37);
        double[] doubleArray44 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray49 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double50 = tTestImpl38.homoscedasticT(doubleArray44, doubleArray49);
        double[] doubleArray58 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double59 = tTestImpl38.t((double) '4', doubleArray58);
        double double60 = tTestImpl0.t((double) (byte) 10, doubleArray58);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary61 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary62 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double63 = tTestImpl0.t(statisticalSummary61, statisticalSummary62);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-0.405429217622299d) + "'", double34 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.3573057358494125d + "'", double35 == 1.3573057358494125d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + (-0.405429217622299d) + "'", double50 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + (-0.09656583816243881d) + "'", double59 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.7753257939094542d + "'", double60 == 1.7753257939094542d);
    }

    @Test
    public void test1341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1341");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double[] doubleArray26 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double27 = tTestImpl6.t((double) '4', doubleArray26);
        org.apache.commons.math.distribution.TDistribution tDistribution28 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl29 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution28);
        double[] doubleArray35 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray40 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double41 = tTestImpl29.homoscedasticT(doubleArray35, doubleArray40);
        org.apache.commons.math.distribution.TDistribution tDistribution42 = null;
        tTestImpl29.setDistribution(tDistribution42);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl45 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray49 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution50 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl51 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution50);
        double[] doubleArray57 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray62 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double63 = tTestImpl51.homoscedasticT(doubleArray57, doubleArray62);
        double double64 = tTestImpl45.tTest(doubleArray49, doubleArray62);
        double double65 = tTestImpl29.t(10.0d, doubleArray49);
        org.apache.commons.math.distribution.TDistribution tDistribution67 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl68 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution67);
        double[] doubleArray74 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray79 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double80 = tTestImpl68.homoscedasticT(doubleArray74, doubleArray79);
        double double81 = tTestImpl29.t(100.0d, doubleArray79);
        org.apache.commons.math.distribution.TDistribution tDistribution82 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl83 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution82);
        double[] doubleArray89 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray94 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double95 = tTestImpl83.homoscedasticT(doubleArray89, doubleArray94);
        double double96 = tTestImpl6.homoscedasticT(doubleArray79, doubleArray89);
        double double97 = tTestImpl1.t((-0.975807309953049d), doubleArray79);
        java.lang.Class<?> wildcardClass98 = tTestImpl1.getClass();
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + (-0.09656583816243881d) + "'", double27 == (-0.09656583816243881d));
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + (-0.405429217622299d) + "'", double41 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + (-0.405429217622299d) + "'", double63 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.2806531524060034d + "'", double64 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 3.8d + "'", double65 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + (-0.405429217622299d) + "'", double80 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + (-2.8418588844347075d) + "'", double81 == (-2.8418588844347075d));
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray94), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + (-0.405429217622299d) + "'", double95 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 0.405429217622299d + "'", double96 == 0.405429217622299d);
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 1.4411111919348023d + "'", double97 == 1.4411111919348023d);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test1342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1342");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl0.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl0.setDistribution(tDistribution22);
        org.apache.commons.math.distribution.TDistribution tDistribution25 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl26 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution25);
        org.apache.commons.math.distribution.TDistribution tDistribution27 = null;
        tTestImpl26.setDistribution(tDistribution27);
        org.apache.commons.math.distribution.TDistribution tDistribution29 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl30 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution29);
        double[] doubleArray36 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray41 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double42 = tTestImpl30.homoscedasticT(doubleArray36, doubleArray41);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl43 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray47 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution48 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl49 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution48);
        double[] doubleArray55 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray60 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double61 = tTestImpl49.homoscedasticT(doubleArray55, doubleArray60);
        double double62 = tTestImpl43.tTest(doubleArray47, doubleArray60);
        double double63 = tTestImpl26.homoscedasticT(doubleArray41, doubleArray47);
        double double64 = tTestImpl0.t((double) (byte) 100, doubleArray47);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary66 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double67 = tTestImpl0.t(100.0d, statisticalSummary66);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-0.405429217622299d) + "'", double42 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + (-0.405429217622299d) + "'", double61 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.2806531524060034d + "'", double62 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + (-1.1115227041167497d) + "'", double63 == (-1.1115227041167497d));
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + (-2.2d) + "'", double64 == (-2.2d));
    }

    @Test
    public void test1343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1343");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl1.t((-0.975807309953049d), doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl1.setDistribution(tDistribution55);
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        tTestImpl1.setDistribution(tDistribution57);
        double[] doubleArray59 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl60 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl63 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution62);
        double[] doubleArray69 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray74 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double75 = tTestImpl63.homoscedasticT(doubleArray69, doubleArray74);
        double double76 = tTestImpl60.tTest((double) (short) 100, doubleArray69);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean78 = tTestImpl1.homoscedasticTTest(doubleArray59, doubleArray69, 0.5339796283719219d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.5339796283719219");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.4411111919348023d + "'", double54 == 1.4411111919348023d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + (-0.405429217622299d) + "'", double75 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.01613264369976175d + "'", double76 == 0.01613264369976175d);
    }

    @Test
    public void test1344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1344");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl0.t((double) (short) 10, doubleArray22);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution41 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution41);
        double[] doubleArray48 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray53 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double54 = tTestImpl42.homoscedasticT(doubleArray48, doubleArray53);
        double double55 = tTestImpl39.tTest((double) (short) 100, doubleArray48);
        org.apache.commons.math.distribution.TDistribution tDistribution56 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl57 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution56);
        double[] doubleArray63 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray68 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double69 = tTestImpl57.homoscedasticT(doubleArray63, doubleArray68);
        double double70 = tTestImpl0.pairedT(doubleArray48, doubleArray63);
        org.apache.commons.math.distribution.TDistribution tDistribution71 = null;
        tTestImpl0.setDistribution(tDistribution71);
        org.apache.commons.math.distribution.TDistribution tDistribution73 = null;
        tTestImpl0.setDistribution(tDistribution73);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary76 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double77 = tTestImpl0.t(0.36242697487793474d, statisticalSummary76);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 3.8d + "'", double38 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + (-0.405429217622299d) + "'", double54 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.01613264369976175d + "'", double55 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + (-0.405429217622299d) + "'", double69 == (-0.405429217622299d));
        org.junit.Assert.assertTrue(Double.isNaN(double70));
    }

    @Test
    public void test1345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1345");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl14 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray18 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution19 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl20 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution19);
        double[] doubleArray26 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray31 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double32 = tTestImpl20.homoscedasticT(doubleArray26, doubleArray31);
        double double33 = tTestImpl14.tTest(doubleArray18, doubleArray31);
        org.apache.commons.math.distribution.TDistribution tDistribution34 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl35 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution34);
        double[] doubleArray41 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray46 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double47 = tTestImpl35.homoscedasticT(doubleArray41, doubleArray46);
        double double48 = tTestImpl1.t(doubleArray31, doubleArray46);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary50 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean52 = tTestImpl1.tTest((double) (short) 1, statisticalSummary50, 10.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 10.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + (-0.405429217622299d) + "'", double32 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.2806531524060034d + "'", double33 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + (-0.405429217622299d) + "'", double47 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
    }

    @Test
    public void test1346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1346");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution1 = null;
        tTestImpl0.setDistribution(tDistribution1);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        tTestImpl0.setDistribution(tDistribution3);
        org.apache.commons.math.distribution.TDistribution tDistribution6 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl7 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution6);
        double[] doubleArray13 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray18 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double19 = tTestImpl7.homoscedasticT(doubleArray13, doubleArray18);
        double double20 = tTestImpl0.t(3.8d, doubleArray13);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary21 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary22 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double23 = tTestImpl0.homoscedasticTTest(statisticalSummary21, statisticalSummary22);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-0.405429217622299d) + "'", double19 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.8463073355328574d + "'", double20 == 0.8463073355328574d);
    }

    @Test
    public void test1347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1347");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl54 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray58 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution59 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl60 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution59);
        double[] doubleArray66 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray71 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double72 = tTestImpl60.homoscedasticT(doubleArray66, doubleArray71);
        double double73 = tTestImpl54.tTest(doubleArray58, doubleArray71);
        org.apache.commons.math.distribution.TDistribution tDistribution74 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl75 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution74);
        double[] doubleArray81 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray86 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double87 = tTestImpl75.homoscedasticT(doubleArray81, doubleArray86);
        double double88 = tTestImpl41.t(doubleArray71, doubleArray86);
        double double89 = tTestImpl1.t((double) 0.0f, doubleArray86);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary91 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean93 = tTestImpl1.tTest(10.0d, statisticalSummary91, (double) 100L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 100.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + (-0.405429217622299d) + "'", double72 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.2806531524060034d + "'", double73 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + (-0.405429217622299d) + "'", double87 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.0d + "'", double88 == 0.0d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 1.3997215400947067d + "'", double89 == 1.3997215400947067d);
    }

    @Test
    public void test1348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1348");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution17);
        double[] doubleArray24 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray29 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double30 = tTestImpl18.homoscedasticT(doubleArray24, doubleArray29);
        double double31 = tTestImpl15.tTest((double) (short) 100, doubleArray24);
        double double32 = tTestImpl1.t((double) 10.0f, doubleArray24);
        org.apache.commons.math.distribution.TDistribution tDistribution33 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl34 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution33);
        double[] doubleArray40 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray45 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double46 = tTestImpl34.homoscedasticT(doubleArray40, doubleArray45);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl47 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray51 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution52 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl53 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution52);
        double[] doubleArray59 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray64 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double65 = tTestImpl53.homoscedasticT(doubleArray59, doubleArray64);
        double double66 = tTestImpl47.tTest(doubleArray51, doubleArray64);
        org.apache.commons.math.distribution.TDistribution tDistribution67 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl68 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution67);
        double[] doubleArray74 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray79 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double80 = tTestImpl68.homoscedasticT(doubleArray74, doubleArray79);
        double double81 = tTestImpl34.t(doubleArray64, doubleArray79);
        org.apache.commons.math.distribution.TDistribution tDistribution82 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl83 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution82);
        double[] doubleArray89 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray94 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double95 = tTestImpl83.homoscedasticT(doubleArray89, doubleArray94);
        double double96 = tTestImpl1.pairedT(doubleArray79, doubleArray94);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary98 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double99 = tTestImpl1.tTest((-0.09656583816243881d), statisticalSummary98);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-0.405429217622299d) + "'", double30 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.01613264369976175d + "'", double31 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.5339796283719219d + "'", double32 == 0.5339796283719219d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-0.405429217622299d) + "'", double46 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + (-0.405429217622299d) + "'", double65 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.2806531524060034d + "'", double66 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + (-0.405429217622299d) + "'", double80 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray94), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + (-0.405429217622299d) + "'", double95 == (-0.405429217622299d));
        org.junit.Assert.assertTrue(Double.isNaN(double96));
    }

    @Test
    public void test1349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1349");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        tTestImpl0.setDistribution(tDistribution58);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        tTestImpl0.setDistribution(tDistribution60);
        org.apache.commons.math.distribution.TDistribution tDistribution63 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl64 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution63);
        double[] doubleArray70 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray75 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double76 = tTestImpl64.homoscedasticT(doubleArray70, doubleArray75);
        double double77 = tTestImpl0.t((double) 0, doubleArray75);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary78 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary79 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double80 = tTestImpl0.t(statisticalSummary78, statisticalSummary79);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + (-0.405429217622299d) + "'", double76 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 1.3997215400947067d + "'", double77 == 1.3997215400947067d);
    }

    @Test
    public void test1350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1350");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl2 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        double double18 = tTestImpl2.tTest((double) (short) 100, doubleArray11);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        double[] doubleArray41 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double42 = tTestImpl21.t((double) '4', doubleArray41);
        double double43 = tTestImpl2.tTest((double) (short) 100, doubleArray41);
        double[] doubleArray50 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double51 = tTestImpl2.tTest(0.405429217622299d, doubleArray50);
        double double52 = tTestImpl0.t(3.8d, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        tTestImpl0.setDistribution(tDistribution53);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl0.setDistribution(tDistribution55);
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        tTestImpl0.setDistribution(tDistribution57);
        org.apache.commons.math.distribution.TDistribution tDistribution59 = null;
        tTestImpl0.setDistribution(tDistribution59);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary62 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double63 = tTestImpl0.tTest(0.9755634976417653d, statisticalSummary62);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.01613264369976175d + "'", double18 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-0.09656583816243881d) + "'", double42 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.07560555610353314d + "'", double43 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.1143321549278642d + "'", double51 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-10.500000000000002d) + "'", double52 == (-10.500000000000002d));
    }

    @Test
    public void test1351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1351");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.distribution.TDistribution tDistribution16 = null;
        tTestImpl1.setDistribution(tDistribution16);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        tTestImpl1.setDistribution(tDistribution18);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl1.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl1.setDistribution(tDistribution22);
        double[] doubleArray27 = new double[] { 1.3404872472421194d, 0.0d, (byte) 100 };
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl28 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray32 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution33 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl34 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution33);
        double[] doubleArray40 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray45 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double46 = tTestImpl34.homoscedasticT(doubleArray40, doubleArray45);
        double double47 = tTestImpl28.tTest(doubleArray32, doubleArray45);
        org.apache.commons.math.distribution.TDistribution tDistribution48 = null;
        tTestImpl28.setDistribution(tDistribution48);
        org.apache.commons.math.distribution.TDistribution tDistribution50 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl51 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution50);
        double[] doubleArray57 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray62 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double63 = tTestImpl51.homoscedasticT(doubleArray57, doubleArray62);
        double[] doubleArray71 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double72 = tTestImpl51.t((double) '4', doubleArray71);
        org.apache.commons.math.distribution.TDistribution tDistribution73 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl74 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution73);
        double[] doubleArray80 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray85 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double86 = tTestImpl74.homoscedasticT(doubleArray80, doubleArray85);
        double double87 = tTestImpl28.t(doubleArray71, doubleArray85);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean89 = tTestImpl1.tTest(doubleArray27, doubleArray71, 0.9755634976417653d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.9755634976417653");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.3404872472421194, 0.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-0.405429217622299d) + "'", double46 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.2806531524060034d + "'", double47 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + (-0.405429217622299d) + "'", double63 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + (-0.09656583816243881d) + "'", double72 == (-0.09656583816243881d));
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + (-0.405429217622299d) + "'", double86 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.5172120199559697d + "'", double87 == 0.5172120199559697d);
    }

    @Test
    public void test1352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1352");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution42 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl43 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution42);
        double[] doubleArray49 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray54 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double55 = tTestImpl43.homoscedasticT(doubleArray49, doubleArray54);
        org.apache.commons.math.distribution.TDistribution tDistribution56 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl57 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution56);
        double[] doubleArray63 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray68 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double69 = tTestImpl57.homoscedasticT(doubleArray63, doubleArray68);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl71 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution73 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl74 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution73);
        double[] doubleArray80 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray85 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double86 = tTestImpl74.homoscedasticT(doubleArray80, doubleArray85);
        double double87 = tTestImpl71.tTest((double) (short) 100, doubleArray80);
        double double88 = tTestImpl57.t((double) 10.0f, doubleArray80);
        double double89 = tTestImpl0.pairedTTest(doubleArray49, doubleArray80);
        org.apache.commons.math.distribution.TDistribution tDistribution90 = null;
        tTestImpl0.setDistribution(tDistribution90);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary93 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean95 = tTestImpl0.tTest((double) 100.0f, statisticalSummary93, 0.405429217622299d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-0.405429217622299d) + "'", double55 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + (-0.405429217622299d) + "'", double69 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + (-0.405429217622299d) + "'", double86 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.01613264369976175d + "'", double87 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.5339796283719219d + "'", double88 == 0.5339796283719219d);
        org.junit.Assert.assertTrue(Double.isNaN(double89));
    }

    @Test
    public void test1353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1353");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary20 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary21 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean23 = tTestImpl0.tTest(statisticalSummary20, statisticalSummary21, 0.9566618438474437d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.9566618438474437");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
    }

    @Test
    public void test1354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1354");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl34 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray38 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl40 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution39);
        double[] doubleArray46 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray51 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double52 = tTestImpl40.homoscedasticT(doubleArray46, doubleArray51);
        double double53 = tTestImpl34.tTest(doubleArray38, doubleArray51);
        org.apache.commons.math.distribution.TDistribution tDistribution54 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl55 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution54);
        double[] doubleArray61 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray66 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double67 = tTestImpl55.homoscedasticT(doubleArray61, doubleArray66);
        double double68 = tTestImpl21.t(doubleArray51, doubleArray66);
        org.apache.commons.math.distribution.TDistribution tDistribution69 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl70 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution69);
        double[] doubleArray76 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray81 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double82 = tTestImpl70.homoscedasticT(doubleArray76, doubleArray81);
        double[] doubleArray90 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double91 = tTestImpl70.t((double) '4', doubleArray90);
        double double92 = tTestImpl0.t(doubleArray66, doubleArray90);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary94 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean96 = tTestImpl0.tTest(0.5339796283719219d, statisticalSummary94, 1.3573057358494125d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 1.3573057358494125");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-0.405429217622299d) + "'", double52 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.2806531524060034d + "'", double53 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + (-0.405429217622299d) + "'", double67 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + (-0.405429217622299d) + "'", double82 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + (-0.09656583816243881d) + "'", double91 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + (-0.5172120199559697d) + "'", double92 == (-0.5172120199559697d));
    }

    @Test
    public void test1355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1355");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl34 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray38 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl40 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution39);
        double[] doubleArray46 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray51 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double52 = tTestImpl40.homoscedasticT(doubleArray46, doubleArray51);
        double double53 = tTestImpl34.tTest(doubleArray38, doubleArray51);
        org.apache.commons.math.distribution.TDistribution tDistribution54 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl55 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution54);
        double[] doubleArray61 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray66 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double67 = tTestImpl55.homoscedasticT(doubleArray61, doubleArray66);
        double double68 = tTestImpl21.t(doubleArray51, doubleArray66);
        org.apache.commons.math.distribution.TDistribution tDistribution69 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl70 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution69);
        double[] doubleArray76 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray81 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double82 = tTestImpl70.homoscedasticT(doubleArray76, doubleArray81);
        double[] doubleArray90 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double91 = tTestImpl70.t((double) '4', doubleArray90);
        double double92 = tTestImpl0.t(doubleArray66, doubleArray90);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary94 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double95 = tTestImpl0.t(1.3573057358494125d, statisticalSummary94);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-0.405429217622299d) + "'", double52 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.2806531524060034d + "'", double53 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + (-0.405429217622299d) + "'", double67 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + (-0.405429217622299d) + "'", double82 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + (-0.09656583816243881d) + "'", double91 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + (-0.5172120199559697d) + "'", double92 == (-0.5172120199559697d));
    }

    @Test
    public void test1356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1356");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl1.t((-0.975807309953049d), doubleArray52);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary56 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double57 = tTestImpl1.tTest((double) (byte) 10, statisticalSummary56);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.4411111919348023d + "'", double54 == 1.4411111919348023d);
    }

    @Test
    public void test1357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1357");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        double double37 = tTestImpl1.t(10.0d, doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution38 = null;
        tTestImpl1.setDistribution(tDistribution38);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary41 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double42 = tTestImpl1.tTest(0.35800486798369846d, statisticalSummary41);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 3.8d + "'", double37 == 3.8d);
    }

    @Test
    public void test1358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1358");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        double[] doubleArray48 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double49 = tTestImpl0.tTest(0.405429217622299d, doubleArray48);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl51 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution52 = null;
        tTestImpl51.setDistribution(tDistribution52);
        org.apache.commons.math.distribution.TDistribution tDistribution54 = null;
        tTestImpl51.setDistribution(tDistribution54);
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl58 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution57);
        double[] doubleArray64 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray69 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double70 = tTestImpl58.homoscedasticT(doubleArray64, doubleArray69);
        double double71 = tTestImpl51.t(3.8d, doubleArray64);
        double double72 = tTestImpl0.t(1.088109431399388d, doubleArray64);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary73 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary74 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double75 = tTestImpl0.tTest(statisticalSummary73, statisticalSummary74);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.1143321549278642d + "'", double49 == 0.1143321549278642d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + (-0.405429217622299d) + "'", double70 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.8463073355328574d + "'", double71 == 0.8463073355328574d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.982920007042921d + "'", double72 == 0.982920007042921d);
    }

    @Test
    public void test1359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1359");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl22 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution21);
        double[] doubleArray28 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray33 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double34 = tTestImpl22.homoscedasticT(doubleArray28, doubleArray33);
        double double35 = tTestImpl0.t((double) 1L, doubleArray33);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary37 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean39 = tTestImpl0.tTest(3.8d, statisticalSummary37, (double) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 100.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-0.405429217622299d) + "'", double34 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.3573057358494125d + "'", double35 == 1.3573057358494125d);
    }

    @Test
    public void test1360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1360");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution44 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl45 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution44);
        double[] doubleArray51 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray56 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double57 = tTestImpl45.homoscedasticT(doubleArray51, doubleArray56);
        double double58 = tTestImpl42.tTest((double) (short) 100, doubleArray51);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl60 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray64 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution65 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl66 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution65);
        double[] doubleArray72 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray77 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double78 = tTestImpl66.homoscedasticT(doubleArray72, doubleArray77);
        double double79 = tTestImpl60.tTest(doubleArray64, doubleArray77);
        double double80 = tTestImpl42.t((double) (short) 10, doubleArray64);
        org.apache.commons.math.distribution.TDistribution tDistribution81 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl82 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution81);
        double[] doubleArray88 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray93 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double94 = tTestImpl82.homoscedasticT(doubleArray88, doubleArray93);
        double double95 = tTestImpl0.homoscedasticTTest(doubleArray64, doubleArray88);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary97 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean99 = tTestImpl0.tTest(1.3965146696271626d, statisticalSummary97, (double) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 1.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-0.405429217622299d) + "'", double57 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.01613264369976175d + "'", double58 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + (-0.405429217622299d) + "'", double78 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.2806531524060034d + "'", double79 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 3.8d + "'", double80 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + (-0.405429217622299d) + "'", double94 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 0.15639940166959065d + "'", double95 == 0.15639940166959065d);
    }

    @Test
    public void test1361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1361");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl0.t((double) (short) 10, doubleArray22);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution41 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution41);
        double[] doubleArray48 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray53 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double54 = tTestImpl42.homoscedasticT(doubleArray48, doubleArray53);
        double double55 = tTestImpl39.tTest((double) (short) 100, doubleArray48);
        org.apache.commons.math.distribution.TDistribution tDistribution56 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl57 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution56);
        double[] doubleArray63 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray68 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double69 = tTestImpl57.homoscedasticT(doubleArray63, doubleArray68);
        double double70 = tTestImpl0.pairedT(doubleArray48, doubleArray63);
        org.apache.commons.math.distribution.TDistribution tDistribution71 = null;
        tTestImpl0.setDistribution(tDistribution71);
        org.apache.commons.math.distribution.TDistribution tDistribution73 = null;
        tTestImpl0.setDistribution(tDistribution73);
        org.apache.commons.math.distribution.TDistribution tDistribution75 = null;
        tTestImpl0.setDistribution(tDistribution75);
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        tTestImpl0.setDistribution(tDistribution77);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary79 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary80 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double81 = tTestImpl0.tTest(statisticalSummary79, statisticalSummary80);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 3.8d + "'", double38 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + (-0.405429217622299d) + "'", double54 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.01613264369976175d + "'", double55 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + (-0.405429217622299d) + "'", double69 == (-0.405429217622299d));
        org.junit.Assert.assertTrue(Double.isNaN(double70));
    }

    @Test
    public void test1362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1362");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        tTestImpl0.setDistribution(tDistribution58);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary61 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double62 = tTestImpl0.tTest((double) 10, statisticalSummary61);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
    }

    @Test
    public void test1363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1363");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl2 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        double double18 = tTestImpl2.tTest((double) (short) 100, doubleArray11);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        double[] doubleArray41 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double42 = tTestImpl21.t((double) '4', doubleArray41);
        double double43 = tTestImpl2.tTest((double) (short) 100, doubleArray41);
        double[] doubleArray50 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double51 = tTestImpl2.tTest(0.405429217622299d, doubleArray50);
        double double52 = tTestImpl0.t(3.8d, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        tTestImpl0.setDistribution(tDistribution53);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl0.setDistribution(tDistribution55);
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        tTestImpl0.setDistribution(tDistribution57);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary59 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary60 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double61 = tTestImpl0.t(statisticalSummary59, statisticalSummary60);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.01613264369976175d + "'", double18 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-0.09656583816243881d) + "'", double42 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.07560555610353314d + "'", double43 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.1143321549278642d + "'", double51 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-10.500000000000002d) + "'", double52 == (-10.500000000000002d));
    }

    @Test
    public void test1364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1364");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.distribution.TDistribution tDistribution16 = null;
        tTestImpl1.setDistribution(tDistribution16);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        tTestImpl1.setDistribution(tDistribution18);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl1.setDistribution(tDistribution20);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary22 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary23 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double24 = tTestImpl1.homoscedasticTTest(statisticalSummary22, statisticalSummary23);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
    }

    @Test
    public void test1365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1365");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl4 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution3);
        double[] doubleArray10 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray15 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double16 = tTestImpl4.homoscedasticT(doubleArray10, doubleArray15);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        org.apache.commons.math.distribution.TDistribution tDistribution37 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl38 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution37);
        double[] doubleArray44 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray49 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double50 = tTestImpl38.homoscedasticT(doubleArray44, doubleArray49);
        double double51 = tTestImpl4.t(doubleArray34, doubleArray49);
        double double52 = tTestImpl1.t((double) 10.0f, doubleArray49);
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        tTestImpl1.setDistribution(tDistribution53);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary55 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary56 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean58 = tTestImpl1.tTest(statisticalSummary55, statisticalSummary56, 0.2806531524060034d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + (-0.405429217622299d) + "'", double16 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + (-0.405429217622299d) + "'", double50 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.9755634976417653d + "'", double52 == 0.9755634976417653d);
    }

    @Test
    public void test1366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1366");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution42 = null;
        tTestImpl0.setDistribution(tDistribution42);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary44 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary45 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double46 = tTestImpl0.homoscedasticT(statisticalSummary44, statisticalSummary45);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
    }

    @Test
    public void test1367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1367");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution42 = null;
        tTestImpl0.setDistribution(tDistribution42);
        org.apache.commons.math.distribution.TDistribution tDistribution44 = null;
        tTestImpl0.setDistribution(tDistribution44);
        org.apache.commons.math.distribution.TDistribution tDistribution46 = null;
        tTestImpl0.setDistribution(tDistribution46);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary48 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary49 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double50 = tTestImpl0.tTest(statisticalSummary48, statisticalSummary49);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
    }

    @Test
    public void test1368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1368");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        tTestImpl0.setDistribution(tDistribution17);
        org.apache.commons.math.distribution.TDistribution tDistribution19 = null;
        tTestImpl0.setDistribution(tDistribution19);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        tTestImpl23.setDistribution(tDistribution24);
        org.apache.commons.math.distribution.TDistribution tDistribution27 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl28 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution27);
        double[] doubleArray34 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray39 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double40 = tTestImpl28.homoscedasticT(doubleArray34, doubleArray39);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray45 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution46 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl47 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution46);
        double[] doubleArray53 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray58 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double59 = tTestImpl47.homoscedasticT(doubleArray53, doubleArray58);
        double double60 = tTestImpl41.tTest(doubleArray45, doubleArray58);
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl62 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution61);
        double[] doubleArray68 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray73 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double74 = tTestImpl62.homoscedasticT(doubleArray68, doubleArray73);
        double double75 = tTestImpl28.t(doubleArray58, doubleArray73);
        double double76 = tTestImpl23.t(0.07560555610353314d, doubleArray58);
        double double77 = tTestImpl0.t((double) (short) 10, doubleArray58);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary79 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean81 = tTestImpl0.tTest(1.3573057358494125d, statisticalSummary79, (double) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 100.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.405429217622299d) + "'", double40 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + (-0.405429217622299d) + "'", double59 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.2806531524060034d + "'", double60 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-0.405429217622299d) + "'", double74 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 1.3965146696271626d + "'", double76 == 1.3965146696271626d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.9755634976417653d + "'", double77 == 0.9755634976417653d);
    }

    @Test
    public void test1369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1369");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        tTestImpl0.setDistribution(tDistribution58);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        tTestImpl0.setDistribution(tDistribution60);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        tTestImpl0.setDistribution(tDistribution62);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        tTestImpl0.setDistribution(tDistribution64);
        org.apache.commons.math.distribution.TDistribution tDistribution66 = null;
        tTestImpl0.setDistribution(tDistribution66);
        org.apache.commons.math.distribution.TDistribution tDistribution68 = null;
        tTestImpl0.setDistribution(tDistribution68);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary71 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double72 = tTestImpl0.tTest(0.5703029263335007d, statisticalSummary71);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
    }

    @Test
    public void test1370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1370");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        tTestImpl3.setDistribution(tDistribution4);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution8 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl9 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution8);
        double[] doubleArray15 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray20 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double21 = tTestImpl9.homoscedasticT(doubleArray15, doubleArray20);
        double double22 = tTestImpl6.tTest((double) (short) 100, doubleArray15);
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution24);
        double[] doubleArray31 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray36 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double37 = tTestImpl25.homoscedasticT(doubleArray31, doubleArray36);
        double[] doubleArray45 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double46 = tTestImpl25.t((double) '4', doubleArray45);
        double double47 = tTestImpl6.tTest((double) (short) 100, doubleArray45);
        org.apache.commons.math.distribution.TDistribution tDistribution49 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl50 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution49);
        double[] doubleArray56 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray61 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double62 = tTestImpl50.homoscedasticT(doubleArray56, doubleArray61);
        double double63 = tTestImpl6.tTest((double) (byte) 1, doubleArray56);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl65 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution64);
        double[] doubleArray71 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray76 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double77 = tTestImpl65.homoscedasticT(doubleArray71, doubleArray76);
        double[] doubleArray85 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double86 = tTestImpl65.t((double) '4', doubleArray85);
        double double87 = tTestImpl3.t(doubleArray56, doubleArray85);
        double double88 = tTestImpl0.tTest((double) 0, doubleArray56);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary90 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean92 = tTestImpl0.tTest((double) 10, statisticalSummary90, (-2.2d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -2.2");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-0.405429217622299d) + "'", double21 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.01613264369976175d + "'", double22 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-0.405429217622299d) + "'", double37 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-0.09656583816243881d) + "'", double46 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.07560555610353314d + "'", double47 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + (-0.405429217622299d) + "'", double62 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.3793626154059051d + "'", double63 == 0.3793626154059051d);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + (-0.405429217622299d) + "'", double77 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + (-0.09656583816243881d) + "'", double86 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + (-0.975807309953049d) + "'", double87 == (-0.975807309953049d));
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.35800486798369846d + "'", double88 == 0.35800486798369846d);
    }

    @Test
    public void test1371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1371");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray23 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution24);
        double[] doubleArray31 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray36 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double37 = tTestImpl25.homoscedasticT(doubleArray31, doubleArray36);
        double double38 = tTestImpl19.tTest(doubleArray23, doubleArray36);
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl40 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution39);
        double[] doubleArray46 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray51 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double52 = tTestImpl40.homoscedasticT(doubleArray46, doubleArray51);
        double double53 = tTestImpl6.t(doubleArray36, doubleArray51);
        double double54 = tTestImpl1.t(0.07560555610353314d, doubleArray36);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl1.setDistribution(tDistribution55);
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        tTestImpl1.setDistribution(tDistribution57);
        org.apache.commons.math.distribution.TDistribution tDistribution59 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl60 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution59);
        double[] doubleArray66 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray71 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double72 = tTestImpl60.homoscedasticT(doubleArray66, doubleArray71);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl74 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution76 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl77 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution76);
        double[] doubleArray83 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray88 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double89 = tTestImpl77.homoscedasticT(doubleArray83, doubleArray88);
        double double90 = tTestImpl74.tTest((double) (short) 100, doubleArray83);
        double double91 = tTestImpl60.t((double) 10.0f, doubleArray83);
        double[] doubleArray97 = new double[] { 0.987358558121667d, 100, 3.8d, 10, 0.07560555610353314d };
        // The following exception was thrown during execution in test generation
        try {
            double double98 = tTestImpl1.tTest(doubleArray83, doubleArray97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-0.405429217622299d) + "'", double37 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.2806531524060034d + "'", double38 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-0.405429217622299d) + "'", double52 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.3965146696271626d + "'", double54 == 1.3965146696271626d);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + (-0.405429217622299d) + "'", double72 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + (-0.405429217622299d) + "'", double89 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.01613264369976175d + "'", double90 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.5339796283719219d + "'", double91 == 0.5339796283719219d);
        org.junit.Assert.assertNotNull(doubleArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray97), "[0.987358558121667, 100.0, 3.8, 10.0, 0.07560555610353314]");
    }

    @Test
    public void test1372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1372");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary2 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double3 = tTestImpl0.t(0.9302024075262618d, statisticalSummary2);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1373");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        double[] doubleArray21 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double22 = tTestImpl1.t((double) '4', doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        tTestImpl1.setDistribution(tDistribution23);
        org.apache.commons.math.distribution.TDistribution tDistribution25 = null;
        tTestImpl1.setDistribution(tDistribution25);
        org.apache.commons.math.distribution.TDistribution tDistribution27 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl28 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution27);
        double[] doubleArray34 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray39 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double40 = tTestImpl28.homoscedasticT(doubleArray34, doubleArray39);
        double[] doubleArray41 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean43 = tTestImpl1.homoscedasticTTest(doubleArray34, doubleArray41, 0.37390096630005876d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-0.09656583816243881d) + "'", double22 == (-0.09656583816243881d));
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.405429217622299d) + "'", double40 == (-0.405429217622299d));
    }

    @Test
    public void test1374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1374");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        double[] doubleArray21 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double22 = tTestImpl1.t((double) '4', doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        tTestImpl1.setDistribution(tDistribution23);
        org.apache.commons.math.distribution.TDistribution tDistribution25 = null;
        tTestImpl1.setDistribution(tDistribution25);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl27 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray31 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution32 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl33 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution32);
        double[] doubleArray39 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray44 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double45 = tTestImpl33.homoscedasticT(doubleArray39, doubleArray44);
        double double46 = tTestImpl27.tTest(doubleArray31, doubleArray44);
        org.apache.commons.math.distribution.TDistribution tDistribution48 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl49 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution48);
        double[] doubleArray55 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray60 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double61 = tTestImpl49.homoscedasticT(doubleArray55, doubleArray60);
        double double62 = tTestImpl27.t((double) 1L, doubleArray60);
        double[] doubleArray63 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean65 = tTestImpl1.pairedTTest(doubleArray60, doubleArray63, 0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-0.09656583816243881d) + "'", double22 == (-0.09656583816243881d));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + (-0.405429217622299d) + "'", double45 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.2806531524060034d + "'", double46 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + (-0.405429217622299d) + "'", double61 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 1.3573057358494125d + "'", double62 == 1.3573057358494125d);
    }

    @Test
    public void test1375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1375");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        double double37 = tTestImpl1.t(10.0d, doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution38 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution38);
        double[] doubleArray45 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray50 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double51 = tTestImpl39.homoscedasticT(doubleArray45, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution52 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl53 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution52);
        double[] doubleArray59 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray64 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double65 = tTestImpl53.homoscedasticT(doubleArray59, doubleArray64);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl67 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution69 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl70 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution69);
        double[] doubleArray76 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray81 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double82 = tTestImpl70.homoscedasticT(doubleArray76, doubleArray81);
        double double83 = tTestImpl67.tTest((double) (short) 100, doubleArray76);
        double double84 = tTestImpl53.t((double) 10.0f, doubleArray76);
        double double85 = tTestImpl1.homoscedasticT(doubleArray50, doubleArray76);
        org.apache.commons.math.distribution.TDistribution tDistribution86 = null;
        tTestImpl1.setDistribution(tDistribution86);
        org.apache.commons.math.distribution.TDistribution tDistribution88 = null;
        tTestImpl1.setDistribution(tDistribution88);
        org.apache.commons.math.distribution.TDistribution tDistribution90 = null;
        tTestImpl1.setDistribution(tDistribution90);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary93 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean95 = tTestImpl1.tTest(4.442799675467754d, statisticalSummary93, (double) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 1.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 3.8d + "'", double37 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + (-0.405429217622299d) + "'", double51 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + (-0.405429217622299d) + "'", double65 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + (-0.405429217622299d) + "'", double82 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.01613264369976175d + "'", double83 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.5339796283719219d + "'", double84 == 0.5339796283719219d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.405429217622299d + "'", double85 == 0.405429217622299d);
    }

    @Test
    public void test1376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1376");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution17);
        double[] doubleArray24 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray29 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double30 = tTestImpl18.homoscedasticT(doubleArray24, doubleArray29);
        double double31 = tTestImpl15.tTest((double) (short) 100, doubleArray24);
        org.apache.commons.math.distribution.TDistribution tDistribution33 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl34 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution33);
        double[] doubleArray40 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray45 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double46 = tTestImpl34.homoscedasticT(doubleArray40, doubleArray45);
        double[] doubleArray54 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double55 = tTestImpl34.t((double) '4', doubleArray54);
        double double56 = tTestImpl15.tTest((double) (short) 100, doubleArray54);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl59 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution58);
        double[] doubleArray65 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray70 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double71 = tTestImpl59.homoscedasticT(doubleArray65, doubleArray70);
        double double72 = tTestImpl15.tTest((double) (byte) 1, doubleArray65);
        double double73 = tTestImpl1.t((-1.0d), doubleArray65);
        org.apache.commons.math.distribution.TDistribution tDistribution74 = null;
        tTestImpl1.setDistribution(tDistribution74);
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl78 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution77);
        double[] doubleArray84 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray89 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double90 = tTestImpl78.homoscedasticT(doubleArray84, doubleArray89);
        // The following exception was thrown during execution in test generation
        try {
            double double91 = tTestImpl1.tTest((double) 1, doubleArray89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-0.405429217622299d) + "'", double30 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.01613264369976175d + "'", double31 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-0.405429217622299d) + "'", double46 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-0.09656583816243881d) + "'", double55 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.07560555610353314d + "'", double56 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + (-0.405429217622299d) + "'", double71 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.3793626154059051d + "'", double72 == 0.3793626154059051d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 1.088109431399388d + "'", double73 == 1.088109431399388d);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + (-0.405429217622299d) + "'", double90 == (-0.405429217622299d));
    }

    @Test
    public void test1377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1377");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        org.apache.commons.math.distribution.TDistribution tDistribution34 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl35 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution34);
        double[] doubleArray41 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray46 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double47 = tTestImpl35.homoscedasticT(doubleArray41, doubleArray46);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl48 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray52 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl54 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution53);
        double[] doubleArray60 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray65 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double66 = tTestImpl54.homoscedasticT(doubleArray60, doubleArray65);
        double double67 = tTestImpl48.tTest(doubleArray52, doubleArray65);
        org.apache.commons.math.distribution.TDistribution tDistribution68 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl69 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution68);
        double[] doubleArray75 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray80 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double81 = tTestImpl69.homoscedasticT(doubleArray75, doubleArray80);
        double double82 = tTestImpl35.t(doubleArray65, doubleArray80);
        double double83 = tTestImpl0.homoscedasticT(doubleArray27, doubleArray80);
        org.apache.commons.math.distribution.TDistribution tDistribution84 = null;
        tTestImpl0.setDistribution(tDistribution84);
        org.apache.commons.math.distribution.TDistribution tDistribution86 = null;
        tTestImpl0.setDistribution(tDistribution86);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary88 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary89 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean91 = tTestImpl0.tTest(statisticalSummary88, statisticalSummary89, 1.3404872472421194d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 1.3404872472421194");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + (-0.405429217622299d) + "'", double47 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + (-0.405429217622299d) + "'", double66 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.2806531524060034d + "'", double67 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + (-0.405429217622299d) + "'", double81 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + (-0.405429217622299d) + "'", double83 == (-0.405429217622299d));
    }

    @Test
    public void test1378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1378");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        tTestImpl0.setDistribution(tDistribution58);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        tTestImpl0.setDistribution(tDistribution60);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        tTestImpl0.setDistribution(tDistribution62);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        tTestImpl0.setDistribution(tDistribution64);
        org.apache.commons.math.distribution.TDistribution tDistribution66 = null;
        tTestImpl0.setDistribution(tDistribution66);
        org.apache.commons.math.distribution.TDistribution tDistribution68 = null;
        tTestImpl0.setDistribution(tDistribution68);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary70 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary71 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double72 = tTestImpl0.homoscedasticT(statisticalSummary70, statisticalSummary71);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
    }

    @Test
    public void test1379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1379");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl4 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution6 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl7 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution6);
        double[] doubleArray13 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray18 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double19 = tTestImpl7.homoscedasticT(doubleArray13, doubleArray18);
        double double20 = tTestImpl4.tTest((double) (short) 100, doubleArray13);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double[] doubleArray43 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double44 = tTestImpl23.t((double) '4', doubleArray43);
        double double45 = tTestImpl4.tTest((double) (short) 100, doubleArray43);
        org.apache.commons.math.distribution.TDistribution tDistribution47 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl48 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution47);
        double[] doubleArray54 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray59 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double60 = tTestImpl48.homoscedasticT(doubleArray54, doubleArray59);
        double double61 = tTestImpl4.tTest((double) (byte) 1, doubleArray54);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl63 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution62);
        double[] doubleArray69 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray74 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double75 = tTestImpl63.homoscedasticT(doubleArray69, doubleArray74);
        double[] doubleArray83 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double84 = tTestImpl63.t((double) '4', doubleArray83);
        double double85 = tTestImpl1.t(doubleArray54, doubleArray83);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary87 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double88 = tTestImpl1.t((-1.1115227041167497d), statisticalSummary87);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-0.405429217622299d) + "'", double19 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.01613264369976175d + "'", double20 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + (-0.09656583816243881d) + "'", double44 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.07560555610353314d + "'", double45 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + (-0.405429217622299d) + "'", double60 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.3793626154059051d + "'", double61 == 0.3793626154059051d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + (-0.405429217622299d) + "'", double75 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + (-0.09656583816243881d) + "'", double84 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + (-0.975807309953049d) + "'", double85 == (-0.975807309953049d));
    }

    @Test
    public void test1380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1380");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution17);
        double[] doubleArray24 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray29 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double30 = tTestImpl18.homoscedasticT(doubleArray24, doubleArray29);
        double double31 = tTestImpl15.tTest((double) (short) 100, doubleArray24);
        double double32 = tTestImpl1.t((double) 10.0f, doubleArray24);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary33 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary34 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean36 = tTestImpl1.tTest(statisticalSummary33, statisticalSummary34, 0.405429217622299d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-0.405429217622299d) + "'", double30 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.01613264369976175d + "'", double31 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.5339796283719219d + "'", double32 == 0.5339796283719219d);
    }

    @Test
    public void test1381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1381");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        double double37 = tTestImpl1.t(10.0d, doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl40 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution39);
        double[] doubleArray46 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray51 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double52 = tTestImpl40.homoscedasticT(doubleArray46, doubleArray51);
        double double53 = tTestImpl1.t(100.0d, doubleArray51);
        org.apache.commons.math.distribution.TDistribution tDistribution54 = null;
        tTestImpl1.setDistribution(tDistribution54);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary56 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary57 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double58 = tTestImpl1.t(statisticalSummary56, statisticalSummary57);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 3.8d + "'", double37 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-0.405429217622299d) + "'", double52 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-2.8418588844347075d) + "'", double53 == (-2.8418588844347075d));
    }

    @Test
    public void test1382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1382");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        tTestImpl0.setDistribution(tDistribution58);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl61 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution63 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl64 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution63);
        double[] doubleArray70 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray75 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double76 = tTestImpl64.homoscedasticT(doubleArray70, doubleArray75);
        double double77 = tTestImpl61.tTest((double) (short) 100, doubleArray70);
        // The following exception was thrown during execution in test generation
        try {
            double double78 = tTestImpl0.tTest(0.0d, doubleArray70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + (-0.405429217622299d) + "'", double76 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.01613264369976175d + "'", double77 == 0.01613264369976175d);
    }

    @Test
    public void test1383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1383");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl2 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray6 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution7 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl8 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution7);
        double[] doubleArray14 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray19 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double20 = tTestImpl8.homoscedasticT(doubleArray14, doubleArray19);
        double double21 = tTestImpl2.tTest(doubleArray6, doubleArray19);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl2.setDistribution(tDistribution22);
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution24);
        double[] doubleArray31 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray36 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double37 = tTestImpl25.homoscedasticT(doubleArray31, doubleArray36);
        double[] doubleArray45 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double46 = tTestImpl25.t((double) '4', doubleArray45);
        org.apache.commons.math.distribution.TDistribution tDistribution47 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl48 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution47);
        double[] doubleArray54 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray59 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double60 = tTestImpl48.homoscedasticT(doubleArray54, doubleArray59);
        double double61 = tTestImpl2.t(doubleArray45, doubleArray59);
        boolean boolean63 = tTestImpl0.tTest((double) (short) 1, doubleArray59, 0.405429217622299d);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary65 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double66 = tTestImpl0.tTest((-3.5d), statisticalSummary65);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-0.405429217622299d) + "'", double20 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.2806531524060034d + "'", double21 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-0.405429217622299d) + "'", double37 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-0.09656583816243881d) + "'", double46 == (-0.09656583816243881d));
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + (-0.405429217622299d) + "'", double60 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.5172120199559697d + "'", double61 == 0.5172120199559697d);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
    }

    @Test
    public void test1384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1384");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl19.setDistribution(tDistribution20);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution27 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl28 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution27);
        double[] doubleArray34 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray39 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double40 = tTestImpl28.homoscedasticT(doubleArray34, doubleArray39);
        double double41 = tTestImpl25.tTest((double) (short) 100, doubleArray34);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double[] doubleArray64 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double65 = tTestImpl44.t((double) '4', doubleArray64);
        double double66 = tTestImpl25.tTest((double) (short) 100, doubleArray64);
        double[] doubleArray73 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double74 = tTestImpl25.tTest(0.405429217622299d, doubleArray73);
        double double75 = tTestImpl23.t(3.8d, doubleArray73);
        double double76 = tTestImpl19.t((double) (short) 1, doubleArray73);
        double double77 = tTestImpl0.tTest(0.0d, doubleArray73);
        java.lang.Class<?> wildcardClass78 = doubleArray73.getClass();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.405429217622299d) + "'", double40 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.01613264369976175d + "'", double41 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + (-0.09656583816243881d) + "'", double65 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.07560555610353314d + "'", double66 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.1143321549278642d + "'", double74 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + (-10.500000000000002d) + "'", double75 == (-10.500000000000002d));
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + (-3.5d) + "'", double76 == (-3.5d));
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.37390096630005876d + "'", double77 == 0.37390096630005876d);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test1385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1385");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.distribution.TDistribution tDistribution16 = null;
        tTestImpl1.setDistribution(tDistribution16);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary18 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary19 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double20 = tTestImpl1.t(statisticalSummary18, statisticalSummary19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
    }

    @Test
    public void test1386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1386");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl0.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl0.setDistribution(tDistribution22);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution27 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl28 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution27);
        double[] doubleArray34 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray39 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double40 = tTestImpl28.homoscedasticT(doubleArray34, doubleArray39);
        double double41 = tTestImpl25.tTest((double) (short) 100, doubleArray34);
        double double42 = tTestImpl0.t((double) (byte) 1, doubleArray34);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary43 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary44 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double45 = tTestImpl0.homoscedasticT(statisticalSummary43, statisticalSummary44);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.405429217622299d) + "'", double40 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.01613264369976175d + "'", double41 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.987358558121667d + "'", double42 == 0.987358558121667d);
    }

    @Test
    public void test1387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1387");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution1 = null;
        tTestImpl0.setDistribution(tDistribution1);
        double[] doubleArray3 = null;
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        org.apache.commons.math.distribution.TDistribution tDistribution6 = null;
        tTestImpl5.setDistribution(tDistribution6);
        org.apache.commons.math.distribution.TDistribution tDistribution8 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl9 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution8);
        double[] doubleArray15 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray20 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double21 = tTestImpl9.homoscedasticT(doubleArray15, doubleArray20);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl22 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray26 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution27 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl28 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution27);
        double[] doubleArray34 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray39 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double40 = tTestImpl28.homoscedasticT(doubleArray34, doubleArray39);
        double double41 = tTestImpl22.tTest(doubleArray26, doubleArray39);
        double double42 = tTestImpl5.homoscedasticT(doubleArray20, doubleArray26);
        // The following exception was thrown during execution in test generation
        try {
            double double43 = tTestImpl0.pairedT(doubleArray3, doubleArray26);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-0.405429217622299d) + "'", double21 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.405429217622299d) + "'", double40 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.2806531524060034d + "'", double41 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-1.1115227041167497d) + "'", double42 == (-1.1115227041167497d));
    }

    @Test
    public void test1388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1388");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution17);
        double[] doubleArray24 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray29 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double30 = tTestImpl18.homoscedasticT(doubleArray24, doubleArray29);
        double double31 = tTestImpl15.tTest((double) (short) 100, doubleArray24);
        org.apache.commons.math.distribution.TDistribution tDistribution33 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl34 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution33);
        double[] doubleArray40 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray45 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double46 = tTestImpl34.homoscedasticT(doubleArray40, doubleArray45);
        double[] doubleArray54 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double55 = tTestImpl34.t((double) '4', doubleArray54);
        double double56 = tTestImpl15.tTest((double) (short) 100, doubleArray54);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl59 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution58);
        double[] doubleArray65 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray70 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double71 = tTestImpl59.homoscedasticT(doubleArray65, doubleArray70);
        double double72 = tTestImpl15.tTest((double) (byte) 1, doubleArray65);
        org.apache.commons.math.distribution.TDistribution tDistribution73 = null;
        tTestImpl15.setDistribution(tDistribution73);
        org.apache.commons.math.distribution.TDistribution tDistribution75 = null;
        tTestImpl15.setDistribution(tDistribution75);
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        tTestImpl15.setDistribution(tDistribution77);
        org.apache.commons.math.distribution.TDistribution tDistribution79 = null;
        tTestImpl15.setDistribution(tDistribution79);
        org.apache.commons.math.distribution.TDistribution tDistribution81 = null;
        tTestImpl15.setDistribution(tDistribution81);
        double[] doubleArray89 = new double[] { (-2.8418588844347075d), 100.0f, (-1.0f), 0.35800486798369846d, 0.01613264369976175d };
        double double90 = tTestImpl15.t((double) (short) 0, doubleArray89);
        double double91 = tTestImpl1.t(0.5339796283719219d, doubleArray89);
        org.apache.commons.math.distribution.TDistribution tDistribution92 = null;
        tTestImpl1.setDistribution(tDistribution92);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary95 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean97 = tTestImpl1.tTest((double) (byte) 100, statisticalSummary95, (-0.5172120199559697d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -0.5172120199559697");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-0.405429217622299d) + "'", double30 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.01613264369976175d + "'", double31 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-0.405429217622299d) + "'", double46 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-0.09656583816243881d) + "'", double55 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.07560555610353314d + "'", double56 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + (-0.405429217622299d) + "'", double71 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.3793626154059051d + "'", double72 == 0.3793626154059051d);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[-2.8418588844347075, 100.0, -1.0, 0.35800486798369846, 0.01613264369976175]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.9566618438474437d + "'", double90 == 0.9566618438474437d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.9302024075262618d + "'", double91 == 0.9302024075262618d);
    }

    @Test
    public void test1389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1389");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray23 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution24);
        double[] doubleArray31 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray36 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double37 = tTestImpl25.homoscedasticT(doubleArray31, doubleArray36);
        double double38 = tTestImpl19.tTest(doubleArray23, doubleArray36);
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl40 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution39);
        double[] doubleArray46 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray51 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double52 = tTestImpl40.homoscedasticT(doubleArray46, doubleArray51);
        double double53 = tTestImpl6.t(doubleArray36, doubleArray51);
        double double54 = tTestImpl1.t(0.07560555610353314d, doubleArray36);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl1.setDistribution(tDistribution55);
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        tTestImpl1.setDistribution(tDistribution57);
        java.lang.Class<?> wildcardClass59 = tTestImpl1.getClass();
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-0.405429217622299d) + "'", double37 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.2806531524060034d + "'", double38 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-0.405429217622299d) + "'", double52 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.3965146696271626d + "'", double54 == 1.3965146696271626d);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test1390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1390");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl2 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        double double18 = tTestImpl2.tTest((double) (short) 100, doubleArray11);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        double[] doubleArray41 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double42 = tTestImpl21.t((double) '4', doubleArray41);
        double double43 = tTestImpl2.tTest((double) (short) 100, doubleArray41);
        double[] doubleArray50 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double51 = tTestImpl2.tTest(0.405429217622299d, doubleArray50);
        double double52 = tTestImpl0.t(3.8d, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        tTestImpl0.setDistribution(tDistribution53);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary55 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary56 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double57 = tTestImpl0.homoscedasticT(statisticalSummary55, statisticalSummary56);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.01613264369976175d + "'", double18 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-0.09656583816243881d) + "'", double42 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.07560555610353314d + "'", double43 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.1143321549278642d + "'", double51 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-10.500000000000002d) + "'", double52 == (-10.500000000000002d));
    }

    @Test
    public void test1391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1391");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        double[] doubleArray48 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double49 = tTestImpl0.tTest(0.405429217622299d, doubleArray48);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl51 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution52 = null;
        tTestImpl51.setDistribution(tDistribution52);
        org.apache.commons.math.distribution.TDistribution tDistribution54 = null;
        tTestImpl51.setDistribution(tDistribution54);
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl58 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution57);
        double[] doubleArray64 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray69 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double70 = tTestImpl58.homoscedasticT(doubleArray64, doubleArray69);
        double double71 = tTestImpl51.t(3.8d, doubleArray64);
        double double72 = tTestImpl0.t(1.088109431399388d, doubleArray64);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary73 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary74 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double75 = tTestImpl0.homoscedasticT(statisticalSummary73, statisticalSummary74);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.1143321549278642d + "'", double49 == 0.1143321549278642d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + (-0.405429217622299d) + "'", double70 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.8463073355328574d + "'", double71 == 0.8463073355328574d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.982920007042921d + "'", double72 == 0.982920007042921d);
    }

    @Test
    public void test1392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1392");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        double[] doubleArray48 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double49 = tTestImpl0.tTest(0.405429217622299d, doubleArray48);
        double[] doubleArray57 = new double[] { 10L, 0.9566618438474437d, 1.0f, 0.15639940166959065d, (short) 0, 0.15639940166959065d };
        double double58 = tTestImpl0.tTest(10.0d, doubleArray57);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary60 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double61 = tTestImpl0.t((-2.8418588844347075d), statisticalSummary60);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.1143321549278642d + "'", double49 == 0.1143321549278642d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 0.9566618438474437, 1.0, 0.15639940166959065, 0.0, 0.15639940166959065]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.004213458414249471d + "'", double58 == 0.004213458414249471d);
    }

    @Test
    public void test1393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1393");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl1.t((-0.975807309953049d), doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl1.setDistribution(tDistribution55);
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        tTestImpl1.setDistribution(tDistribution57);
        org.apache.commons.math.distribution.TDistribution tDistribution59 = null;
        tTestImpl1.setDistribution(tDistribution59);
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        tTestImpl1.setDistribution(tDistribution61);
        java.lang.Class<?> wildcardClass63 = tTestImpl1.getClass();
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.4411111919348023d + "'", double54 == 1.4411111919348023d);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test1394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1394");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl0.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl0.setDistribution(tDistribution22);
        org.apache.commons.math.distribution.TDistribution tDistribution25 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl26 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution25);
        org.apache.commons.math.distribution.TDistribution tDistribution27 = null;
        tTestImpl26.setDistribution(tDistribution27);
        org.apache.commons.math.distribution.TDistribution tDistribution29 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl30 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution29);
        double[] doubleArray36 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray41 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double42 = tTestImpl30.homoscedasticT(doubleArray36, doubleArray41);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl43 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray47 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution48 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl49 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution48);
        double[] doubleArray55 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray60 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double61 = tTestImpl49.homoscedasticT(doubleArray55, doubleArray60);
        double double62 = tTestImpl43.tTest(doubleArray47, doubleArray60);
        double double63 = tTestImpl26.homoscedasticT(doubleArray41, doubleArray47);
        double double64 = tTestImpl0.t((double) (byte) 100, doubleArray47);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary66 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean68 = tTestImpl0.tTest((double) 10L, statisticalSummary66, (double) (-1L));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -1.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-0.405429217622299d) + "'", double42 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + (-0.405429217622299d) + "'", double61 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.2806531524060034d + "'", double62 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + (-1.1115227041167497d) + "'", double63 == (-1.1115227041167497d));
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + (-2.2d) + "'", double64 == (-2.2d));
    }

    @Test
    public void test1395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1395");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl22 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution21);
        double[] doubleArray28 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray33 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double34 = tTestImpl22.homoscedasticT(doubleArray28, doubleArray33);
        double double35 = tTestImpl0.t((double) 1L, doubleArray33);
        java.lang.Class<?> wildcardClass36 = doubleArray33.getClass();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-0.405429217622299d) + "'", double34 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.3573057358494125d + "'", double35 == 1.3573057358494125d);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test1396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1396");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl1.t((-0.975807309953049d), doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl1.setDistribution(tDistribution55);
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        tTestImpl1.setDistribution(tDistribution57);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl60 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray64 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution65 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl66 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution65);
        double[] doubleArray72 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray77 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double78 = tTestImpl66.homoscedasticT(doubleArray72, doubleArray77);
        double double79 = tTestImpl60.tTest(doubleArray64, doubleArray77);
        double double80 = tTestImpl1.t((double) 0, doubleArray77);
        org.apache.commons.math.distribution.TDistribution tDistribution81 = null;
        tTestImpl1.setDistribution(tDistribution81);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary84 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean86 = tTestImpl1.tTest(0.37390096630005876d, statisticalSummary84, 4.394126037906707d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 4.394126037906707");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.4411111919348023d + "'", double54 == 1.4411111919348023d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + (-0.405429217622299d) + "'", double78 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.2806531524060034d + "'", double79 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 1.3997215400947067d + "'", double80 == 1.3997215400947067d);
    }

    @Test
    public void test1397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1397");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution17);
        double[] doubleArray24 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray29 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double30 = tTestImpl18.homoscedasticT(doubleArray24, doubleArray29);
        double double31 = tTestImpl15.tTest((double) (short) 100, doubleArray24);
        double double32 = tTestImpl1.t((double) 10.0f, doubleArray24);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary34 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double35 = tTestImpl1.t((-1.1115227041167497d), statisticalSummary34);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-0.405429217622299d) + "'", double30 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.01613264369976175d + "'", double31 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.5339796283719219d + "'", double32 == 0.5339796283719219d);
    }

    @Test
    public void test1398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1398");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution17);
        double[] doubleArray24 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray29 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double30 = tTestImpl18.homoscedasticT(doubleArray24, doubleArray29);
        double double31 = tTestImpl15.tTest((double) (short) 100, doubleArray24);
        double double32 = tTestImpl1.t((double) 10.0f, doubleArray24);
        java.lang.Class<?> wildcardClass33 = doubleArray24.getClass();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-0.405429217622299d) + "'", double30 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.01613264369976175d + "'", double31 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.5339796283719219d + "'", double32 == 0.5339796283719219d);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test1399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1399");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution17);
        double[] doubleArray24 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray29 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double30 = tTestImpl18.homoscedasticT(doubleArray24, doubleArray29);
        double double31 = tTestImpl15.tTest((double) (short) 100, doubleArray24);
        org.apache.commons.math.distribution.TDistribution tDistribution33 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl34 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution33);
        double[] doubleArray40 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray45 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double46 = tTestImpl34.homoscedasticT(doubleArray40, doubleArray45);
        double[] doubleArray54 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double55 = tTestImpl34.t((double) '4', doubleArray54);
        double double56 = tTestImpl15.tTest((double) (short) 100, doubleArray54);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl59 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution58);
        double[] doubleArray65 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray70 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double71 = tTestImpl59.homoscedasticT(doubleArray65, doubleArray70);
        double double72 = tTestImpl15.tTest((double) (byte) 1, doubleArray65);
        org.apache.commons.math.distribution.TDistribution tDistribution73 = null;
        tTestImpl15.setDistribution(tDistribution73);
        org.apache.commons.math.distribution.TDistribution tDistribution75 = null;
        tTestImpl15.setDistribution(tDistribution75);
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        tTestImpl15.setDistribution(tDistribution77);
        org.apache.commons.math.distribution.TDistribution tDistribution79 = null;
        tTestImpl15.setDistribution(tDistribution79);
        org.apache.commons.math.distribution.TDistribution tDistribution81 = null;
        tTestImpl15.setDistribution(tDistribution81);
        double[] doubleArray89 = new double[] { (-2.8418588844347075d), 100.0f, (-1.0f), 0.35800486798369846d, 0.01613264369976175d };
        double double90 = tTestImpl15.t((double) (short) 0, doubleArray89);
        double double91 = tTestImpl1.t(0.5339796283719219d, doubleArray89);
        org.apache.commons.math.distribution.TDistribution tDistribution92 = null;
        tTestImpl1.setDistribution(tDistribution92);
        org.apache.commons.math.distribution.TDistribution tDistribution94 = null;
        tTestImpl1.setDistribution(tDistribution94);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary96 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary97 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean99 = tTestImpl1.tTest(statisticalSummary96, statisticalSummary97, (double) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 97.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-0.405429217622299d) + "'", double30 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.01613264369976175d + "'", double31 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-0.405429217622299d) + "'", double46 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-0.09656583816243881d) + "'", double55 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.07560555610353314d + "'", double56 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + (-0.405429217622299d) + "'", double71 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.3793626154059051d + "'", double72 == 0.3793626154059051d);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[-2.8418588844347075, 100.0, -1.0, 0.35800486798369846, 0.01613264369976175]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.9566618438474437d + "'", double90 == 0.9566618438474437d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.9302024075262618d + "'", double91 == 0.9302024075262618d);
    }

    @Test
    public void test1400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1400");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.distribution.TDistribution tDistribution16 = null;
        tTestImpl1.setDistribution(tDistribution16);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        tTestImpl1.setDistribution(tDistribution18);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl1.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl1.setDistribution(tDistribution22);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary25 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double26 = tTestImpl1.t((-14.881283513379177d), statisticalSummary25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
    }

    @Test
    public void test1401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1401");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution1 = null;
        tTestImpl0.setDistribution(tDistribution1);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        tTestImpl0.setDistribution(tDistribution3);
        org.apache.commons.math.distribution.TDistribution tDistribution6 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl7 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution6);
        double[] doubleArray13 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray18 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double19 = tTestImpl7.homoscedasticT(doubleArray13, doubleArray18);
        double double20 = tTestImpl0.t(3.8d, doubleArray13);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary22 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean24 = tTestImpl0.tTest(0.1143321549278642d, statisticalSummary22, (double) (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -1.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-0.405429217622299d) + "'", double19 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.8463073355328574d + "'", double20 == 0.8463073355328574d);
    }

    @Test
    public void test1402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1402");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl0.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl0.setDistribution(tDistribution22);
        org.apache.commons.math.distribution.TDistribution tDistribution25 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl26 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution25);
        org.apache.commons.math.distribution.TDistribution tDistribution27 = null;
        tTestImpl26.setDistribution(tDistribution27);
        org.apache.commons.math.distribution.TDistribution tDistribution29 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl30 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution29);
        double[] doubleArray36 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray41 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double42 = tTestImpl30.homoscedasticT(doubleArray36, doubleArray41);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl43 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray47 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution48 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl49 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution48);
        double[] doubleArray55 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray60 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double61 = tTestImpl49.homoscedasticT(doubleArray55, doubleArray60);
        double double62 = tTestImpl43.tTest(doubleArray47, doubleArray60);
        double double63 = tTestImpl26.homoscedasticT(doubleArray41, doubleArray47);
        double double64 = tTestImpl0.t((double) (byte) 100, doubleArray47);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary66 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double67 = tTestImpl0.t((double) 10, statisticalSummary66);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-0.405429217622299d) + "'", double42 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + (-0.405429217622299d) + "'", double61 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.2806531524060034d + "'", double62 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + (-1.1115227041167497d) + "'", double63 == (-1.1115227041167497d));
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + (-2.2d) + "'", double64 == (-2.2d));
    }

    @Test
    public void test1403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1403");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl0.t((double) (short) 10, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl55 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl58 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution57);
        double[] doubleArray64 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray69 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double70 = tTestImpl58.homoscedasticT(doubleArray64, doubleArray69);
        double double71 = tTestImpl55.tTest((double) (short) 100, doubleArray64);
        double double72 = tTestImpl41.t((double) 10.0f, doubleArray64);
        boolean boolean74 = tTestImpl0.tTest(0.12673187601587688d, doubleArray64, 0.01613264369976175d);
        org.apache.commons.math.distribution.TDistribution tDistribution75 = null;
        tTestImpl0.setDistribution(tDistribution75);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary78 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double79 = tTestImpl0.tTest((double) 1L, statisticalSummary78);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 3.8d + "'", double38 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + (-0.405429217622299d) + "'", double70 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.01613264369976175d + "'", double71 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.5339796283719219d + "'", double72 == 0.5339796283719219d);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test1404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1404");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        double[] doubleArray48 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double49 = tTestImpl0.tTest(0.405429217622299d, doubleArray48);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl51 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl54 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution53);
        double[] doubleArray60 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray65 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double66 = tTestImpl54.homoscedasticT(doubleArray60, doubleArray65);
        double double67 = tTestImpl51.tTest((double) (short) 100, doubleArray60);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl69 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray73 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution74 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl75 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution74);
        double[] doubleArray81 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray86 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double87 = tTestImpl75.homoscedasticT(doubleArray81, doubleArray86);
        double double88 = tTestImpl69.tTest(doubleArray73, doubleArray86);
        double double89 = tTestImpl51.t((double) (short) 10, doubleArray73);
        double double90 = tTestImpl0.t(1.088109431399388d, doubleArray73);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary91 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary92 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean94 = tTestImpl0.tTest(statisticalSummary91, statisticalSummary92, (-10.500000000000002d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -10.500000000000002");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.1143321549278642d + "'", double49 == 0.1143321549278642d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + (-0.405429217622299d) + "'", double66 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.01613264369976175d + "'", double67 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + (-0.405429217622299d) + "'", double87 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.2806531524060034d + "'", double88 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 3.8d + "'", double89 == 3.8d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 4.394126037906707d + "'", double90 == 4.394126037906707d);
    }

    @Test
    public void test1405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1405");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary21 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double22 = tTestImpl0.tTest(0.8463073355328574d, statisticalSummary21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
    }

    @Test
    public void test1406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1406");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl22 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution21);
        double[] doubleArray28 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray33 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double34 = tTestImpl22.homoscedasticT(doubleArray28, doubleArray33);
        org.apache.commons.math.distribution.TDistribution tDistribution35 = null;
        tTestImpl22.setDistribution(tDistribution35);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl38 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray42 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl38.tTest(doubleArray42, doubleArray55);
        double double58 = tTestImpl22.t(10.0d, doubleArray42);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl61 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution60);
        double[] doubleArray67 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray72 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double73 = tTestImpl61.homoscedasticT(doubleArray67, doubleArray72);
        double double74 = tTestImpl22.t(100.0d, doubleArray72);
        double double75 = tTestImpl0.t((double) 0L, doubleArray72);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary76 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary77 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double78 = tTestImpl0.t(statisticalSummary76, statisticalSummary77);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-0.405429217622299d) + "'", double34 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.2806531524060034d + "'", double57 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 3.8d + "'", double58 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + (-0.405429217622299d) + "'", double73 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-2.8418588844347075d) + "'", double74 == (-2.8418588844347075d));
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 1.3997215400947067d + "'", double75 == 1.3997215400947067d);
    }

    @Test
    public void test1407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1407");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl1.t((-0.975807309953049d), doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl1.setDistribution(tDistribution55);
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        tTestImpl1.setDistribution(tDistribution57);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl60 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray64 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution65 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl66 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution65);
        double[] doubleArray72 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray77 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double78 = tTestImpl66.homoscedasticT(doubleArray72, doubleArray77);
        double double79 = tTestImpl60.tTest(doubleArray64, doubleArray77);
        double double80 = tTestImpl1.t((double) 0, doubleArray77);
        org.apache.commons.math.distribution.TDistribution tDistribution81 = null;
        tTestImpl1.setDistribution(tDistribution81);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary83 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary84 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double85 = tTestImpl1.homoscedasticTTest(statisticalSummary83, statisticalSummary84);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.4411111919348023d + "'", double54 == 1.4411111919348023d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + (-0.405429217622299d) + "'", double78 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.2806531524060034d + "'", double79 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 1.3997215400947067d + "'", double80 == 1.3997215400947067d);
    }

    @Test
    public void test1408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1408");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        tTestImpl0.setDistribution(tDistribution58);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        tTestImpl0.setDistribution(tDistribution60);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        tTestImpl0.setDistribution(tDistribution62);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        tTestImpl0.setDistribution(tDistribution64);
        org.apache.commons.math.distribution.TDistribution tDistribution66 = null;
        tTestImpl0.setDistribution(tDistribution66);
        double[] doubleArray74 = new double[] { (-2.8418588844347075d), 100.0f, (-1.0f), 0.35800486798369846d, 0.01613264369976175d };
        double double75 = tTestImpl0.t((double) (short) 0, doubleArray74);
        org.apache.commons.math.distribution.TDistribution tDistribution76 = null;
        tTestImpl0.setDistribution(tDistribution76);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary79 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double80 = tTestImpl0.tTest((-2.2d), statisticalSummary79);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-2.8418588844347075, 100.0, -1.0, 0.35800486798369846, 0.01613264369976175]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.9566618438474437d + "'", double75 == 0.9566618438474437d);
    }

    @Test
    public void test1409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1409");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        double[] doubleArray21 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double22 = tTestImpl1.t((double) '4', doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        org.apache.commons.math.distribution.TDistribution tDistribution37 = null;
        tTestImpl24.setDistribution(tDistribution37);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl40 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray44 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution45 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl46 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution45);
        double[] doubleArray52 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray57 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double58 = tTestImpl46.homoscedasticT(doubleArray52, doubleArray57);
        double double59 = tTestImpl40.tTest(doubleArray44, doubleArray57);
        double double60 = tTestImpl24.t(10.0d, doubleArray44);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl63 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution62);
        double[] doubleArray69 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray74 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double75 = tTestImpl63.homoscedasticT(doubleArray69, doubleArray74);
        double double76 = tTestImpl24.t(100.0d, doubleArray74);
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl78 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution77);
        double[] doubleArray84 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray89 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double90 = tTestImpl78.homoscedasticT(doubleArray84, doubleArray89);
        double double91 = tTestImpl1.homoscedasticT(doubleArray74, doubleArray84);
        org.apache.commons.math.distribution.TDistribution tDistribution92 = null;
        tTestImpl1.setDistribution(tDistribution92);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary94 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary95 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double96 = tTestImpl1.t(statisticalSummary94, statisticalSummary95);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-0.09656583816243881d) + "'", double22 == (-0.09656583816243881d));
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + (-0.405429217622299d) + "'", double58 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.2806531524060034d + "'", double59 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 3.8d + "'", double60 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + (-0.405429217622299d) + "'", double75 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + (-2.8418588844347075d) + "'", double76 == (-2.8418588844347075d));
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + (-0.405429217622299d) + "'", double90 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.405429217622299d + "'", double91 == 0.405429217622299d);
    }

    @Test
    public void test1410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1410");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        double double37 = tTestImpl1.t(10.0d, doubleArray21);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary38 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary39 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean41 = tTestImpl1.tTest(statisticalSummary38, statisticalSummary39, 1.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 1.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 3.8d + "'", double37 == 3.8d);
    }

    @Test
    public void test1411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1411");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution1 = null;
        tTestImpl0.setDistribution(tDistribution1);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        tTestImpl0.setDistribution(tDistribution3);
        org.apache.commons.math.distribution.TDistribution tDistribution6 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl7 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution6);
        double[] doubleArray13 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray18 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double19 = tTestImpl7.homoscedasticT(doubleArray13, doubleArray18);
        double double20 = tTestImpl0.t(3.8d, doubleArray13);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        tTestImpl0.setDistribution(tDistribution21);
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        tTestImpl0.setDistribution(tDistribution23);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary25 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary26 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double27 = tTestImpl0.t(statisticalSummary25, statisticalSummary26);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-0.405429217622299d) + "'", double19 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.8463073355328574d + "'", double20 == 0.8463073355328574d);
    }

    @Test
    public void test1412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1412");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution17);
        double[] doubleArray24 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray29 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double30 = tTestImpl18.homoscedasticT(doubleArray24, doubleArray29);
        double double31 = tTestImpl15.tTest((double) (short) 100, doubleArray24);
        org.apache.commons.math.distribution.TDistribution tDistribution33 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl34 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution33);
        double[] doubleArray40 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray45 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double46 = tTestImpl34.homoscedasticT(doubleArray40, doubleArray45);
        double[] doubleArray54 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double55 = tTestImpl34.t((double) '4', doubleArray54);
        double double56 = tTestImpl15.tTest((double) (short) 100, doubleArray54);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl59 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution58);
        double[] doubleArray65 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray70 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double71 = tTestImpl59.homoscedasticT(doubleArray65, doubleArray70);
        double double72 = tTestImpl15.tTest((double) (byte) 1, doubleArray65);
        org.apache.commons.math.distribution.TDistribution tDistribution73 = null;
        tTestImpl15.setDistribution(tDistribution73);
        org.apache.commons.math.distribution.TDistribution tDistribution75 = null;
        tTestImpl15.setDistribution(tDistribution75);
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        tTestImpl15.setDistribution(tDistribution77);
        org.apache.commons.math.distribution.TDistribution tDistribution79 = null;
        tTestImpl15.setDistribution(tDistribution79);
        org.apache.commons.math.distribution.TDistribution tDistribution81 = null;
        tTestImpl15.setDistribution(tDistribution81);
        double[] doubleArray89 = new double[] { (-2.8418588844347075d), 100.0f, (-1.0f), 0.35800486798369846d, 0.01613264369976175d };
        double double90 = tTestImpl15.t((double) (short) 0, doubleArray89);
        double double91 = tTestImpl1.t(0.5339796283719219d, doubleArray89);
        org.apache.commons.math.distribution.TDistribution tDistribution92 = null;
        tTestImpl1.setDistribution(tDistribution92);
        org.apache.commons.math.distribution.TDistribution tDistribution94 = null;
        tTestImpl1.setDistribution(tDistribution94);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary96 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary97 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double98 = tTestImpl1.homoscedasticT(statisticalSummary96, statisticalSummary97);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-0.405429217622299d) + "'", double30 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.01613264369976175d + "'", double31 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-0.405429217622299d) + "'", double46 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-0.09656583816243881d) + "'", double55 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.07560555610353314d + "'", double56 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + (-0.405429217622299d) + "'", double71 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.3793626154059051d + "'", double72 == 0.3793626154059051d);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[-2.8418588844347075, 100.0, -1.0, 0.35800486798369846, 0.01613264369976175]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.9566618438474437d + "'", double90 == 0.9566618438474437d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.9302024075262618d + "'", double91 == 0.9302024075262618d);
    }

    @Test
    public void test1413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1413");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl0.t((double) (short) 10, doubleArray22);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution41 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution41);
        double[] doubleArray48 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray53 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double54 = tTestImpl42.homoscedasticT(doubleArray48, doubleArray53);
        double double55 = tTestImpl39.tTest((double) (short) 100, doubleArray48);
        org.apache.commons.math.distribution.TDistribution tDistribution56 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl57 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution56);
        double[] doubleArray63 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray68 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double69 = tTestImpl57.homoscedasticT(doubleArray63, doubleArray68);
        double double70 = tTestImpl0.pairedT(doubleArray48, doubleArray63);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary71 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary72 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean74 = tTestImpl0.tTest(statisticalSummary71, statisticalSummary72, 0.35800486798369846d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 3.8d + "'", double38 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + (-0.405429217622299d) + "'", double54 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.01613264369976175d + "'", double55 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + (-0.405429217622299d) + "'", double69 == (-0.405429217622299d));
        org.junit.Assert.assertTrue(Double.isNaN(double70));
    }

    @Test
    public void test1414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1414");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray7 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution8 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl9 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution8);
        double[] doubleArray15 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray20 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double21 = tTestImpl9.homoscedasticT(doubleArray15, doubleArray20);
        double double22 = tTestImpl3.tTest(doubleArray7, doubleArray20);
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution24);
        double[] doubleArray31 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray36 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double37 = tTestImpl25.homoscedasticT(doubleArray31, doubleArray36);
        double double38 = tTestImpl3.t((double) 1L, doubleArray36);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean40 = tTestImpl1.tTest(4.466666666666667d, doubleArray36, (double) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 97.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-0.405429217622299d) + "'", double21 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.2806531524060034d + "'", double22 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-0.405429217622299d) + "'", double37 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.3573057358494125d + "'", double38 == 1.3573057358494125d);
    }

    @Test
    public void test1415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1415");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        tTestImpl42.setDistribution(tDistribution43);
        org.apache.commons.math.distribution.TDistribution tDistribution45 = null;
        tTestImpl42.setDistribution(tDistribution45);
        org.apache.commons.math.distribution.TDistribution tDistribution48 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl49 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution48);
        double[] doubleArray55 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray60 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double61 = tTestImpl49.homoscedasticT(doubleArray55, doubleArray60);
        double double62 = tTestImpl42.t(3.8d, doubleArray55);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl63 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray67 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution68 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl69 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution68);
        double[] doubleArray75 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray80 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double81 = tTestImpl69.homoscedasticT(doubleArray75, doubleArray80);
        double double82 = tTestImpl63.tTest(doubleArray67, doubleArray80);
        double double83 = tTestImpl0.t(doubleArray55, doubleArray80);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary85 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double86 = tTestImpl0.t(1.3930877336894083d, statisticalSummary85);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + (-0.405429217622299d) + "'", double61 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.8463073355328574d + "'", double62 == 0.8463073355328574d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + (-0.405429217622299d) + "'", double81 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.2806531524060034d + "'", double82 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + (-0.4023317120818342d) + "'", double83 == (-0.4023317120818342d));
    }

    @Test
    public void test1416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1416");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        double[] doubleArray21 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double22 = tTestImpl1.t((double) '4', doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        org.apache.commons.math.distribution.TDistribution tDistribution37 = null;
        tTestImpl24.setDistribution(tDistribution37);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl40 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray44 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution45 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl46 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution45);
        double[] doubleArray52 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray57 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double58 = tTestImpl46.homoscedasticT(doubleArray52, doubleArray57);
        double double59 = tTestImpl40.tTest(doubleArray44, doubleArray57);
        double double60 = tTestImpl24.t(10.0d, doubleArray44);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl63 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution62);
        double[] doubleArray69 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray74 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double75 = tTestImpl63.homoscedasticT(doubleArray69, doubleArray74);
        double double76 = tTestImpl24.t(100.0d, doubleArray74);
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl78 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution77);
        double[] doubleArray84 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray89 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double90 = tTestImpl78.homoscedasticT(doubleArray84, doubleArray89);
        double double91 = tTestImpl1.homoscedasticT(doubleArray74, doubleArray84);
        double[] doubleArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double94 = tTestImpl1.tTest(1.3404872472421194d, doubleArray93);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-0.09656583816243881d) + "'", double22 == (-0.09656583816243881d));
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + (-0.405429217622299d) + "'", double58 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.2806531524060034d + "'", double59 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 3.8d + "'", double60 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + (-0.405429217622299d) + "'", double75 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + (-2.8418588844347075d) + "'", double76 == (-2.8418588844347075d));
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + (-0.405429217622299d) + "'", double90 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.405429217622299d + "'", double91 == 0.405429217622299d);
    }

    @Test
    public void test1417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1417");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution1 = null;
        tTestImpl0.setDistribution(tDistribution1);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        tTestImpl0.setDistribution(tDistribution3);
        org.apache.commons.math.distribution.TDistribution tDistribution6 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl7 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution6);
        double[] doubleArray13 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray18 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double19 = tTestImpl7.homoscedasticT(doubleArray13, doubleArray18);
        double double20 = tTestImpl0.t(3.8d, doubleArray13);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        tTestImpl0.setDistribution(tDistribution21);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary24 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean26 = tTestImpl0.tTest(1.3404872472421194d, statisticalSummary24, (double) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 52.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-0.405429217622299d) + "'", double19 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.8463073355328574d + "'", double20 == 0.8463073355328574d);
    }

    @Test
    public void test1418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1418");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution17);
        double[] doubleArray24 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray29 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double30 = tTestImpl18.homoscedasticT(doubleArray24, doubleArray29);
        double double31 = tTestImpl15.tTest((double) (short) 100, doubleArray24);
        double double32 = tTestImpl1.t((double) 10.0f, doubleArray24);
        org.apache.commons.math.distribution.TDistribution tDistribution34 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl35 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution34);
        org.apache.commons.math.distribution.TDistribution tDistribution36 = null;
        tTestImpl35.setDistribution(tDistribution36);
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl40 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution39);
        double[] doubleArray46 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray51 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double52 = tTestImpl40.homoscedasticT(doubleArray46, doubleArray51);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl53 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray57 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl59 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution58);
        double[] doubleArray65 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray70 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double71 = tTestImpl59.homoscedasticT(doubleArray65, doubleArray70);
        double double72 = tTestImpl53.tTest(doubleArray57, doubleArray70);
        org.apache.commons.math.distribution.TDistribution tDistribution73 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl74 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution73);
        double[] doubleArray80 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray85 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double86 = tTestImpl74.homoscedasticT(doubleArray80, doubleArray85);
        double double87 = tTestImpl40.t(doubleArray70, doubleArray85);
        double double88 = tTestImpl35.t(0.07560555610353314d, doubleArray70);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean90 = tTestImpl1.tTest((double) (short) 0, doubleArray70, (-0.4023317120818342d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -0.4023317120818342");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-0.405429217622299d) + "'", double30 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.01613264369976175d + "'", double31 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.5339796283719219d + "'", double32 == 0.5339796283719219d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-0.405429217622299d) + "'", double52 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + (-0.405429217622299d) + "'", double71 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.2806531524060034d + "'", double72 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + (-0.405429217622299d) + "'", double86 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 1.3965146696271626d + "'", double88 == 1.3965146696271626d);
    }

    @Test
    public void test1419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1419");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl22 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution21);
        double[] doubleArray28 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray33 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double34 = tTestImpl22.homoscedasticT(doubleArray28, doubleArray33);
        org.apache.commons.math.distribution.TDistribution tDistribution35 = null;
        tTestImpl22.setDistribution(tDistribution35);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl38 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray42 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl38.tTest(doubleArray42, doubleArray55);
        double double58 = tTestImpl22.t(10.0d, doubleArray42);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl61 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution60);
        double[] doubleArray67 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray72 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double73 = tTestImpl61.homoscedasticT(doubleArray67, doubleArray72);
        double double74 = tTestImpl22.t(100.0d, doubleArray72);
        double double75 = tTestImpl0.t((double) 0L, doubleArray72);
        org.apache.commons.math.distribution.TDistribution tDistribution76 = null;
        tTestImpl0.setDistribution(tDistribution76);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary78 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary79 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double80 = tTestImpl0.tTest(statisticalSummary78, statisticalSummary79);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-0.405429217622299d) + "'", double34 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.2806531524060034d + "'", double57 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 3.8d + "'", double58 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + (-0.405429217622299d) + "'", double73 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-2.8418588844347075d) + "'", double74 == (-2.8418588844347075d));
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 1.3997215400947067d + "'", double75 == 1.3997215400947067d);
    }

    @Test
    public void test1420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1420");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl2 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray6 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution7 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl8 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution7);
        double[] doubleArray14 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray19 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double20 = tTestImpl8.homoscedasticT(doubleArray14, doubleArray19);
        double double21 = tTestImpl2.tTest(doubleArray6, doubleArray19);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl2.setDistribution(tDistribution22);
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution24);
        double[] doubleArray31 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray36 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double37 = tTestImpl25.homoscedasticT(doubleArray31, doubleArray36);
        double[] doubleArray45 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double46 = tTestImpl25.t((double) '4', doubleArray45);
        org.apache.commons.math.distribution.TDistribution tDistribution47 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl48 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution47);
        double[] doubleArray54 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray59 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double60 = tTestImpl48.homoscedasticT(doubleArray54, doubleArray59);
        double double61 = tTestImpl2.t(doubleArray45, doubleArray59);
        boolean boolean63 = tTestImpl0.tTest((double) (short) 1, doubleArray59, 0.405429217622299d);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary64 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary65 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double66 = tTestImpl0.tTest(statisticalSummary64, statisticalSummary65);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-0.405429217622299d) + "'", double20 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.2806531524060034d + "'", double21 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-0.405429217622299d) + "'", double37 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-0.09656583816243881d) + "'", double46 == (-0.09656583816243881d));
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + (-0.405429217622299d) + "'", double60 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.5172120199559697d + "'", double61 == 0.5172120199559697d);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
    }

    @Test
    public void test1421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1421");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        double double37 = tTestImpl1.t(10.0d, doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution38 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution38);
        double[] doubleArray45 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray50 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double51 = tTestImpl39.homoscedasticT(doubleArray45, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution52 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl53 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution52);
        double[] doubleArray59 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray64 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double65 = tTestImpl53.homoscedasticT(doubleArray59, doubleArray64);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl67 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution69 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl70 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution69);
        double[] doubleArray76 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray81 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double82 = tTestImpl70.homoscedasticT(doubleArray76, doubleArray81);
        double double83 = tTestImpl67.tTest((double) (short) 100, doubleArray76);
        double double84 = tTestImpl53.t((double) 10.0f, doubleArray76);
        double double85 = tTestImpl1.homoscedasticT(doubleArray50, doubleArray76);
        org.apache.commons.math.distribution.TDistribution tDistribution86 = null;
        tTestImpl1.setDistribution(tDistribution86);
        org.apache.commons.math.distribution.TDistribution tDistribution88 = null;
        tTestImpl1.setDistribution(tDistribution88);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary90 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary91 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double92 = tTestImpl1.tTest(statisticalSummary90, statisticalSummary91);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 3.8d + "'", double37 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + (-0.405429217622299d) + "'", double51 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + (-0.405429217622299d) + "'", double65 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + (-0.405429217622299d) + "'", double82 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.01613264369976175d + "'", double83 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.5339796283719219d + "'", double84 == 0.5339796283719219d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.405429217622299d + "'", double85 == 0.405429217622299d);
    }

    @Test
    public void test1422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1422");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution17);
        double[] doubleArray24 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray29 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double30 = tTestImpl18.homoscedasticT(doubleArray24, doubleArray29);
        double double31 = tTestImpl15.tTest((double) (short) 100, doubleArray24);
        org.apache.commons.math.distribution.TDistribution tDistribution33 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl34 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution33);
        double[] doubleArray40 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray45 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double46 = tTestImpl34.homoscedasticT(doubleArray40, doubleArray45);
        double[] doubleArray54 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double55 = tTestImpl34.t((double) '4', doubleArray54);
        double double56 = tTestImpl15.tTest((double) (short) 100, doubleArray54);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl59 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution58);
        double[] doubleArray65 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray70 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double71 = tTestImpl59.homoscedasticT(doubleArray65, doubleArray70);
        double double72 = tTestImpl15.tTest((double) (byte) 1, doubleArray65);
        double double73 = tTestImpl1.t((-1.0d), doubleArray65);
        org.apache.commons.math.distribution.TDistribution tDistribution74 = null;
        tTestImpl1.setDistribution(tDistribution74);
        org.apache.commons.math.distribution.TDistribution tDistribution76 = null;
        tTestImpl1.setDistribution(tDistribution76);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary79 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double80 = tTestImpl1.t(0.37390096630005876d, statisticalSummary79);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-0.405429217622299d) + "'", double30 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.01613264369976175d + "'", double31 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-0.405429217622299d) + "'", double46 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-0.09656583816243881d) + "'", double55 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.07560555610353314d + "'", double56 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + (-0.405429217622299d) + "'", double71 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.3793626154059051d + "'", double72 == 0.3793626154059051d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 1.088109431399388d + "'", double73 == 1.088109431399388d);
    }

    @Test
    public void test1423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1423");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl22 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution21);
        double[] doubleArray28 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray33 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double34 = tTestImpl22.homoscedasticT(doubleArray28, doubleArray33);
        double double35 = tTestImpl0.t((double) 1L, doubleArray33);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl36 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray40 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution41 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution41);
        double[] doubleArray48 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray53 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double54 = tTestImpl42.homoscedasticT(doubleArray48, doubleArray53);
        double double55 = tTestImpl36.tTest(doubleArray40, doubleArray53);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl56 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray60 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl62 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution61);
        double[] doubleArray68 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray73 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double74 = tTestImpl62.homoscedasticT(doubleArray68, doubleArray73);
        double double75 = tTestImpl56.tTest(doubleArray60, doubleArray73);
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl78 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution77);
        double[] doubleArray84 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray89 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double90 = tTestImpl78.homoscedasticT(doubleArray84, doubleArray89);
        double double91 = tTestImpl56.t((double) 1L, doubleArray89);
        double double92 = tTestImpl0.pairedT(doubleArray53, doubleArray89);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary93 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary94 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean96 = tTestImpl0.tTest(statisticalSummary93, statisticalSummary94, (double) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 1.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-0.405429217622299d) + "'", double34 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.3573057358494125d + "'", double35 == 1.3573057358494125d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + (-0.405429217622299d) + "'", double54 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.2806531524060034d + "'", double55 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-0.405429217622299d) + "'", double74 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.2806531524060034d + "'", double75 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + (-0.405429217622299d) + "'", double90 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 1.3573057358494125d + "'", double91 == 1.3573057358494125d);
        org.junit.Assert.assertTrue(Double.isNaN(double92));
    }

    @Test
    public void test1424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1424");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution44 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl45 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution44);
        double[] doubleArray51 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray56 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double57 = tTestImpl45.homoscedasticT(doubleArray51, doubleArray56);
        double double58 = tTestImpl42.tTest((double) (short) 100, doubleArray51);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl60 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray64 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution65 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl66 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution65);
        double[] doubleArray72 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray77 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double78 = tTestImpl66.homoscedasticT(doubleArray72, doubleArray77);
        double double79 = tTestImpl60.tTest(doubleArray64, doubleArray77);
        double double80 = tTestImpl42.t((double) (short) 10, doubleArray64);
        org.apache.commons.math.distribution.TDistribution tDistribution81 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl82 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution81);
        double[] doubleArray88 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray93 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double94 = tTestImpl82.homoscedasticT(doubleArray88, doubleArray93);
        double double95 = tTestImpl0.homoscedasticTTest(doubleArray64, doubleArray88);
        org.apache.commons.math.distribution.TDistribution tDistribution96 = null;
        tTestImpl0.setDistribution(tDistribution96);
        java.lang.Class<?> wildcardClass98 = tTestImpl0.getClass();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-0.405429217622299d) + "'", double57 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.01613264369976175d + "'", double58 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + (-0.405429217622299d) + "'", double78 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.2806531524060034d + "'", double79 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 3.8d + "'", double80 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + (-0.405429217622299d) + "'", double94 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 0.15639940166959065d + "'", double95 == 0.15639940166959065d);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test1425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1425");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        tTestImpl0.setDistribution(tDistribution17);
        org.apache.commons.math.distribution.TDistribution tDistribution19 = null;
        tTestImpl0.setDistribution(tDistribution19);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        tTestImpl23.setDistribution(tDistribution24);
        org.apache.commons.math.distribution.TDistribution tDistribution27 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl28 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution27);
        double[] doubleArray34 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray39 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double40 = tTestImpl28.homoscedasticT(doubleArray34, doubleArray39);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray45 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution46 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl47 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution46);
        double[] doubleArray53 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray58 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double59 = tTestImpl47.homoscedasticT(doubleArray53, doubleArray58);
        double double60 = tTestImpl41.tTest(doubleArray45, doubleArray58);
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl62 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution61);
        double[] doubleArray68 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray73 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double74 = tTestImpl62.homoscedasticT(doubleArray68, doubleArray73);
        double double75 = tTestImpl28.t(doubleArray58, doubleArray73);
        double double76 = tTestImpl23.t(0.07560555610353314d, doubleArray58);
        double double77 = tTestImpl0.t((double) (short) 10, doubleArray58);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary79 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double80 = tTestImpl0.tTest((-1.0d), statisticalSummary79);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.405429217622299d) + "'", double40 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + (-0.405429217622299d) + "'", double59 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.2806531524060034d + "'", double60 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-0.405429217622299d) + "'", double74 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 1.3965146696271626d + "'", double76 == 1.3965146696271626d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.9755634976417653d + "'", double77 == 0.9755634976417653d);
    }

    @Test
    public void test1426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1426");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl0.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl0.setDistribution(tDistribution22);
        org.apache.commons.math.distribution.TDistribution tDistribution25 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl26 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution25);
        org.apache.commons.math.distribution.TDistribution tDistribution27 = null;
        tTestImpl26.setDistribution(tDistribution27);
        org.apache.commons.math.distribution.TDistribution tDistribution29 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl30 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution29);
        double[] doubleArray36 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray41 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double42 = tTestImpl30.homoscedasticT(doubleArray36, doubleArray41);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl43 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray47 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution48 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl49 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution48);
        double[] doubleArray55 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray60 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double61 = tTestImpl49.homoscedasticT(doubleArray55, doubleArray60);
        double double62 = tTestImpl43.tTest(doubleArray47, doubleArray60);
        double double63 = tTestImpl26.homoscedasticT(doubleArray41, doubleArray47);
        double double64 = tTestImpl0.t((double) (byte) 100, doubleArray47);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary66 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double67 = tTestImpl0.t(0.15639940166959065d, statisticalSummary66);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-0.405429217622299d) + "'", double42 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + (-0.405429217622299d) + "'", double61 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.2806531524060034d + "'", double62 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + (-1.1115227041167497d) + "'", double63 == (-1.1115227041167497d));
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + (-2.2d) + "'", double64 == (-2.2d));
    }

    @Test
    public void test1427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1427");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution17);
        double[] doubleArray24 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray29 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double30 = tTestImpl18.homoscedasticT(doubleArray24, doubleArray29);
        double double31 = tTestImpl15.tTest((double) (short) 100, doubleArray24);
        double double32 = tTestImpl1.t((double) 10.0f, doubleArray24);
        org.apache.commons.math.distribution.TDistribution tDistribution33 = null;
        tTestImpl1.setDistribution(tDistribution33);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary35 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary36 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double37 = tTestImpl1.t(statisticalSummary35, statisticalSummary36);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-0.405429217622299d) + "'", double30 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.01613264369976175d + "'", double31 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.5339796283719219d + "'", double32 == 0.5339796283719219d);
    }

    @Test
    public void test1428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1428");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl0.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl0.setDistribution(tDistribution22);
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        tTestImpl0.setDistribution(tDistribution24);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary27 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean29 = tTestImpl0.tTest(0.37390096630005876d, statisticalSummary27, (-1.587268255506484d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -1.587268255506484");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
    }

    @Test
    public void test1429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1429");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl4 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution3);
        double[] doubleArray10 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray15 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double16 = tTestImpl4.homoscedasticT(doubleArray10, doubleArray15);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        org.apache.commons.math.distribution.TDistribution tDistribution37 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl38 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution37);
        double[] doubleArray44 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray49 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double50 = tTestImpl38.homoscedasticT(doubleArray44, doubleArray49);
        double double51 = tTestImpl4.t(doubleArray34, doubleArray49);
        double double52 = tTestImpl1.t((double) 10.0f, doubleArray49);
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        tTestImpl1.setDistribution(tDistribution53);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl56 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray60 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl62 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution61);
        double[] doubleArray68 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray73 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double74 = tTestImpl62.homoscedasticT(doubleArray68, doubleArray73);
        double double75 = tTestImpl56.tTest(doubleArray60, doubleArray73);
        double double76 = tTestImpl1.t((double) 10L, doubleArray73);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary77 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary78 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double79 = tTestImpl1.t(statisticalSummary77, statisticalSummary78);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + (-0.405429217622299d) + "'", double16 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + (-0.405429217622299d) + "'", double50 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.9755634976417653d + "'", double52 == 0.9755634976417653d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-0.405429217622299d) + "'", double74 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.2806531524060034d + "'", double75 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.9755634976417653d + "'", double76 == 0.9755634976417653d);
    }

    @Test
    public void test1430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1430");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution17);
        double[] doubleArray24 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray29 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double30 = tTestImpl18.homoscedasticT(doubleArray24, doubleArray29);
        double double31 = tTestImpl15.tTest((double) (short) 100, doubleArray24);
        org.apache.commons.math.distribution.TDistribution tDistribution33 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl34 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution33);
        double[] doubleArray40 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray45 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double46 = tTestImpl34.homoscedasticT(doubleArray40, doubleArray45);
        double[] doubleArray54 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double55 = tTestImpl34.t((double) '4', doubleArray54);
        double double56 = tTestImpl15.tTest((double) (short) 100, doubleArray54);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl59 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution58);
        double[] doubleArray65 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray70 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double71 = tTestImpl59.homoscedasticT(doubleArray65, doubleArray70);
        double double72 = tTestImpl15.tTest((double) (byte) 1, doubleArray65);
        double double73 = tTestImpl1.t((-1.0d), doubleArray65);
        org.apache.commons.math.distribution.TDistribution tDistribution74 = null;
        tTestImpl1.setDistribution(tDistribution74);
        org.apache.commons.math.distribution.TDistribution tDistribution76 = null;
        tTestImpl1.setDistribution(tDistribution76);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary78 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary79 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean81 = tTestImpl1.tTest(statisticalSummary78, statisticalSummary79, (double) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -1.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-0.405429217622299d) + "'", double30 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.01613264369976175d + "'", double31 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-0.405429217622299d) + "'", double46 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-0.09656583816243881d) + "'", double55 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.07560555610353314d + "'", double56 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + (-0.405429217622299d) + "'", double71 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.3793626154059051d + "'", double72 == 0.3793626154059051d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 1.088109431399388d + "'", double73 == 1.088109431399388d);
    }

    @Test
    public void test1431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1431");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution1 = null;
        tTestImpl0.setDistribution(tDistribution1);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        tTestImpl0.setDistribution(tDistribution3);
        org.apache.commons.math.distribution.TDistribution tDistribution6 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl7 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution6);
        double[] doubleArray13 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray18 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double19 = tTestImpl7.homoscedasticT(doubleArray13, doubleArray18);
        double double20 = tTestImpl0.t(3.8d, doubleArray13);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        tTestImpl0.setDistribution(tDistribution21);
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution24);
        double[] doubleArray31 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray36 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double37 = tTestImpl25.homoscedasticT(doubleArray31, doubleArray36);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl38 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray42 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl38.tTest(doubleArray42, doubleArray55);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl59 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution58);
        double[] doubleArray65 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray70 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double71 = tTestImpl59.homoscedasticT(doubleArray65, doubleArray70);
        double double72 = tTestImpl25.t(doubleArray55, doubleArray70);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean74 = tTestImpl0.tTest((double) (-1L), doubleArray55, 4.442799675467754d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 4.442799675467754");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-0.405429217622299d) + "'", double19 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.8463073355328574d + "'", double20 == 0.8463073355328574d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-0.405429217622299d) + "'", double37 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.2806531524060034d + "'", double57 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + (-0.405429217622299d) + "'", double71 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
    }

    @Test
    public void test1432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1432");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        tTestImpl3.setDistribution(tDistribution4);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution8 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl9 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution8);
        double[] doubleArray15 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray20 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double21 = tTestImpl9.homoscedasticT(doubleArray15, doubleArray20);
        double double22 = tTestImpl6.tTest((double) (short) 100, doubleArray15);
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution24);
        double[] doubleArray31 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray36 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double37 = tTestImpl25.homoscedasticT(doubleArray31, doubleArray36);
        double[] doubleArray45 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double46 = tTestImpl25.t((double) '4', doubleArray45);
        double double47 = tTestImpl6.tTest((double) (short) 100, doubleArray45);
        org.apache.commons.math.distribution.TDistribution tDistribution49 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl50 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution49);
        double[] doubleArray56 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray61 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double62 = tTestImpl50.homoscedasticT(doubleArray56, doubleArray61);
        double double63 = tTestImpl6.tTest((double) (byte) 1, doubleArray56);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl65 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution64);
        double[] doubleArray71 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray76 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double77 = tTestImpl65.homoscedasticT(doubleArray71, doubleArray76);
        double[] doubleArray85 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double86 = tTestImpl65.t((double) '4', doubleArray85);
        double double87 = tTestImpl3.t(doubleArray56, doubleArray85);
        double double88 = tTestImpl0.tTest((double) 0, doubleArray56);
        org.apache.commons.math.distribution.TDistribution tDistribution89 = null;
        tTestImpl0.setDistribution(tDistribution89);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary92 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double93 = tTestImpl0.tTest((double) (-1), statisticalSummary92);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-0.405429217622299d) + "'", double21 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.01613264369976175d + "'", double22 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-0.405429217622299d) + "'", double37 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-0.09656583816243881d) + "'", double46 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.07560555610353314d + "'", double47 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + (-0.405429217622299d) + "'", double62 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.3793626154059051d + "'", double63 == 0.3793626154059051d);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + (-0.405429217622299d) + "'", double77 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + (-0.09656583816243881d) + "'", double86 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + (-0.975807309953049d) + "'", double87 == (-0.975807309953049d));
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.35800486798369846d + "'", double88 == 0.35800486798369846d);
    }

    @Test
    public void test1433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1433");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl0.t((double) (short) 10, doubleArray22);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution41 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution41);
        double[] doubleArray48 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray53 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double54 = tTestImpl42.homoscedasticT(doubleArray48, doubleArray53);
        double double55 = tTestImpl39.tTest((double) (short) 100, doubleArray48);
        org.apache.commons.math.distribution.TDistribution tDistribution56 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl57 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution56);
        double[] doubleArray63 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray68 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double69 = tTestImpl57.homoscedasticT(doubleArray63, doubleArray68);
        double double70 = tTestImpl0.pairedT(doubleArray48, doubleArray63);
        org.apache.commons.math.distribution.TDistribution tDistribution71 = null;
        tTestImpl0.setDistribution(tDistribution71);
        org.apache.commons.math.distribution.TDistribution tDistribution73 = null;
        tTestImpl0.setDistribution(tDistribution73);
        org.apache.commons.math.distribution.TDistribution tDistribution75 = null;
        tTestImpl0.setDistribution(tDistribution75);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary77 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary78 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean80 = tTestImpl0.tTest(statisticalSummary77, statisticalSummary78, 0.07560555610353314d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 3.8d + "'", double38 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + (-0.405429217622299d) + "'", double54 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.01613264369976175d + "'", double55 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + (-0.405429217622299d) + "'", double69 == (-0.405429217622299d));
        org.junit.Assert.assertTrue(Double.isNaN(double70));
    }

    @Test
    public void test1434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1434");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution1 = null;
        tTestImpl0.setDistribution(tDistribution1);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        tTestImpl0.setDistribution(tDistribution3);
        org.apache.commons.math.distribution.TDistribution tDistribution6 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl7 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution6);
        double[] doubleArray13 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray18 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double19 = tTestImpl7.homoscedasticT(doubleArray13, doubleArray18);
        double double20 = tTestImpl0.t(3.8d, doubleArray13);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary22 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double23 = tTestImpl0.tTest((double) '4', statisticalSummary22);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-0.405429217622299d) + "'", double19 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.8463073355328574d + "'", double20 == 0.8463073355328574d);
    }

    @Test
    public void test1435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1435");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        double[] doubleArray48 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double49 = tTestImpl0.tTest(0.405429217622299d, doubleArray48);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl51 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl54 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution53);
        double[] doubleArray60 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray65 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double66 = tTestImpl54.homoscedasticT(doubleArray60, doubleArray65);
        double double67 = tTestImpl51.tTest((double) (short) 100, doubleArray60);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl69 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray73 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution74 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl75 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution74);
        double[] doubleArray81 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray86 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double87 = tTestImpl75.homoscedasticT(doubleArray81, doubleArray86);
        double double88 = tTestImpl69.tTest(doubleArray73, doubleArray86);
        double double89 = tTestImpl51.t((double) (short) 10, doubleArray73);
        double double90 = tTestImpl0.t(1.088109431399388d, doubleArray73);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary91 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary92 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean94 = tTestImpl0.tTest(statisticalSummary91, statisticalSummary92, (double) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 1.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.1143321549278642d + "'", double49 == 0.1143321549278642d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + (-0.405429217622299d) + "'", double66 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.01613264369976175d + "'", double67 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + (-0.405429217622299d) + "'", double87 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.2806531524060034d + "'", double88 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 3.8d + "'", double89 == 3.8d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 4.394126037906707d + "'", double90 == 4.394126037906707d);
    }

    @Test
    public void test1436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1436");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        double[] doubleArray21 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double22 = tTestImpl1.t((double) '4', doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        tTestImpl1.setDistribution(tDistribution23);
        org.apache.commons.math.distribution.TDistribution tDistribution25 = null;
        tTestImpl1.setDistribution(tDistribution25);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary28 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double29 = tTestImpl1.tTest((double) 100, statisticalSummary28);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-0.09656583816243881d) + "'", double22 == (-0.09656583816243881d));
    }

    @Test
    public void test1437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1437");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution7 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl8 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution7);
        double[] doubleArray14 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray19 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double20 = tTestImpl8.homoscedasticT(doubleArray14, doubleArray19);
        double double21 = tTestImpl5.tTest((double) (short) 100, doubleArray14);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl5.setDistribution(tDistribution22);
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        tTestImpl5.setDistribution(tDistribution24);
        org.apache.commons.math.distribution.TDistribution tDistribution27 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl28 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution27);
        org.apache.commons.math.distribution.TDistribution tDistribution29 = null;
        tTestImpl28.setDistribution(tDistribution29);
        org.apache.commons.math.distribution.TDistribution tDistribution32 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl33 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution32);
        double[] doubleArray39 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray44 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double45 = tTestImpl33.homoscedasticT(doubleArray39, doubleArray44);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl46 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray50 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution51 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl52 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution51);
        double[] doubleArray58 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray63 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double64 = tTestImpl52.homoscedasticT(doubleArray58, doubleArray63);
        double double65 = tTestImpl46.tTest(doubleArray50, doubleArray63);
        org.apache.commons.math.distribution.TDistribution tDistribution66 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl67 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution66);
        double[] doubleArray73 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray78 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double79 = tTestImpl67.homoscedasticT(doubleArray73, doubleArray78);
        double double80 = tTestImpl33.t(doubleArray63, doubleArray78);
        double double81 = tTestImpl28.t(0.07560555610353314d, doubleArray63);
        double double82 = tTestImpl5.t((double) (short) 10, doubleArray63);
        double double83 = tTestImpl1.t((-0.975807309953049d), doubleArray63);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary85 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double86 = tTestImpl1.t((double) 0.0f, statisticalSummary85);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-0.405429217622299d) + "'", double20 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.01613264369976175d + "'", double21 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + (-0.405429217622299d) + "'", double45 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + (-0.405429217622299d) + "'", double64 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.2806531524060034d + "'", double65 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + (-0.405429217622299d) + "'", double79 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 1.3965146696271626d + "'", double81 == 1.3965146696271626d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.9755634976417653d + "'", double82 == 0.9755634976417653d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.4411111919348023d + "'", double83 == 1.4411111919348023d);
    }

    @Test
    public void test1438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1438");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        tTestImpl0.setDistribution(tDistribution58);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        tTestImpl0.setDistribution(tDistribution60);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        tTestImpl0.setDistribution(tDistribution62);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        tTestImpl0.setDistribution(tDistribution64);
        org.apache.commons.math.distribution.TDistribution tDistribution66 = null;
        tTestImpl0.setDistribution(tDistribution66);
        double[] doubleArray74 = new double[] { (-2.8418588844347075d), 100.0f, (-1.0f), 0.35800486798369846d, 0.01613264369976175d };
        double double75 = tTestImpl0.t((double) (short) 0, doubleArray74);
        org.apache.commons.math.distribution.TDistribution tDistribution76 = null;
        tTestImpl0.setDistribution(tDistribution76);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl79 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray83 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution84 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl85 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution84);
        double[] doubleArray91 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray96 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double97 = tTestImpl85.homoscedasticT(doubleArray91, doubleArray96);
        double double98 = tTestImpl79.tTest(doubleArray83, doubleArray96);
        double double99 = tTestImpl0.t((double) '4', doubleArray96);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-2.8418588844347075, 100.0, -1.0, 0.35800486798369846, 0.01613264369976175]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.9566618438474437d + "'", double75 == 0.9566618438474437d);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray96), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + (-0.405429217622299d) + "'", double97 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double98 + "' != '" + 0.2806531524060034d + "'", double98 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double99 + "' != '" + (-0.8059002806605887d) + "'", double99 == (-0.8059002806605887d));
    }

    @Test
    public void test1439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1439");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        double[] doubleArray21 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double22 = tTestImpl1.t((double) '4', doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        tTestImpl1.setDistribution(tDistribution23);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl26 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray30 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution31 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl32 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution31);
        double[] doubleArray38 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray43 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double44 = tTestImpl32.homoscedasticT(doubleArray38, doubleArray43);
        double double45 = tTestImpl26.tTest(doubleArray30, doubleArray43);
        org.apache.commons.math.distribution.TDistribution tDistribution47 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl48 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution47);
        double[] doubleArray54 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray59 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double60 = tTestImpl48.homoscedasticT(doubleArray54, doubleArray59);
        double double61 = tTestImpl26.t((double) 1L, doubleArray59);
        org.apache.commons.math.distribution.TDistribution tDistribution63 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl64 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution63);
        double[] doubleArray70 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray75 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double76 = tTestImpl64.homoscedasticT(doubleArray70, doubleArray75);
        double[] doubleArray84 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double85 = tTestImpl64.t((double) '4', doubleArray84);
        double double86 = tTestImpl26.t((double) (byte) 10, doubleArray84);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean88 = tTestImpl1.tTest((-1.587268255506484d), doubleArray84, (-2.8418588844347075d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -2.8418588844347075");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-0.09656583816243881d) + "'", double22 == (-0.09656583816243881d));
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + (-0.405429217622299d) + "'", double44 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.2806531524060034d + "'", double45 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + (-0.405429217622299d) + "'", double60 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 1.3573057358494125d + "'", double61 == 1.3573057358494125d);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + (-0.405429217622299d) + "'", double76 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + (-0.09656583816243881d) + "'", double85 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 1.7753257939094542d + "'", double86 == 1.7753257939094542d);
    }

    @Test
    public void test1440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1440");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray23 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution24);
        double[] doubleArray31 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray36 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double37 = tTestImpl25.homoscedasticT(doubleArray31, doubleArray36);
        double double38 = tTestImpl19.tTest(doubleArray23, doubleArray36);
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl40 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution39);
        double[] doubleArray46 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray51 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double52 = tTestImpl40.homoscedasticT(doubleArray46, doubleArray51);
        double double53 = tTestImpl6.t(doubleArray36, doubleArray51);
        double double54 = tTestImpl1.t(0.07560555610353314d, doubleArray36);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl1.setDistribution(tDistribution55);
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        tTestImpl1.setDistribution(tDistribution57);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary59 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary60 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean62 = tTestImpl1.tTest(statisticalSummary59, statisticalSummary60, (double) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-0.405429217622299d) + "'", double37 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.2806531524060034d + "'", double38 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-0.405429217622299d) + "'", double52 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.3965146696271626d + "'", double54 == 1.3965146696271626d);
    }

    @Test
    public void test1441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1441");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        tTestImpl42.setDistribution(tDistribution43);
        org.apache.commons.math.distribution.TDistribution tDistribution45 = null;
        tTestImpl42.setDistribution(tDistribution45);
        org.apache.commons.math.distribution.TDistribution tDistribution48 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl49 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution48);
        double[] doubleArray55 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray60 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double61 = tTestImpl49.homoscedasticT(doubleArray55, doubleArray60);
        double double62 = tTestImpl42.t(3.8d, doubleArray55);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl63 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray67 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution68 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl69 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution68);
        double[] doubleArray75 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray80 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double81 = tTestImpl69.homoscedasticT(doubleArray75, doubleArray80);
        double double82 = tTestImpl63.tTest(doubleArray67, doubleArray80);
        double double83 = tTestImpl0.t(doubleArray55, doubleArray80);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary85 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double86 = tTestImpl0.tTest((-0.975807309953049d), statisticalSummary85);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + (-0.405429217622299d) + "'", double61 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.8463073355328574d + "'", double62 == 0.8463073355328574d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + (-0.405429217622299d) + "'", double81 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.2806531524060034d + "'", double82 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + (-0.4023317120818342d) + "'", double83 == (-0.4023317120818342d));
    }

    @Test
    public void test1442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1442");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl0.t((double) (short) 10, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl55 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl58 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution57);
        double[] doubleArray64 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray69 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double70 = tTestImpl58.homoscedasticT(doubleArray64, doubleArray69);
        double double71 = tTestImpl55.tTest((double) (short) 100, doubleArray64);
        double double72 = tTestImpl41.t((double) 10.0f, doubleArray64);
        boolean boolean74 = tTestImpl0.tTest(0.12673187601587688d, doubleArray64, 0.01613264369976175d);
        org.apache.commons.math.distribution.TDistribution tDistribution75 = null;
        tTestImpl0.setDistribution(tDistribution75);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary78 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean80 = tTestImpl0.tTest((double) (byte) 0, statisticalSummary78, 4.442799675467754d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 4.442799675467754");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 3.8d + "'", double38 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + (-0.405429217622299d) + "'", double70 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.01613264369976175d + "'", double71 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.5339796283719219d + "'", double72 == 0.5339796283719219d);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test1443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1443");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        double[] doubleArray48 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double49 = tTestImpl0.tTest(0.405429217622299d, doubleArray48);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl51 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl54 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution53);
        double[] doubleArray60 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray65 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double66 = tTestImpl54.homoscedasticT(doubleArray60, doubleArray65);
        double double67 = tTestImpl51.tTest((double) (short) 100, doubleArray60);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl69 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray73 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution74 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl75 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution74);
        double[] doubleArray81 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray86 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double87 = tTestImpl75.homoscedasticT(doubleArray81, doubleArray86);
        double double88 = tTestImpl69.tTest(doubleArray73, doubleArray86);
        double double89 = tTestImpl51.t((double) (short) 10, doubleArray73);
        double double90 = tTestImpl0.t(1.088109431399388d, doubleArray73);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary92 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double93 = tTestImpl0.t(0.12673187601587688d, statisticalSummary92);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.1143321549278642d + "'", double49 == 0.1143321549278642d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + (-0.405429217622299d) + "'", double66 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.01613264369976175d + "'", double67 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + (-0.405429217622299d) + "'", double87 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.2806531524060034d + "'", double88 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 3.8d + "'", double89 == 3.8d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 4.394126037906707d + "'", double90 == 4.394126037906707d);
    }

    @Test
    public void test1444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1444");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.distribution.TDistribution tDistribution16 = null;
        tTestImpl1.setDistribution(tDistribution16);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        tTestImpl1.setDistribution(tDistribution18);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl20 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        tTestImpl20.setDistribution(tDistribution21);
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        tTestImpl20.setDistribution(tDistribution23);
        org.apache.commons.math.distribution.TDistribution tDistribution26 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl27 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution26);
        double[] doubleArray33 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray38 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double39 = tTestImpl27.homoscedasticT(doubleArray33, doubleArray38);
        double double40 = tTestImpl20.t(3.8d, doubleArray33);
        org.apache.commons.math.distribution.TDistribution tDistribution41 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution41);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        tTestImpl42.setDistribution(tDistribution43);
        org.apache.commons.math.distribution.TDistribution tDistribution45 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl46 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution45);
        double[] doubleArray52 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray57 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double58 = tTestImpl46.homoscedasticT(doubleArray52, doubleArray57);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl59 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray63 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl65 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution64);
        double[] doubleArray71 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray76 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double77 = tTestImpl65.homoscedasticT(doubleArray71, doubleArray76);
        double double78 = tTestImpl59.tTest(doubleArray63, doubleArray76);
        double double79 = tTestImpl42.homoscedasticT(doubleArray57, doubleArray63);
        // The following exception was thrown during execution in test generation
        try {
            double double80 = tTestImpl1.pairedTTest(doubleArray33, doubleArray63);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Input arrays must have the same (positive) length.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + (-0.405429217622299d) + "'", double39 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.8463073355328574d + "'", double40 == 0.8463073355328574d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + (-0.405429217622299d) + "'", double58 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + (-0.405429217622299d) + "'", double77 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.2806531524060034d + "'", double78 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + (-1.1115227041167497d) + "'", double79 == (-1.1115227041167497d));
    }

    @Test
    public void test1445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1445");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl0.t((double) (short) 10, doubleArray22);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary40 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean42 = tTestImpl0.tTest(0.2806531524060034d, statisticalSummary40, 0.1143321549278642d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 3.8d + "'", double38 == 3.8d);
    }

    @Test
    public void test1446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1446");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl0.t((double) (short) 10, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl55 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl58 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution57);
        double[] doubleArray64 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray69 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double70 = tTestImpl58.homoscedasticT(doubleArray64, doubleArray69);
        double double71 = tTestImpl55.tTest((double) (short) 100, doubleArray64);
        double double72 = tTestImpl41.t((double) 10.0f, doubleArray64);
        boolean boolean74 = tTestImpl0.tTest(0.12673187601587688d, doubleArray64, 0.01613264369976175d);
        org.apache.commons.math.distribution.TDistribution tDistribution75 = null;
        tTestImpl0.setDistribution(tDistribution75);
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        tTestImpl0.setDistribution(tDistribution77);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary79 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary80 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double81 = tTestImpl0.t(statisticalSummary79, statisticalSummary80);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 3.8d + "'", double38 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + (-0.405429217622299d) + "'", double70 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.01613264369976175d + "'", double71 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.5339796283719219d + "'", double72 == 0.5339796283719219d);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test1447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1447");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution1 = null;
        tTestImpl0.setDistribution(tDistribution1);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        tTestImpl0.setDistribution(tDistribution3);
        org.apache.commons.math.distribution.TDistribution tDistribution6 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl7 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution6);
        double[] doubleArray13 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray18 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double19 = tTestImpl7.homoscedasticT(doubleArray13, doubleArray18);
        double double20 = tTestImpl0.t(3.8d, doubleArray13);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        tTestImpl0.setDistribution(tDistribution21);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary23 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary24 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean26 = tTestImpl0.tTest(statisticalSummary23, statisticalSummary24, (double) 1.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 1.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-0.405429217622299d) + "'", double19 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.8463073355328574d + "'", double20 == 0.8463073355328574d);
    }

    @Test
    public void test1448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1448");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl22 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution21);
        double[] doubleArray28 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray33 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double34 = tTestImpl22.homoscedasticT(doubleArray28, doubleArray33);
        double double35 = tTestImpl0.t((double) 1L, doubleArray33);
        org.apache.commons.math.distribution.TDistribution tDistribution36 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl37 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution36);
        double[] doubleArray43 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray48 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double49 = tTestImpl37.homoscedasticT(doubleArray43, doubleArray48);
        org.apache.commons.math.distribution.TDistribution tDistribution50 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl51 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution50);
        double[] doubleArray57 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray62 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double63 = tTestImpl51.homoscedasticT(doubleArray57, doubleArray62);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        tTestImpl51.setDistribution(tDistribution64);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl67 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray71 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution72 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl73 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution72);
        double[] doubleArray79 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray84 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double85 = tTestImpl73.homoscedasticT(doubleArray79, doubleArray84);
        double double86 = tTestImpl67.tTest(doubleArray71, doubleArray84);
        double double87 = tTestImpl51.t(10.0d, doubleArray71);
        double double88 = tTestImpl0.tTest(doubleArray48, doubleArray71);
        org.apache.commons.math.distribution.TDistribution tDistribution89 = null;
        tTestImpl0.setDistribution(tDistribution89);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary91 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary92 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double93 = tTestImpl0.homoscedasticT(statisticalSummary91, statisticalSummary92);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-0.405429217622299d) + "'", double34 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.3573057358494125d + "'", double35 == 1.3573057358494125d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + (-0.405429217622299d) + "'", double49 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + (-0.405429217622299d) + "'", double63 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + (-0.405429217622299d) + "'", double85 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.2806531524060034d + "'", double86 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 3.8d + "'", double87 == 3.8d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.2806531524060034d + "'", double88 == 0.2806531524060034d);
    }

    @Test
    public void test1449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1449");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        double[] doubleArray48 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double49 = tTestImpl0.tTest(0.405429217622299d, doubleArray48);
        double[] doubleArray57 = new double[] { 10L, 0.9566618438474437d, 1.0f, 0.15639940166959065d, (short) 0, 0.15639940166959065d };
        double double58 = tTestImpl0.tTest(10.0d, doubleArray57);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary59 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary60 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double61 = tTestImpl0.homoscedasticT(statisticalSummary59, statisticalSummary60);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.1143321549278642d + "'", double49 == 0.1143321549278642d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 0.9566618438474437, 1.0, 0.15639940166959065, 0.0, 0.15639940166959065]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.004213458414249471d + "'", double58 == 0.004213458414249471d);
    }

    @Test
    public void test1450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1450");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl22 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution21);
        double[] doubleArray28 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray33 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double34 = tTestImpl22.homoscedasticT(doubleArray28, doubleArray33);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl35 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray39 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl35.tTest(doubleArray39, doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl56 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution55);
        double[] doubleArray62 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray67 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double68 = tTestImpl56.homoscedasticT(doubleArray62, doubleArray67);
        double double69 = tTestImpl22.t(doubleArray52, doubleArray67);
        boolean boolean71 = tTestImpl0.tTest((double) (short) 0, doubleArray52, Double.NaN);
        double[] doubleArray74 = new double[] { 0.405429217622299d, 0.01613264369976175d };
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl75 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution76 = null;
        tTestImpl75.setDistribution(tDistribution76);
        org.apache.commons.math.distribution.TDistribution tDistribution78 = null;
        tTestImpl75.setDistribution(tDistribution78);
        org.apache.commons.math.distribution.TDistribution tDistribution81 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl82 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution81);
        double[] doubleArray88 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray93 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double94 = tTestImpl82.homoscedasticT(doubleArray88, doubleArray93);
        double double95 = tTestImpl75.t(3.8d, doubleArray88);
        double double96 = tTestImpl0.tTest(doubleArray74, doubleArray88);
        java.lang.Class<?> wildcardClass97 = tTestImpl0.getClass();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-0.405429217622299d) + "'", double34 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.2806531524060034d + "'", double54 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + (-0.405429217622299d) + "'", double68 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[0.405429217622299, 0.01613264369976175]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + (-0.405429217622299d) + "'", double94 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 0.8463073355328574d + "'", double95 == 0.8463073355328574d);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 0.36242697487793474d + "'", double96 == 0.36242697487793474d);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1451");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution17);
        double[] doubleArray24 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray29 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double30 = tTestImpl18.homoscedasticT(doubleArray24, doubleArray29);
        double double31 = tTestImpl15.tTest((double) (short) 100, doubleArray24);
        org.apache.commons.math.distribution.TDistribution tDistribution33 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl34 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution33);
        double[] doubleArray40 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray45 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double46 = tTestImpl34.homoscedasticT(doubleArray40, doubleArray45);
        double[] doubleArray54 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double55 = tTestImpl34.t((double) '4', doubleArray54);
        double double56 = tTestImpl15.tTest((double) (short) 100, doubleArray54);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl59 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution58);
        double[] doubleArray65 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray70 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double71 = tTestImpl59.homoscedasticT(doubleArray65, doubleArray70);
        double double72 = tTestImpl15.tTest((double) (byte) 1, doubleArray65);
        org.apache.commons.math.distribution.TDistribution tDistribution73 = null;
        tTestImpl15.setDistribution(tDistribution73);
        org.apache.commons.math.distribution.TDistribution tDistribution75 = null;
        tTestImpl15.setDistribution(tDistribution75);
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        tTestImpl15.setDistribution(tDistribution77);
        org.apache.commons.math.distribution.TDistribution tDistribution79 = null;
        tTestImpl15.setDistribution(tDistribution79);
        org.apache.commons.math.distribution.TDistribution tDistribution81 = null;
        tTestImpl15.setDistribution(tDistribution81);
        double[] doubleArray89 = new double[] { (-2.8418588844347075d), 100.0f, (-1.0f), 0.35800486798369846d, 0.01613264369976175d };
        double double90 = tTestImpl15.t((double) (short) 0, doubleArray89);
        double double91 = tTestImpl1.t(0.5339796283719219d, doubleArray89);
        org.apache.commons.math.distribution.TDistribution tDistribution92 = null;
        tTestImpl1.setDistribution(tDistribution92);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary95 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double96 = tTestImpl1.t((double) (byte) 10, statisticalSummary95);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-0.405429217622299d) + "'", double30 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.01613264369976175d + "'", double31 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-0.405429217622299d) + "'", double46 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-0.09656583816243881d) + "'", double55 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.07560555610353314d + "'", double56 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + (-0.405429217622299d) + "'", double71 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.3793626154059051d + "'", double72 == 0.3793626154059051d);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[-2.8418588844347075, 100.0, -1.0, 0.35800486798369846, 0.01613264369976175]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.9566618438474437d + "'", double90 == 0.9566618438474437d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.9302024075262618d + "'", double91 == 0.9302024075262618d);
    }

    @Test
    public void test1452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1452");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl2 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray6 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution7 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl8 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution7);
        double[] doubleArray14 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray19 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double20 = tTestImpl8.homoscedasticT(doubleArray14, doubleArray19);
        double double21 = tTestImpl2.tTest(doubleArray6, doubleArray19);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl2.setDistribution(tDistribution22);
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution24);
        double[] doubleArray31 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray36 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double37 = tTestImpl25.homoscedasticT(doubleArray31, doubleArray36);
        double[] doubleArray45 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double46 = tTestImpl25.t((double) '4', doubleArray45);
        org.apache.commons.math.distribution.TDistribution tDistribution47 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl48 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution47);
        double[] doubleArray54 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray59 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double60 = tTestImpl48.homoscedasticT(doubleArray54, doubleArray59);
        double double61 = tTestImpl2.t(doubleArray45, doubleArray59);
        boolean boolean63 = tTestImpl0.tTest((double) (short) 1, doubleArray59, 0.405429217622299d);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary65 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double66 = tTestImpl0.t(1.3965146696271626d, statisticalSummary65);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-0.405429217622299d) + "'", double20 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.2806531524060034d + "'", double21 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-0.405429217622299d) + "'", double37 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-0.09656583816243881d) + "'", double46 == (-0.09656583816243881d));
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + (-0.405429217622299d) + "'", double60 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.5172120199559697d + "'", double61 == 0.5172120199559697d);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
    }

    @Test
    public void test1453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1453");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution44 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl45 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution44);
        double[] doubleArray51 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray56 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double57 = tTestImpl45.homoscedasticT(doubleArray51, doubleArray56);
        double double58 = tTestImpl42.tTest((double) (short) 100, doubleArray51);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl61 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution60);
        double[] doubleArray67 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray72 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double73 = tTestImpl61.homoscedasticT(doubleArray67, doubleArray72);
        double[] doubleArray81 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double82 = tTestImpl61.t((double) '4', doubleArray81);
        double double83 = tTestImpl42.tTest((double) (short) 100, doubleArray81);
        double[] doubleArray89 = new double[] { 1.0f, (-0.09656583816243881d), ' ', 0.8463073355328574d, 1.3965146696271626d };
        double double90 = tTestImpl0.homoscedasticTTest(doubleArray81, doubleArray89);
        org.apache.commons.math.distribution.TDistribution tDistribution91 = null;
        tTestImpl0.setDistribution(tDistribution91);
        org.apache.commons.math.distribution.TDistribution tDistribution93 = null;
        tTestImpl0.setDistribution(tDistribution93);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary95 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary96 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double97 = tTestImpl0.homoscedasticT(statisticalSummary95, statisticalSummary96);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-0.405429217622299d) + "'", double57 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.01613264369976175d + "'", double58 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + (-0.405429217622299d) + "'", double73 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + (-0.09656583816243881d) + "'", double82 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.07560555610353314d + "'", double83 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[1.0, -0.09656583816243881, 32.0, 0.8463073355328574, 1.3965146696271626]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.12673187601587688d + "'", double90 == 0.12673187601587688d);
    }

    @Test
    public void test1454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1454");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        tTestImpl0.setDistribution(tDistribution17);
        org.apache.commons.math.distribution.TDistribution tDistribution19 = null;
        tTestImpl0.setDistribution(tDistribution19);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary22 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double23 = tTestImpl0.tTest((double) '#', statisticalSummary22);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
    }

    @Test
    public void test1455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1455");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.distribution.TDistribution tDistribution16 = null;
        tTestImpl1.setDistribution(tDistribution16);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        tTestImpl1.setDistribution(tDistribution18);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl1.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl1.setDistribution(tDistribution22);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary25 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double26 = tTestImpl1.t((double) 0L, statisticalSummary25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
    }

    @Test
    public void test1456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1456");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        tTestImpl0.setDistribution(tDistribution58);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        tTestImpl0.setDistribution(tDistribution60);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        tTestImpl0.setDistribution(tDistribution62);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        tTestImpl0.setDistribution(tDistribution64);
        org.apache.commons.math.distribution.TDistribution tDistribution66 = null;
        tTestImpl0.setDistribution(tDistribution66);
        org.apache.commons.math.distribution.TDistribution tDistribution68 = null;
        tTestImpl0.setDistribution(tDistribution68);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary70 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary71 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double72 = tTestImpl0.tTest(statisticalSummary70, statisticalSummary71);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
    }

    @Test
    public void test1457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1457");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution7 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl8 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution7);
        double[] doubleArray14 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray19 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double20 = tTestImpl8.homoscedasticT(doubleArray14, doubleArray19);
        double double21 = tTestImpl5.tTest((double) (short) 100, doubleArray14);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl5.setDistribution(tDistribution22);
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        tTestImpl5.setDistribution(tDistribution24);
        org.apache.commons.math.distribution.TDistribution tDistribution27 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl28 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution27);
        org.apache.commons.math.distribution.TDistribution tDistribution29 = null;
        tTestImpl28.setDistribution(tDistribution29);
        org.apache.commons.math.distribution.TDistribution tDistribution32 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl33 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution32);
        double[] doubleArray39 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray44 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double45 = tTestImpl33.homoscedasticT(doubleArray39, doubleArray44);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl46 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray50 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution51 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl52 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution51);
        double[] doubleArray58 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray63 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double64 = tTestImpl52.homoscedasticT(doubleArray58, doubleArray63);
        double double65 = tTestImpl46.tTest(doubleArray50, doubleArray63);
        org.apache.commons.math.distribution.TDistribution tDistribution66 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl67 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution66);
        double[] doubleArray73 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray78 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double79 = tTestImpl67.homoscedasticT(doubleArray73, doubleArray78);
        double double80 = tTestImpl33.t(doubleArray63, doubleArray78);
        double double81 = tTestImpl28.t(0.07560555610353314d, doubleArray63);
        double double82 = tTestImpl5.t((double) (short) 10, doubleArray63);
        double double83 = tTestImpl1.t((-0.975807309953049d), doubleArray63);
        org.apache.commons.math.distribution.TDistribution tDistribution84 = null;
        tTestImpl1.setDistribution(tDistribution84);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary87 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double88 = tTestImpl1.t((-0.405429217622299d), statisticalSummary87);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-0.405429217622299d) + "'", double20 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.01613264369976175d + "'", double21 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + (-0.405429217622299d) + "'", double45 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + (-0.405429217622299d) + "'", double64 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.2806531524060034d + "'", double65 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + (-0.405429217622299d) + "'", double79 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 1.3965146696271626d + "'", double81 == 1.3965146696271626d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.9755634976417653d + "'", double82 == 0.9755634976417653d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.4411111919348023d + "'", double83 == 1.4411111919348023d);
    }

    @Test
    public void test1458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1458");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary18 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double19 = tTestImpl0.t(1.4421373443400007d, statisticalSummary18);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
    }

    @Test
    public void test1459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1459");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution7 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl8 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution7);
        double[] doubleArray14 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray19 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double20 = tTestImpl8.homoscedasticT(doubleArray14, doubleArray19);
        double double21 = tTestImpl5.tTest((double) (short) 100, doubleArray14);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl5.setDistribution(tDistribution22);
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        tTestImpl5.setDistribution(tDistribution24);
        org.apache.commons.math.distribution.TDistribution tDistribution27 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl28 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution27);
        org.apache.commons.math.distribution.TDistribution tDistribution29 = null;
        tTestImpl28.setDistribution(tDistribution29);
        org.apache.commons.math.distribution.TDistribution tDistribution32 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl33 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution32);
        double[] doubleArray39 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray44 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double45 = tTestImpl33.homoscedasticT(doubleArray39, doubleArray44);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl46 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray50 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution51 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl52 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution51);
        double[] doubleArray58 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray63 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double64 = tTestImpl52.homoscedasticT(doubleArray58, doubleArray63);
        double double65 = tTestImpl46.tTest(doubleArray50, doubleArray63);
        org.apache.commons.math.distribution.TDistribution tDistribution66 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl67 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution66);
        double[] doubleArray73 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray78 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double79 = tTestImpl67.homoscedasticT(doubleArray73, doubleArray78);
        double double80 = tTestImpl33.t(doubleArray63, doubleArray78);
        double double81 = tTestImpl28.t(0.07560555610353314d, doubleArray63);
        double double82 = tTestImpl5.t((double) (short) 10, doubleArray63);
        double double83 = tTestImpl1.t((-0.975807309953049d), doubleArray63);
        java.lang.Class<?> wildcardClass84 = doubleArray63.getClass();
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-0.405429217622299d) + "'", double20 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.01613264369976175d + "'", double21 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + (-0.405429217622299d) + "'", double45 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + (-0.405429217622299d) + "'", double64 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.2806531524060034d + "'", double65 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + (-0.405429217622299d) + "'", double79 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 1.3965146696271626d + "'", double81 == 1.3965146696271626d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.9755634976417653d + "'", double82 == 0.9755634976417653d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.4411111919348023d + "'", double83 == 1.4411111919348023d);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test1460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1460");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        double[] doubleArray48 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double49 = tTestImpl0.tTest(0.405429217622299d, doubleArray48);
        double[] doubleArray57 = new double[] { 10L, 0.9566618438474437d, 1.0f, 0.15639940166959065d, (short) 0, 0.15639940166959065d };
        double double58 = tTestImpl0.tTest(10.0d, doubleArray57);
        org.apache.commons.math.distribution.TDistribution tDistribution59 = null;
        tTestImpl0.setDistribution(tDistribution59);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary61 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary62 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double63 = tTestImpl0.tTest(statisticalSummary61, statisticalSummary62);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.1143321549278642d + "'", double49 == 0.1143321549278642d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 0.9566618438474437, 1.0, 0.15639940166959065, 0.0, 0.15639940166959065]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.004213458414249471d + "'", double58 == 0.004213458414249471d);
    }

    @Test
    public void test1461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1461");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        tTestImpl1.setDistribution(tDistribution4);
        org.apache.commons.math.distribution.TDistribution tDistribution6 = null;
        tTestImpl1.setDistribution(tDistribution6);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl9 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray13 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution14);
        double[] doubleArray21 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray26 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double27 = tTestImpl15.homoscedasticT(doubleArray21, doubleArray26);
        double double28 = tTestImpl9.tTest(doubleArray13, doubleArray26);
        org.apache.commons.math.distribution.TDistribution tDistribution30 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl31 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution30);
        double[] doubleArray37 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray42 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double43 = tTestImpl31.homoscedasticT(doubleArray37, doubleArray42);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray48 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution49 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl50 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution49);
        double[] doubleArray56 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray61 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double62 = tTestImpl50.homoscedasticT(doubleArray56, doubleArray61);
        double double63 = tTestImpl44.tTest(doubleArray48, doubleArray61);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl65 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution64);
        double[] doubleArray71 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray76 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double77 = tTestImpl65.homoscedasticT(doubleArray71, doubleArray76);
        double double78 = tTestImpl31.t(doubleArray61, doubleArray76);
        boolean boolean80 = tTestImpl9.tTest((double) (short) 0, doubleArray61, Double.NaN);
        double double81 = tTestImpl1.t((double) (short) 100, doubleArray61);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary83 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double84 = tTestImpl1.tTest(0.5172120199559697d, statisticalSummary83);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + (-0.405429217622299d) + "'", double27 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.2806531524060034d + "'", double28 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + (-0.405429217622299d) + "'", double43 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + (-0.405429217622299d) + "'", double62 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.2806531524060034d + "'", double63 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + (-0.405429217622299d) + "'", double77 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + (-2.8418588844347075d) + "'", double81 == (-2.8418588844347075d));
    }

    @Test
    public void test1462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1462");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        double[] doubleArray48 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double49 = tTestImpl0.tTest(0.405429217622299d, doubleArray48);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary50 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary51 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean53 = tTestImpl0.tTest(statisticalSummary50, statisticalSummary51, (double) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 10.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.1143321549278642d + "'", double49 == 0.1143321549278642d);
    }

    @Test
    public void test1463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1463");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        double[] doubleArray45 = new double[] { 100.0f, 1.3404872472421194d, 0.15639940166959065d };
        org.apache.commons.math.distribution.TDistribution tDistribution46 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl47 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution46);
        double[] doubleArray53 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray58 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double59 = tTestImpl47.homoscedasticT(doubleArray53, doubleArray58);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl60 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray64 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution65 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl66 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution65);
        double[] doubleArray72 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray77 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double78 = tTestImpl66.homoscedasticT(doubleArray72, doubleArray77);
        double double79 = tTestImpl60.tTest(doubleArray64, doubleArray77);
        org.apache.commons.math.distribution.TDistribution tDistribution80 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl81 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution80);
        double[] doubleArray87 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray92 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double93 = tTestImpl81.homoscedasticT(doubleArray87, doubleArray92);
        double double94 = tTestImpl47.t(doubleArray77, doubleArray92);
        double double95 = tTestImpl0.homoscedasticTTest(doubleArray45, doubleArray92);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary97 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean99 = tTestImpl0.tTest((double) 100L, statisticalSummary97, (-14.881283513379177d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -14.881283513379177");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.3404872472421194, 0.15639940166959065]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + (-0.405429217622299d) + "'", double59 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + (-0.405429217622299d) + "'", double78 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.2806531524060034d + "'", double79 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray92), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + (-0.405429217622299d) + "'", double93 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 0.0d + "'", double94 == 0.0d);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 0.9839224922440002d + "'", double95 == 0.9839224922440002d);
    }

    @Test
    public void test1464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1464");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        tTestImpl0.setDistribution(tDistribution58);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        tTestImpl0.setDistribution(tDistribution60);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary63 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double64 = tTestImpl0.tTest(10.0d, statisticalSummary63);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
    }

    @Test
    public void test1465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1465");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        org.apache.commons.math.distribution.TDistribution tDistribution7 = null;
        tTestImpl6.setDistribution(tDistribution7);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl10 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl12 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution14);
        double[] doubleArray21 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray26 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double27 = tTestImpl15.homoscedasticT(doubleArray21, doubleArray26);
        double double28 = tTestImpl12.tTest((double) (short) 100, doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution30 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl31 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution30);
        double[] doubleArray37 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray42 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double43 = tTestImpl31.homoscedasticT(doubleArray37, doubleArray42);
        double[] doubleArray51 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double52 = tTestImpl31.t((double) '4', doubleArray51);
        double double53 = tTestImpl12.tTest((double) (short) 100, doubleArray51);
        double[] doubleArray60 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double61 = tTestImpl12.tTest(0.405429217622299d, doubleArray60);
        double double62 = tTestImpl10.t(3.8d, doubleArray60);
        double double63 = tTestImpl6.t((double) (short) 1, doubleArray60);
        double double64 = tTestImpl1.t(0.9839224922440002d, doubleArray60);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary66 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean68 = tTestImpl1.tTest((double) 10L, statisticalSummary66, (double) 100.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 100.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + (-0.405429217622299d) + "'", double27 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.01613264369976175d + "'", double28 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + (-0.405429217622299d) + "'", double43 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-0.09656583816243881d) + "'", double52 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.07560555610353314d + "'", double53 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.1143321549278642d + "'", double61 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + (-10.500000000000002d) + "'", double62 == (-10.500000000000002d));
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + (-3.5d) + "'", double63 == (-3.5d));
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + (-3.4598062306100013d) + "'", double64 == (-3.4598062306100013d));
    }

    @Test
    public void test1466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1466");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl0.t((double) (short) 10, doubleArray22);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution41 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution41);
        double[] doubleArray48 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray53 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double54 = tTestImpl42.homoscedasticT(doubleArray48, doubleArray53);
        double double55 = tTestImpl39.tTest((double) (short) 100, doubleArray48);
        org.apache.commons.math.distribution.TDistribution tDistribution56 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl57 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution56);
        double[] doubleArray63 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray68 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double69 = tTestImpl57.homoscedasticT(doubleArray63, doubleArray68);
        double double70 = tTestImpl0.pairedT(doubleArray48, doubleArray63);
        org.apache.commons.math.distribution.TDistribution tDistribution71 = null;
        tTestImpl0.setDistribution(tDistribution71);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary74 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double75 = tTestImpl0.t(1.4421373443400007d, statisticalSummary74);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 3.8d + "'", double38 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + (-0.405429217622299d) + "'", double54 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.01613264369976175d + "'", double55 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + (-0.405429217622299d) + "'", double69 == (-0.405429217622299d));
        org.junit.Assert.assertTrue(Double.isNaN(double70));
    }

    @Test
    public void test1467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1467");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        double[] doubleArray48 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double49 = tTestImpl0.tTest(0.405429217622299d, doubleArray48);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl51 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl54 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution53);
        double[] doubleArray60 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray65 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double66 = tTestImpl54.homoscedasticT(doubleArray60, doubleArray65);
        double double67 = tTestImpl51.tTest((double) (short) 100, doubleArray60);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl69 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray73 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution74 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl75 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution74);
        double[] doubleArray81 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray86 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double87 = tTestImpl75.homoscedasticT(doubleArray81, doubleArray86);
        double double88 = tTestImpl69.tTest(doubleArray73, doubleArray86);
        double double89 = tTestImpl51.t((double) (short) 10, doubleArray73);
        double double90 = tTestImpl0.t(1.088109431399388d, doubleArray73);
        org.apache.commons.math.distribution.TDistribution tDistribution91 = null;
        tTestImpl0.setDistribution(tDistribution91);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary94 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double95 = tTestImpl0.t((double) 0, statisticalSummary94);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.1143321549278642d + "'", double49 == 0.1143321549278642d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + (-0.405429217622299d) + "'", double66 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.01613264369976175d + "'", double67 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + (-0.405429217622299d) + "'", double87 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.2806531524060034d + "'", double88 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 3.8d + "'", double89 == 3.8d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 4.394126037906707d + "'", double90 == 4.394126037906707d);
    }

    @Test
    public void test1468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1468");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl22 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution21);
        double[] doubleArray28 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray33 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double34 = tTestImpl22.homoscedasticT(doubleArray28, doubleArray33);
        double double35 = tTestImpl0.t((double) 1L, doubleArray33);
        org.apache.commons.math.distribution.TDistribution tDistribution36 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl37 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution36);
        double[] doubleArray43 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray48 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double49 = tTestImpl37.homoscedasticT(doubleArray43, doubleArray48);
        org.apache.commons.math.distribution.TDistribution tDistribution50 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl51 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution50);
        double[] doubleArray57 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray62 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double63 = tTestImpl51.homoscedasticT(doubleArray57, doubleArray62);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        tTestImpl51.setDistribution(tDistribution64);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl67 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray71 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution72 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl73 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution72);
        double[] doubleArray79 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray84 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double85 = tTestImpl73.homoscedasticT(doubleArray79, doubleArray84);
        double double86 = tTestImpl67.tTest(doubleArray71, doubleArray84);
        double double87 = tTestImpl51.t(10.0d, doubleArray71);
        double double88 = tTestImpl0.tTest(doubleArray48, doubleArray71);
        org.apache.commons.math.distribution.TDistribution tDistribution89 = null;
        tTestImpl0.setDistribution(tDistribution89);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary91 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary92 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean94 = tTestImpl0.tTest(statisticalSummary91, statisticalSummary92, 10.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 10.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-0.405429217622299d) + "'", double34 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.3573057358494125d + "'", double35 == 1.3573057358494125d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + (-0.405429217622299d) + "'", double49 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + (-0.405429217622299d) + "'", double63 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + (-0.405429217622299d) + "'", double85 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.2806531524060034d + "'", double86 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 3.8d + "'", double87 == 3.8d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.2806531524060034d + "'", double88 == 0.2806531524060034d);
    }

    @Test
    public void test1469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1469");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        tTestImpl0.setDistribution(tDistribution17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl34 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray38 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl40 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution39);
        double[] doubleArray46 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray51 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double52 = tTestImpl40.homoscedasticT(doubleArray46, doubleArray51);
        double double53 = tTestImpl34.tTest(doubleArray38, doubleArray51);
        org.apache.commons.math.distribution.TDistribution tDistribution54 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl55 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution54);
        double[] doubleArray61 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray66 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double67 = tTestImpl55.homoscedasticT(doubleArray61, doubleArray66);
        double double68 = tTestImpl21.t(doubleArray51, doubleArray66);
        double double69 = tTestImpl0.t(1.3965146696271626d, doubleArray66);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary71 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean73 = tTestImpl0.tTest((-0.975807309953049d), statisticalSummary71, 1.088109431399388d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 1.088109431399388");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-0.405429217622299d) + "'", double52 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.2806531524060034d + "'", double53 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + (-0.405429217622299d) + "'", double67 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.3404872472421194d + "'", double69 == 1.3404872472421194d);
    }

    @Test
    public void test1470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1470");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        double double37 = tTestImpl1.t(10.0d, doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl40 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution39);
        org.apache.commons.math.distribution.TDistribution tDistribution41 = null;
        tTestImpl40.setDistribution(tDistribution41);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl46 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution48 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl49 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution48);
        double[] doubleArray55 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray60 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double61 = tTestImpl49.homoscedasticT(doubleArray55, doubleArray60);
        double double62 = tTestImpl46.tTest((double) (short) 100, doubleArray55);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl65 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution64);
        double[] doubleArray71 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray76 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double77 = tTestImpl65.homoscedasticT(doubleArray71, doubleArray76);
        double[] doubleArray85 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double86 = tTestImpl65.t((double) '4', doubleArray85);
        double double87 = tTestImpl46.tTest((double) (short) 100, doubleArray85);
        double[] doubleArray94 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double95 = tTestImpl46.tTest(0.405429217622299d, doubleArray94);
        double double96 = tTestImpl44.t(3.8d, doubleArray94);
        double double97 = tTestImpl40.t((double) (short) 1, doubleArray94);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean99 = tTestImpl1.tTest((-1.587268255506484d), doubleArray94, 0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 3.8d + "'", double37 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + (-0.405429217622299d) + "'", double61 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.01613264369976175d + "'", double62 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + (-0.405429217622299d) + "'", double77 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + (-0.09656583816243881d) + "'", double86 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.07560555610353314d + "'", double87 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray94), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 0.1143321549278642d + "'", double95 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + (-10.500000000000002d) + "'", double96 == (-10.500000000000002d));
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + (-3.5d) + "'", double97 == (-3.5d));
    }

    @Test
    public void test1471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1471");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution7 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl8 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution7);
        double[] doubleArray14 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray19 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double20 = tTestImpl8.homoscedasticT(doubleArray14, doubleArray19);
        double double21 = tTestImpl5.tTest((double) (short) 100, doubleArray14);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl5.setDistribution(tDistribution22);
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        tTestImpl5.setDistribution(tDistribution24);
        org.apache.commons.math.distribution.TDistribution tDistribution27 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl28 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution27);
        org.apache.commons.math.distribution.TDistribution tDistribution29 = null;
        tTestImpl28.setDistribution(tDistribution29);
        org.apache.commons.math.distribution.TDistribution tDistribution32 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl33 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution32);
        double[] doubleArray39 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray44 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double45 = tTestImpl33.homoscedasticT(doubleArray39, doubleArray44);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl46 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray50 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution51 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl52 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution51);
        double[] doubleArray58 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray63 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double64 = tTestImpl52.homoscedasticT(doubleArray58, doubleArray63);
        double double65 = tTestImpl46.tTest(doubleArray50, doubleArray63);
        org.apache.commons.math.distribution.TDistribution tDistribution66 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl67 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution66);
        double[] doubleArray73 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray78 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double79 = tTestImpl67.homoscedasticT(doubleArray73, doubleArray78);
        double double80 = tTestImpl33.t(doubleArray63, doubleArray78);
        double double81 = tTestImpl28.t(0.07560555610353314d, doubleArray63);
        double double82 = tTestImpl5.t((double) (short) 10, doubleArray63);
        double double83 = tTestImpl1.t((-0.975807309953049d), doubleArray63);
        org.apache.commons.math.distribution.TDistribution tDistribution84 = null;
        tTestImpl1.setDistribution(tDistribution84);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary87 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean89 = tTestImpl1.tTest((-0.8059002806605887d), statisticalSummary87, 0.1143321549278642d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-0.405429217622299d) + "'", double20 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.01613264369976175d + "'", double21 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + (-0.405429217622299d) + "'", double45 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + (-0.405429217622299d) + "'", double64 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.2806531524060034d + "'", double65 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + (-0.405429217622299d) + "'", double79 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 1.3965146696271626d + "'", double81 == 1.3965146696271626d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.9755634976417653d + "'", double82 == 0.9755634976417653d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.4411111919348023d + "'", double83 == 1.4411111919348023d);
    }

    @Test
    public void test1472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1472");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl22 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution21);
        double[] doubleArray28 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray33 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double34 = tTestImpl22.homoscedasticT(doubleArray28, doubleArray33);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl35 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray39 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl35.tTest(doubleArray39, doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl56 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution55);
        double[] doubleArray62 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray67 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double68 = tTestImpl56.homoscedasticT(doubleArray62, doubleArray67);
        double double69 = tTestImpl22.t(doubleArray52, doubleArray67);
        boolean boolean71 = tTestImpl0.tTest((double) (short) 0, doubleArray52, Double.NaN);
        double[] doubleArray72 = null;
        org.apache.commons.math.distribution.TDistribution tDistribution73 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl74 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution73);
        double[] doubleArray80 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray85 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double86 = tTestImpl74.homoscedasticT(doubleArray80, doubleArray85);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean88 = tTestImpl0.tTest(doubleArray72, doubleArray85, 1.3930877336894083d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 1.3930877336894083");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-0.405429217622299d) + "'", double34 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.2806531524060034d + "'", double54 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + (-0.405429217622299d) + "'", double68 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + (-0.405429217622299d) + "'", double86 == (-0.405429217622299d));
    }

    @Test
    public void test1473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1473");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        double[] doubleArray21 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double22 = tTestImpl1.t((double) '4', doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        org.apache.commons.math.distribution.TDistribution tDistribution37 = null;
        tTestImpl24.setDistribution(tDistribution37);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl40 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray44 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution45 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl46 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution45);
        double[] doubleArray52 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray57 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double58 = tTestImpl46.homoscedasticT(doubleArray52, doubleArray57);
        double double59 = tTestImpl40.tTest(doubleArray44, doubleArray57);
        double double60 = tTestImpl24.t(10.0d, doubleArray44);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl63 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution62);
        double[] doubleArray69 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray74 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double75 = tTestImpl63.homoscedasticT(doubleArray69, doubleArray74);
        double double76 = tTestImpl24.t(100.0d, doubleArray74);
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl78 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution77);
        double[] doubleArray84 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray89 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double90 = tTestImpl78.homoscedasticT(doubleArray84, doubleArray89);
        double double91 = tTestImpl1.homoscedasticT(doubleArray74, doubleArray84);
        org.apache.commons.math.distribution.TDistribution tDistribution92 = null;
        tTestImpl1.setDistribution(tDistribution92);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary95 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double96 = tTestImpl1.tTest((double) 0.0f, statisticalSummary95);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-0.09656583816243881d) + "'", double22 == (-0.09656583816243881d));
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + (-0.405429217622299d) + "'", double58 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.2806531524060034d + "'", double59 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 3.8d + "'", double60 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + (-0.405429217622299d) + "'", double75 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + (-2.8418588844347075d) + "'", double76 == (-2.8418588844347075d));
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + (-0.405429217622299d) + "'", double90 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.405429217622299d + "'", double91 == 0.405429217622299d);
    }

    @Test
    public void test1474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1474");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl0.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl0.setDistribution(tDistribution22);
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        tTestImpl0.setDistribution(tDistribution24);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary27 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double28 = tTestImpl0.t(0.5703029263335007d, statisticalSummary27);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
    }

    @Test
    public void test1475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1475");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl22 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution21);
        double[] doubleArray28 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray33 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double34 = tTestImpl22.homoscedasticT(doubleArray28, doubleArray33);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl35 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray39 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl35.tTest(doubleArray39, doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl56 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution55);
        double[] doubleArray62 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray67 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double68 = tTestImpl56.homoscedasticT(doubleArray62, doubleArray67);
        double double69 = tTestImpl22.t(doubleArray52, doubleArray67);
        boolean boolean71 = tTestImpl0.tTest((double) (short) 0, doubleArray52, Double.NaN);
        double[] doubleArray74 = new double[] { 0.405429217622299d, 0.01613264369976175d };
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl75 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution76 = null;
        tTestImpl75.setDistribution(tDistribution76);
        org.apache.commons.math.distribution.TDistribution tDistribution78 = null;
        tTestImpl75.setDistribution(tDistribution78);
        org.apache.commons.math.distribution.TDistribution tDistribution81 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl82 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution81);
        double[] doubleArray88 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray93 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double94 = tTestImpl82.homoscedasticT(doubleArray88, doubleArray93);
        double double95 = tTestImpl75.t(3.8d, doubleArray88);
        double double96 = tTestImpl0.tTest(doubleArray74, doubleArray88);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary98 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double99 = tTestImpl0.t(100.0d, statisticalSummary98);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-0.405429217622299d) + "'", double34 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.2806531524060034d + "'", double54 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + (-0.405429217622299d) + "'", double68 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[0.405429217622299, 0.01613264369976175]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + (-0.405429217622299d) + "'", double94 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 0.8463073355328574d + "'", double95 == 0.8463073355328574d);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 0.36242697487793474d + "'", double96 == 0.36242697487793474d);
    }

    @Test
    public void test1476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1476");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl0.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl0.setDistribution(tDistribution22);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution27 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl28 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution27);
        double[] doubleArray34 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray39 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double40 = tTestImpl28.homoscedasticT(doubleArray34, doubleArray39);
        double double41 = tTestImpl25.tTest((double) (short) 100, doubleArray34);
        double double42 = tTestImpl0.t((double) (byte) 1, doubleArray34);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary43 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary44 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double45 = tTestImpl0.t(statisticalSummary43, statisticalSummary44);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.405429217622299d) + "'", double40 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.01613264369976175d + "'", double41 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.987358558121667d + "'", double42 == 0.987358558121667d);
    }

    @Test
    public void test1477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1477");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary14 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary15 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean17 = tTestImpl1.tTest(statisticalSummary14, statisticalSummary15, (double) 10L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 10.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
    }

    @Test
    public void test1478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1478");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        tTestImpl0.setDistribution(tDistribution17);
        org.apache.commons.math.distribution.TDistribution tDistribution19 = null;
        tTestImpl0.setDistribution(tDistribution19);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        tTestImpl23.setDistribution(tDistribution24);
        org.apache.commons.math.distribution.TDistribution tDistribution27 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl28 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution27);
        double[] doubleArray34 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray39 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double40 = tTestImpl28.homoscedasticT(doubleArray34, doubleArray39);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray45 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution46 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl47 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution46);
        double[] doubleArray53 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray58 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double59 = tTestImpl47.homoscedasticT(doubleArray53, doubleArray58);
        double double60 = tTestImpl41.tTest(doubleArray45, doubleArray58);
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl62 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution61);
        double[] doubleArray68 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray73 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double74 = tTestImpl62.homoscedasticT(doubleArray68, doubleArray73);
        double double75 = tTestImpl28.t(doubleArray58, doubleArray73);
        double double76 = tTestImpl23.t(0.07560555610353314d, doubleArray58);
        double double77 = tTestImpl0.t((double) (short) 10, doubleArray58);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary79 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double80 = tTestImpl0.tTest(0.0d, statisticalSummary79);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.405429217622299d) + "'", double40 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + (-0.405429217622299d) + "'", double59 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.2806531524060034d + "'", double60 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-0.405429217622299d) + "'", double74 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 1.3965146696271626d + "'", double76 == 1.3965146696271626d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.9755634976417653d + "'", double77 == 0.9755634976417653d);
    }

    @Test
    public void test1479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1479");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl7 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution9 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl10 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution9);
        double[] doubleArray16 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray21 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double22 = tTestImpl10.homoscedasticT(doubleArray16, doubleArray21);
        double double23 = tTestImpl7.tTest((double) (short) 100, doubleArray16);
        org.apache.commons.math.distribution.TDistribution tDistribution25 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl26 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution25);
        double[] doubleArray32 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray37 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double38 = tTestImpl26.homoscedasticT(doubleArray32, doubleArray37);
        double[] doubleArray46 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double47 = tTestImpl26.t((double) '4', doubleArray46);
        double double48 = tTestImpl7.tTest((double) (short) 100, doubleArray46);
        double[] doubleArray55 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double56 = tTestImpl7.tTest(0.405429217622299d, doubleArray55);
        double double57 = tTestImpl5.t(3.8d, doubleArray55);
        double double58 = tTestImpl1.t((double) (short) 1, doubleArray55);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary59 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary60 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean62 = tTestImpl1.tTest(statisticalSummary59, statisticalSummary60, 0.5172120199559697d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.5172120199559697");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-0.405429217622299d) + "'", double22 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.01613264369976175d + "'", double23 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-0.405429217622299d) + "'", double38 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + (-0.09656583816243881d) + "'", double47 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.07560555610353314d + "'", double48 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.1143321549278642d + "'", double56 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-10.500000000000002d) + "'", double57 == (-10.500000000000002d));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + (-3.5d) + "'", double58 == (-3.5d));
    }

    @Test
    public void test1480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1480");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl0.t((double) (short) 10, doubleArray22);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution41 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution41);
        double[] doubleArray48 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray53 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double54 = tTestImpl42.homoscedasticT(doubleArray48, doubleArray53);
        double double55 = tTestImpl39.tTest((double) (short) 100, doubleArray48);
        org.apache.commons.math.distribution.TDistribution tDistribution56 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl57 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution56);
        double[] doubleArray63 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray68 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double69 = tTestImpl57.homoscedasticT(doubleArray63, doubleArray68);
        double double70 = tTestImpl0.pairedT(doubleArray48, doubleArray63);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary71 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary72 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double73 = tTestImpl0.t(statisticalSummary71, statisticalSummary72);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 3.8d + "'", double38 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + (-0.405429217622299d) + "'", double54 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.01613264369976175d + "'", double55 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + (-0.405429217622299d) + "'", double69 == (-0.405429217622299d));
        org.junit.Assert.assertTrue(Double.isNaN(double70));
    }

    @Test
    public void test1481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1481");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl22 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution21);
        double[] doubleArray28 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray33 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double34 = tTestImpl22.homoscedasticT(doubleArray28, doubleArray33);
        double double35 = tTestImpl0.t((double) 1L, doubleArray33);
        org.apache.commons.math.distribution.TDistribution tDistribution36 = null;
        tTestImpl0.setDistribution(tDistribution36);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary38 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary39 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double40 = tTestImpl0.homoscedasticTTest(statisticalSummary38, statisticalSummary39);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-0.405429217622299d) + "'", double34 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.3573057358494125d + "'", double35 == 1.3573057358494125d);
    }

    @Test
    public void test1482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1482");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        double double37 = tTestImpl1.t(10.0d, doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution38 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution38);
        double[] doubleArray45 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray50 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double51 = tTestImpl39.homoscedasticT(doubleArray45, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution52 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl53 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution52);
        double[] doubleArray59 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray64 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double65 = tTestImpl53.homoscedasticT(doubleArray59, doubleArray64);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl67 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution69 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl70 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution69);
        double[] doubleArray76 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray81 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double82 = tTestImpl70.homoscedasticT(doubleArray76, doubleArray81);
        double double83 = tTestImpl67.tTest((double) (short) 100, doubleArray76);
        double double84 = tTestImpl53.t((double) 10.0f, doubleArray76);
        double double85 = tTestImpl1.homoscedasticT(doubleArray50, doubleArray76);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary86 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary87 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean89 = tTestImpl1.tTest(statisticalSummary86, statisticalSummary87, 0.5703029263335007d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.5703029263335007");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 3.8d + "'", double37 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + (-0.405429217622299d) + "'", double51 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + (-0.405429217622299d) + "'", double65 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + (-0.405429217622299d) + "'", double82 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.01613264369976175d + "'", double83 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.5339796283719219d + "'", double84 == 0.5339796283719219d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.405429217622299d + "'", double85 == 0.405429217622299d);
    }

    @Test
    public void test1483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1483");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl54 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray58 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution59 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl60 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution59);
        double[] doubleArray66 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray71 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double72 = tTestImpl60.homoscedasticT(doubleArray66, doubleArray71);
        double double73 = tTestImpl54.tTest(doubleArray58, doubleArray71);
        org.apache.commons.math.distribution.TDistribution tDistribution74 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl75 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution74);
        double[] doubleArray81 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray86 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double87 = tTestImpl75.homoscedasticT(doubleArray81, doubleArray86);
        double double88 = tTestImpl41.t(doubleArray71, doubleArray86);
        double double89 = tTestImpl1.t((double) 0.0f, doubleArray86);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary91 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double92 = tTestImpl1.t(1.3404872472421194d, statisticalSummary91);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + (-0.405429217622299d) + "'", double72 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.2806531524060034d + "'", double73 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + (-0.405429217622299d) + "'", double87 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.0d + "'", double88 == 0.0d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 1.3997215400947067d + "'", double89 == 1.3997215400947067d);
    }

    @Test
    public void test1484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1484");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        double[] doubleArray21 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double22 = tTestImpl1.t((double) '4', doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        tTestImpl1.setDistribution(tDistribution23);
        org.apache.commons.math.distribution.TDistribution tDistribution25 = null;
        tTestImpl1.setDistribution(tDistribution25);
        org.apache.commons.math.distribution.TDistribution tDistribution27 = null;
        tTestImpl1.setDistribution(tDistribution27);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary29 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary30 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double31 = tTestImpl1.t(statisticalSummary29, statisticalSummary30);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-0.09656583816243881d) + "'", double22 == (-0.09656583816243881d));
    }

    @Test
    public void test1485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1485");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        tTestImpl0.setDistribution(tDistribution17);
        org.apache.commons.math.distribution.TDistribution tDistribution19 = null;
        tTestImpl0.setDistribution(tDistribution19);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        tTestImpl23.setDistribution(tDistribution24);
        org.apache.commons.math.distribution.TDistribution tDistribution27 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl28 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution27);
        double[] doubleArray34 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray39 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double40 = tTestImpl28.homoscedasticT(doubleArray34, doubleArray39);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray45 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution46 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl47 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution46);
        double[] doubleArray53 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray58 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double59 = tTestImpl47.homoscedasticT(doubleArray53, doubleArray58);
        double double60 = tTestImpl41.tTest(doubleArray45, doubleArray58);
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl62 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution61);
        double[] doubleArray68 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray73 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double74 = tTestImpl62.homoscedasticT(doubleArray68, doubleArray73);
        double double75 = tTestImpl28.t(doubleArray58, doubleArray73);
        double double76 = tTestImpl23.t(0.07560555610353314d, doubleArray58);
        double double77 = tTestImpl0.t((double) (short) 10, doubleArray58);
        java.lang.Class<?> wildcardClass78 = tTestImpl0.getClass();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.405429217622299d) + "'", double40 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + (-0.405429217622299d) + "'", double59 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.2806531524060034d + "'", double60 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-0.405429217622299d) + "'", double74 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 1.3965146696271626d + "'", double76 == 1.3965146696271626d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.9755634976417653d + "'", double77 == 0.9755634976417653d);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test1486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1486");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl2 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        double double18 = tTestImpl2.tTest((double) (short) 100, doubleArray11);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        double[] doubleArray41 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double42 = tTestImpl21.t((double) '4', doubleArray41);
        double double43 = tTestImpl2.tTest((double) (short) 100, doubleArray41);
        double[] doubleArray50 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double51 = tTestImpl2.tTest(0.405429217622299d, doubleArray50);
        double double52 = tTestImpl0.t(3.8d, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        tTestImpl0.setDistribution(tDistribution53);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl0.setDistribution(tDistribution55);
        java.lang.Class<?> wildcardClass57 = tTestImpl0.getClass();
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.01613264369976175d + "'", double18 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-0.09656583816243881d) + "'", double42 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.07560555610353314d + "'", double43 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.1143321549278642d + "'", double51 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-10.500000000000002d) + "'", double52 == (-10.500000000000002d));
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test1487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1487");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        tTestImpl1.setDistribution(tDistribution4);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary6 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary7 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean9 = tTestImpl1.tTest(statisticalSummary6, statisticalSummary7, (-0.4023317120818342d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -0.4023317120818342");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1488");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        double[] doubleArray21 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double22 = tTestImpl1.t((double) '4', doubleArray21);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary23 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary24 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean26 = tTestImpl1.tTest(statisticalSummary23, statisticalSummary24, (double) 100L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 100.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-0.09656583816243881d) + "'", double22 == (-0.09656583816243881d));
    }

    @Test
    public void test1489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1489");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        double[] doubleArray45 = new double[] { 100.0f, 1.3404872472421194d, 0.15639940166959065d };
        org.apache.commons.math.distribution.TDistribution tDistribution46 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl47 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution46);
        double[] doubleArray53 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray58 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double59 = tTestImpl47.homoscedasticT(doubleArray53, doubleArray58);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl60 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray64 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution65 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl66 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution65);
        double[] doubleArray72 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray77 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double78 = tTestImpl66.homoscedasticT(doubleArray72, doubleArray77);
        double double79 = tTestImpl60.tTest(doubleArray64, doubleArray77);
        org.apache.commons.math.distribution.TDistribution tDistribution80 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl81 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution80);
        double[] doubleArray87 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray92 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double93 = tTestImpl81.homoscedasticT(doubleArray87, doubleArray92);
        double double94 = tTestImpl47.t(doubleArray77, doubleArray92);
        double double95 = tTestImpl0.homoscedasticTTest(doubleArray45, doubleArray92);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary96 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary97 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double98 = tTestImpl0.homoscedasticTTest(statisticalSummary96, statisticalSummary97);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.3404872472421194, 0.15639940166959065]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + (-0.405429217622299d) + "'", double59 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + (-0.405429217622299d) + "'", double78 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.2806531524060034d + "'", double79 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray92), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + (-0.405429217622299d) + "'", double93 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 0.0d + "'", double94 == 0.0d);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 0.9839224922440002d + "'", double95 == 0.9839224922440002d);
    }

    @Test
    public void test1490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1490");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        double double37 = tTestImpl1.t(10.0d, doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution38 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution38);
        double[] doubleArray45 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray50 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double51 = tTestImpl39.homoscedasticT(doubleArray45, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution52 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl53 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution52);
        double[] doubleArray59 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray64 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double65 = tTestImpl53.homoscedasticT(doubleArray59, doubleArray64);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl67 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution69 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl70 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution69);
        double[] doubleArray76 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray81 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double82 = tTestImpl70.homoscedasticT(doubleArray76, doubleArray81);
        double double83 = tTestImpl67.tTest((double) (short) 100, doubleArray76);
        double double84 = tTestImpl53.t((double) 10.0f, doubleArray76);
        double double85 = tTestImpl1.homoscedasticT(doubleArray50, doubleArray76);
        org.apache.commons.math.distribution.TDistribution tDistribution86 = null;
        tTestImpl1.setDistribution(tDistribution86);
        org.apache.commons.math.distribution.TDistribution tDistribution88 = null;
        tTestImpl1.setDistribution(tDistribution88);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary91 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean93 = tTestImpl1.tTest((double) (byte) 10, statisticalSummary91, (double) 10.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 10.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 3.8d + "'", double37 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + (-0.405429217622299d) + "'", double51 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + (-0.405429217622299d) + "'", double65 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + (-0.405429217622299d) + "'", double82 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.01613264369976175d + "'", double83 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.5339796283719219d + "'", double84 == 0.5339796283719219d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.405429217622299d + "'", double85 == 0.405429217622299d);
    }

    @Test
    public void test1491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1491");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        tTestImpl0.setDistribution(tDistribution58);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        tTestImpl0.setDistribution(tDistribution60);
        org.apache.commons.math.distribution.TDistribution tDistribution63 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl64 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution63);
        double[] doubleArray70 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray75 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double76 = tTestImpl64.homoscedasticT(doubleArray70, doubleArray75);
        double double77 = tTestImpl0.t((double) 0, doubleArray75);
        org.apache.commons.math.distribution.TDistribution tDistribution78 = null;
        tTestImpl0.setDistribution(tDistribution78);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary81 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double82 = tTestImpl0.tTest((double) ' ', statisticalSummary81);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + (-0.405429217622299d) + "'", double76 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 1.3997215400947067d + "'", double77 == 1.3997215400947067d);
    }

    @Test
    public void test1492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1492");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl4 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution3);
        double[] doubleArray10 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray15 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double16 = tTestImpl4.homoscedasticT(doubleArray10, doubleArray15);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        org.apache.commons.math.distribution.TDistribution tDistribution37 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl38 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution37);
        double[] doubleArray44 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray49 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double50 = tTestImpl38.homoscedasticT(doubleArray44, doubleArray49);
        double double51 = tTestImpl4.t(doubleArray34, doubleArray49);
        double double52 = tTestImpl1.t((double) 10.0f, doubleArray49);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary54 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double55 = tTestImpl1.t(0.0d, statisticalSummary54);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + (-0.405429217622299d) + "'", double16 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + (-0.405429217622299d) + "'", double50 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.9755634976417653d + "'", double52 == 0.9755634976417653d);
    }

    @Test
    public void test1493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1493");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution42 = null;
        tTestImpl0.setDistribution(tDistribution42);
        org.apache.commons.math.distribution.TDistribution tDistribution44 = null;
        tTestImpl0.setDistribution(tDistribution44);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary47 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double48 = tTestImpl0.tTest(0.37390096630005876d, statisticalSummary47);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
    }

    @Test
    public void test1494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1494");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl19.setDistribution(tDistribution20);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution27 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl28 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution27);
        double[] doubleArray34 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray39 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double40 = tTestImpl28.homoscedasticT(doubleArray34, doubleArray39);
        double double41 = tTestImpl25.tTest((double) (short) 100, doubleArray34);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double[] doubleArray64 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double65 = tTestImpl44.t((double) '4', doubleArray64);
        double double66 = tTestImpl25.tTest((double) (short) 100, doubleArray64);
        double[] doubleArray73 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double74 = tTestImpl25.tTest(0.405429217622299d, doubleArray73);
        double double75 = tTestImpl23.t(3.8d, doubleArray73);
        double double76 = tTestImpl19.t((double) (short) 1, doubleArray73);
        double double77 = tTestImpl0.tTest(0.0d, doubleArray73);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary78 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary79 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double80 = tTestImpl0.homoscedasticT(statisticalSummary78, statisticalSummary79);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.405429217622299d) + "'", double40 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.01613264369976175d + "'", double41 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + (-0.09656583816243881d) + "'", double65 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.07560555610353314d + "'", double66 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.1143321549278642d + "'", double74 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + (-10.500000000000002d) + "'", double75 == (-10.500000000000002d));
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + (-3.5d) + "'", double76 == (-3.5d));
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.37390096630005876d + "'", double77 == 0.37390096630005876d);
    }

    @Test
    public void test1495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1495");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary15 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double16 = tTestImpl1.t((-2.8418588844347075d), statisticalSummary15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
    }

    @Test
    public void test1496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1496");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        tTestImpl0.setDistribution(tDistribution58);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        tTestImpl0.setDistribution(tDistribution60);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        tTestImpl0.setDistribution(tDistribution62);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary65 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean67 = tTestImpl0.tTest(1.3573057358494125d, statisticalSummary65, (double) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 100.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
    }

    @Test
    public void test1497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1497");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution42 = null;
        tTestImpl0.setDistribution(tDistribution42);
        org.apache.commons.math.distribution.TDistribution tDistribution44 = null;
        tTestImpl0.setDistribution(tDistribution44);
        org.apache.commons.math.distribution.TDistribution tDistribution46 = null;
        tTestImpl0.setDistribution(tDistribution46);
        org.apache.commons.math.distribution.TDistribution tDistribution48 = null;
        tTestImpl0.setDistribution(tDistribution48);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary50 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary51 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double52 = tTestImpl0.t(statisticalSummary50, statisticalSummary51);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
    }

    @Test
    public void test1498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1498");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary43 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double44 = tTestImpl0.t(0.0d, statisticalSummary43);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
    }

    @Test
    public void test1499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1499");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary14 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary15 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double16 = tTestImpl1.homoscedasticTTest(statisticalSummary14, statisticalSummary15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
    }

    @Test
    public void test1500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1500");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl0.t((double) (short) 10, doubleArray22);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution41 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution41);
        double[] doubleArray48 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray53 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double54 = tTestImpl42.homoscedasticT(doubleArray48, doubleArray53);
        double double55 = tTestImpl39.tTest((double) (short) 100, doubleArray48);
        org.apache.commons.math.distribution.TDistribution tDistribution56 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl57 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution56);
        double[] doubleArray63 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray68 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double69 = tTestImpl57.homoscedasticT(doubleArray63, doubleArray68);
        double double70 = tTestImpl0.pairedT(doubleArray48, doubleArray63);
        org.apache.commons.math.distribution.TDistribution tDistribution71 = null;
        tTestImpl0.setDistribution(tDistribution71);
        org.apache.commons.math.distribution.TDistribution tDistribution73 = null;
        tTestImpl0.setDistribution(tDistribution73);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary76 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double77 = tTestImpl0.t((double) 100, statisticalSummary76);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 3.8d + "'", double38 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + (-0.405429217622299d) + "'", double54 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.01613264369976175d + "'", double55 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + (-0.405429217622299d) + "'", double69 == (-0.405429217622299d));
        org.junit.Assert.assertTrue(Double.isNaN(double70));
    }
}

