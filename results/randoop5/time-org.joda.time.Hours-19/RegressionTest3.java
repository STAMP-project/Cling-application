import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest3 {

    public static boolean debug = false;

    @Test
    public void test1501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1501");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod6 = hours5.toMutablePeriod();
        org.joda.time.Hours hours7 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours8 = hours5.minus(hours7);
        org.joda.time.Hours hours10 = hours7.plus(8);
        org.joda.time.Hours hours11 = hours1.minus(hours7);
        org.joda.time.Hours hours12 = hours11.negated();
        org.joda.time.Hours hours13 = hours11.negated();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
    }

    @Test
    public void test1502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1502");
        org.joda.time.Hours hours0 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours1 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType2 = null;
        int int3 = hours1.get(durationFieldType2);
        boolean boolean4 = hours0.equals((java.lang.Object) durationFieldType2);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod7 = hours6.toMutablePeriod();
        org.joda.time.Hours hours8 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours9 = hours6.minus(hours8);
        int int10 = hours5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours8);
        org.joda.time.Hours hours12 = hours8.multipliedBy(0);
        org.joda.time.Hours hours13 = hours0.plus(hours12);
        org.joda.time.Hours hours15 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod17 = hours16.toMutablePeriod();
        org.joda.time.Hours hours18 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours19 = hours16.minus(hours18);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = hours16.get(durationFieldType20);
        org.joda.time.Hours hours23 = hours16.minus((int) (short) 0);
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod25 = hours24.toMutablePeriod();
        org.joda.time.Hours hours26 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours27 = hours24.minus(hours26);
        org.joda.time.DurationFieldType durationFieldType28 = null;
        boolean boolean29 = hours26.isSupported(durationFieldType28);
        org.joda.time.Hours hours30 = hours23.minus(hours26);
        org.joda.time.Hours hours31 = hours15.plus(hours30);
        org.joda.time.Hours hours32 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod33 = hours32.toMutablePeriod();
        org.joda.time.Hours hours34 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours35 = hours32.minus(hours34);
        boolean boolean36 = hours30.isGreaterThan(hours34);
        org.joda.time.Hours hours37 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours30);
        int int38 = hours12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours30);
        org.joda.time.Hours hours39 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod40 = hours39.toMutablePeriod();
        org.joda.time.Hours hours41 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours42 = hours39.minus(hours41);
        org.joda.time.DurationFieldType durationFieldType43 = null;
        int int44 = hours39.get(durationFieldType43);
        org.joda.time.Hours hours46 = hours39.minus((int) (short) 0);
        org.joda.time.Hours hours47 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType48 = null;
        int int49 = hours47.get(durationFieldType48);
        org.joda.time.DurationFieldType durationFieldType50 = hours47.getFieldType();
        int int51 = hours46.get(durationFieldType50);
        org.joda.time.Hours hours52 = org.joda.time.Hours.ONE;
        int int53 = hours52.getHours();
        org.joda.time.Hours hours55 = hours52.plus(10);
        org.joda.time.Hours hours56 = hours46.minus(hours55);
        org.joda.time.Hours hours58 = hours46.dividedBy(6);
        org.joda.time.ReadableInterval readableInterval59 = null;
        org.joda.time.Hours hours60 = org.joda.time.Hours.hoursIn(readableInterval59);
        org.joda.time.DurationFieldType durationFieldType61 = hours60.getFieldType();
        org.joda.time.Hours hours63 = hours60.dividedBy((int) (byte) 10);
        org.joda.time.Hours hours65 = hours60.plus((int) (byte) 1);
        org.joda.time.Hours hours66 = hours65.negated();
        int int67 = hours58.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours65);
        boolean boolean68 = hours12.equals((java.lang.Object) hours58);
        org.joda.time.Hours hours69 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours12);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(mutablePeriod33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(mutablePeriod40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(durationFieldType50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 7 + "'", int51 == 7);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertNotNull(durationFieldType61);
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertNotNull(hours65);
        org.junit.Assert.assertNotNull(hours66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(hours69);
    }

    @Test
    public void test1503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1503");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours((int) (byte) 100);
        org.joda.time.Hours hours3 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours5 = hours3.multipliedBy((int) (byte) 100);
        org.joda.time.Hours hours6 = hours3.negated();
        org.joda.time.Hours hours7 = hours1.plus(hours6);
        org.joda.time.Hours hours9 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = hours10.get(durationFieldType14);
        org.joda.time.Hours hours17 = hours10.minus((int) (short) 0);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod19 = hours18.toMutablePeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours21 = hours18.minus(hours20);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        boolean boolean23 = hours20.isSupported(durationFieldType22);
        org.joda.time.Hours hours24 = hours17.minus(hours20);
        org.joda.time.Hours hours25 = hours9.plus(hours24);
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod27 = hours26.toMutablePeriod();
        org.joda.time.Hours hours28 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours29 = hours26.minus(hours28);
        boolean boolean30 = hours24.isGreaterThan(hours28);
        org.joda.time.Hours hours31 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours24);
        int int32 = hours31.size();
        org.joda.time.Hours hours34 = hours31.multipliedBy((int) (short) 1);
        org.joda.time.Hours hours35 = hours1.plus(hours31);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
    }

    @Test
    public void test1504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1504");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        int int8 = hours6.getValue((int) (short) 0);
        java.lang.String str9 = hours6.toString();
        boolean boolean10 = hours0.isGreaterThan(hours6);
        org.joda.time.Hours hours12 = hours6.minus(10);
        org.joda.time.Hours hours13 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod15 = hours14.toMutablePeriod();
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours17 = hours14.minus(hours16);
        int int18 = hours13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours16);
        org.joda.time.Hours hours19 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours13);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = hours13.get(durationFieldType20);
        boolean boolean22 = hours12.equals((java.lang.Object) hours13);
        org.joda.time.Hours hours24 = hours13.minus(100);
        int int25 = hours13.getHours();
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours27 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod28 = hours27.toMutablePeriod();
        org.joda.time.Hours hours29 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours30 = hours27.minus(hours29);
        int int31 = hours26.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours29);
        org.joda.time.Hours hours32 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours26);
        org.joda.time.Hours hours33 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod34 = hours33.toMutablePeriod();
        org.joda.time.Hours hours35 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours36 = hours33.minus(hours35);
        org.joda.time.DurationFieldType durationFieldType37 = null;
        int int38 = hours33.get(durationFieldType37);
        org.joda.time.Hours hours40 = hours33.minus((int) (short) 0);
        org.joda.time.Hours hours41 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType42 = null;
        int int43 = hours41.get(durationFieldType42);
        org.joda.time.DurationFieldType durationFieldType44 = hours41.getFieldType();
        int int45 = hours40.get(durationFieldType44);
        org.joda.time.Hours hours46 = org.joda.time.Hours.ONE;
        int int47 = hours46.getHours();
        org.joda.time.Hours hours49 = hours46.plus(10);
        org.joda.time.Hours hours50 = hours40.minus(hours49);
        org.joda.time.Hours hours51 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours50);
        boolean boolean52 = hours26.isLessThan(hours51);
        boolean boolean53 = hours13.equals((java.lang.Object) hours26);
        org.joda.time.Hours hours54 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType55 = null;
        int int56 = hours54.get(durationFieldType55);
        org.joda.time.Hours hours58 = hours54.dividedBy(100);
        org.joda.time.Hours hours59 = hours54.negated();
        boolean boolean60 = hours26.equals((java.lang.Object) hours59);
        org.joda.time.Hours hours62 = hours59.plus(41297762);
        org.joda.time.Hours hours64 = hours62.minus((-15));
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8 + "'", int8 == 8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT8H" + "'", str9, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 7 + "'", int25 == 7);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(durationFieldType44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 7 + "'", int45 == 7);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(hours62);
        org.junit.Assert.assertNotNull(hours64);
    }

    @Test
    public void test1505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1505");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.PeriodType periodType6 = hours0.getPeriodType();
        org.joda.time.Hours hours8 = org.joda.time.Hours.parseHours("PT7H");
        boolean boolean9 = hours0.isLessThan(hours8);
        org.joda.time.Hours hours10 = org.joda.time.Hours.ZERO;
        boolean boolean11 = hours8.isGreaterThan(hours10);
        org.joda.time.Hours hours12 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours13 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = hours13.get(durationFieldType14);
        boolean boolean16 = hours12.equals((java.lang.Object) durationFieldType14);
        org.joda.time.Hours hours17 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod19 = hours18.toMutablePeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours21 = hours18.minus(hours20);
        int int22 = hours17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours20);
        org.joda.time.Hours hours24 = hours20.multipliedBy(0);
        org.joda.time.Hours hours25 = hours12.plus(hours24);
        org.joda.time.DurationFieldType durationFieldType26 = hours25.getFieldType();
        int int27 = hours8.get(durationFieldType26);
        int int28 = hours8.getHours();
        org.joda.time.Hours hours30 = hours8.plus(5);
        org.joda.time.Hours hours31 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours32 = org.joda.time.Hours.EIGHT;
        int int34 = hours32.getValue((int) (short) 0);
        org.joda.time.Hours hours35 = hours31.minus(hours32);
        boolean boolean37 = hours32.equals((java.lang.Object) (short) 10);
        org.joda.time.Hours hours38 = null;
        org.joda.time.Hours hours39 = hours32.minus(hours38);
        org.joda.time.Hours hours40 = hours39.negated();
        org.joda.time.Hours hours41 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod42 = hours41.toMutablePeriod();
        org.joda.time.Hours hours43 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours44 = hours41.minus(hours43);
        org.joda.time.Duration duration45 = hours41.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod46 = hours41.toMutablePeriod();
        org.joda.time.Hours hours47 = org.joda.time.Hours.EIGHT;
        int int49 = hours47.getValue((int) (short) 0);
        java.lang.String str50 = hours47.toString();
        boolean boolean51 = hours41.isGreaterThan(hours47);
        org.joda.time.Hours hours53 = hours47.minus(10);
        org.joda.time.Hours hours54 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours55 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod56 = hours55.toMutablePeriod();
        org.joda.time.Hours hours57 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours58 = hours55.minus(hours57);
        int int59 = hours54.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours57);
        org.joda.time.Hours hours60 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours54);
        org.joda.time.DurationFieldType durationFieldType61 = null;
        int int62 = hours54.get(durationFieldType61);
        boolean boolean63 = hours53.equals((java.lang.Object) hours54);
        java.lang.String str64 = hours53.toString();
        org.joda.time.DurationFieldType durationFieldType66 = hours53.getFieldType(0);
        boolean boolean67 = hours39.isGreaterThan(hours53);
        int int68 = hours39.getHours();
        org.joda.time.DurationFieldType durationFieldType69 = hours39.getFieldType();
        org.joda.time.Hours hours70 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod71 = hours70.toMutablePeriod();
        org.joda.time.Hours hours72 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours73 = hours70.minus(hours72);
        org.joda.time.DurationFieldType durationFieldType74 = null;
        int int75 = hours70.get(durationFieldType74);
        org.joda.time.Hours hours77 = hours70.minus((int) (short) 0);
        org.joda.time.Hours hours78 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod79 = hours78.toMutablePeriod();
        org.joda.time.Hours hours80 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours81 = hours78.minus(hours80);
        org.joda.time.DurationFieldType durationFieldType82 = null;
        boolean boolean83 = hours80.isSupported(durationFieldType82);
        org.joda.time.Hours hours84 = hours77.minus(hours80);
        org.joda.time.Hours hours86 = hours80.dividedBy(12);
        int int87 = hours39.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours86);
        int int88 = hours8.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours39);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 7 + "'", int27 == 7);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 7 + "'", int28 == 7);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 8 + "'", int34 == 8);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(mutablePeriod42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertNotNull(mutablePeriod46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 8 + "'", int49 == 8);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "PT8H" + "'", str50, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(mutablePeriod56);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "PT-2H" + "'", str64, "PT-2H");
        org.junit.Assert.assertNotNull(durationFieldType66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 8 + "'", int68 == 8);
        org.junit.Assert.assertNotNull(durationFieldType69);
        org.junit.Assert.assertNotNull(hours70);
        org.junit.Assert.assertNotNull(mutablePeriod71);
        org.junit.Assert.assertNotNull(hours72);
        org.junit.Assert.assertNotNull(hours73);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertNotNull(hours77);
        org.junit.Assert.assertNotNull(hours78);
        org.junit.Assert.assertNotNull(mutablePeriod79);
        org.junit.Assert.assertNotNull(hours80);
        org.junit.Assert.assertNotNull(hours81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(hours84);
        org.junit.Assert.assertNotNull(hours86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 1 + "'", int87 == 1);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
    }

    @Test
    public void test1506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1506");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        int int1 = hours0.getHours();
        org.joda.time.Hours hours3 = hours0.plus(10);
        org.joda.time.Hours hours4 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod5 = hours4.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours7 = hours4.minus(hours6);
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = hours4.get(durationFieldType8);
        org.joda.time.Hours hours11 = hours4.multipliedBy(1);
        boolean boolean12 = hours0.isGreaterThan(hours4);
        org.joda.time.Hours hours13 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours15 = org.joda.time.Hours.EIGHT;
        int int17 = hours15.getValue((int) (short) 0);
        org.joda.time.Hours hours18 = hours14.minus(hours15);
        org.joda.time.Hours hours19 = hours13.minus(hours14);
        int int20 = hours13.size();
        org.joda.time.Hours hours21 = hours4.plus(hours13);
        org.joda.time.Hours hours23 = org.joda.time.Hours.hours(0);
        int int24 = hours23.size();
        org.joda.time.Hours hours26 = org.joda.time.Hours.hours((-1));
        int int27 = hours23.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours26);
        org.joda.time.Hours hours28 = hours4.minus(hours23);
        org.joda.time.Hours hours29 = hours4.negated();
        org.joda.time.Hours hours31 = hours4.plus(92);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 8 + "'", int17 == 8);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours31);
    }

    @Test
    public void test1507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1507");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.multipliedBy(1);
        org.joda.time.Hours hours8 = org.joda.time.Hours.ONE;
        int int9 = hours7.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours8);
        org.joda.time.Hours hours11 = hours8.multipliedBy((int) '#');
        org.joda.time.Hours hours12 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours13 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours14 = org.joda.time.Hours.EIGHT;
        int int16 = hours14.getValue((int) (short) 0);
        org.joda.time.Hours hours17 = hours13.minus(hours14);
        org.joda.time.Hours hours18 = hours12.minus(hours13);
        org.joda.time.Hours hours20 = hours13.multipliedBy((int) (byte) 10);
        boolean boolean21 = hours8.equals((java.lang.Object) hours20);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 8 + "'", int16 == 8);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test1508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1508");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.minus((int) (short) -1);
        org.joda.time.Hours hours11 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours12 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod13 = hours12.toMutablePeriod();
        org.joda.time.Hours hours14 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours15 = hours12.minus(hours14);
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = hours12.get(durationFieldType16);
        org.joda.time.Hours hours19 = hours12.minus((int) (short) 0);
        org.joda.time.Hours hours20 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod21 = hours20.toMutablePeriod();
        org.joda.time.Hours hours22 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours23 = hours20.minus(hours22);
        org.joda.time.DurationFieldType durationFieldType24 = null;
        boolean boolean25 = hours22.isSupported(durationFieldType24);
        org.joda.time.Hours hours26 = hours19.minus(hours22);
        org.joda.time.Hours hours27 = hours11.plus(hours26);
        org.joda.time.Hours hours28 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod29 = hours28.toMutablePeriod();
        org.joda.time.Hours hours30 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours31 = hours28.minus(hours30);
        boolean boolean32 = hours26.isGreaterThan(hours30);
        org.joda.time.Hours hours33 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours34 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours35 = org.joda.time.Hours.EIGHT;
        int int37 = hours35.getValue((int) (short) 0);
        org.joda.time.Hours hours38 = hours34.minus(hours35);
        org.joda.time.Hours hours39 = hours33.minus(hours34);
        org.joda.time.Hours hours41 = hours34.dividedBy(1);
        org.joda.time.Duration duration42 = hours34.toStandardDuration();
        boolean boolean43 = hours30.isGreaterThan(hours34);
        org.joda.time.Hours hours44 = hours30.negated();
        org.joda.time.Hours hours45 = hours44.negated();
        org.joda.time.Hours hours47 = hours45.multipliedBy((int) 'a');
        org.joda.time.Hours hours48 = hours47.negated();
        boolean boolean49 = hours9.isGreaterThan(hours48);
        org.joda.time.MutablePeriod mutablePeriod50 = hours48.toMutablePeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 8 + "'", int37 == 8);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(mutablePeriod50);
    }

    @Test
    public void test1509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1509");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod6 = hours5.toMutablePeriod();
        org.joda.time.Hours hours7 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours8 = hours5.minus(hours7);
        org.joda.time.Hours hours10 = hours7.plus(8);
        org.joda.time.Hours hours11 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType12 = null;
        int int13 = hours11.get(durationFieldType12);
        org.joda.time.DurationFieldType durationFieldType14 = hours11.getFieldType();
        boolean boolean15 = hours10.isSupported(durationFieldType14);
        boolean boolean16 = hours0.isSupported(durationFieldType14);
        org.joda.time.Hours hours17 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period18 = hours17.toPeriod();
        org.joda.time.Hours hours20 = hours17.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod21 = hours20.toMutablePeriod();
        org.joda.time.Hours hours22 = org.joda.time.Hours.THREE;
        org.joda.time.Period period23 = hours22.toPeriod();
        org.joda.time.Hours hours25 = hours22.plus((int) (byte) -1);
        org.joda.time.Hours hours26 = hours20.minus(hours22);
        org.joda.time.Hours hours27 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod28 = hours27.toMutablePeriod();
        org.joda.time.Hours hours29 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours30 = hours27.minus(hours29);
        org.joda.time.DurationFieldType durationFieldType31 = null;
        int int32 = hours27.get(durationFieldType31);
        org.joda.time.Hours hours34 = hours27.minus((int) (short) 0);
        org.joda.time.Hours hours35 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType36 = null;
        int int37 = hours35.get(durationFieldType36);
        org.joda.time.DurationFieldType durationFieldType38 = hours35.getFieldType();
        int int39 = hours34.get(durationFieldType38);
        int int40 = hours22.get(durationFieldType38);
        boolean boolean41 = hours0.equals((java.lang.Object) hours22);
        java.lang.String str42 = hours22.toString();
        org.joda.time.Duration duration43 = hours22.toStandardDuration();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(durationFieldType38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 7 + "'", int39 == 7);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 3 + "'", int40 == 3);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "PT3H" + "'", str42, "PT3H");
        org.junit.Assert.assertNotNull(duration43);
    }

    @Test
    public void test1510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1510");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours6 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours0);
        org.joda.time.Hours hours8 = hours0.plus(0);
        int int9 = hours0.getHours();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 7 + "'", int9 == 7);
    }

    @Test
    public void test1511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1511");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period1 = hours0.toPeriod();
        org.joda.time.Hours hours3 = hours0.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.THREE;
        org.joda.time.Period period6 = hours5.toPeriod();
        org.joda.time.Hours hours8 = hours5.plus((int) (byte) -1);
        org.joda.time.Hours hours9 = hours3.minus(hours5);
        org.joda.time.Hours hours11 = org.joda.time.Hours.hours((int) '4');
        org.joda.time.DurationFieldType durationFieldType12 = hours11.getFieldType();
        org.joda.time.PeriodType periodType13 = hours11.getPeriodType();
        org.joda.time.Hours hours14 = hours9.plus(hours11);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Hours hours16 = hours9.dividedBy(0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: / by zero");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(hours14);
    }

    @Test
    public void test1512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1512");
        org.joda.time.Hours hours0 = org.joda.time.Hours.EIGHT;
        int int2 = hours0.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus((int) '4');
        org.joda.time.DurationFieldType durationFieldType5 = hours4.getFieldType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 8 + "'", int2 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(durationFieldType5);
    }
}

