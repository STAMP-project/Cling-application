import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest2 {

    public static boolean debug = false;

    @Test
    public void test1001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1001");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo23 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21, (int) ' ');
        org.mockito.cglib.core.Signature signature24 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor21);
        java.lang.Class<?> wildcardClass25 = signature24.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray26 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass25);
        org.mockito.cglib.core.ClassInfo classInfo27 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass25);
        java.beans.PropertyDescriptor[] propertyDescriptorArray28 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass25);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method29 = org.mockito.cglib.core.ReflectUtils.findNewInstance((java.lang.Class) wildcardClass25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: class org.mockito.cglib.core.Signature is not an interface");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo23);
        org.junit.Assert.assertNotNull(signature24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(propertyDescriptorArray26);
        org.junit.Assert.assertNotNull(classInfo27);
        org.junit.Assert.assertNotNull(propertyDescriptorArray28);
    }

    @Test
    public void test1002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1002");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo23 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21, (int) ' ');
        org.mockito.cglib.core.Signature signature24 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor21);
        java.lang.Class<?> wildcardClass25 = signature24.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray26 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass25);
        org.mockito.cglib.core.ClassInfo classInfo27 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass25);
        java.beans.PropertyDescriptor[] propertyDescriptorArray28 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass25);
        java.beans.PropertyDescriptor[] propertyDescriptorArray29 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass25);
        java.lang.reflect.Method[] methodArray32 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray29, false, false);
        java.lang.Class[] classArray33 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray29);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo23);
        org.junit.Assert.assertNotNull(signature24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(propertyDescriptorArray26);
        org.junit.Assert.assertNotNull(classInfo27);
        org.junit.Assert.assertNotNull(propertyDescriptorArray28);
        org.junit.Assert.assertNotNull(propertyDescriptorArray29);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(classArray33);
    }

    @Test
    public void test1003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1003");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.lang.Object obj3 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.beans.PropertyDescriptor[] propertyDescriptorArray4 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray4, false, true);
        java.lang.Class[] classArray8 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray4);
        java.lang.Class[] classArray9 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray8);
        java.lang.String[] strArray10 = org.mockito.cglib.core.ReflectUtils.getNames(classArray9);
        java.lang.reflect.Constructor constructor11 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray9);
        java.lang.Object obj12 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.util.List list13 = null;
        java.util.List list14 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list13);
        // The following exception was thrown during execution in test generation
        try {
            java.beans.PropertyDescriptor[] propertyDescriptorArray15 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass1);
            org.junit.Assert.fail("Expected exception of type org.mockito.cglib.core.CodeGenerationException; message: java.beans.IntrospectionException-->java.lang.Object not superclass of java.lang.Object");
        } catch (org.mockito.cglib.core.CodeGenerationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(propertyDescriptorArray4);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(classArray8);
        org.junit.Assert.assertNotNull(classArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(constructor11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNull(list14);
    }

    @Test
    public void test1004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1004");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.lang.Object obj3 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.beans.PropertyDescriptor[] propertyDescriptorArray4 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray4, false, true);
        java.lang.Class[] classArray8 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray4);
        java.lang.Class[] classArray9 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray8);
        java.lang.String[] strArray10 = org.mockito.cglib.core.ReflectUtils.getNames(classArray9);
        java.lang.reflect.Constructor constructor11 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray9);
        org.mockito.cglib.core.ClassInfo classInfo12 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method13 = org.mockito.cglib.core.ReflectUtils.findNewInstance((java.lang.Class) wildcardClass1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: class java.lang.Object is not an interface");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(propertyDescriptorArray4);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(classArray8);
        org.junit.Assert.assertNotNull(classArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(constructor11);
        org.junit.Assert.assertNotNull(classInfo12);
    }

    @Test
    public void test1005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1005");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.lang.Class<?> wildcardClass23 = constructor21.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray24 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray27 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray24, false, true);
        java.lang.Class[] classArray28 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray24);
        java.lang.Class[] classArray29 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray28);
        java.lang.String[] strArray30 = org.mockito.cglib.core.ReflectUtils.getNames(classArray28);
        java.lang.Class[] classArray31 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray28);
        java.lang.String[] strArray32 = org.mockito.cglib.core.ReflectUtils.getNames(classArray28);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Constructor constructor33 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass23, classArray28);
            org.junit.Assert.fail("Expected exception of type org.mockito.cglib.core.CodeGenerationException; message: java.lang.NoSuchMethodException-->java.lang.reflect.Constructor.<init>()");
        } catch (org.mockito.cglib.core.CodeGenerationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(propertyDescriptorArray24);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(classArray28);
        org.junit.Assert.assertNotNull(classArray29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(strArray32);
    }

    @Test
    public void test1006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1006");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        java.util.List list2 = null;
        java.util.List list3 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list2);
        java.lang.Object obj4 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.lang.Object obj5 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass7);
        java.lang.Object obj9 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass7);
        java.lang.Object obj10 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass7);
        org.mockito.cglib.core.ClassInfo classInfo11 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass7);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.String[] strArray18 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray19 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray20 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray18, methodArray19);
        java.lang.reflect.Method[] methodArray21 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray20);
        java.lang.reflect.Method[] methodArray22 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray21);
        java.lang.Class[] classArray23 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) strArray12);
        java.beans.PropertyDescriptor[] propertyDescriptorArray24 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray27 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray24, false, true);
        java.lang.reflect.Method[] methodArray30 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray24, false, false);
        java.lang.reflect.Method[] methodArray33 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray24, true, false);
        java.lang.Object obj34 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass7, classArray23, (java.lang.Object[]) propertyDescriptorArray24);
        java.lang.Object obj35 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass7);
        org.mockito.cglib.core.ClassInfo classInfo36 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass7);
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Object obj39 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass38);
        java.beans.PropertyDescriptor[] propertyDescriptorArray40 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray43 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray40, false, true);
        java.lang.Class[] classArray44 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray40);
        java.lang.Class[] classArray45 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray44);
        java.lang.String[] strArray46 = org.mockito.cglib.core.ReflectUtils.getNames(classArray45);
        java.lang.String[] strArray47 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray48 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray49 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray47, methodArray48);
        java.lang.Object obj50 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass38, classArray45, (java.lang.Object[]) strArray47);
        java.lang.Object obj51 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass38);
        java.beans.PropertyDescriptor[] propertyDescriptorArray52 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray55 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray52, false, true);
        java.lang.Class[] classArray56 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray52);
        java.lang.Class[] classArray57 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray56);
        java.lang.String[] strArray58 = org.mockito.cglib.core.ReflectUtils.getNames(classArray56);
        java.lang.reflect.Constructor constructor59 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass38, classArray56);
        java.lang.reflect.Constructor constructor60 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass7, classArray56);
        java.lang.String[] strArray61 = org.mockito.cglib.core.ReflectUtils.getNames(classArray56);
        java.lang.reflect.Constructor constructor62 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray56);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method63 = org.mockito.cglib.core.ReflectUtils.findNewInstance((java.lang.Class) wildcardClass1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: class java.lang.Object is not an interface");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNull(list3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(classInfo11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(methodArray20);
        org.junit.Assert.assertNotNull(methodArray21);
        org.junit.Assert.assertNotNull(methodArray22);
        org.junit.Assert.assertNotNull(classArray23);
        org.junit.Assert.assertNotNull(propertyDescriptorArray24);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(methodArray30);
        org.junit.Assert.assertNotNull(methodArray33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(classInfo36);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(propertyDescriptorArray40);
        org.junit.Assert.assertNotNull(methodArray43);
        org.junit.Assert.assertNotNull(classArray44);
        org.junit.Assert.assertNotNull(classArray45);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(methodArray48);
        org.junit.Assert.assertNotNull(methodArray49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(propertyDescriptorArray52);
        org.junit.Assert.assertNotNull(methodArray55);
        org.junit.Assert.assertNotNull(classArray56);
        org.junit.Assert.assertNotNull(classArray57);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(constructor59);
        org.junit.Assert.assertNotNull(constructor60);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(constructor62);
    }

    @Test
    public void test1007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1007");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray2 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray2, false, true);
        java.lang.Class[] classArray6 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray5);
        java.lang.Object[] objArray7 = null;
        java.lang.Object obj8 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray6, objArray7);
        java.lang.Class[] classArray9 = null;
        java.lang.reflect.Constructor constructor10 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray9);
        java.beans.PropertyDescriptor[] propertyDescriptorArray11 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray11, false, true);
        java.lang.Class[] classArray15 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray11);
        java.lang.Class[] classArray16 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray15);
        java.lang.reflect.Constructor constructor17 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray16);
        java.lang.String[] strArray18 = org.mockito.cglib.core.ReflectUtils.getNames(classArray16);
        java.lang.Class<?> wildcardClass19 = classArray16.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray20 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray23 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray20, false, true);
        java.lang.Class[] classArray24 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray23);
        int int25 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray24);
        int int26 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray24);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "hi!" };
        java.beans.PropertyDescriptor[] propertyDescriptorArray30 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray33 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray30, false, true);
        java.lang.Class[] classArray34 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray30);
        java.lang.Class[] classArray35 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray34);
        java.lang.String[] strArray36 = org.mockito.cglib.core.ReflectUtils.getNames(classArray34);
        java.lang.Class<?> wildcardClass37 = classArray34.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray38 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass37);
        java.beans.PropertyDescriptor[] propertyDescriptorArray39 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass37);
        java.lang.reflect.Method[] methodArray42 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray39, false, false);
        java.lang.reflect.Method[] methodArray43 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray29, methodArray42);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj44 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass19, classArray24, (java.lang.Object[]) strArray29);
            org.junit.Assert.fail("Expected exception of type org.mockito.cglib.core.CodeGenerationException; message: java.lang.NoSuchMethodException-->[Ljava.lang.Class;.<init>()");
        } catch (org.mockito.cglib.core.CodeGenerationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(propertyDescriptorArray2);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(classArray6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(constructor10);
        org.junit.Assert.assertNotNull(propertyDescriptorArray11);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(classArray15);
        org.junit.Assert.assertNotNull(classArray16);
        org.junit.Assert.assertNotNull(constructor17);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(propertyDescriptorArray20);
        org.junit.Assert.assertNotNull(methodArray23);
        org.junit.Assert.assertNotNull(classArray24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(propertyDescriptorArray30);
        org.junit.Assert.assertNotNull(methodArray33);
        org.junit.Assert.assertNotNull(classArray34);
        org.junit.Assert.assertNotNull(classArray35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(propertyDescriptorArray38);
        org.junit.Assert.assertNotNull(propertyDescriptorArray39);
        org.junit.Assert.assertNotNull(methodArray42);
        org.junit.Assert.assertNotNull(methodArray43);
    }

    @Test
    public void test1008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1008");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.beans.PropertyDescriptor[] propertyDescriptorArray23 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray23, false, true);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray23, false, false);
        java.lang.Object obj30 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) methodArray29);
        java.beans.PropertyDescriptor[] propertyDescriptorArray31 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray31, true, true);
        java.lang.Object obj35 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) propertyDescriptorArray31);
        java.lang.String[] strArray36 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray37 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray38 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray37);
        java.lang.String[] strArray39 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray40 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray39, methodArray40);
        java.lang.reflect.Method[] methodArray42 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray41);
        java.lang.String[] strArray43 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray44 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray45 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray43, methodArray44);
        java.lang.String[] strArray46 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray47 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray48 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray46, methodArray47);
        java.lang.reflect.Method[] methodArray49 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray43, methodArray48);
        java.lang.reflect.Method[] methodArray50 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray49);
        java.lang.String[] strArray51 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray52 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray53 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray51, methodArray52);
        java.lang.String[] strArray54 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray55 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray56 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray54, methodArray55);
        java.lang.String[] strArray57 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray58 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray59 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray57, methodArray58);
        java.lang.String[] strArray60 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray61 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray62 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray60, methodArray61);
        java.lang.reflect.Method[] methodArray63 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray57, methodArray62);
        java.lang.reflect.Method[] methodArray64 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray54, methodArray63);
        java.lang.reflect.Method[] methodArray65 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray51, methodArray64);
        java.lang.reflect.Method[] methodArray66 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray64);
        java.lang.Object obj67 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) methodArray66);
        org.mockito.cglib.core.Signature signature68 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor21);
        org.mockito.cglib.core.Signature signature69 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor21);
        org.mockito.cglib.core.MethodInfo methodInfo71 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21, 0);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(propertyDescriptorArray23);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(propertyDescriptorArray31);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(methodArray38);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(methodArray42);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(methodArray44);
        org.junit.Assert.assertNotNull(methodArray45);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(methodArray47);
        org.junit.Assert.assertNotNull(methodArray48);
        org.junit.Assert.assertNotNull(methodArray49);
        org.junit.Assert.assertNotNull(methodArray50);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(methodArray52);
        org.junit.Assert.assertNotNull(methodArray53);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(methodArray55);
        org.junit.Assert.assertNotNull(methodArray56);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(methodArray58);
        org.junit.Assert.assertNotNull(methodArray59);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(methodArray61);
        org.junit.Assert.assertNotNull(methodArray62);
        org.junit.Assert.assertNotNull(methodArray63);
        org.junit.Assert.assertNotNull(methodArray64);
        org.junit.Assert.assertNotNull(methodArray65);
        org.junit.Assert.assertNotNull(methodArray66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(signature68);
        org.junit.Assert.assertNotNull(signature69);
        org.junit.Assert.assertNotNull(methodInfo71);
    }

    @Test
    public void test1009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1009");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.lang.String[] strArray23 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray24 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray25 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray24);
        java.lang.String[] strArray26 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray27 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray26, methodArray27);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray28);
        java.lang.String[] strArray30 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray31 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray32 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray31);
        java.lang.String[] strArray33 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray34 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray33, methodArray34);
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray35);
        java.lang.reflect.Method[] methodArray37 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray36);
        java.lang.String[] strArray38 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray39 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray40 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray38, methodArray39);
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray40);
        java.lang.Object obj42 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) strArray23);
        org.mockito.cglib.core.MethodInfo methodInfo44 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21, (int) (short) -1);
        org.mockito.cglib.core.Signature signature45 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor21);
        org.mockito.cglib.core.MethodInfo methodInfo46 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        org.mockito.cglib.core.MethodInfo methodInfo47 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        org.mockito.asm.Type[] typeArray48 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(methodInfo44);
        org.junit.Assert.assertNotNull(signature45);
        org.junit.Assert.assertNotNull(methodInfo46);
        org.junit.Assert.assertNotNull(methodInfo47);
        org.junit.Assert.assertNotNull(typeArray48);
    }

    @Test
    public void test1010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1010");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo23 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21, (int) ' ');
        org.mockito.cglib.core.Signature signature24 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor21);
        java.lang.Class<?> wildcardClass25 = signature24.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray26 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass25);
        java.beans.PropertyDescriptor[] propertyDescriptorArray27 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass25);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method28 = org.mockito.cglib.core.ReflectUtils.findInterfaceMethod((java.lang.Class) wildcardClass25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: class org.mockito.cglib.core.Signature is not an interface");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo23);
        org.junit.Assert.assertNotNull(signature24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(propertyDescriptorArray26);
        org.junit.Assert.assertNotNull(propertyDescriptorArray27);
    }

    @Test
    public void test1011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1011");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray1 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray2 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray1);
        java.lang.String[] strArray3 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray4 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray3, methodArray4);
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray5);
        java.lang.String[] strArray7 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray8 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray9 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.reflect.Method[] methodArray13 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray12);
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray13);
        java.lang.Class<?> wildcardClass15 = methodArray13.getClass();
        org.mockito.cglib.core.ClassInfo classInfo16 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass15);
        java.beans.PropertyDescriptor[] propertyDescriptorArray17 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass15);
        java.beans.PropertyDescriptor[] propertyDescriptorArray18 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass15);
        java.beans.PropertyDescriptor[] propertyDescriptorArray19 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass15);
        java.beans.PropertyDescriptor[] propertyDescriptorArray20 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass15);
        org.mockito.cglib.core.ClassInfo classInfo21 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass15);
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        org.mockito.cglib.core.ClassInfo classInfo24 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass23);
        java.util.List list25 = null;
        java.util.List list26 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass23, list25);
        java.lang.String[] strArray27 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray28 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray27, methodArray28);
        java.lang.String[] strArray30 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray31 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray32 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray31);
        java.lang.reflect.Method[] methodArray33 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray27, methodArray32);
        java.lang.String[] strArray34 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray35 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray34, methodArray35);
        java.lang.String[] strArray37 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray38 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray39 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray37, methodArray38);
        java.lang.reflect.Method[] methodArray40 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray34, methodArray39);
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray27, methodArray40);
        java.lang.Class[] classArray42 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray40);
        java.lang.reflect.Constructor constructor43 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass23, classArray42);
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        org.mockito.cglib.core.ClassInfo classInfo46 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass45);
        java.lang.Object obj47 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass45);
        java.beans.PropertyDescriptor[] propertyDescriptorArray48 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray51 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray48, false, true);
        java.lang.Class[] classArray52 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray48);
        java.lang.Class[] classArray53 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray52);
        java.lang.String[] strArray54 = org.mockito.cglib.core.ReflectUtils.getNames(classArray53);
        java.lang.reflect.Constructor constructor55 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass45, classArray53);
        int int56 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray53);
        java.lang.Object obj57 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor43, (java.lang.Object[]) classArray53);
        int int58 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray53);
        java.lang.Class[] classArray59 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray53);
        java.lang.Class[] classArray60 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray53);
        int int61 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray53);
        int int62 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray53);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Constructor constructor63 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass15, classArray53);
            org.junit.Assert.fail("Expected exception of type org.mockito.cglib.core.CodeGenerationException; message: java.lang.NoSuchMethodException-->[Ljava.lang.reflect.Method;.<init>()");
        } catch (org.mockito.cglib.core.CodeGenerationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(methodArray1);
        org.junit.Assert.assertNotNull(methodArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(methodArray4);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(methodArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(classInfo16);
        org.junit.Assert.assertNotNull(propertyDescriptorArray17);
        org.junit.Assert.assertNotNull(propertyDescriptorArray18);
        org.junit.Assert.assertNotNull(propertyDescriptorArray19);
        org.junit.Assert.assertNotNull(propertyDescriptorArray20);
        org.junit.Assert.assertNotNull(classInfo21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(classInfo24);
        org.junit.Assert.assertNull(list26);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(methodArray33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(methodArray38);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(classArray42);
        org.junit.Assert.assertNotNull(constructor43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(classInfo46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(propertyDescriptorArray48);
        org.junit.Assert.assertNotNull(methodArray51);
        org.junit.Assert.assertNotNull(classArray52);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(constructor55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(classArray59);
        org.junit.Assert.assertNotNull(classArray60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
    }

    @Test
    public void test1012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1012");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.beans.PropertyDescriptor[] propertyDescriptorArray5 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray8 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray5, false, true);
        java.lang.Class[] classArray9 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray5);
        int int10 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray9);
        java.lang.String[] strArray11 = org.mockito.cglib.core.ReflectUtils.getNames(classArray9);
        java.lang.String[] strArray12 = org.mockito.cglib.core.ReflectUtils.getNames(classArray9);
        java.lang.String[] strArray13 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray14 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray15 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray13, methodArray14);
        java.lang.String[] strArray16 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray17 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray16, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray13, methodArray18);
        java.lang.String[] strArray20 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray21 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray22 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray20, methodArray21);
        java.lang.String[] strArray23 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray24 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray25 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray24);
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray20, methodArray25);
        java.lang.reflect.Method[] methodArray27 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray13, methodArray26);
        java.lang.Object obj28 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray9, (java.lang.Object[]) methodArray27);
        java.lang.Class[] classArray29 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray9);
        java.lang.Class<?> wildcardClass30 = classArray29.getClass();
        org.mockito.cglib.core.ClassInfo classInfo31 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass30);
        java.beans.PropertyDescriptor[] propertyDescriptorArray32 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass30);
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass34);
        java.beans.PropertyDescriptor[] propertyDescriptorArray36 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray39 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray36, false, true);
        java.lang.Class[] classArray40 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray36);
        java.lang.Class[] classArray41 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray40);
        java.lang.String[] strArray42 = org.mockito.cglib.core.ReflectUtils.getNames(classArray41);
        java.lang.String[] strArray43 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray44 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray45 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray43, methodArray44);
        java.lang.Object obj46 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass34, classArray41, (java.lang.Object[]) strArray43);
        java.lang.Object obj47 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass34);
        java.beans.PropertyDescriptor[] propertyDescriptorArray48 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray51 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray48, false, true);
        java.lang.Class[] classArray52 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray48);
        java.lang.Class[] classArray53 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray52);
        java.lang.String[] strArray54 = org.mockito.cglib.core.ReflectUtils.getNames(classArray52);
        java.lang.reflect.Constructor constructor55 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass34, classArray52);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Constructor constructor56 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass30, classArray52);
            org.junit.Assert.fail("Expected exception of type org.mockito.cglib.core.CodeGenerationException; message: java.lang.NoSuchMethodException-->[Ljava.lang.Class;.<init>()");
        } catch (org.mockito.cglib.core.CodeGenerationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(propertyDescriptorArray5);
        org.junit.Assert.assertNotNull(methodArray8);
        org.junit.Assert.assertNotNull(classArray9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(methodArray15);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(methodArray21);
        org.junit.Assert.assertNotNull(methodArray22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(classArray29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classInfo31);
        org.junit.Assert.assertNotNull(propertyDescriptorArray32);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(propertyDescriptorArray36);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(classArray40);
        org.junit.Assert.assertNotNull(classArray41);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(methodArray44);
        org.junit.Assert.assertNotNull(methodArray45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(propertyDescriptorArray48);
        org.junit.Assert.assertNotNull(methodArray51);
        org.junit.Assert.assertNotNull(classArray52);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(constructor55);
    }

    @Test
    public void test1013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1013");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.lang.Class<?> wildcardClass23 = constructor21.getClass();
        org.mockito.cglib.core.ClassInfo classInfo24 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass23);
        java.beans.PropertyDescriptor[] propertyDescriptorArray25 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass23);
        java.beans.PropertyDescriptor[] propertyDescriptorArray26 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass23);
        org.mockito.cglib.core.ClassInfo classInfo27 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass23);
        java.util.List list28 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List list29 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass23, list28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(classInfo24);
        org.junit.Assert.assertNotNull(propertyDescriptorArray25);
        org.junit.Assert.assertNotNull(propertyDescriptorArray26);
        org.junit.Assert.assertNotNull(classInfo27);
    }

    @Test
    public void test1014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1014");
        java.beans.PropertyDescriptor[] propertyDescriptorArray0 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray3 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray0, false, true);
        java.lang.Class[] classArray4 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray0);
        java.lang.Class[] classArray5 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray4);
        java.lang.Class<?> wildcardClass6 = classArray5.getClass();
        org.mockito.cglib.core.ClassInfo classInfo7 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass6);
        java.beans.PropertyDescriptor[] propertyDescriptorArray8 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass6);
        java.lang.Class[] classArray9 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray8);
        org.junit.Assert.assertNotNull(propertyDescriptorArray0);
        org.junit.Assert.assertNotNull(methodArray3);
        org.junit.Assert.assertNotNull(classArray4);
        org.junit.Assert.assertNotNull(classArray5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(classInfo7);
        org.junit.Assert.assertNotNull(propertyDescriptorArray8);
        org.junit.Assert.assertNotNull(classArray9);
    }

    @Test
    public void test1015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1015");
        java.beans.PropertyDescriptor[] propertyDescriptorArray0 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray3 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray0, false, true);
        java.lang.Class[] classArray4 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray0);
        java.lang.Class[] classArray5 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray4);
        java.lang.Class<?> wildcardClass6 = classArray4.getClass();
        org.mockito.cglib.core.ClassInfo classInfo7 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass6);
        java.beans.PropertyDescriptor[] propertyDescriptorArray8 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass6);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray8, true, true);
        java.lang.Class[] classArray12 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray11);
        org.junit.Assert.assertNotNull(propertyDescriptorArray0);
        org.junit.Assert.assertNotNull(methodArray3);
        org.junit.Assert.assertNotNull(classArray4);
        org.junit.Assert.assertNotNull(classArray5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(classInfo7);
        org.junit.Assert.assertNotNull(propertyDescriptorArray8);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(classArray12);
    }

    @Test
    public void test1016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1016");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.lang.Object obj3 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.beans.PropertyDescriptor[] propertyDescriptorArray4 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray4, false, true);
        java.lang.Class[] classArray8 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray4);
        java.lang.Class[] classArray9 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray8);
        java.lang.String[] strArray10 = org.mockito.cglib.core.ReflectUtils.getNames(classArray9);
        java.lang.reflect.Constructor constructor11 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray9);
        java.lang.Object obj12 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.util.List list13 = null;
        java.util.List list14 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list13);
        java.beans.PropertyDescriptor[] propertyDescriptorArray15 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray15, false, true);
        java.lang.Class[] classArray19 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray15);
        int int20 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray19);
        java.lang.String[] strArray21 = org.mockito.cglib.core.ReflectUtils.getNames(classArray19);
        java.lang.String[] strArray22 = org.mockito.cglib.core.ReflectUtils.getNames(classArray19);
        java.lang.Class[] classArray23 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) strArray22);
        java.lang.Class[] classArray24 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray23);
        java.lang.reflect.Constructor constructor25 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray23);
        java.util.List list26 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List list27 = org.mockito.cglib.core.ReflectUtils.addAllMethods((java.lang.Class) wildcardClass1, list26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(propertyDescriptorArray4);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(classArray8);
        org.junit.Assert.assertNotNull(classArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(constructor11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNull(list14);
        org.junit.Assert.assertNotNull(propertyDescriptorArray15);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(classArray19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(classArray23);
        org.junit.Assert.assertNotNull(classArray24);
        org.junit.Assert.assertNotNull(constructor25);
    }

    @Test
    public void test1017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1017");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.lang.String[] strArray23 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray24 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray25 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray24);
        java.lang.String[] strArray26 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray27 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray26, methodArray27);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray28);
        java.lang.String[] strArray30 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray31 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray32 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray31);
        java.lang.String[] strArray33 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray34 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray33, methodArray34);
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray35);
        java.lang.reflect.Method[] methodArray37 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray36);
        java.lang.String[] strArray38 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray39 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray40 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray38, methodArray39);
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray40);
        java.lang.Object obj42 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) strArray23);
        org.mockito.cglib.core.Signature signature43 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor21);
        org.mockito.cglib.core.Signature signature44 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor21);
        org.mockito.cglib.core.Signature signature45 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor21);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(signature43);
        org.junit.Assert.assertNotNull(signature44);
        org.junit.Assert.assertNotNull(signature45);
    }

    @Test
    public void test1018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1018");
        java.beans.PropertyDescriptor[] propertyDescriptorArray0 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray3 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray0, false, true);
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray0, true, true);
        java.lang.reflect.Method[] methodArray9 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray0, false, true);
        java.lang.Class<?> wildcardClass10 = propertyDescriptorArray0.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray11 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass10);
        java.beans.PropertyDescriptor[] propertyDescriptorArray12 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass10);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj13 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass10);
            org.junit.Assert.fail("Expected exception of type org.mockito.cglib.core.CodeGenerationException; message: java.lang.NoSuchMethodException-->[Ljava.beans.PropertyDescriptor;.<init>()");
        } catch (org.mockito.cglib.core.CodeGenerationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(propertyDescriptorArray0);
        org.junit.Assert.assertNotNull(methodArray3);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(propertyDescriptorArray11);
        org.junit.Assert.assertNotNull(propertyDescriptorArray12);
    }

    @Test
    public void test1019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1019");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray1 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray2 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray1);
        java.lang.String[] strArray3 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray4 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray3, methodArray4);
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray5);
        java.lang.String[] strArray7 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray8 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray9 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.reflect.Method[] methodArray13 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray12);
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray17);
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        org.mockito.cglib.core.ClassInfo classInfo21 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass20);
        java.util.List list22 = null;
        java.util.List list23 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass20, list22);
        java.lang.String[] strArray24 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray25 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray24, methodArray25);
        java.lang.String[] strArray27 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray28 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray27, methodArray28);
        java.lang.reflect.Method[] methodArray30 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray24, methodArray29);
        java.lang.String[] strArray31 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray32 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray33 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray31, methodArray32);
        java.lang.String[] strArray34 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray35 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray34, methodArray35);
        java.lang.reflect.Method[] methodArray37 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray31, methodArray36);
        java.lang.reflect.Method[] methodArray38 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray24, methodArray37);
        java.lang.Class[] classArray39 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray37);
        java.lang.reflect.Constructor constructor40 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass20, classArray39);
        org.mockito.cglib.core.MethodInfo methodInfo41 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor40);
        java.lang.String[] strArray42 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray43 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray44 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray42, methodArray43);
        java.lang.String[] strArray45 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray46 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray47 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray45, methodArray46);
        java.lang.reflect.Method[] methodArray48 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray42, methodArray47);
        java.lang.String[] strArray49 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray50 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray51 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray49, methodArray50);
        java.lang.String[] strArray52 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray53 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray54 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray52, methodArray53);
        java.lang.reflect.Method[] methodArray55 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray49, methodArray54);
        java.lang.reflect.Method[] methodArray56 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray42, methodArray55);
        java.lang.String[] strArray57 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray58 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray59 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray57, methodArray58);
        java.lang.reflect.Method[] methodArray60 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray42, methodArray59);
        java.lang.Object obj61 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor40, (java.lang.Object[]) strArray42);
        java.beans.PropertyDescriptor[] propertyDescriptorArray62 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray65 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray62, false, true);
        java.lang.Class[] classArray66 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray65);
        java.lang.reflect.Method[] methodArray67 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray42, methodArray65);
        java.lang.reflect.Method[] methodArray68 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray65);
        java.lang.Class<?> wildcardClass69 = methodArray65.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj70 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass69);
            org.junit.Assert.fail("Expected exception of type org.mockito.cglib.core.CodeGenerationException; message: java.lang.NoSuchMethodException-->[Ljava.lang.reflect.Method;.<init>()");
        } catch (org.mockito.cglib.core.CodeGenerationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(methodArray1);
        org.junit.Assert.assertNotNull(methodArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(methodArray4);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(methodArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(classInfo21);
        org.junit.Assert.assertNull(list23);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(methodArray30);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(methodArray33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(methodArray38);
        org.junit.Assert.assertNotNull(classArray39);
        org.junit.Assert.assertNotNull(constructor40);
        org.junit.Assert.assertNotNull(methodInfo41);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(methodArray43);
        org.junit.Assert.assertNotNull(methodArray44);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(methodArray46);
        org.junit.Assert.assertNotNull(methodArray47);
        org.junit.Assert.assertNotNull(methodArray48);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(methodArray50);
        org.junit.Assert.assertNotNull(methodArray51);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(methodArray53);
        org.junit.Assert.assertNotNull(methodArray54);
        org.junit.Assert.assertNotNull(methodArray55);
        org.junit.Assert.assertNotNull(methodArray56);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(methodArray58);
        org.junit.Assert.assertNotNull(methodArray59);
        org.junit.Assert.assertNotNull(methodArray60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(propertyDescriptorArray62);
        org.junit.Assert.assertNotNull(methodArray65);
        org.junit.Assert.assertNotNull(classArray66);
        org.junit.Assert.assertNotNull(methodArray67);
        org.junit.Assert.assertNotNull(methodArray68);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test1020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1020");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.lang.Object obj3 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.beans.PropertyDescriptor[] propertyDescriptorArray4 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray4, false, true);
        java.lang.Class[] classArray8 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray4);
        java.lang.Class[] classArray9 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray8);
        java.lang.String[] strArray10 = org.mockito.cglib.core.ReflectUtils.getNames(classArray9);
        java.lang.reflect.Constructor constructor11 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray9);
        java.lang.Object obj12 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        org.mockito.cglib.core.ClassInfo classInfo13 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list14 = null;
        java.util.List list15 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list14);
        java.lang.Object obj16 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.util.List list17 = null;
        java.util.List list18 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list17);
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        org.mockito.cglib.core.ClassInfo classInfo21 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass20);
        java.util.List list22 = null;
        java.util.List list23 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass20, list22);
        java.lang.String[] strArray24 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray25 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray24, methodArray25);
        java.lang.String[] strArray27 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray28 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray27, methodArray28);
        java.lang.reflect.Method[] methodArray30 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray24, methodArray29);
        java.lang.String[] strArray31 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray32 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray33 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray31, methodArray32);
        java.lang.String[] strArray34 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray35 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray34, methodArray35);
        java.lang.reflect.Method[] methodArray37 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray31, methodArray36);
        java.lang.reflect.Method[] methodArray38 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray24, methodArray37);
        java.lang.Class[] classArray39 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray37);
        java.lang.reflect.Constructor constructor40 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass20, classArray39);
        org.mockito.cglib.core.MethodInfo methodInfo41 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor40);
        java.beans.PropertyDescriptor[] propertyDescriptorArray42 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray45 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray42, false, true);
        java.lang.reflect.Method[] methodArray48 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray42, false, false);
        java.lang.Object obj49 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor40, (java.lang.Object[]) methodArray48);
        java.beans.PropertyDescriptor[] propertyDescriptorArray50 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray53 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray50, true, true);
        java.lang.Object obj54 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor40, (java.lang.Object[]) propertyDescriptorArray50);
        java.lang.String[] strArray55 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray56 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray57 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray55, methodArray56);
        java.lang.String[] strArray58 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray59 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray60 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray58, methodArray59);
        java.lang.String[] strArray61 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray62 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray63 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray61, methodArray62);
        java.lang.reflect.Method[] methodArray64 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray58, methodArray63);
        java.lang.reflect.Method[] methodArray65 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray55, methodArray64);
        java.lang.Object obj66 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor40, (java.lang.Object[]) methodArray65);
        java.lang.Class[] classArray67 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray65);
        java.lang.reflect.Constructor constructor68 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray67);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method69 = org.mockito.cglib.core.ReflectUtils.findInterfaceMethod((java.lang.Class) wildcardClass1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: class java.lang.Object is not an interface");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(propertyDescriptorArray4);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(classArray8);
        org.junit.Assert.assertNotNull(classArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(constructor11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(classInfo13);
        org.junit.Assert.assertNull(list15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNull(list18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(classInfo21);
        org.junit.Assert.assertNull(list23);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(methodArray30);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(methodArray33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(methodArray38);
        org.junit.Assert.assertNotNull(classArray39);
        org.junit.Assert.assertNotNull(constructor40);
        org.junit.Assert.assertNotNull(methodInfo41);
        org.junit.Assert.assertNotNull(propertyDescriptorArray42);
        org.junit.Assert.assertNotNull(methodArray45);
        org.junit.Assert.assertNotNull(methodArray48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(propertyDescriptorArray50);
        org.junit.Assert.assertNotNull(methodArray53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(methodArray56);
        org.junit.Assert.assertNotNull(methodArray57);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(methodArray59);
        org.junit.Assert.assertNotNull(methodArray60);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(methodArray62);
        org.junit.Assert.assertNotNull(methodArray63);
        org.junit.Assert.assertNotNull(methodArray64);
        org.junit.Assert.assertNotNull(methodArray65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(classArray67);
        org.junit.Assert.assertNotNull(constructor68);
    }

    @Test
    public void test1021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1021");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.beans.PropertyDescriptor[] propertyDescriptorArray23 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray23, false, true);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray23, false, false);
        java.lang.Object obj30 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) methodArray29);
        java.beans.PropertyDescriptor[] propertyDescriptorArray31 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray31, true, true);
        java.lang.Object obj35 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) propertyDescriptorArray31);
        java.lang.String[] strArray36 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray37 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray38 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray37);
        java.lang.String[] strArray39 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray40 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray39, methodArray40);
        java.lang.String[] strArray42 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray43 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray44 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray42, methodArray43);
        java.lang.reflect.Method[] methodArray45 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray39, methodArray44);
        java.lang.reflect.Method[] methodArray46 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray45);
        java.lang.Object obj47 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) methodArray46);
        org.mockito.asm.Type[] typeArray48 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        org.mockito.cglib.core.MethodInfo methodInfo50 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21, 100);
        org.mockito.asm.Type[] typeArray51 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        org.mockito.cglib.core.MethodInfo methodInfo52 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(propertyDescriptorArray23);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(propertyDescriptorArray31);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(methodArray38);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(methodArray43);
        org.junit.Assert.assertNotNull(methodArray44);
        org.junit.Assert.assertNotNull(methodArray45);
        org.junit.Assert.assertNotNull(methodArray46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(typeArray48);
        org.junit.Assert.assertNotNull(methodInfo50);
        org.junit.Assert.assertNotNull(typeArray51);
        org.junit.Assert.assertNotNull(methodInfo52);
    }

    @Test
    public void test1022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1022");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        java.util.List list2 = null;
        java.util.List list3 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list2);
        java.lang.Object obj4 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.lang.Object obj5 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass7);
        java.lang.Object obj9 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass7);
        java.lang.Object obj10 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass7);
        org.mockito.cglib.core.ClassInfo classInfo11 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass7);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.String[] strArray18 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray19 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray20 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray18, methodArray19);
        java.lang.reflect.Method[] methodArray21 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray20);
        java.lang.reflect.Method[] methodArray22 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray21);
        java.lang.Class[] classArray23 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) strArray12);
        java.beans.PropertyDescriptor[] propertyDescriptorArray24 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray27 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray24, false, true);
        java.lang.reflect.Method[] methodArray30 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray24, false, false);
        java.lang.reflect.Method[] methodArray33 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray24, true, false);
        java.lang.Object obj34 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass7, classArray23, (java.lang.Object[]) propertyDescriptorArray24);
        java.lang.Object obj35 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass7);
        org.mockito.cglib.core.ClassInfo classInfo36 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass7);
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Object obj39 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass38);
        java.beans.PropertyDescriptor[] propertyDescriptorArray40 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray43 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray40, false, true);
        java.lang.Class[] classArray44 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray40);
        java.lang.Class[] classArray45 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray44);
        java.lang.String[] strArray46 = org.mockito.cglib.core.ReflectUtils.getNames(classArray45);
        java.lang.String[] strArray47 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray48 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray49 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray47, methodArray48);
        java.lang.Object obj50 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass38, classArray45, (java.lang.Object[]) strArray47);
        java.lang.Object obj51 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass38);
        java.beans.PropertyDescriptor[] propertyDescriptorArray52 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray55 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray52, false, true);
        java.lang.Class[] classArray56 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray52);
        java.lang.Class[] classArray57 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray56);
        java.lang.String[] strArray58 = org.mockito.cglib.core.ReflectUtils.getNames(classArray56);
        java.lang.reflect.Constructor constructor59 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass38, classArray56);
        java.lang.reflect.Constructor constructor60 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass7, classArray56);
        java.lang.String[] strArray61 = org.mockito.cglib.core.ReflectUtils.getNames(classArray56);
        java.lang.reflect.Constructor constructor62 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray56);
        org.mockito.cglib.core.MethodInfo methodInfo64 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor62, (int) (short) 0);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNull(list3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(classInfo11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(methodArray20);
        org.junit.Assert.assertNotNull(methodArray21);
        org.junit.Assert.assertNotNull(methodArray22);
        org.junit.Assert.assertNotNull(classArray23);
        org.junit.Assert.assertNotNull(propertyDescriptorArray24);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(methodArray30);
        org.junit.Assert.assertNotNull(methodArray33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(classInfo36);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(propertyDescriptorArray40);
        org.junit.Assert.assertNotNull(methodArray43);
        org.junit.Assert.assertNotNull(classArray44);
        org.junit.Assert.assertNotNull(classArray45);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(methodArray48);
        org.junit.Assert.assertNotNull(methodArray49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(propertyDescriptorArray52);
        org.junit.Assert.assertNotNull(methodArray55);
        org.junit.Assert.assertNotNull(classArray56);
        org.junit.Assert.assertNotNull(classArray57);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(constructor59);
        org.junit.Assert.assertNotNull(constructor60);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(constructor62);
        org.junit.Assert.assertNotNull(methodInfo64);
    }

    @Test
    public void test1023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1023");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.lang.String[] strArray23 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray24 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray25 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray24);
        java.lang.String[] strArray26 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray27 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray26, methodArray27);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray28);
        java.lang.String[] strArray30 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray31 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray32 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray31);
        java.lang.String[] strArray33 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray34 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray33, methodArray34);
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray35);
        java.lang.reflect.Method[] methodArray37 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray36);
        java.lang.String[] strArray38 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray39 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray40 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray38, methodArray39);
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray40);
        java.lang.Object obj42 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) strArray23);
        org.mockito.asm.Type[] typeArray43 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        java.lang.Object[] objArray44 = null;
        java.lang.Object obj45 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, objArray44);
        org.mockito.cglib.core.Signature signature46 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor21);
        java.beans.PropertyDescriptor[] propertyDescriptorArray47 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray50 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray47, false, true);
        java.lang.Class[] classArray51 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray47);
        java.lang.reflect.Method[] methodArray54 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray47, false, true);
        java.lang.Object obj55 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) methodArray54);
        java.lang.Class<?> wildcardClass56 = methodArray54.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method57 = org.mockito.cglib.core.ReflectUtils.findInterfaceMethod((java.lang.Class) wildcardClass56);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: class [Ljava.lang.reflect.Method; is not an interface");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(signature46);
        org.junit.Assert.assertNotNull(propertyDescriptorArray47);
        org.junit.Assert.assertNotNull(methodArray50);
        org.junit.Assert.assertNotNull(classArray51);
        org.junit.Assert.assertNotNull(methodArray54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test1024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1024");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.Object obj5 = new java.lang.Object();
        java.lang.Class<?> wildcardClass6 = obj5.getClass();
        org.mockito.cglib.core.ClassInfo classInfo7 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass6);
        java.util.List list8 = null;
        java.util.List list9 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass6, list8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.String[] strArray13 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray14 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray15 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray13, methodArray14);
        java.lang.reflect.Method[] methodArray16 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray15);
        java.lang.String[] strArray17 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray18 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray17, methodArray18);
        java.lang.String[] strArray20 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray21 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray22 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray20, methodArray21);
        java.lang.reflect.Method[] methodArray23 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray17, methodArray22);
        java.lang.reflect.Method[] methodArray24 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray23);
        java.lang.Class[] classArray25 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray23);
        java.lang.reflect.Constructor constructor26 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass6, classArray25);
        java.lang.Class[] classArray27 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray25);
        java.lang.String[] strArray28 = org.mockito.cglib.core.ReflectUtils.getNames(classArray27);
        java.lang.reflect.Constructor constructor29 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray27);
        int int30 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray27);
        java.lang.String[] strArray31 = org.mockito.cglib.core.ReflectUtils.getNames(classArray27);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(classInfo7);
        org.junit.Assert.assertNull(list9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(methodArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(methodArray21);
        org.junit.Assert.assertNotNull(methodArray22);
        org.junit.Assert.assertNotNull(methodArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(classArray25);
        org.junit.Assert.assertNotNull(constructor26);
        org.junit.Assert.assertNotNull(classArray27);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(constructor29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(strArray31);
    }

    @Test
    public void test1025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1025");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray2 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray2, false, true);
        java.lang.Class[] classArray6 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray5);
        java.lang.Object[] objArray7 = null;
        java.lang.Object obj8 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray6, objArray7);
        java.lang.Class[] classArray9 = null;
        java.lang.reflect.Constructor constructor10 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray9);
        java.lang.Class[] classArray11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        org.mockito.cglib.core.ClassInfo classInfo14 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass13);
        java.util.List list15 = null;
        java.util.List list16 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass13, list15);
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        org.mockito.cglib.core.ClassInfo classInfo19 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass18);
        java.util.List list20 = null;
        java.util.List list21 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass18, list20);
        java.lang.String[] strArray22 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray23 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray24 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray22, methodArray23);
        java.lang.String[] strArray25 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray26 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray27 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray25, methodArray26);
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray22, methodArray27);
        java.lang.String[] strArray29 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray30 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray31 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray29, methodArray30);
        java.lang.String[] strArray32 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray33 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray32, methodArray33);
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray29, methodArray34);
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray22, methodArray35);
        java.lang.Class[] classArray37 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray35);
        java.lang.reflect.Constructor constructor38 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass18, classArray37);
        java.lang.Class[] classArray39 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray37);
        java.lang.String[] strArray40 = org.mockito.cglib.core.ReflectUtils.getNames(classArray39);
        java.lang.reflect.Constructor constructor41 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass13, classArray39);
        int int42 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray39);
        java.lang.Object obj43 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray11, (java.lang.Object[]) classArray39);
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.beans.PropertyDescriptor[] propertyDescriptorArray45 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass44);
            org.junit.Assert.fail("Expected exception of type org.mockito.cglib.core.CodeGenerationException; message: java.beans.IntrospectionException-->java.lang.Object not superclass of java.lang.Object");
        } catch (org.mockito.cglib.core.CodeGenerationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(propertyDescriptorArray2);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(classArray6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(constructor10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(classInfo14);
        org.junit.Assert.assertNull(list16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(classInfo19);
        org.junit.Assert.assertNull(list21);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(methodArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(methodArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(methodArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(classArray37);
        org.junit.Assert.assertNotNull(constructor38);
        org.junit.Assert.assertNotNull(classArray39);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(constructor41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test1026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1026");
        java.beans.PropertyDescriptor[] propertyDescriptorArray0 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray3 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray0, false, true);
        java.lang.Class[] classArray4 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray0);
        java.lang.Class[] classArray5 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray4);
        java.lang.String[] strArray6 = org.mockito.cglib.core.ReflectUtils.getNames(classArray4);
        java.lang.Class<?> wildcardClass7 = classArray4.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray8 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass7);
        java.beans.PropertyDescriptor[] propertyDescriptorArray9 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass7);
        org.mockito.cglib.core.ClassInfo classInfo10 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass7);
        java.util.List list11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List list12 = org.mockito.cglib.core.ReflectUtils.addAllMethods((java.lang.Class) wildcardClass7, list11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(propertyDescriptorArray0);
        org.junit.Assert.assertNotNull(methodArray3);
        org.junit.Assert.assertNotNull(classArray4);
        org.junit.Assert.assertNotNull(classArray5);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(propertyDescriptorArray8);
        org.junit.Assert.assertNotNull(propertyDescriptorArray9);
        org.junit.Assert.assertNotNull(classInfo10);
    }

    @Test
    public void test1027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1027");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray2 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray2, false, true);
        java.lang.Class[] classArray6 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray5);
        java.lang.Object[] objArray7 = null;
        java.lang.Object obj8 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray6, objArray7);
        java.lang.Class[] classArray9 = null;
        java.lang.reflect.Constructor constructor10 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray9);
        java.lang.Class[] classArray11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        org.mockito.cglib.core.ClassInfo classInfo14 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass13);
        java.util.List list15 = null;
        java.util.List list16 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass13, list15);
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        org.mockito.cglib.core.ClassInfo classInfo19 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass18);
        java.util.List list20 = null;
        java.util.List list21 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass18, list20);
        java.lang.String[] strArray22 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray23 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray24 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray22, methodArray23);
        java.lang.String[] strArray25 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray26 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray27 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray25, methodArray26);
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray22, methodArray27);
        java.lang.String[] strArray29 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray30 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray31 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray29, methodArray30);
        java.lang.String[] strArray32 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray33 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray32, methodArray33);
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray29, methodArray34);
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray22, methodArray35);
        java.lang.Class[] classArray37 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray35);
        java.lang.reflect.Constructor constructor38 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass18, classArray37);
        java.lang.Class[] classArray39 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray37);
        java.lang.String[] strArray40 = org.mockito.cglib.core.ReflectUtils.getNames(classArray39);
        java.lang.reflect.Constructor constructor41 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass13, classArray39);
        int int42 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray39);
        java.lang.Object obj43 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray11, (java.lang.Object[]) classArray39);
        java.beans.PropertyDescriptor[] propertyDescriptorArray45 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray48 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray45, false, true);
        java.lang.reflect.Method[] methodArray51 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray45, false, false);
        java.lang.Class[] classArray52 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray45);
        java.lang.Class[] classArray53 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray45);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method54 = org.mockito.cglib.core.ReflectUtils.findDeclaredMethod((java.lang.Class) wildcardClass1, "", classArray53);
            org.junit.Assert.fail("Expected exception of type java.lang.NoSuchMethodException; message: ");
        } catch (java.lang.NoSuchMethodException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(propertyDescriptorArray2);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(classArray6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(constructor10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(classInfo14);
        org.junit.Assert.assertNull(list16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(classInfo19);
        org.junit.Assert.assertNull(list21);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(methodArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(methodArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(methodArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(classArray37);
        org.junit.Assert.assertNotNull(constructor38);
        org.junit.Assert.assertNotNull(classArray39);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(constructor41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(propertyDescriptorArray45);
        org.junit.Assert.assertNotNull(methodArray48);
        org.junit.Assert.assertNotNull(methodArray51);
        org.junit.Assert.assertNotNull(classArray52);
        org.junit.Assert.assertNotNull(classArray53);
    }

    @Test
    public void test1028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1028");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray1 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray2 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray1);
        java.lang.String[] strArray3 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray4 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray3, methodArray4);
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray5);
        java.lang.String[] strArray7 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray8 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray9 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.reflect.Method[] methodArray13 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray12);
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray17);
        java.lang.Class<?> wildcardClass19 = methodArray18.getClass();
        org.mockito.cglib.core.ClassInfo classInfo20 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass19);
        java.beans.PropertyDescriptor[] propertyDescriptorArray21 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass19);
        java.beans.PropertyDescriptor[] propertyDescriptorArray22 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass19);
        org.mockito.cglib.core.ClassInfo classInfo23 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass19);
        org.mockito.cglib.core.ClassInfo classInfo24 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass19);
        org.mockito.cglib.core.ClassInfo classInfo25 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass19);
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(methodArray1);
        org.junit.Assert.assertNotNull(methodArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(methodArray4);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(methodArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(classInfo20);
        org.junit.Assert.assertNotNull(propertyDescriptorArray21);
        org.junit.Assert.assertNotNull(propertyDescriptorArray22);
        org.junit.Assert.assertNotNull(classInfo23);
        org.junit.Assert.assertNotNull(classInfo24);
        org.junit.Assert.assertNotNull(classInfo25);
    }

    @Test
    public void test1029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1029");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.lang.Object obj3 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.beans.PropertyDescriptor[] propertyDescriptorArray4 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray4, false, true);
        java.lang.Class[] classArray8 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray4);
        java.lang.Class[] classArray9 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray8);
        java.lang.String[] strArray10 = org.mockito.cglib.core.ReflectUtils.getNames(classArray9);
        java.lang.reflect.Constructor constructor11 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray9);
        java.lang.Object obj12 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        org.mockito.cglib.core.ClassInfo classInfo13 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list14 = null;
        java.util.List list15 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list14);
        java.lang.Object obj16 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        org.mockito.cglib.core.ClassInfo classInfo19 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass18);
        java.util.List list20 = null;
        java.util.List list21 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass18, list20);
        java.lang.String[] strArray22 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray23 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray24 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray22, methodArray23);
        java.lang.String[] strArray25 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray26 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray27 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray25, methodArray26);
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray22, methodArray27);
        java.lang.String[] strArray29 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray30 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray31 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray29, methodArray30);
        java.lang.String[] strArray32 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray33 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray32, methodArray33);
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray29, methodArray34);
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray22, methodArray35);
        java.lang.Class[] classArray37 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray35);
        java.lang.reflect.Constructor constructor38 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass18, classArray37);
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        org.mockito.cglib.core.ClassInfo classInfo41 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass40);
        java.lang.Object obj42 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass40);
        java.beans.PropertyDescriptor[] propertyDescriptorArray43 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray46 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray43, false, true);
        java.lang.Class[] classArray47 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray43);
        java.lang.Class[] classArray48 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray47);
        java.lang.String[] strArray49 = org.mockito.cglib.core.ReflectUtils.getNames(classArray48);
        java.lang.reflect.Constructor constructor50 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass40, classArray48);
        int int51 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray48);
        java.lang.Object obj52 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor38, (java.lang.Object[]) classArray48);
        int int53 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray48);
        int int54 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray48);
        java.lang.reflect.Constructor constructor55 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray48);
        java.beans.PropertyDescriptor[] propertyDescriptorArray56 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray59 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray56, false, true);
        java.lang.reflect.Method[] methodArray62 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray56, false, false);
        java.lang.Class[] classArray63 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray56);
        int int64 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray63);
        int int65 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray63);
        java.lang.reflect.Constructor constructor66 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray63);
        // The following exception was thrown during execution in test generation
        try {
            java.beans.PropertyDescriptor[] propertyDescriptorArray67 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass1);
            org.junit.Assert.fail("Expected exception of type org.mockito.cglib.core.CodeGenerationException; message: java.beans.IntrospectionException-->java.lang.Object not superclass of java.lang.Object");
        } catch (org.mockito.cglib.core.CodeGenerationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(propertyDescriptorArray4);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(classArray8);
        org.junit.Assert.assertNotNull(classArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(constructor11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(classInfo13);
        org.junit.Assert.assertNull(list15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(classInfo19);
        org.junit.Assert.assertNull(list21);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(methodArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(methodArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(methodArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(classArray37);
        org.junit.Assert.assertNotNull(constructor38);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(classInfo41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(propertyDescriptorArray43);
        org.junit.Assert.assertNotNull(methodArray46);
        org.junit.Assert.assertNotNull(classArray47);
        org.junit.Assert.assertNotNull(classArray48);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(constructor50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(constructor55);
        org.junit.Assert.assertNotNull(propertyDescriptorArray56);
        org.junit.Assert.assertNotNull(methodArray59);
        org.junit.Assert.assertNotNull(methodArray62);
        org.junit.Assert.assertNotNull(classArray63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(constructor66);
    }

    @Test
    public void test1030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1030");
        java.lang.Class class0 = null;
        java.lang.Object obj1 = new java.lang.Object();
        java.lang.Class<?> wildcardClass2 = obj1.getClass();
        org.mockito.cglib.core.ClassInfo classInfo3 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass2);
        java.lang.Object obj4 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass2);
        java.beans.PropertyDescriptor[] propertyDescriptorArray5 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray8 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray5, false, true);
        java.lang.Class[] classArray9 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray5);
        java.lang.Class[] classArray10 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray9);
        java.lang.String[] strArray11 = org.mockito.cglib.core.ReflectUtils.getNames(classArray10);
        java.lang.reflect.Constructor constructor12 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass2, classArray10);
        java.lang.Object obj13 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass2);
        org.mockito.cglib.core.ClassInfo classInfo14 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass2);
        java.util.List list15 = null;
        java.util.List list16 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass2, list15);
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass18);
        java.lang.Object obj20 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass18);
        java.lang.String[] strArray21 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray22 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray23 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray21, methodArray22);
        java.lang.Class[] classArray24 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) strArray21);
        java.lang.String[] strArray25 = org.mockito.cglib.core.ReflectUtils.getNames(classArray24);
        java.beans.PropertyDescriptor[] propertyDescriptorArray26 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray26, false, true);
        java.lang.Class[] classArray30 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray26);
        int int31 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray30);
        int int32 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray30);
        java.lang.Object obj33 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass18, classArray24, (java.lang.Object[]) classArray30);
        java.lang.reflect.Constructor constructor34 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass2, classArray30);
        java.beans.PropertyDescriptor[] propertyDescriptorArray35 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray38 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray35, false, true);
        java.lang.Class[] classArray39 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray35);
        java.lang.Class[] classArray40 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray39);
        java.lang.String[] strArray41 = org.mockito.cglib.core.ReflectUtils.getNames(classArray39);
        java.lang.Class<?> wildcardClass42 = classArray39.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray43 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass42);
        java.beans.PropertyDescriptor[] propertyDescriptorArray44 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass42);
        java.lang.reflect.Method[] methodArray47 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray44, false, false);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj48 = org.mockito.cglib.core.ReflectUtils.newInstance(class0, classArray30, (java.lang.Object[]) methodArray47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(classInfo3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(propertyDescriptorArray5);
        org.junit.Assert.assertNotNull(methodArray8);
        org.junit.Assert.assertNotNull(classArray9);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(constructor12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(classInfo14);
        org.junit.Assert.assertNull(list16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(methodArray22);
        org.junit.Assert.assertNotNull(methodArray23);
        org.junit.Assert.assertNotNull(classArray24);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(propertyDescriptorArray26);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(classArray30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(constructor34);
        org.junit.Assert.assertNotNull(propertyDescriptorArray35);
        org.junit.Assert.assertNotNull(methodArray38);
        org.junit.Assert.assertNotNull(classArray39);
        org.junit.Assert.assertNotNull(classArray40);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(propertyDescriptorArray43);
        org.junit.Assert.assertNotNull(propertyDescriptorArray44);
        org.junit.Assert.assertNotNull(methodArray47);
    }

    @Test
    public void test1031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1031");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray1 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray2 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray1);
        java.lang.String[] strArray3 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray4 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray3, methodArray4);
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray5);
        java.lang.String[] strArray7 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray8 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray9 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.reflect.Method[] methodArray13 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray12);
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray13);
        java.lang.Class<?> wildcardClass15 = methodArray13.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray16 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass15);
        java.beans.PropertyDescriptor[] propertyDescriptorArray17 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass15);
        java.beans.PropertyDescriptor[] propertyDescriptorArray18 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass15);
        org.mockito.cglib.core.ClassInfo classInfo19 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass15);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj20 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass15);
            org.junit.Assert.fail("Expected exception of type org.mockito.cglib.core.CodeGenerationException; message: java.lang.NoSuchMethodException-->[Ljava.lang.reflect.Method;.<init>()");
        } catch (org.mockito.cglib.core.CodeGenerationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(methodArray1);
        org.junit.Assert.assertNotNull(methodArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(methodArray4);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(methodArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(propertyDescriptorArray16);
        org.junit.Assert.assertNotNull(propertyDescriptorArray17);
        org.junit.Assert.assertNotNull(propertyDescriptorArray18);
        org.junit.Assert.assertNotNull(classInfo19);
    }

    @Test
    public void test1032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1032");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.lang.String[] strArray23 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray24 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray25 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray24);
        java.lang.String[] strArray26 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray27 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray26, methodArray27);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray28);
        java.lang.String[] strArray30 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray31 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray32 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray31);
        java.lang.String[] strArray33 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray34 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray33, methodArray34);
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray35);
        java.lang.reflect.Method[] methodArray37 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray36);
        java.lang.String[] strArray38 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray39 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray40 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray38, methodArray39);
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray40);
        java.lang.Object obj42 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) strArray23);
        java.beans.PropertyDescriptor[] propertyDescriptorArray43 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray46 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray43, false, true);
        java.lang.Class[] classArray47 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray46);
        java.lang.reflect.Method[] methodArray48 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray46);
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!", "hi!" };
        java.beans.PropertyDescriptor[] propertyDescriptorArray52 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray55 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray52, false, true);
        java.lang.Class[] classArray56 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray52);
        java.lang.Class[] classArray57 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray56);
        java.lang.String[] strArray58 = org.mockito.cglib.core.ReflectUtils.getNames(classArray56);
        java.lang.Class<?> wildcardClass59 = classArray56.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray60 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass59);
        java.beans.PropertyDescriptor[] propertyDescriptorArray61 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass59);
        java.lang.reflect.Method[] methodArray64 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray61, false, false);
        java.lang.reflect.Method[] methodArray65 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray51, methodArray64);
        java.lang.reflect.Method[] methodArray66 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray64);
        java.lang.Class<?> wildcardClass67 = methodArray66.getClass();
        java.util.List list68 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List list69 = org.mockito.cglib.core.ReflectUtils.addAllMethods((java.lang.Class) wildcardClass67, list68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(propertyDescriptorArray43);
        org.junit.Assert.assertNotNull(methodArray46);
        org.junit.Assert.assertNotNull(classArray47);
        org.junit.Assert.assertNotNull(methodArray48);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(propertyDescriptorArray52);
        org.junit.Assert.assertNotNull(methodArray55);
        org.junit.Assert.assertNotNull(classArray56);
        org.junit.Assert.assertNotNull(classArray57);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(propertyDescriptorArray60);
        org.junit.Assert.assertNotNull(propertyDescriptorArray61);
        org.junit.Assert.assertNotNull(methodArray64);
        org.junit.Assert.assertNotNull(methodArray65);
        org.junit.Assert.assertNotNull(methodArray66);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test1033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1033");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.lang.Object obj3 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.beans.PropertyDescriptor[] propertyDescriptorArray4 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray4, false, true);
        java.lang.Class[] classArray8 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray4);
        java.lang.Class[] classArray9 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray8);
        java.lang.String[] strArray10 = org.mockito.cglib.core.ReflectUtils.getNames(classArray9);
        java.lang.reflect.Constructor constructor11 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray9);
        java.lang.Object obj12 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        org.mockito.cglib.core.ClassInfo classInfo13 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list14 = null;
        java.util.List list15 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list14);
        java.lang.Object obj16 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.lang.Object obj17 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.mockito.cglib.core.ClassInfo classInfo20 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass19);
        java.lang.Object obj21 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass19);
        org.mockito.cglib.core.ClassInfo classInfo22 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass19);
        java.beans.PropertyDescriptor[] propertyDescriptorArray23 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray23, false, true);
        java.lang.Class[] classArray27 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray23);
        java.lang.Class[] classArray28 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray27);
        java.lang.String[] strArray29 = org.mockito.cglib.core.ReflectUtils.getNames(classArray27);
        java.lang.Class<?> wildcardClass30 = classArray27.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray31 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass30);
        java.beans.PropertyDescriptor[] propertyDescriptorArray32 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass30);
        java.lang.Class[] classArray33 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray32);
        java.lang.String[] strArray34 = org.mockito.cglib.core.ReflectUtils.getNames(classArray33);
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        org.mockito.cglib.core.ClassInfo classInfo37 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass36);
        java.util.List list38 = null;
        java.util.List list39 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass36, list38);
        java.lang.String[] strArray40 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray41 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray42 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray40, methodArray41);
        java.lang.String[] strArray43 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray44 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray45 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray43, methodArray44);
        java.lang.reflect.Method[] methodArray46 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray40, methodArray45);
        java.lang.String[] strArray47 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray48 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray49 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray47, methodArray48);
        java.lang.String[] strArray50 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray51 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray52 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray50, methodArray51);
        java.lang.reflect.Method[] methodArray53 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray47, methodArray52);
        java.lang.reflect.Method[] methodArray54 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray40, methodArray53);
        java.lang.Class[] classArray55 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray53);
        java.lang.reflect.Constructor constructor56 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass36, classArray55);
        org.mockito.cglib.core.MethodInfo methodInfo57 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor56);
        java.lang.String[] strArray58 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray59 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray60 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray58, methodArray59);
        java.lang.String[] strArray61 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray62 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray63 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray61, methodArray62);
        java.lang.reflect.Method[] methodArray64 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray58, methodArray63);
        java.lang.String[] strArray65 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray66 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray67 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray65, methodArray66);
        java.lang.String[] strArray68 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray69 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray70 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray68, methodArray69);
        java.lang.reflect.Method[] methodArray71 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray65, methodArray70);
        java.lang.reflect.Method[] methodArray72 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray58, methodArray71);
        java.lang.String[] strArray73 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray74 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray75 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray73, methodArray74);
        java.lang.reflect.Method[] methodArray76 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray58, methodArray75);
        java.lang.Object obj77 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor56, (java.lang.Object[]) strArray58);
        org.mockito.cglib.core.MethodInfo methodInfo79 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor56, (int) (byte) 0);
        java.beans.PropertyDescriptor[] propertyDescriptorArray80 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray83 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray80, true, true);
        java.lang.reflect.Method[] methodArray86 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray80, false, true);
        java.lang.Class[] classArray87 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray80);
        java.lang.Object obj88 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor56, (java.lang.Object[]) classArray87);
        java.lang.Object obj89 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass19, classArray33, (java.lang.Object[]) classArray87);
        java.lang.reflect.Constructor constructor90 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray33);
        java.util.List list91 = null;
        java.util.List list92 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list91);
        java.lang.Object obj93 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.util.List list94 = null;
        java.util.List list95 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list94);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(propertyDescriptorArray4);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(classArray8);
        org.junit.Assert.assertNotNull(classArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(constructor11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(classInfo13);
        org.junit.Assert.assertNull(list15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(classInfo20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(classInfo22);
        org.junit.Assert.assertNotNull(propertyDescriptorArray23);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(classArray27);
        org.junit.Assert.assertNotNull(classArray28);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(propertyDescriptorArray31);
        org.junit.Assert.assertNotNull(propertyDescriptorArray32);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(classInfo37);
        org.junit.Assert.assertNull(list39);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(methodArray42);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(methodArray44);
        org.junit.Assert.assertNotNull(methodArray45);
        org.junit.Assert.assertNotNull(methodArray46);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(methodArray48);
        org.junit.Assert.assertNotNull(methodArray49);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(methodArray51);
        org.junit.Assert.assertNotNull(methodArray52);
        org.junit.Assert.assertNotNull(methodArray53);
        org.junit.Assert.assertNotNull(methodArray54);
        org.junit.Assert.assertNotNull(classArray55);
        org.junit.Assert.assertNotNull(constructor56);
        org.junit.Assert.assertNotNull(methodInfo57);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(methodArray59);
        org.junit.Assert.assertNotNull(methodArray60);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(methodArray62);
        org.junit.Assert.assertNotNull(methodArray63);
        org.junit.Assert.assertNotNull(methodArray64);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(methodArray66);
        org.junit.Assert.assertNotNull(methodArray67);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(methodArray69);
        org.junit.Assert.assertNotNull(methodArray70);
        org.junit.Assert.assertNotNull(methodArray71);
        org.junit.Assert.assertNotNull(methodArray72);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(methodArray74);
        org.junit.Assert.assertNotNull(methodArray75);
        org.junit.Assert.assertNotNull(methodArray76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(methodInfo79);
        org.junit.Assert.assertNotNull(propertyDescriptorArray80);
        org.junit.Assert.assertNotNull(methodArray83);
        org.junit.Assert.assertNotNull(methodArray86);
        org.junit.Assert.assertNotNull(classArray87);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(constructor90);
        org.junit.Assert.assertNull(list92);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNull(list95);
    }

    @Test
    public void test1034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1034");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.lang.Object obj3 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.beans.PropertyDescriptor[] propertyDescriptorArray4 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray4, false, true);
        java.lang.Class[] classArray8 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray4);
        java.lang.Class[] classArray9 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray8);
        java.lang.String[] strArray10 = org.mockito.cglib.core.ReflectUtils.getNames(classArray9);
        java.lang.reflect.Constructor constructor11 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray9);
        java.lang.Object obj12 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.util.List list13 = null;
        java.util.List list14 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list13);
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        org.mockito.cglib.core.ClassInfo classInfo17 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass16);
        java.util.List list18 = null;
        java.util.List list19 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass16, list18);
        java.lang.String[] strArray20 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray21 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray22 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray20, methodArray21);
        java.lang.String[] strArray23 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray24 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray25 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray24);
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray20, methodArray25);
        java.lang.String[] strArray27 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray28 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray27, methodArray28);
        java.lang.String[] strArray30 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray31 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray32 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray31);
        java.lang.reflect.Method[] methodArray33 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray27, methodArray32);
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray20, methodArray33);
        java.lang.Class[] classArray35 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray33);
        java.lang.reflect.Constructor constructor36 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass16, classArray35);
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        org.mockito.cglib.core.ClassInfo classInfo39 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass38);
        java.lang.Object obj40 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass38);
        java.beans.PropertyDescriptor[] propertyDescriptorArray41 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray44 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray41, false, true);
        java.lang.Class[] classArray45 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray41);
        java.lang.Class[] classArray46 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray45);
        java.lang.String[] strArray47 = org.mockito.cglib.core.ReflectUtils.getNames(classArray46);
        java.lang.reflect.Constructor constructor48 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass38, classArray46);
        int int49 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray46);
        java.lang.Object obj50 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor36, (java.lang.Object[]) classArray46);
        int int51 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray46);
        java.lang.Class[] classArray52 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray46);
        int int53 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray52);
        java.lang.reflect.Constructor constructor54 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray52);
        // The following exception was thrown during execution in test generation
        try {
            java.beans.PropertyDescriptor[] propertyDescriptorArray55 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass1);
            org.junit.Assert.fail("Expected exception of type org.mockito.cglib.core.CodeGenerationException; message: java.beans.IntrospectionException-->java.lang.Object not superclass of java.lang.Object");
        } catch (org.mockito.cglib.core.CodeGenerationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(propertyDescriptorArray4);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(classArray8);
        org.junit.Assert.assertNotNull(classArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(constructor11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNull(list14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(classInfo17);
        org.junit.Assert.assertNull(list19);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(methodArray21);
        org.junit.Assert.assertNotNull(methodArray22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(methodArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(classArray35);
        org.junit.Assert.assertNotNull(constructor36);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(classInfo39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(propertyDescriptorArray41);
        org.junit.Assert.assertNotNull(methodArray44);
        org.junit.Assert.assertNotNull(classArray45);
        org.junit.Assert.assertNotNull(classArray46);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(constructor48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(classArray52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(constructor54);
    }

    @Test
    public void test1035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1035");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.lang.String[] strArray23 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray24 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray25 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray24);
        java.lang.String[] strArray26 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray27 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray26, methodArray27);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray28);
        java.lang.String[] strArray30 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray31 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray32 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray31);
        java.lang.String[] strArray33 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray34 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray33, methodArray34);
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray35);
        java.lang.reflect.Method[] methodArray37 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray36);
        java.lang.String[] strArray38 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray39 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray40 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray38, methodArray39);
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray40);
        java.lang.Object obj42 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) strArray23);
        org.mockito.cglib.core.MethodInfo methodInfo43 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        org.mockito.asm.Type[] typeArray44 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        org.mockito.cglib.core.MethodInfo methodInfo45 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        org.mockito.cglib.core.MethodInfo methodInfo46 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        org.mockito.cglib.core.MethodInfo methodInfo48 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21, (int) (byte) 0);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(methodInfo43);
        org.junit.Assert.assertNotNull(typeArray44);
        org.junit.Assert.assertNotNull(methodInfo45);
        org.junit.Assert.assertNotNull(methodInfo46);
        org.junit.Assert.assertNotNull(methodInfo48);
    }

    @Test
    public void test1036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1036");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        java.lang.Object obj2 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.beans.PropertyDescriptor[] propertyDescriptorArray3 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray3, false, true);
        java.lang.Class[] classArray7 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray3);
        java.lang.Class[] classArray8 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray7);
        java.lang.String[] strArray9 = org.mockito.cglib.core.ReflectUtils.getNames(classArray8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.Object obj13 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray8, (java.lang.Object[]) strArray10);
        java.beans.PropertyDescriptor[] propertyDescriptorArray14 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray14, false, true);
        java.lang.reflect.Method[] methodArray20 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray14, false, false);
        java.lang.reflect.Method[] methodArray23 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray14, true, false);
        java.lang.Class[] classArray24 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray23);
        java.beans.PropertyDescriptor[] propertyDescriptorArray25 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray25, false, true);
        java.lang.Class[] classArray29 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray25);
        java.lang.Class[] classArray30 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray29);
        java.lang.String[] strArray31 = org.mockito.cglib.core.ReflectUtils.getNames(classArray29);
        java.lang.Class[] classArray32 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray29);
        int int33 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray29);
        java.lang.Object obj34 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray24, (java.lang.Object[]) classArray29);
        int int35 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray29);
        int int36 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray29);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(propertyDescriptorArray3);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(classArray7);
        org.junit.Assert.assertNotNull(classArray8);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(propertyDescriptorArray14);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray20);
        org.junit.Assert.assertNotNull(methodArray23);
        org.junit.Assert.assertNotNull(classArray24);
        org.junit.Assert.assertNotNull(propertyDescriptorArray25);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(classArray29);
        org.junit.Assert.assertNotNull(classArray30);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
    }

    @Test
    public void test1037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1037");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.lang.String[] strArray23 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray24 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray25 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray24);
        java.lang.String[] strArray26 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray27 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray26, methodArray27);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray28);
        java.lang.String[] strArray30 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray31 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray32 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray31);
        java.lang.String[] strArray33 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray34 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray33, methodArray34);
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray35);
        java.lang.reflect.Method[] methodArray37 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray36);
        java.lang.String[] strArray38 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray39 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray40 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray38, methodArray39);
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray40);
        java.lang.Object obj42 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) strArray23);
        org.mockito.cglib.core.MethodInfo methodInfo43 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.lang.Object[] objArray44 = new java.lang.Object[] {};
        java.lang.Object obj45 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, objArray44);
        org.mockito.asm.Type[] typeArray46 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        org.mockito.asm.Type[] typeArray47 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        java.lang.String[] strArray48 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray49 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray50 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray48, methodArray49);
        java.lang.String[] strArray51 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray52 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray53 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray51, methodArray52);
        java.lang.reflect.Method[] methodArray54 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray48, methodArray53);
        java.lang.String[] strArray55 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray56 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray57 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray55, methodArray56);
        java.lang.String[] strArray58 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray59 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray60 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray58, methodArray59);
        java.lang.reflect.Method[] methodArray61 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray55, methodArray60);
        java.lang.reflect.Method[] methodArray62 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray48, methodArray61);
        java.lang.Class<?> wildcardClass63 = strArray48.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray64 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass63);
        java.lang.Object obj65 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) propertyDescriptorArray64);
        java.lang.reflect.Method[] methodArray68 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray64, false, false);
        java.lang.reflect.Method[] methodArray71 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray64, false, false);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(methodInfo43);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[]");
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(typeArray46);
        org.junit.Assert.assertNotNull(typeArray47);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(methodArray49);
        org.junit.Assert.assertNotNull(methodArray50);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(methodArray52);
        org.junit.Assert.assertNotNull(methodArray53);
        org.junit.Assert.assertNotNull(methodArray54);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(methodArray56);
        org.junit.Assert.assertNotNull(methodArray57);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(methodArray59);
        org.junit.Assert.assertNotNull(methodArray60);
        org.junit.Assert.assertNotNull(methodArray61);
        org.junit.Assert.assertNotNull(methodArray62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(propertyDescriptorArray64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(methodArray68);
        org.junit.Assert.assertNotNull(methodArray71);
    }

    @Test
    public void test1038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1038");
        java.beans.PropertyDescriptor[] propertyDescriptorArray0 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray3 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray0, false, true);
        java.lang.Class[] classArray4 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray0);
        java.lang.Class[] classArray5 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray4);
        java.lang.Class<?> wildcardClass6 = classArray5.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray7 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass6);
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray7, false, false);
        org.junit.Assert.assertNotNull(propertyDescriptorArray0);
        org.junit.Assert.assertNotNull(methodArray3);
        org.junit.Assert.assertNotNull(classArray4);
        org.junit.Assert.assertNotNull(classArray5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(propertyDescriptorArray7);
        org.junit.Assert.assertNotNull(methodArray10);
    }

    @Test
    public void test1039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1039");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.lang.Class<?> wildcardClass23 = constructor21.getClass();
        org.mockito.cglib.core.ClassInfo classInfo24 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass23);
        java.beans.PropertyDescriptor[] propertyDescriptorArray25 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass23);
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray25, false, true);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(classInfo24);
        org.junit.Assert.assertNotNull(propertyDescriptorArray25);
        org.junit.Assert.assertNotNull(methodArray28);
    }

    @Test
    public void test1040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1040");
        java.beans.PropertyDescriptor[] propertyDescriptorArray0 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray3 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray0, false, true);
        java.lang.Class[] classArray4 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray0);
        java.lang.Class[] classArray5 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray4);
        java.lang.Class<?> wildcardClass6 = classArray5.getClass();
        org.mockito.cglib.core.ClassInfo classInfo7 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass6);
        java.beans.PropertyDescriptor[] propertyDescriptorArray8 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass6);
        java.beans.PropertyDescriptor[] propertyDescriptorArray9 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass6);
        org.mockito.cglib.core.ClassInfo classInfo10 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass6);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method11 = org.mockito.cglib.core.ReflectUtils.findNewInstance((java.lang.Class) wildcardClass6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: class [Ljava.lang.Class; is not an interface");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(propertyDescriptorArray0);
        org.junit.Assert.assertNotNull(methodArray3);
        org.junit.Assert.assertNotNull(classArray4);
        org.junit.Assert.assertNotNull(classArray5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(classInfo7);
        org.junit.Assert.assertNotNull(propertyDescriptorArray8);
        org.junit.Assert.assertNotNull(propertyDescriptorArray9);
        org.junit.Assert.assertNotNull(classInfo10);
    }

    @Test
    public void test1041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1041");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.beans.PropertyDescriptor[] propertyDescriptorArray23 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray23, false, true);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray23, false, false);
        java.lang.Object obj30 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) methodArray29);
        java.beans.PropertyDescriptor[] propertyDescriptorArray31 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray31, true, true);
        java.lang.Object obj35 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) propertyDescriptorArray31);
        org.mockito.asm.Type[] typeArray36 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        java.beans.PropertyDescriptor[] propertyDescriptorArray37 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray40 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray37, false, true);
        java.lang.Class[] classArray41 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray37);
        java.lang.reflect.Method[] methodArray44 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray37, true, false);
        java.lang.Object obj45 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) propertyDescriptorArray37);
        java.lang.reflect.Method[] methodArray48 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray37, true, false);
        java.lang.reflect.Method[] methodArray51 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray37, false, false);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(propertyDescriptorArray23);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(propertyDescriptorArray31);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertNotNull(propertyDescriptorArray37);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(classArray41);
        org.junit.Assert.assertNotNull(methodArray44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(methodArray48);
        org.junit.Assert.assertNotNull(methodArray51);
    }

    @Test
    public void test1042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1042");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.lang.String[] strArray23 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray24 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray25 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray24);
        java.lang.String[] strArray26 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray27 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray26, methodArray27);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray28);
        java.lang.String[] strArray30 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray31 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray32 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray31);
        java.lang.String[] strArray33 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray34 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray33, methodArray34);
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray35);
        java.lang.reflect.Method[] methodArray37 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray36);
        java.lang.String[] strArray38 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray39 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray40 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray38, methodArray39);
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray40);
        java.lang.Object obj42 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) strArray23);
        org.mockito.asm.Type[] typeArray43 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        java.lang.Object[] objArray44 = null;
        java.lang.Object obj45 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, objArray44);
        org.mockito.cglib.core.MethodInfo methodInfo47 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21, (int) '4');
        org.mockito.cglib.core.Signature signature48 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor21);
        org.mockito.cglib.core.MethodInfo methodInfo49 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        org.mockito.asm.Type[] typeArray50 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(methodInfo47);
        org.junit.Assert.assertNotNull(signature48);
        org.junit.Assert.assertNotNull(methodInfo49);
        org.junit.Assert.assertNotNull(typeArray50);
    }

    @Test
    public void test1043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1043");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.lang.String[] strArray23 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray24 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray25 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray24);
        java.lang.String[] strArray26 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray27 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray26, methodArray27);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray28);
        java.lang.String[] strArray30 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray31 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray32 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray31);
        java.lang.String[] strArray33 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray34 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray33, methodArray34);
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray35);
        java.lang.reflect.Method[] methodArray37 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray36);
        java.lang.String[] strArray38 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray39 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray40 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray38, methodArray39);
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray40);
        java.lang.Object obj42 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) strArray23);
        java.beans.PropertyDescriptor[] propertyDescriptorArray43 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray46 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray43, false, true);
        java.lang.Class[] classArray47 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray46);
        java.lang.reflect.Method[] methodArray48 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray46);
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!", "hi!" };
        java.beans.PropertyDescriptor[] propertyDescriptorArray52 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray55 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray52, false, true);
        java.lang.Class[] classArray56 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray52);
        java.lang.Class[] classArray57 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray56);
        java.lang.String[] strArray58 = org.mockito.cglib.core.ReflectUtils.getNames(classArray56);
        java.lang.Class<?> wildcardClass59 = classArray56.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray60 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass59);
        java.beans.PropertyDescriptor[] propertyDescriptorArray61 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass59);
        java.lang.reflect.Method[] methodArray64 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray61, false, false);
        java.lang.reflect.Method[] methodArray65 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray51, methodArray64);
        java.lang.reflect.Method[] methodArray66 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray64);
        java.lang.Class<?> wildcardClass67 = methodArray66.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray68 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass67);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method69 = org.mockito.cglib.core.ReflectUtils.findInterfaceMethod((java.lang.Class) wildcardClass67);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: class [Ljava.lang.reflect.Method; is not an interface");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(propertyDescriptorArray43);
        org.junit.Assert.assertNotNull(methodArray46);
        org.junit.Assert.assertNotNull(classArray47);
        org.junit.Assert.assertNotNull(methodArray48);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(propertyDescriptorArray52);
        org.junit.Assert.assertNotNull(methodArray55);
        org.junit.Assert.assertNotNull(classArray56);
        org.junit.Assert.assertNotNull(classArray57);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(propertyDescriptorArray60);
        org.junit.Assert.assertNotNull(propertyDescriptorArray61);
        org.junit.Assert.assertNotNull(methodArray64);
        org.junit.Assert.assertNotNull(methodArray65);
        org.junit.Assert.assertNotNull(methodArray66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(propertyDescriptorArray68);
    }

    @Test
    public void test1044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1044");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray1 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray2 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray1);
        java.lang.String[] strArray3 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray4 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray3, methodArray4);
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray5);
        java.lang.String[] strArray7 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray8 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray9 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.reflect.Method[] methodArray13 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray12);
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray13);
        java.lang.Class<?> wildcardClass15 = methodArray13.getClass();
        org.mockito.cglib.core.ClassInfo classInfo16 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass15);
        java.beans.PropertyDescriptor[] propertyDescriptorArray17 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass15);
        java.beans.PropertyDescriptor[] propertyDescriptorArray18 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass15);
        org.mockito.cglib.core.ClassInfo classInfo19 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass15);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method20 = org.mockito.cglib.core.ReflectUtils.findNewInstance((java.lang.Class) wildcardClass15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: class [Ljava.lang.reflect.Method; is not an interface");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(methodArray1);
        org.junit.Assert.assertNotNull(methodArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(methodArray4);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(methodArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(classInfo16);
        org.junit.Assert.assertNotNull(propertyDescriptorArray17);
        org.junit.Assert.assertNotNull(propertyDescriptorArray18);
        org.junit.Assert.assertNotNull(classInfo19);
    }

    @Test
    public void test1045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1045");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray1 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray2 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray1);
        java.lang.String[] strArray3 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray4 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray3, methodArray4);
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray5);
        java.lang.String[] strArray7 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray8 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray9 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.reflect.Method[] methodArray13 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray12);
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray13);
        java.lang.Class<?> wildcardClass15 = methodArray13.getClass();
        org.mockito.cglib.core.ClassInfo classInfo16 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass15);
        java.beans.PropertyDescriptor[] propertyDescriptorArray17 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass15);
        java.beans.PropertyDescriptor[] propertyDescriptorArray18 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass15);
        java.beans.PropertyDescriptor[] propertyDescriptorArray19 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass15);
        java.beans.PropertyDescriptor[] propertyDescriptorArray20 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass15);
        java.beans.PropertyDescriptor[] propertyDescriptorArray21 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass15);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method22 = org.mockito.cglib.core.ReflectUtils.findNewInstance((java.lang.Class) wildcardClass15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: class [Ljava.lang.reflect.Method; is not an interface");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(methodArray1);
        org.junit.Assert.assertNotNull(methodArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(methodArray4);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(methodArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(classInfo16);
        org.junit.Assert.assertNotNull(propertyDescriptorArray17);
        org.junit.Assert.assertNotNull(propertyDescriptorArray18);
        org.junit.Assert.assertNotNull(propertyDescriptorArray19);
        org.junit.Assert.assertNotNull(propertyDescriptorArray20);
        org.junit.Assert.assertNotNull(propertyDescriptorArray21);
    }

    @Test
    public void test1046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1046");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray1 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray2 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray1);
        java.lang.String[] strArray3 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray4 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray3, methodArray4);
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray5);
        java.lang.String[] strArray7 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray8 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray9 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.reflect.Method[] methodArray13 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray12);
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray17);
        java.lang.Class<?> wildcardClass19 = methodArray18.getClass();
        org.mockito.cglib.core.ClassInfo classInfo20 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass19);
        java.beans.PropertyDescriptor[] propertyDescriptorArray21 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass19);
        java.beans.PropertyDescriptor[] propertyDescriptorArray22 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass19);
        org.mockito.cglib.core.ClassInfo classInfo23 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass19);
        java.beans.PropertyDescriptor[] propertyDescriptorArray24 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass19);
        java.util.List list25 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List list26 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass19, list25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(methodArray1);
        org.junit.Assert.assertNotNull(methodArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(methodArray4);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(methodArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(classInfo20);
        org.junit.Assert.assertNotNull(propertyDescriptorArray21);
        org.junit.Assert.assertNotNull(propertyDescriptorArray22);
        org.junit.Assert.assertNotNull(classInfo23);
        org.junit.Assert.assertNotNull(propertyDescriptorArray24);
    }

    @Test
    public void test1047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1047");
        java.beans.PropertyDescriptor[] propertyDescriptorArray0 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray3 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray0, false, true);
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray0, true, true);
        java.lang.reflect.Method[] methodArray9 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray0, false, true);
        java.lang.Class<?> wildcardClass10 = propertyDescriptorArray0.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray11 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass10);
        org.mockito.cglib.core.ClassInfo classInfo12 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass10);
        java.lang.Class[] classArray14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method15 = org.mockito.cglib.core.ReflectUtils.findDeclaredMethod((java.lang.Class) wildcardClass10, "hi!", classArray14);
            org.junit.Assert.fail("Expected exception of type java.lang.NoSuchMethodException; message: hi!");
        } catch (java.lang.NoSuchMethodException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(propertyDescriptorArray0);
        org.junit.Assert.assertNotNull(methodArray3);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(propertyDescriptorArray11);
        org.junit.Assert.assertNotNull(classInfo12);
    }

    @Test
    public void test1048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1048");
        java.beans.PropertyDescriptor[] propertyDescriptorArray0 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray3 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray0, false, true);
        java.lang.Class[] classArray4 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray0);
        java.lang.Class[] classArray5 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray4);
        java.lang.Class<?> wildcardClass6 = classArray5.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray7 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass6);
        org.mockito.cglib.core.ClassInfo classInfo8 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass6);
        org.junit.Assert.assertNotNull(propertyDescriptorArray0);
        org.junit.Assert.assertNotNull(methodArray3);
        org.junit.Assert.assertNotNull(classArray4);
        org.junit.Assert.assertNotNull(classArray5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(propertyDescriptorArray7);
        org.junit.Assert.assertNotNull(classInfo8);
    }

    @Test
    public void test1049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1049");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.util.List list5 = null;
        java.util.List list6 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list5);
        java.lang.Object obj7 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        org.mockito.cglib.core.ClassInfo classInfo8 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray11 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray11, false, true);
        java.lang.Class[] classArray15 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray14);
        java.lang.Object[] objArray16 = null;
        java.lang.Object obj17 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass10, classArray15, objArray16);
        java.lang.Class[] classArray18 = null;
        java.lang.reflect.Constructor constructor19 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass10, classArray18);
        java.beans.PropertyDescriptor[] propertyDescriptorArray20 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray23 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray20, false, true);
        java.lang.Class[] classArray24 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray20);
        java.lang.Class[] classArray25 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray24);
        java.lang.reflect.Constructor constructor26 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass10, classArray25);
        java.lang.reflect.Constructor constructor27 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray25);
        org.mockito.asm.Type[] typeArray28 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor27);
        org.mockito.cglib.core.MethodInfo methodInfo29 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor27);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNull(list6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(classInfo8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(propertyDescriptorArray11);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(classArray15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(constructor19);
        org.junit.Assert.assertNotNull(propertyDescriptorArray20);
        org.junit.Assert.assertNotNull(methodArray23);
        org.junit.Assert.assertNotNull(classArray24);
        org.junit.Assert.assertNotNull(classArray25);
        org.junit.Assert.assertNotNull(constructor26);
        org.junit.Assert.assertNotNull(constructor27);
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertNotNull(methodInfo29);
    }

    @Test
    public void test1050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1050");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray1 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray2 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray1);
        java.lang.String[] strArray3 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray4 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray3, methodArray4);
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray5);
        java.lang.String[] strArray7 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray8 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray9 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.reflect.Method[] methodArray13 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray12);
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray17);
        java.lang.Class<?> wildcardClass19 = methodArray18.getClass();
        org.mockito.cglib.core.ClassInfo classInfo20 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass19);
        java.beans.PropertyDescriptor[] propertyDescriptorArray21 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass19);
        java.lang.String[] strArray22 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray23 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray24 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray22, methodArray23);
        java.lang.String[] strArray25 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray26 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray27 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray25, methodArray26);
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray22, methodArray27);
        java.lang.String[] strArray29 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray30 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray31 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray29, methodArray30);
        java.lang.String[] strArray32 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray33 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray32, methodArray33);
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray29, methodArray34);
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray22, methodArray35);
        java.lang.Class<?> wildcardClass37 = methodArray35.getClass();
        org.mockito.cglib.core.ClassInfo classInfo38 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass37);
        java.beans.PropertyDescriptor[] propertyDescriptorArray39 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass37);
        java.beans.PropertyDescriptor[] propertyDescriptorArray40 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass37);
        java.beans.PropertyDescriptor[] propertyDescriptorArray41 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass37);
        java.lang.Class[] classArray42 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray41);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Constructor constructor43 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass19, classArray42);
            org.junit.Assert.fail("Expected exception of type org.mockito.cglib.core.CodeGenerationException; message: java.lang.NoSuchMethodException-->[Ljava.lang.reflect.Method;.<init>()");
        } catch (org.mockito.cglib.core.CodeGenerationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(methodArray1);
        org.junit.Assert.assertNotNull(methodArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(methodArray4);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(methodArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(classInfo20);
        org.junit.Assert.assertNotNull(propertyDescriptorArray21);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(methodArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(methodArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(methodArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(classInfo38);
        org.junit.Assert.assertNotNull(propertyDescriptorArray39);
        org.junit.Assert.assertNotNull(propertyDescriptorArray40);
        org.junit.Assert.assertNotNull(propertyDescriptorArray41);
        org.junit.Assert.assertNotNull(classArray42);
    }

    @Test
    public void test1051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1051");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray2 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray2, false, true);
        java.lang.Class[] classArray6 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray5);
        java.lang.Object[] objArray7 = null;
        java.lang.Object obj8 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray6, objArray7);
        java.lang.Class[] classArray9 = null;
        java.lang.reflect.Constructor constructor10 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray9);
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        org.mockito.cglib.core.ClassInfo classInfo13 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass12);
        java.lang.Object obj14 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass12);
        java.beans.PropertyDescriptor[] propertyDescriptorArray15 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray15, false, true);
        java.lang.Class[] classArray19 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray15);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray19);
        java.lang.String[] strArray21 = org.mockito.cglib.core.ReflectUtils.getNames(classArray20);
        java.lang.reflect.Constructor constructor22 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass12, classArray20);
        java.lang.Class[] classArray23 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray20);
        java.lang.reflect.Constructor constructor24 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.asm.Type[] typeArray25 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor24);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(propertyDescriptorArray2);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(classArray6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(constructor10);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(classInfo13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(propertyDescriptorArray15);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(classArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(constructor22);
        org.junit.Assert.assertNotNull(classArray23);
        org.junit.Assert.assertNotNull(constructor24);
        org.junit.Assert.assertNotNull(typeArray25);
    }

    @Test
    public void test1052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1052");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.lang.Object obj3 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        org.mockito.cglib.core.ClassInfo classInfo6 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass5);
        java.util.List list7 = null;
        java.util.List list8 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass5, list7);
        java.lang.String[] strArray9 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray10 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray9, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.reflect.Method[] methodArray15 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray9, methodArray14);
        java.lang.String[] strArray16 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray17 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray16, methodArray17);
        java.lang.String[] strArray19 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray20 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray21 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray19, methodArray20);
        java.lang.reflect.Method[] methodArray22 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray16, methodArray21);
        java.lang.reflect.Method[] methodArray23 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray9, methodArray22);
        java.lang.Class[] classArray24 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray22);
        java.lang.reflect.Constructor constructor25 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass5, classArray24);
        java.lang.Class[] classArray26 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray24);
        java.lang.reflect.Constructor constructor27 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray26);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method28 = org.mockito.cglib.core.ReflectUtils.findInterfaceMethod((java.lang.Class) wildcardClass1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: class java.lang.Object is not an interface");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(classInfo6);
        org.junit.Assert.assertNull(list8);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(methodArray15);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(methodArray20);
        org.junit.Assert.assertNotNull(methodArray21);
        org.junit.Assert.assertNotNull(methodArray22);
        org.junit.Assert.assertNotNull(methodArray23);
        org.junit.Assert.assertNotNull(classArray24);
        org.junit.Assert.assertNotNull(constructor25);
        org.junit.Assert.assertNotNull(classArray26);
        org.junit.Assert.assertNotNull(constructor27);
    }

    @Test
    public void test1053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1053");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo23 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21, (int) ' ');
        org.mockito.cglib.core.Signature signature24 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor21);
        java.lang.Class<?> wildcardClass25 = signature24.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray26 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass25);
        java.util.List list27 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List list28 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass25, list27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo23);
        org.junit.Assert.assertNotNull(signature24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(propertyDescriptorArray26);
    }

    @Test
    public void test1054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1054");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.beans.PropertyDescriptor[] propertyDescriptorArray23 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray23, false, true);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray23, false, false);
        java.lang.Object obj30 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) methodArray29);
        java.beans.PropertyDescriptor[] propertyDescriptorArray31 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray31, true, true);
        java.lang.Object obj35 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) propertyDescriptorArray31);
        java.lang.String[] strArray36 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray37 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray38 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray37);
        java.lang.String[] strArray39 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray40 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray39, methodArray40);
        java.lang.String[] strArray42 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray43 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray44 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray42, methodArray43);
        java.lang.reflect.Method[] methodArray45 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray39, methodArray44);
        java.lang.reflect.Method[] methodArray46 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray45);
        java.lang.Object obj47 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) methodArray46);
        org.mockito.asm.Type[] typeArray48 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        org.mockito.cglib.core.MethodInfo methodInfo49 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(propertyDescriptorArray23);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(propertyDescriptorArray31);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(methodArray38);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(methodArray43);
        org.junit.Assert.assertNotNull(methodArray44);
        org.junit.Assert.assertNotNull(methodArray45);
        org.junit.Assert.assertNotNull(methodArray46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(typeArray48);
        org.junit.Assert.assertNotNull(methodInfo49);
    }

    @Test
    public void test1055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1055");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray1 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray2 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray1);
        java.lang.String[] strArray3 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray4 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray3, methodArray4);
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray5);
        java.lang.String[] strArray7 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray8 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray9 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.reflect.Method[] methodArray13 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray12);
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray13);
        java.lang.Class<?> wildcardClass15 = methodArray13.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray16 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass15);
        java.lang.Class<?> wildcardClass17 = propertyDescriptorArray16.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method18 = org.mockito.cglib.core.ReflectUtils.findNewInstance((java.lang.Class) wildcardClass17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: class [Ljava.beans.PropertyDescriptor; is not an interface");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(methodArray1);
        org.junit.Assert.assertNotNull(methodArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(methodArray4);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(methodArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(propertyDescriptorArray16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1056");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.beans.PropertyDescriptor[] propertyDescriptorArray23 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray23, false, true);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray23, false, false);
        java.lang.Object obj30 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) methodArray29);
        java.beans.PropertyDescriptor[] propertyDescriptorArray31 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray31, true, true);
        java.lang.Object obj35 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) propertyDescriptorArray31);
        org.mockito.cglib.core.MethodInfo methodInfo37 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21, (int) '4');
        java.lang.Class<?> wildcardClass38 = constructor21.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(propertyDescriptorArray23);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(propertyDescriptorArray31);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(methodInfo37);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test1057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1057");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        java.lang.Object obj2 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.lang.Object obj3 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.lang.String[] strArray4 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray5 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray4, methodArray5);
        java.lang.Class[] classArray7 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) strArray4);
        java.lang.String[] strArray8 = org.mockito.cglib.core.ReflectUtils.getNames(classArray7);
        java.beans.PropertyDescriptor[] propertyDescriptorArray9 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray9, false, true);
        java.lang.Class[] classArray13 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray9);
        int int14 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray13);
        int int15 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray13);
        java.lang.Object obj16 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray7, (java.lang.Object[]) classArray13);
        java.lang.Object obj17 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        // The following exception was thrown during execution in test generation
        try {
            java.beans.PropertyDescriptor[] propertyDescriptorArray18 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass1);
            org.junit.Assert.fail("Expected exception of type org.mockito.cglib.core.CodeGenerationException; message: java.beans.IntrospectionException-->java.lang.Object not superclass of java.lang.Object");
        } catch (org.mockito.cglib.core.CodeGenerationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(classArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(propertyDescriptorArray9);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(classArray13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(obj17);
    }

    @Test
    public void test1058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1058");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.beans.PropertyDescriptor[] propertyDescriptorArray23 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray23, false, true);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray23, false, false);
        java.lang.Object obj30 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) methodArray29);
        java.beans.PropertyDescriptor[] propertyDescriptorArray31 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray31, true, true);
        java.lang.Object obj35 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) propertyDescriptorArray31);
        org.mockito.asm.Type[] typeArray36 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        org.mockito.cglib.core.MethodInfo methodInfo38 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21, (int) '#');
        java.beans.PropertyDescriptor[] propertyDescriptorArray39 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray42 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray39, true, true);
        java.lang.Class[] classArray43 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray42);
        java.lang.Object obj44 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) classArray43);
        int int45 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray43);
        int int46 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray43);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(propertyDescriptorArray23);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(propertyDescriptorArray31);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertNotNull(methodInfo38);
        org.junit.Assert.assertNotNull(propertyDescriptorArray39);
        org.junit.Assert.assertNotNull(methodArray42);
        org.junit.Assert.assertNotNull(classArray43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
    }

    @Test
    public void test1059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1059");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.beans.PropertyDescriptor[] propertyDescriptorArray23 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray23, false, true);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray23, false, false);
        java.lang.Object obj30 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) methodArray29);
        java.beans.PropertyDescriptor[] propertyDescriptorArray31 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray31, true, true);
        java.lang.Object obj35 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) propertyDescriptorArray31);
        java.lang.String[] strArray36 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray37 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray38 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray37);
        java.lang.String[] strArray39 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray40 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray39, methodArray40);
        java.lang.String[] strArray42 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray43 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray44 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray42, methodArray43);
        java.lang.reflect.Method[] methodArray45 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray39, methodArray44);
        java.lang.reflect.Method[] methodArray46 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray45);
        java.lang.Object obj47 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) methodArray46);
        org.mockito.asm.Type[] typeArray48 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        java.lang.Class<?> wildcardClass49 = typeArray48.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray50 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass49);
        java.beans.PropertyDescriptor[] propertyDescriptorArray51 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass49);
        java.beans.PropertyDescriptor[] propertyDescriptorArray52 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass49);
        java.beans.PropertyDescriptor[] propertyDescriptorArray53 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass49);
        java.beans.PropertyDescriptor[] propertyDescriptorArray54 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass49);
        java.lang.Class[] classArray55 = null;
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        org.mockito.cglib.core.ClassInfo classInfo58 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass57);
        java.util.List list59 = null;
        java.util.List list60 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass57, list59);
        java.beans.PropertyDescriptor[] propertyDescriptorArray61 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray64 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray61, false, true);
        java.lang.Class[] classArray65 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray61);
        int int66 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray65);
        java.lang.String[] strArray67 = org.mockito.cglib.core.ReflectUtils.getNames(classArray65);
        java.lang.String[] strArray68 = org.mockito.cglib.core.ReflectUtils.getNames(classArray65);
        java.lang.String[] strArray69 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray70 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray71 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray69, methodArray70);
        java.lang.String[] strArray72 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray73 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray74 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray72, methodArray73);
        java.lang.reflect.Method[] methodArray75 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray69, methodArray74);
        java.lang.String[] strArray76 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray77 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray78 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray76, methodArray77);
        java.lang.String[] strArray79 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray80 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray81 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray79, methodArray80);
        java.lang.reflect.Method[] methodArray82 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray76, methodArray81);
        java.lang.reflect.Method[] methodArray83 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray69, methodArray82);
        java.lang.Object obj84 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass57, classArray65, (java.lang.Object[]) methodArray83);
        java.lang.Class[] classArray85 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray65);
        int int86 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray85);
        java.lang.Class[] classArray87 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray85);
        java.lang.String[] strArray88 = org.mockito.cglib.core.ReflectUtils.getNames(classArray87);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj89 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass49, classArray55, (java.lang.Object[]) strArray88);
            org.junit.Assert.fail("Expected exception of type org.mockito.cglib.core.CodeGenerationException; message: java.lang.NoSuchMethodException-->[Lorg.mockito.asm.Type;.<init>()");
        } catch (org.mockito.cglib.core.CodeGenerationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(propertyDescriptorArray23);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(propertyDescriptorArray31);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(methodArray38);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(methodArray43);
        org.junit.Assert.assertNotNull(methodArray44);
        org.junit.Assert.assertNotNull(methodArray45);
        org.junit.Assert.assertNotNull(methodArray46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(typeArray48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(propertyDescriptorArray50);
        org.junit.Assert.assertNotNull(propertyDescriptorArray51);
        org.junit.Assert.assertNotNull(propertyDescriptorArray52);
        org.junit.Assert.assertNotNull(propertyDescriptorArray53);
        org.junit.Assert.assertNotNull(propertyDescriptorArray54);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(classInfo58);
        org.junit.Assert.assertNull(list60);
        org.junit.Assert.assertNotNull(propertyDescriptorArray61);
        org.junit.Assert.assertNotNull(methodArray64);
        org.junit.Assert.assertNotNull(classArray65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(methodArray70);
        org.junit.Assert.assertNotNull(methodArray71);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(methodArray73);
        org.junit.Assert.assertNotNull(methodArray74);
        org.junit.Assert.assertNotNull(methodArray75);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertNotNull(methodArray77);
        org.junit.Assert.assertNotNull(methodArray78);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertNotNull(methodArray80);
        org.junit.Assert.assertNotNull(methodArray81);
        org.junit.Assert.assertNotNull(methodArray82);
        org.junit.Assert.assertNotNull(methodArray83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(classArray85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertNotNull(classArray87);
        org.junit.Assert.assertNotNull(strArray88);
    }

    @Test
    public void test1060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1060");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray2 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray2, false, true);
        java.lang.Class[] classArray6 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray5);
        java.lang.Object[] objArray7 = null;
        java.lang.Object obj8 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray6, objArray7);
        java.lang.Class[] classArray9 = null;
        java.lang.reflect.Constructor constructor10 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray9);
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        java.util.List list13 = null;
        java.util.List list14 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass12, list13);
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        org.mockito.cglib.core.ClassInfo classInfo17 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass16);
        java.lang.Object obj18 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass16);
        java.beans.PropertyDescriptor[] propertyDescriptorArray19 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray22 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray19, false, true);
        java.lang.Class[] classArray23 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray19);
        java.lang.Class[] classArray24 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray23);
        java.lang.String[] strArray25 = org.mockito.cglib.core.ReflectUtils.getNames(classArray24);
        java.lang.reflect.Constructor constructor26 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass16, classArray24);
        org.mockito.cglib.core.MethodInfo methodInfo27 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor26);
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray30 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray33 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray30, false, true);
        java.lang.Class[] classArray34 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray33);
        java.lang.Object[] objArray35 = null;
        java.lang.Object obj36 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass29, classArray34, objArray35);
        java.lang.Object obj37 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor26, (java.lang.Object[]) classArray34);
        java.lang.String[] strArray38 = org.mockito.cglib.core.ReflectUtils.getNames(classArray34);
        java.lang.reflect.Constructor constructor39 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass12, classArray34);
        java.lang.String[] strArray40 = org.mockito.cglib.core.ReflectUtils.getNames(classArray34);
        java.lang.reflect.Constructor constructor41 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray34);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(propertyDescriptorArray2);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(classArray6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(constructor10);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNull(list14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(classInfo17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(propertyDescriptorArray19);
        org.junit.Assert.assertNotNull(methodArray22);
        org.junit.Assert.assertNotNull(classArray23);
        org.junit.Assert.assertNotNull(classArray24);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(constructor26);
        org.junit.Assert.assertNotNull(methodInfo27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(propertyDescriptorArray30);
        org.junit.Assert.assertNotNull(methodArray33);
        org.junit.Assert.assertNotNull(classArray34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(constructor39);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(constructor41);
    }

    @Test
    public void test1061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1061");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray2 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray2, false, true);
        java.lang.Class[] classArray6 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray2);
        java.beans.PropertyDescriptor[] propertyDescriptorArray7 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray7, false, true);
        java.lang.Class[] classArray11 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray7);
        int int12 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray11);
        java.lang.String[] strArray13 = org.mockito.cglib.core.ReflectUtils.getNames(classArray11);
        java.lang.String[] strArray14 = org.mockito.cglib.core.ReflectUtils.getNames(classArray11);
        java.lang.Class[] classArray15 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) strArray14);
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        org.mockito.cglib.core.ClassInfo classInfo18 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass17);
        java.util.List list19 = null;
        java.util.List list20 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass17, list19);
        java.beans.PropertyDescriptor[] propertyDescriptorArray21 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray24 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray21, false, true);
        java.lang.Class[] classArray25 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray21);
        int int26 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray25);
        java.lang.String[] strArray27 = org.mockito.cglib.core.ReflectUtils.getNames(classArray25);
        java.lang.String[] strArray28 = org.mockito.cglib.core.ReflectUtils.getNames(classArray25);
        java.lang.String[] strArray29 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray30 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray31 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray29, methodArray30);
        java.lang.String[] strArray32 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray33 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray32, methodArray33);
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray29, methodArray34);
        java.lang.String[] strArray36 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray37 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray38 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray37);
        java.lang.String[] strArray39 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray40 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray39, methodArray40);
        java.lang.reflect.Method[] methodArray42 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray41);
        java.lang.reflect.Method[] methodArray43 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray29, methodArray42);
        java.lang.Object obj44 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass17, classArray25, (java.lang.Object[]) methodArray43);
        java.lang.reflect.Method[] methodArray45 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray14, methodArray43);
        java.lang.Object obj46 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray6, (java.lang.Object[]) strArray14);
        java.util.List list47 = null;
        java.util.List list48 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list47);
        org.mockito.cglib.core.ClassInfo classInfo49 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method50 = org.mockito.cglib.core.ReflectUtils.findInterfaceMethod((java.lang.Class) wildcardClass1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: class java.lang.Object is not an interface");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(propertyDescriptorArray2);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(classArray6);
        org.junit.Assert.assertNotNull(propertyDescriptorArray7);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(classArray15);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(classInfo18);
        org.junit.Assert.assertNull(list20);
        org.junit.Assert.assertNotNull(propertyDescriptorArray21);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(classArray25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(methodArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(methodArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(methodArray38);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(methodArray42);
        org.junit.Assert.assertNotNull(methodArray43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(methodArray45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNull(list48);
        org.junit.Assert.assertNotNull(classInfo49);
    }

    @Test
    public void test1062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1062");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.beans.PropertyDescriptor[] propertyDescriptorArray23 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray23, false, true);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray23, false, false);
        java.lang.Object obj30 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) methodArray29);
        java.beans.PropertyDescriptor[] propertyDescriptorArray31 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray31, true, true);
        java.lang.Object obj35 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) propertyDescriptorArray31);
        java.lang.String[] strArray36 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray37 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray38 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray37);
        java.lang.String[] strArray39 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray40 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray39, methodArray40);
        java.lang.String[] strArray42 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray43 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray44 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray42, methodArray43);
        java.lang.reflect.Method[] methodArray45 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray39, methodArray44);
        java.lang.reflect.Method[] methodArray46 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray45);
        java.lang.Object obj47 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) methodArray46);
        org.mockito.cglib.core.Signature signature48 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor21);
        org.mockito.cglib.core.MethodInfo methodInfo50 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21, (-1));
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(propertyDescriptorArray23);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(propertyDescriptorArray31);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(methodArray38);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(methodArray43);
        org.junit.Assert.assertNotNull(methodArray44);
        org.junit.Assert.assertNotNull(methodArray45);
        org.junit.Assert.assertNotNull(methodArray46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(signature48);
        org.junit.Assert.assertNotNull(methodInfo50);
    }

    @Test
    public void test1063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1063");
        java.beans.PropertyDescriptor[] propertyDescriptorArray0 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray3 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray0, false, true);
        java.lang.Class[] classArray4 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray0);
        int int5 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray4);
        java.lang.String[] strArray6 = org.mockito.cglib.core.ReflectUtils.getNames(classArray4);
        java.lang.String[] strArray7 = org.mockito.cglib.core.ReflectUtils.getNames(classArray4);
        java.lang.Class[] classArray8 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) strArray7);
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        org.mockito.cglib.core.ClassInfo classInfo11 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass10);
        java.util.List list12 = null;
        java.util.List list13 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass10, list12);
        java.lang.String[] strArray14 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray15 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray16 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray14, methodArray15);
        java.lang.String[] strArray17 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray18 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray17, methodArray18);
        java.lang.reflect.Method[] methodArray20 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray14, methodArray19);
        java.lang.String[] strArray21 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray22 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray23 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray21, methodArray22);
        java.lang.String[] strArray24 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray25 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray24, methodArray25);
        java.lang.reflect.Method[] methodArray27 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray21, methodArray26);
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray14, methodArray27);
        java.lang.Class[] classArray29 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray27);
        java.lang.reflect.Constructor constructor30 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass10, classArray29);
        java.lang.Class[] classArray31 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray29);
        java.lang.String[] strArray32 = org.mockito.cglib.core.ReflectUtils.getNames(classArray31);
        java.beans.PropertyDescriptor[] propertyDescriptorArray33 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray33, false, true);
        java.lang.reflect.Method[] methodArray39 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray33, false, false);
        java.lang.reflect.Method[] methodArray40 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray32, methodArray39);
        java.lang.Class[] classArray41 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray40);
        java.lang.reflect.Method[] methodArray42 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray40);
        java.lang.Class<?> wildcardClass43 = methodArray40.getClass();
        java.lang.String[] strArray45 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray46 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray47 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray45, methodArray46);
        java.lang.String[] strArray48 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray49 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray50 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray48, methodArray49);
        java.lang.reflect.Method[] methodArray51 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray45, methodArray50);
        java.lang.String[] strArray52 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray53 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray54 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray52, methodArray53);
        java.lang.String[] strArray55 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray56 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray57 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray55, methodArray56);
        java.lang.reflect.Method[] methodArray58 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray52, methodArray57);
        java.lang.reflect.Method[] methodArray59 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray45, methodArray58);
        java.lang.Class[] classArray60 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray58);
        java.lang.String[] strArray61 = org.mockito.cglib.core.ReflectUtils.getNames(classArray60);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method62 = org.mockito.cglib.core.ReflectUtils.findDeclaredMethod((java.lang.Class) wildcardClass43, "", classArray60);
            org.junit.Assert.fail("Expected exception of type java.lang.NoSuchMethodException; message: ");
        } catch (java.lang.NoSuchMethodException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(propertyDescriptorArray0);
        org.junit.Assert.assertNotNull(methodArray3);
        org.junit.Assert.assertNotNull(classArray4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(classArray8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(classInfo11);
        org.junit.Assert.assertNull(list13);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(methodArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(methodArray20);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(methodArray22);
        org.junit.Assert.assertNotNull(methodArray23);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(classArray29);
        org.junit.Assert.assertNotNull(constructor30);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(propertyDescriptorArray33);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(classArray41);
        org.junit.Assert.assertNotNull(methodArray42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(methodArray46);
        org.junit.Assert.assertNotNull(methodArray47);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(methodArray49);
        org.junit.Assert.assertNotNull(methodArray50);
        org.junit.Assert.assertNotNull(methodArray51);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(methodArray53);
        org.junit.Assert.assertNotNull(methodArray54);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(methodArray56);
        org.junit.Assert.assertNotNull(methodArray57);
        org.junit.Assert.assertNotNull(methodArray58);
        org.junit.Assert.assertNotNull(methodArray59);
        org.junit.Assert.assertNotNull(classArray60);
        org.junit.Assert.assertNotNull(strArray61);
    }

    @Test
    public void test1064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1064");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.lang.Object obj3 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.beans.PropertyDescriptor[] propertyDescriptorArray4 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray4, false, true);
        java.lang.Class[] classArray8 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray4);
        java.lang.Class[] classArray9 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray8);
        java.lang.String[] strArray10 = org.mockito.cglib.core.ReflectUtils.getNames(classArray9);
        java.lang.reflect.Constructor constructor11 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray9);
        org.mockito.cglib.core.MethodInfo methodInfo12 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray15 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray15, false, true);
        java.lang.Class[] classArray19 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.Object[] objArray20 = null;
        java.lang.Object obj21 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass14, classArray19, objArray20);
        java.lang.Object obj22 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor11, (java.lang.Object[]) classArray19);
        org.mockito.cglib.core.MethodInfo methodInfo23 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor11);
        java.lang.String[] strArray24 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray25 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray24, methodArray25);
        java.lang.String[] strArray27 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray28 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray27, methodArray28);
        java.lang.reflect.Method[] methodArray30 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray24, methodArray29);
        java.lang.String[] strArray31 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray32 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray33 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray31, methodArray32);
        java.lang.String[] strArray34 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray35 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray34, methodArray35);
        java.lang.reflect.Method[] methodArray37 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray31, methodArray36);
        java.lang.reflect.Method[] methodArray38 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray24, methodArray37);
        java.lang.Class<?> wildcardClass39 = methodArray37.getClass();
        org.mockito.cglib.core.ClassInfo classInfo40 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass39);
        java.beans.PropertyDescriptor[] propertyDescriptorArray41 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass39);
        java.beans.PropertyDescriptor[] propertyDescriptorArray42 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass39);
        java.beans.PropertyDescriptor[] propertyDescriptorArray43 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass39);
        java.lang.Class[] classArray44 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray43);
        java.lang.Object obj45 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor11, (java.lang.Object[]) propertyDescriptorArray43);
        org.mockito.cglib.core.Signature signature46 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor11);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(propertyDescriptorArray4);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(classArray8);
        org.junit.Assert.assertNotNull(classArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(constructor11);
        org.junit.Assert.assertNotNull(methodInfo12);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(propertyDescriptorArray15);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(classArray19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(methodInfo23);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(methodArray30);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(methodArray33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(methodArray38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(classInfo40);
        org.junit.Assert.assertNotNull(propertyDescriptorArray41);
        org.junit.Assert.assertNotNull(propertyDescriptorArray42);
        org.junit.Assert.assertNotNull(propertyDescriptorArray43);
        org.junit.Assert.assertNotNull(classArray44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(signature46);
    }

    @Test
    public void test1065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1065");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.Object obj5 = new java.lang.Object();
        java.lang.Class<?> wildcardClass6 = obj5.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray7 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray7, false, true);
        java.lang.Class[] classArray11 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray10);
        java.lang.Object[] objArray12 = null;
        java.lang.Object obj13 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass6, classArray11, objArray12);
        java.lang.reflect.Constructor constructor14 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray11);
        org.mockito.cglib.core.ClassInfo classInfo15 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.beans.PropertyDescriptor[] propertyDescriptorArray16 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray16, false, true);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray19);
        int int21 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray20);
        java.lang.String[] strArray22 = org.mockito.cglib.core.ReflectUtils.getNames(classArray20);
        java.lang.String[] strArray23 = org.mockito.cglib.core.ReflectUtils.getNames(classArray20);
        java.lang.String[] strArray24 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray25 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray24, methodArray25);
        java.lang.Object obj27 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray20, (java.lang.Object[]) methodArray25);
        // The following exception was thrown during execution in test generation
        try {
            java.beans.PropertyDescriptor[] propertyDescriptorArray28 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass1);
            org.junit.Assert.fail("Expected exception of type org.mockito.cglib.core.CodeGenerationException; message: java.beans.IntrospectionException-->java.lang.Object not superclass of java.lang.Object");
        } catch (org.mockito.cglib.core.CodeGenerationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(propertyDescriptorArray7);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(constructor14);
        org.junit.Assert.assertNotNull(classInfo15);
        org.junit.Assert.assertNotNull(propertyDescriptorArray16);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(obj27);
    }

    @Test
    public void test1066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1066");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray2 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray2, false, true);
        java.lang.Class[] classArray6 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray5);
        java.lang.Object[] objArray7 = null;
        java.lang.Object obj8 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray6, objArray7);
        java.lang.String[] strArray9 = org.mockito.cglib.core.ReflectUtils.getNames(classArray6);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.Class[] classArray13 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) strArray10);
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        org.mockito.cglib.core.ClassInfo classInfo16 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass15);
        java.lang.Object obj17 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass15);
        java.beans.PropertyDescriptor[] propertyDescriptorArray18 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray21 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray18, false, true);
        java.lang.Class[] classArray22 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray18);
        java.lang.Class[] classArray23 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray22);
        java.lang.String[] strArray24 = org.mockito.cglib.core.ReflectUtils.getNames(classArray23);
        java.lang.reflect.Constructor constructor25 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass15, classArray23);
        org.mockito.cglib.core.MethodInfo methodInfo26 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor25);
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray29 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray32 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray29, false, true);
        java.lang.Class[] classArray33 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray32);
        java.lang.Object[] objArray34 = null;
        java.lang.Object obj35 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass28, classArray33, objArray34);
        java.lang.Object obj36 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor25, (java.lang.Object[]) classArray33);
        java.lang.String[] strArray37 = org.mockito.cglib.core.ReflectUtils.getNames(classArray33);
        java.beans.PropertyDescriptor[] propertyDescriptorArray38 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray38, false, true);
        java.lang.Class[] classArray42 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray38);
        java.lang.Class[] classArray43 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray42);
        java.lang.Class<?> wildcardClass44 = classArray43.getClass();
        org.mockito.cglib.core.ClassInfo classInfo45 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass44);
        java.beans.PropertyDescriptor[] propertyDescriptorArray46 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass44);
        java.beans.PropertyDescriptor[] propertyDescriptorArray47 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass44);
        java.lang.reflect.Method[] methodArray50 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray47, true, false);
        java.lang.reflect.Method[] methodArray51 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray37, methodArray50);
        java.lang.reflect.Method[] methodArray52 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray51);
        java.lang.reflect.Method[] methodArray53 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray9, methodArray52);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(propertyDescriptorArray2);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(classArray6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(classArray13);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(classInfo16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(propertyDescriptorArray18);
        org.junit.Assert.assertNotNull(methodArray21);
        org.junit.Assert.assertNotNull(classArray22);
        org.junit.Assert.assertNotNull(classArray23);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(constructor25);
        org.junit.Assert.assertNotNull(methodInfo26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(propertyDescriptorArray29);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(propertyDescriptorArray38);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(classArray42);
        org.junit.Assert.assertNotNull(classArray43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(classInfo45);
        org.junit.Assert.assertNotNull(propertyDescriptorArray46);
        org.junit.Assert.assertNotNull(propertyDescriptorArray47);
        org.junit.Assert.assertNotNull(methodArray50);
        org.junit.Assert.assertNotNull(methodArray51);
        org.junit.Assert.assertNotNull(methodArray52);
        org.junit.Assert.assertNotNull(methodArray53);
    }

    @Test
    public void test1067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1067");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.lang.Object obj3 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.beans.PropertyDescriptor[] propertyDescriptorArray4 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray4, false, true);
        java.lang.Class[] classArray8 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray4);
        java.lang.Class[] classArray9 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray8);
        java.lang.String[] strArray10 = org.mockito.cglib.core.ReflectUtils.getNames(classArray9);
        java.lang.reflect.Constructor constructor11 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray9);
        java.lang.Object obj12 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.util.List list13 = null;
        java.util.List list14 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list13);
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        org.mockito.cglib.core.ClassInfo classInfo17 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass16);
        java.util.List list18 = null;
        java.util.List list19 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass16, list18);
        java.lang.String[] strArray20 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray21 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray22 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray20, methodArray21);
        java.lang.String[] strArray23 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray24 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray25 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray24);
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray20, methodArray25);
        java.lang.String[] strArray27 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray28 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray27, methodArray28);
        java.lang.String[] strArray30 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray31 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray32 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray31);
        java.lang.reflect.Method[] methodArray33 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray27, methodArray32);
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray20, methodArray33);
        java.lang.Class[] classArray35 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray33);
        java.lang.reflect.Constructor constructor36 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass16, classArray35);
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        org.mockito.cglib.core.ClassInfo classInfo39 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass38);
        java.lang.Object obj40 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass38);
        java.beans.PropertyDescriptor[] propertyDescriptorArray41 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray44 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray41, false, true);
        java.lang.Class[] classArray45 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray41);
        java.lang.Class[] classArray46 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray45);
        java.lang.String[] strArray47 = org.mockito.cglib.core.ReflectUtils.getNames(classArray46);
        java.lang.reflect.Constructor constructor48 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass38, classArray46);
        int int49 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray46);
        java.lang.Object obj50 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor36, (java.lang.Object[]) classArray46);
        int int51 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray46);
        java.lang.Class[] classArray52 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray46);
        int int53 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray52);
        java.lang.reflect.Constructor constructor54 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray52);
        java.lang.Class<?> wildcardClass55 = classArray52.getClass();
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        org.mockito.cglib.core.ClassInfo classInfo58 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass57);
        java.util.List list59 = null;
        java.util.List list60 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass57, list59);
        java.lang.String[] strArray61 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray62 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray63 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray61, methodArray62);
        java.lang.String[] strArray64 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray65 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray66 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray64, methodArray65);
        java.lang.reflect.Method[] methodArray67 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray61, methodArray66);
        java.lang.String[] strArray68 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray69 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray70 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray68, methodArray69);
        java.lang.String[] strArray71 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray72 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray73 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray71, methodArray72);
        java.lang.reflect.Method[] methodArray74 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray68, methodArray73);
        java.lang.reflect.Method[] methodArray75 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray61, methodArray74);
        java.lang.Class[] classArray76 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray74);
        java.lang.reflect.Constructor constructor77 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass57, classArray76);
        org.mockito.cglib.core.MethodInfo methodInfo78 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor77);
        java.beans.PropertyDescriptor[] propertyDescriptorArray79 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray82 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray79, false, true);
        java.lang.reflect.Method[] methodArray85 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray79, false, false);
        java.lang.Object obj86 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor77, (java.lang.Object[]) methodArray85);
        java.beans.PropertyDescriptor[] propertyDescriptorArray87 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray90 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray87, true, true);
        java.lang.Object obj91 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor77, (java.lang.Object[]) propertyDescriptorArray87);
        java.lang.Class[] classArray92 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray87);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Constructor constructor93 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass55, classArray92);
            org.junit.Assert.fail("Expected exception of type org.mockito.cglib.core.CodeGenerationException; message: java.lang.NoSuchMethodException-->[Ljava.lang.Class;.<init>()");
        } catch (org.mockito.cglib.core.CodeGenerationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(propertyDescriptorArray4);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(classArray8);
        org.junit.Assert.assertNotNull(classArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(constructor11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNull(list14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(classInfo17);
        org.junit.Assert.assertNull(list19);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(methodArray21);
        org.junit.Assert.assertNotNull(methodArray22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(methodArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(classArray35);
        org.junit.Assert.assertNotNull(constructor36);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(classInfo39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(propertyDescriptorArray41);
        org.junit.Assert.assertNotNull(methodArray44);
        org.junit.Assert.assertNotNull(classArray45);
        org.junit.Assert.assertNotNull(classArray46);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(constructor48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(classArray52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(constructor54);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(classInfo58);
        org.junit.Assert.assertNull(list60);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(methodArray62);
        org.junit.Assert.assertNotNull(methodArray63);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(methodArray65);
        org.junit.Assert.assertNotNull(methodArray66);
        org.junit.Assert.assertNotNull(methodArray67);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(methodArray69);
        org.junit.Assert.assertNotNull(methodArray70);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertNotNull(methodArray72);
        org.junit.Assert.assertNotNull(methodArray73);
        org.junit.Assert.assertNotNull(methodArray74);
        org.junit.Assert.assertNotNull(methodArray75);
        org.junit.Assert.assertNotNull(classArray76);
        org.junit.Assert.assertNotNull(constructor77);
        org.junit.Assert.assertNotNull(methodInfo78);
        org.junit.Assert.assertNotNull(propertyDescriptorArray79);
        org.junit.Assert.assertNotNull(methodArray82);
        org.junit.Assert.assertNotNull(methodArray85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(propertyDescriptorArray87);
        org.junit.Assert.assertNotNull(methodArray90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertNotNull(classArray92);
    }

    @Test
    public void test1068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1068");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo23 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21, (int) ' ');
        org.mockito.cglib.core.MethodInfo methodInfo25 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21, 10);
        org.mockito.cglib.core.MethodInfo methodInfo27 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21, 100);
        org.mockito.cglib.core.MethodInfo methodInfo28 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray31 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray31, false, true);
        java.lang.Class[] classArray35 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray34);
        java.lang.Object[] objArray36 = null;
        java.lang.Object obj37 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass30, classArray35, objArray36);
        java.lang.Class[] classArray38 = null;
        java.lang.reflect.Constructor constructor39 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass30, classArray38);
        java.lang.Class[] classArray40 = null;
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        org.mockito.cglib.core.ClassInfo classInfo43 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass42);
        java.util.List list44 = null;
        java.util.List list45 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass42, list44);
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        org.mockito.cglib.core.ClassInfo classInfo48 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass47);
        java.util.List list49 = null;
        java.util.List list50 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass47, list49);
        java.lang.String[] strArray51 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray52 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray53 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray51, methodArray52);
        java.lang.String[] strArray54 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray55 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray56 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray54, methodArray55);
        java.lang.reflect.Method[] methodArray57 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray51, methodArray56);
        java.lang.String[] strArray58 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray59 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray60 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray58, methodArray59);
        java.lang.String[] strArray61 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray62 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray63 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray61, methodArray62);
        java.lang.reflect.Method[] methodArray64 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray58, methodArray63);
        java.lang.reflect.Method[] methodArray65 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray51, methodArray64);
        java.lang.Class[] classArray66 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray64);
        java.lang.reflect.Constructor constructor67 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass47, classArray66);
        java.lang.Class[] classArray68 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray66);
        java.lang.String[] strArray69 = org.mockito.cglib.core.ReflectUtils.getNames(classArray68);
        java.lang.reflect.Constructor constructor70 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass42, classArray68);
        int int71 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray68);
        java.lang.Object obj72 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass30, classArray40, (java.lang.Object[]) classArray68);
        java.lang.Object obj73 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) classArray68);
        int int74 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray68);
        java.lang.String[] strArray75 = org.mockito.cglib.core.ReflectUtils.getNames(classArray68);
        int int76 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray68);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo23);
        org.junit.Assert.assertNotNull(methodInfo25);
        org.junit.Assert.assertNotNull(methodInfo27);
        org.junit.Assert.assertNotNull(methodInfo28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(propertyDescriptorArray31);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(classArray35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(constructor39);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(classInfo43);
        org.junit.Assert.assertNull(list45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(classInfo48);
        org.junit.Assert.assertNull(list50);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(methodArray52);
        org.junit.Assert.assertNotNull(methodArray53);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(methodArray55);
        org.junit.Assert.assertNotNull(methodArray56);
        org.junit.Assert.assertNotNull(methodArray57);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(methodArray59);
        org.junit.Assert.assertNotNull(methodArray60);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(methodArray62);
        org.junit.Assert.assertNotNull(methodArray63);
        org.junit.Assert.assertNotNull(methodArray64);
        org.junit.Assert.assertNotNull(methodArray65);
        org.junit.Assert.assertNotNull(classArray66);
        org.junit.Assert.assertNotNull(constructor67);
        org.junit.Assert.assertNotNull(classArray68);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(constructor70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
    }

    @Test
    public void test1069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1069");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.lang.String[] strArray23 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray24 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray25 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray24);
        java.lang.String[] strArray26 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray27 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray26, methodArray27);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray28);
        java.lang.String[] strArray30 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray31 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray32 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray31);
        java.lang.String[] strArray33 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray34 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray33, methodArray34);
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray35);
        java.lang.reflect.Method[] methodArray37 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray36);
        java.lang.String[] strArray38 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray39 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray40 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray38, methodArray39);
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray40);
        java.lang.Object obj42 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) strArray23);
        org.mockito.cglib.core.MethodInfo methodInfo43 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        org.mockito.asm.Type[] typeArray44 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        java.lang.Class<?> wildcardClass45 = typeArray44.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray46 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass45);
        java.util.List list47 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List list48 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass45, list47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(methodInfo43);
        org.junit.Assert.assertNotNull(typeArray44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(propertyDescriptorArray46);
    }

    @Test
    public void test1070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1070");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.lang.String[] strArray23 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray24 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray25 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray24);
        java.lang.String[] strArray26 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray27 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray26, methodArray27);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray28);
        java.lang.String[] strArray30 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray31 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray32 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray31);
        java.lang.String[] strArray33 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray34 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray33, methodArray34);
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray35);
        java.lang.reflect.Method[] methodArray37 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray36);
        java.lang.String[] strArray38 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray39 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray40 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray38, methodArray39);
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray40);
        java.lang.Object obj42 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) strArray23);
        org.mockito.asm.Type[] typeArray43 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        java.lang.Class<?> wildcardClass44 = typeArray43.getClass();
        org.mockito.cglib.core.ClassInfo classInfo45 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass44);
        java.beans.PropertyDescriptor[] propertyDescriptorArray46 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass44);
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Object obj49 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass48);
        java.beans.PropertyDescriptor[] propertyDescriptorArray50 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray53 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray50, false, true);
        java.lang.Class[] classArray54 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray50);
        java.lang.Class[] classArray55 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray54);
        java.lang.String[] strArray56 = org.mockito.cglib.core.ReflectUtils.getNames(classArray55);
        java.lang.String[] strArray57 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray58 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray59 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray57, methodArray58);
        java.lang.Object obj60 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass48, classArray55, (java.lang.Object[]) strArray57);
        java.beans.PropertyDescriptor[] propertyDescriptorArray61 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray64 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray61, false, true);
        java.lang.Class[] classArray65 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray61);
        int int66 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray65);
        int int67 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray65);
        java.lang.reflect.Constructor constructor68 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass48, classArray65);
        java.beans.PropertyDescriptor[] propertyDescriptorArray69 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray72 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray69, true, true);
        java.lang.reflect.Method[] methodArray75 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray69, false, true);
        java.lang.Class[] classArray76 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray69);
        java.lang.String[] strArray77 = org.mockito.cglib.core.ReflectUtils.getNames(classArray76);
        java.lang.reflect.Constructor constructor78 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass48, classArray76);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Constructor constructor79 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass44, classArray76);
            org.junit.Assert.fail("Expected exception of type org.mockito.cglib.core.CodeGenerationException; message: java.lang.NoSuchMethodException-->[Lorg.mockito.asm.Type;.<init>()");
        } catch (org.mockito.cglib.core.CodeGenerationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(classInfo45);
        org.junit.Assert.assertNotNull(propertyDescriptorArray46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(propertyDescriptorArray50);
        org.junit.Assert.assertNotNull(methodArray53);
        org.junit.Assert.assertNotNull(classArray54);
        org.junit.Assert.assertNotNull(classArray55);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(methodArray58);
        org.junit.Assert.assertNotNull(methodArray59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(propertyDescriptorArray61);
        org.junit.Assert.assertNotNull(methodArray64);
        org.junit.Assert.assertNotNull(classArray65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(constructor68);
        org.junit.Assert.assertNotNull(propertyDescriptorArray69);
        org.junit.Assert.assertNotNull(methodArray72);
        org.junit.Assert.assertNotNull(methodArray75);
        org.junit.Assert.assertNotNull(classArray76);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(constructor78);
    }

    @Test
    public void test1071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1071");
        java.beans.PropertyDescriptor[] propertyDescriptorArray0 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray3 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray0, false, true);
        java.lang.Class[] classArray4 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray0);
        java.lang.Class[] classArray5 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray4);
        java.lang.Class<?> wildcardClass6 = classArray4.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj7 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass6);
            org.junit.Assert.fail("Expected exception of type org.mockito.cglib.core.CodeGenerationException; message: java.lang.NoSuchMethodException-->[Ljava.lang.Class;.<init>()");
        } catch (org.mockito.cglib.core.CodeGenerationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(propertyDescriptorArray0);
        org.junit.Assert.assertNotNull(methodArray3);
        org.junit.Assert.assertNotNull(classArray4);
        org.junit.Assert.assertNotNull(classArray5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test1072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1072");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray2 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray2, false, true);
        java.lang.Class[] classArray6 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray2);
        java.beans.PropertyDescriptor[] propertyDescriptorArray7 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray7, false, true);
        java.lang.Class[] classArray11 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray7);
        int int12 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray11);
        java.lang.String[] strArray13 = org.mockito.cglib.core.ReflectUtils.getNames(classArray11);
        java.lang.String[] strArray14 = org.mockito.cglib.core.ReflectUtils.getNames(classArray11);
        java.lang.Class[] classArray15 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) strArray14);
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        org.mockito.cglib.core.ClassInfo classInfo18 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass17);
        java.util.List list19 = null;
        java.util.List list20 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass17, list19);
        java.beans.PropertyDescriptor[] propertyDescriptorArray21 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray24 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray21, false, true);
        java.lang.Class[] classArray25 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray21);
        int int26 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray25);
        java.lang.String[] strArray27 = org.mockito.cglib.core.ReflectUtils.getNames(classArray25);
        java.lang.String[] strArray28 = org.mockito.cglib.core.ReflectUtils.getNames(classArray25);
        java.lang.String[] strArray29 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray30 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray31 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray29, methodArray30);
        java.lang.String[] strArray32 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray33 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray32, methodArray33);
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray29, methodArray34);
        java.lang.String[] strArray36 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray37 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray38 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray37);
        java.lang.String[] strArray39 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray40 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray39, methodArray40);
        java.lang.reflect.Method[] methodArray42 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray41);
        java.lang.reflect.Method[] methodArray43 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray29, methodArray42);
        java.lang.Object obj44 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass17, classArray25, (java.lang.Object[]) methodArray43);
        java.lang.reflect.Method[] methodArray45 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray14, methodArray43);
        java.lang.Object obj46 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray6, (java.lang.Object[]) strArray14);
        java.util.List list47 = null;
        java.util.List list48 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list47);
        java.util.List list49 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List list50 = org.mockito.cglib.core.ReflectUtils.addAllMethods((java.lang.Class) wildcardClass1, list49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(propertyDescriptorArray2);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(classArray6);
        org.junit.Assert.assertNotNull(propertyDescriptorArray7);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(classArray15);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(classInfo18);
        org.junit.Assert.assertNull(list20);
        org.junit.Assert.assertNotNull(propertyDescriptorArray21);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(classArray25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(methodArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(methodArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(methodArray38);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(methodArray42);
        org.junit.Assert.assertNotNull(methodArray43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(methodArray45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNull(list48);
    }

    @Test
    public void test1073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1073");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        java.lang.Object obj2 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.beans.PropertyDescriptor[] propertyDescriptorArray3 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray3, false, true);
        java.lang.Class[] classArray7 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray3);
        java.lang.Class[] classArray8 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray7);
        java.lang.String[] strArray9 = org.mockito.cglib.core.ReflectUtils.getNames(classArray8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.Object obj13 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray8, (java.lang.Object[]) strArray10);
        java.lang.String[] strArray14 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray15 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray16 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray14, methodArray15);
        java.lang.String[] strArray17 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray18 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray17, methodArray18);
        java.lang.reflect.Method[] methodArray20 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray14, methodArray19);
        java.lang.String[] strArray21 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray22 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray23 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray21, methodArray22);
        java.lang.String[] strArray24 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray25 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray24, methodArray25);
        java.lang.reflect.Method[] methodArray27 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray21, methodArray26);
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray14, methodArray27);
        java.lang.Class[] classArray29 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray27);
        java.beans.PropertyDescriptor[] propertyDescriptorArray30 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray33 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray30, false, true);
        java.lang.Class[] classArray34 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray33);
        java.lang.Object obj35 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray29, (java.lang.Object[]) methodArray33);
        java.lang.Object obj36 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        org.mockito.cglib.core.ClassInfo classInfo37 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(propertyDescriptorArray3);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(classArray7);
        org.junit.Assert.assertNotNull(classArray8);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(methodArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(methodArray20);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(methodArray22);
        org.junit.Assert.assertNotNull(methodArray23);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(classArray29);
        org.junit.Assert.assertNotNull(propertyDescriptorArray30);
        org.junit.Assert.assertNotNull(methodArray33);
        org.junit.Assert.assertNotNull(classArray34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(classInfo37);
    }

    @Test
    public void test1074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1074");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray1 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray2 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray1);
        java.lang.String[] strArray3 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray4 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray3, methodArray4);
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray5);
        java.lang.String[] strArray7 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray8 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray9 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.reflect.Method[] methodArray13 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray12);
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray13);
        java.lang.Class<?> wildcardClass15 = methodArray13.getClass();
        org.mockito.cglib.core.ClassInfo classInfo16 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass15);
        java.beans.PropertyDescriptor[] propertyDescriptorArray17 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass15);
        java.beans.PropertyDescriptor[] propertyDescriptorArray18 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass15);
        java.beans.PropertyDescriptor[] propertyDescriptorArray19 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass15);
        java.beans.PropertyDescriptor[] propertyDescriptorArray20 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass15);
        org.mockito.cglib.core.ClassInfo classInfo21 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass15);
        java.util.List list22 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List list23 = org.mockito.cglib.core.ReflectUtils.addAllMethods((java.lang.Class) wildcardClass15, list22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(methodArray1);
        org.junit.Assert.assertNotNull(methodArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(methodArray4);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(methodArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(classInfo16);
        org.junit.Assert.assertNotNull(propertyDescriptorArray17);
        org.junit.Assert.assertNotNull(propertyDescriptorArray18);
        org.junit.Assert.assertNotNull(propertyDescriptorArray19);
        org.junit.Assert.assertNotNull(propertyDescriptorArray20);
        org.junit.Assert.assertNotNull(classInfo21);
    }

    @Test
    public void test1075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1075");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.beans.PropertyDescriptor[] propertyDescriptorArray5 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray8 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray5, false, true);
        java.lang.Class[] classArray9 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray5);
        int int10 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray9);
        java.lang.String[] strArray11 = org.mockito.cglib.core.ReflectUtils.getNames(classArray9);
        java.lang.String[] strArray12 = org.mockito.cglib.core.ReflectUtils.getNames(classArray9);
        java.lang.String[] strArray13 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray14 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray15 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray13, methodArray14);
        java.lang.String[] strArray16 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray17 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray16, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray13, methodArray18);
        java.lang.String[] strArray20 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray21 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray22 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray20, methodArray21);
        java.lang.String[] strArray23 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray24 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray25 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray24);
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray20, methodArray25);
        java.lang.reflect.Method[] methodArray27 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray13, methodArray26);
        java.lang.Object obj28 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray9, (java.lang.Object[]) methodArray27);
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        java.util.List list31 = null;
        java.util.List list32 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass30, list31);
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        org.mockito.cglib.core.ClassInfo classInfo35 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass34);
        java.lang.Object obj36 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass34);
        java.beans.PropertyDescriptor[] propertyDescriptorArray37 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray40 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray37, false, true);
        java.lang.Class[] classArray41 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray37);
        java.lang.Class[] classArray42 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray41);
        java.lang.String[] strArray43 = org.mockito.cglib.core.ReflectUtils.getNames(classArray42);
        java.lang.reflect.Constructor constructor44 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass34, classArray42);
        org.mockito.cglib.core.MethodInfo methodInfo45 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor44);
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray48 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray51 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray48, false, true);
        java.lang.Class[] classArray52 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray51);
        java.lang.Object[] objArray53 = null;
        java.lang.Object obj54 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass47, classArray52, objArray53);
        java.lang.Object obj55 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor44, (java.lang.Object[]) classArray52);
        java.lang.String[] strArray56 = org.mockito.cglib.core.ReflectUtils.getNames(classArray52);
        java.lang.reflect.Constructor constructor57 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass30, classArray52);
        java.lang.reflect.Constructor constructor58 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray52);
        java.lang.String[] strArray59 = org.mockito.cglib.core.ReflectUtils.getNames(classArray52);
        java.beans.PropertyDescriptor[] propertyDescriptorArray60 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray63 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray60, false, true);
        java.lang.reflect.Method[] methodArray66 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray60, true, true);
        java.lang.reflect.Method[] methodArray67 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray59, methodArray66);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(propertyDescriptorArray5);
        org.junit.Assert.assertNotNull(methodArray8);
        org.junit.Assert.assertNotNull(classArray9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(methodArray15);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(methodArray21);
        org.junit.Assert.assertNotNull(methodArray22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNull(list32);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(classInfo35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(propertyDescriptorArray37);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(classArray41);
        org.junit.Assert.assertNotNull(classArray42);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(constructor44);
        org.junit.Assert.assertNotNull(methodInfo45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(propertyDescriptorArray48);
        org.junit.Assert.assertNotNull(methodArray51);
        org.junit.Assert.assertNotNull(classArray52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(constructor57);
        org.junit.Assert.assertNotNull(constructor58);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(propertyDescriptorArray60);
        org.junit.Assert.assertNotNull(methodArray63);
        org.junit.Assert.assertNotNull(methodArray66);
        org.junit.Assert.assertNotNull(methodArray67);
    }

    @Test
    public void test1076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1076");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        org.mockito.cglib.core.ClassInfo classInfo4 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass3);
        java.lang.Object obj5 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass3);
        java.beans.PropertyDescriptor[] propertyDescriptorArray6 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray9 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray6, false, true);
        java.lang.Class[] classArray10 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray6);
        java.lang.Class[] classArray11 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray10);
        java.lang.String[] strArray12 = org.mockito.cglib.core.ReflectUtils.getNames(classArray11);
        java.lang.reflect.Constructor constructor13 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass3, classArray11);
        java.lang.Object obj14 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass3);
        org.mockito.cglib.core.ClassInfo classInfo15 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass3);
        java.util.List list16 = null;
        java.util.List list17 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass3, list16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Object obj20 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass19);
        java.lang.Object obj21 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass19);
        java.lang.String[] strArray22 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray23 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray24 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray22, methodArray23);
        java.lang.Class[] classArray25 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) strArray22);
        java.lang.String[] strArray26 = org.mockito.cglib.core.ReflectUtils.getNames(classArray25);
        java.beans.PropertyDescriptor[] propertyDescriptorArray27 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray30 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray27, false, true);
        java.lang.Class[] classArray31 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray27);
        int int32 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray31);
        int int33 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray31);
        java.lang.Object obj34 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass19, classArray25, (java.lang.Object[]) classArray31);
        java.lang.reflect.Constructor constructor35 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass3, classArray31);
        java.lang.reflect.Constructor constructor36 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray31);
        java.lang.String[] strArray37 = org.mockito.cglib.core.ReflectUtils.getNames(classArray31);
        java.lang.String[] strArray38 = org.mockito.cglib.core.ReflectUtils.getNames(classArray31);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(classInfo4);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(propertyDescriptorArray6);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(constructor13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(classInfo15);
        org.junit.Assert.assertNull(list17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(methodArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(classArray25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(propertyDescriptorArray27);
        org.junit.Assert.assertNotNull(methodArray30);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(constructor35);
        org.junit.Assert.assertNotNull(constructor36);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(strArray38);
    }

    @Test
    public void test1077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1077");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.beans.PropertyDescriptor[] propertyDescriptorArray23 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray23, false, true);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray23, false, false);
        java.lang.Object obj30 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) methodArray29);
        java.beans.PropertyDescriptor[] propertyDescriptorArray31 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray31, true, true);
        java.lang.Object obj35 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) propertyDescriptorArray31);
        java.lang.String[] strArray36 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray37 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray38 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray37);
        java.lang.String[] strArray39 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray40 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray39, methodArray40);
        java.lang.String[] strArray42 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray43 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray44 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray42, methodArray43);
        java.lang.reflect.Method[] methodArray45 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray39, methodArray44);
        java.lang.reflect.Method[] methodArray46 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray45);
        java.lang.Object obj47 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) methodArray46);
        org.mockito.asm.Type[] typeArray48 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        org.mockito.cglib.core.MethodInfo methodInfo50 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21, 100);
        org.mockito.cglib.core.MethodInfo methodInfo52 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21, (int) 'a');
        org.mockito.cglib.core.Signature signature53 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor21);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(propertyDescriptorArray23);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(propertyDescriptorArray31);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(methodArray38);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(methodArray43);
        org.junit.Assert.assertNotNull(methodArray44);
        org.junit.Assert.assertNotNull(methodArray45);
        org.junit.Assert.assertNotNull(methodArray46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(typeArray48);
        org.junit.Assert.assertNotNull(methodInfo50);
        org.junit.Assert.assertNotNull(methodInfo52);
        org.junit.Assert.assertNotNull(signature53);
    }

    @Test
    public void test1078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1078");
        java.beans.PropertyDescriptor[] propertyDescriptorArray0 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray3 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray0, false, true);
        java.lang.Class[] classArray4 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray0);
        java.lang.Class[] classArray5 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray4);
        java.lang.String[] strArray6 = org.mockito.cglib.core.ReflectUtils.getNames(classArray4);
        java.lang.Class<?> wildcardClass7 = classArray4.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray8 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass7);
        java.beans.PropertyDescriptor[] propertyDescriptorArray9 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass7);
        java.beans.PropertyDescriptor[] propertyDescriptorArray10 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass7);
        java.beans.PropertyDescriptor[] propertyDescriptorArray11 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass7);
        java.lang.Class[] classArray12 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray11);
        java.lang.String[] strArray13 = org.mockito.cglib.core.ReflectUtils.getNames(classArray12);
        java.lang.String[] strArray14 = org.mockito.cglib.core.ReflectUtils.getNames(classArray12);
        org.junit.Assert.assertNotNull(propertyDescriptorArray0);
        org.junit.Assert.assertNotNull(methodArray3);
        org.junit.Assert.assertNotNull(classArray4);
        org.junit.Assert.assertNotNull(classArray5);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(propertyDescriptorArray8);
        org.junit.Assert.assertNotNull(propertyDescriptorArray9);
        org.junit.Assert.assertNotNull(propertyDescriptorArray10);
        org.junit.Assert.assertNotNull(propertyDescriptorArray11);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray14);
    }

    @Test
    public void test1079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1079");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.beans.PropertyDescriptor[] propertyDescriptorArray23 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray23, false, true);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray23, false, false);
        java.lang.Object obj30 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) methodArray29);
        java.beans.PropertyDescriptor[] propertyDescriptorArray31 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray31, true, true);
        java.lang.Object obj35 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) propertyDescriptorArray31);
        java.lang.String[] strArray36 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray37 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray38 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray37);
        java.lang.String[] strArray39 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray40 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray39, methodArray40);
        java.lang.reflect.Method[] methodArray42 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray41);
        java.lang.String[] strArray43 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray44 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray45 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray43, methodArray44);
        java.lang.String[] strArray46 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray47 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray48 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray46, methodArray47);
        java.lang.reflect.Method[] methodArray49 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray43, methodArray48);
        java.lang.reflect.Method[] methodArray50 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray49);
        java.lang.String[] strArray51 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray52 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray53 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray51, methodArray52);
        java.lang.String[] strArray54 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray55 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray56 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray54, methodArray55);
        java.lang.String[] strArray57 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray58 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray59 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray57, methodArray58);
        java.lang.String[] strArray60 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray61 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray62 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray60, methodArray61);
        java.lang.reflect.Method[] methodArray63 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray57, methodArray62);
        java.lang.reflect.Method[] methodArray64 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray54, methodArray63);
        java.lang.reflect.Method[] methodArray65 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray51, methodArray64);
        java.lang.reflect.Method[] methodArray66 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray64);
        java.lang.Object obj67 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) methodArray66);
        org.mockito.cglib.core.Signature signature68 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor21);
        org.mockito.cglib.core.MethodInfo methodInfo70 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21, (int) (short) 1);
        org.mockito.cglib.core.MethodInfo methodInfo72 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21, (-1));
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(propertyDescriptorArray23);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(propertyDescriptorArray31);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(methodArray38);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(methodArray42);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(methodArray44);
        org.junit.Assert.assertNotNull(methodArray45);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(methodArray47);
        org.junit.Assert.assertNotNull(methodArray48);
        org.junit.Assert.assertNotNull(methodArray49);
        org.junit.Assert.assertNotNull(methodArray50);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(methodArray52);
        org.junit.Assert.assertNotNull(methodArray53);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(methodArray55);
        org.junit.Assert.assertNotNull(methodArray56);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(methodArray58);
        org.junit.Assert.assertNotNull(methodArray59);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(methodArray61);
        org.junit.Assert.assertNotNull(methodArray62);
        org.junit.Assert.assertNotNull(methodArray63);
        org.junit.Assert.assertNotNull(methodArray64);
        org.junit.Assert.assertNotNull(methodArray65);
        org.junit.Assert.assertNotNull(methodArray66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(signature68);
        org.junit.Assert.assertNotNull(methodInfo70);
        org.junit.Assert.assertNotNull(methodInfo72);
    }

    @Test
    public void test1080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1080");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.util.List list5 = null;
        java.util.List list6 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list5);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method7 = org.mockito.cglib.core.ReflectUtils.findNewInstance((java.lang.Class) wildcardClass1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: class java.lang.Object is not an interface");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNull(list6);
    }

    @Test
    public void test1081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1081");
        java.beans.PropertyDescriptor[] propertyDescriptorArray0 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray3 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray0, false, true);
        java.lang.Class[] classArray4 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray0);
        java.lang.Class[] classArray5 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray4);
        java.lang.String[] strArray6 = org.mockito.cglib.core.ReflectUtils.getNames(classArray4);
        java.lang.Class<?> wildcardClass7 = classArray4.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray8 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass7);
        java.beans.PropertyDescriptor[] propertyDescriptorArray9 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass7);
        java.beans.PropertyDescriptor[] propertyDescriptorArray10 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray13 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray10, false, true);
        java.lang.Class[] classArray14 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray10);
        java.lang.Class[] classArray15 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray14);
        java.lang.String[] strArray16 = org.mockito.cglib.core.ReflectUtils.getNames(classArray15);
        int int17 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray15);
        int int18 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray15);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Constructor constructor19 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass7, classArray15);
            org.junit.Assert.fail("Expected exception of type org.mockito.cglib.core.CodeGenerationException; message: java.lang.NoSuchMethodException-->[Ljava.lang.Class;.<init>()");
        } catch (org.mockito.cglib.core.CodeGenerationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(propertyDescriptorArray0);
        org.junit.Assert.assertNotNull(methodArray3);
        org.junit.Assert.assertNotNull(classArray4);
        org.junit.Assert.assertNotNull(classArray5);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(propertyDescriptorArray8);
        org.junit.Assert.assertNotNull(propertyDescriptorArray9);
        org.junit.Assert.assertNotNull(propertyDescriptorArray10);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(classArray14);
        org.junit.Assert.assertNotNull(classArray15);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
    }

    @Test
    public void test1082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1082");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray1 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray2 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray1);
        java.lang.String[] strArray3 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray4 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray3, methodArray4);
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray5);
        java.lang.String[] strArray7 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray8 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray9 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.reflect.Method[] methodArray13 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray12);
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray17);
        java.lang.Class<?> wildcardClass19 = methodArray18.getClass();
        org.mockito.cglib.core.ClassInfo classInfo20 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass19);
        java.beans.PropertyDescriptor[] propertyDescriptorArray21 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass19);
        java.beans.PropertyDescriptor[] propertyDescriptorArray22 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass19);
        org.mockito.cglib.core.ClassInfo classInfo23 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass19);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj24 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass19);
            org.junit.Assert.fail("Expected exception of type org.mockito.cglib.core.CodeGenerationException; message: java.lang.NoSuchMethodException-->[Ljava.lang.reflect.Method;.<init>()");
        } catch (org.mockito.cglib.core.CodeGenerationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(methodArray1);
        org.junit.Assert.assertNotNull(methodArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(methodArray4);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(methodArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(classInfo20);
        org.junit.Assert.assertNotNull(propertyDescriptorArray21);
        org.junit.Assert.assertNotNull(propertyDescriptorArray22);
        org.junit.Assert.assertNotNull(classInfo23);
    }

    @Test
    public void test1083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1083");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.beans.PropertyDescriptor[] propertyDescriptorArray23 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray23, false, true);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray23, false, false);
        java.lang.Object obj30 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) methodArray29);
        java.beans.PropertyDescriptor[] propertyDescriptorArray31 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray31, true, true);
        java.lang.Object obj35 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) propertyDescriptorArray31);
        java.lang.String[] strArray36 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray37 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray38 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray37);
        java.lang.String[] strArray39 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray40 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray39, methodArray40);
        java.lang.String[] strArray42 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray43 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray44 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray42, methodArray43);
        java.lang.reflect.Method[] methodArray45 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray39, methodArray44);
        java.lang.reflect.Method[] methodArray46 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray45);
        java.lang.Object obj47 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) methodArray46);
        org.mockito.asm.Type[] typeArray48 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        java.lang.Class<?> wildcardClass49 = typeArray48.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray50 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass49);
        java.beans.PropertyDescriptor[] propertyDescriptorArray51 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass49);
        java.beans.PropertyDescriptor[] propertyDescriptorArray52 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass49);
        java.beans.PropertyDescriptor[] propertyDescriptorArray53 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass49);
        java.beans.PropertyDescriptor[] propertyDescriptorArray54 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(propertyDescriptorArray23);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(propertyDescriptorArray31);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(methodArray38);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(methodArray43);
        org.junit.Assert.assertNotNull(methodArray44);
        org.junit.Assert.assertNotNull(methodArray45);
        org.junit.Assert.assertNotNull(methodArray46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(typeArray48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(propertyDescriptorArray50);
        org.junit.Assert.assertNotNull(propertyDescriptorArray51);
        org.junit.Assert.assertNotNull(propertyDescriptorArray52);
        org.junit.Assert.assertNotNull(propertyDescriptorArray53);
        org.junit.Assert.assertNotNull(propertyDescriptorArray54);
    }

    @Test
    public void test1084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1084");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.lang.Class<?> wildcardClass23 = constructor21.getClass();
        org.mockito.cglib.core.ClassInfo classInfo24 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass23);
        java.beans.PropertyDescriptor[] propertyDescriptorArray25 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass23);
        java.beans.PropertyDescriptor[] propertyDescriptorArray26 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass23);
        java.beans.PropertyDescriptor[] propertyDescriptorArray27 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(classInfo24);
        org.junit.Assert.assertNotNull(propertyDescriptorArray25);
        org.junit.Assert.assertNotNull(propertyDescriptorArray26);
        org.junit.Assert.assertNotNull(propertyDescriptorArray27);
    }

    @Test
    public void test1085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1085");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.lang.Object obj3 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.beans.PropertyDescriptor[] propertyDescriptorArray4 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray4, false, true);
        java.lang.Class[] classArray8 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray4);
        java.lang.Class[] classArray9 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray8);
        java.lang.String[] strArray10 = org.mockito.cglib.core.ReflectUtils.getNames(classArray9);
        java.lang.reflect.Constructor constructor11 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray9);
        java.lang.Object obj12 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        org.mockito.cglib.core.ClassInfo classInfo13 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list14 = null;
        java.util.List list15 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list14);
        java.lang.Object obj16 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.util.List list17 = null;
        java.util.List list18 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list17);
        java.util.List list19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List list20 = org.mockito.cglib.core.ReflectUtils.addAllMethods((java.lang.Class) wildcardClass1, list19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(propertyDescriptorArray4);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(classArray8);
        org.junit.Assert.assertNotNull(classArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(constructor11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(classInfo13);
        org.junit.Assert.assertNull(list15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNull(list18);
    }

    @Test
    public void test1086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1086");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        org.mockito.cglib.core.MethodInfo methodInfo24 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21, (int) '#');
        org.mockito.cglib.core.Signature signature25 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor21);
        java.lang.Class<?> wildcardClass26 = signature25.getClass();
        org.mockito.cglib.core.ClassInfo classInfo27 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(methodInfo24);
        org.junit.Assert.assertNotNull(signature25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(classInfo27);
    }

    @Test
    public void test1087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1087");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray1 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray2 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray1);
        java.lang.String[] strArray3 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray4 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray3, methodArray4);
        java.lang.String[] strArray6 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray7 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray8 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray6, methodArray7);
        java.lang.String[] strArray9 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray10 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray9, methodArray10);
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray6, methodArray11);
        java.lang.reflect.Method[] methodArray13 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray3, methodArray12);
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray13);
        java.lang.Class[] classArray15 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray14);
        java.lang.Class<?> wildcardClass16 = methodArray14.getClass();
        java.util.List list17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List list18 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass16, list17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(methodArray1);
        org.junit.Assert.assertNotNull(methodArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(methodArray4);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(methodArray8);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(classArray15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1088");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray2 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray2, false, true);
        java.lang.Class[] classArray6 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray5);
        java.lang.Object[] objArray7 = null;
        java.lang.Object obj8 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray6, objArray7);
        java.lang.Class[] classArray9 = null;
        java.lang.reflect.Constructor constructor10 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray9);
        java.lang.Object obj11 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        org.mockito.cglib.core.ClassInfo classInfo14 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass13);
        java.util.List list15 = null;
        java.util.List list16 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass13, list15);
        java.lang.String[] strArray17 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray18 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray17, methodArray18);
        java.lang.String[] strArray20 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray21 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray22 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray20, methodArray21);
        java.lang.reflect.Method[] methodArray23 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray17, methodArray22);
        java.lang.String[] strArray24 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray25 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray24, methodArray25);
        java.lang.String[] strArray27 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray28 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray27, methodArray28);
        java.lang.reflect.Method[] methodArray30 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray24, methodArray29);
        java.lang.reflect.Method[] methodArray31 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray17, methodArray30);
        java.lang.Class[] classArray32 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray30);
        java.lang.reflect.Constructor constructor33 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass13, classArray32);
        org.mockito.cglib.core.MethodInfo methodInfo34 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor33);
        java.lang.String[] strArray35 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray36 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray37 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray35, methodArray36);
        java.lang.String[] strArray38 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray39 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray40 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray38, methodArray39);
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray35, methodArray40);
        java.lang.String[] strArray42 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray43 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray44 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray42, methodArray43);
        java.lang.String[] strArray45 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray46 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray47 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray45, methodArray46);
        java.lang.reflect.Method[] methodArray48 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray42, methodArray47);
        java.lang.reflect.Method[] methodArray49 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray35, methodArray48);
        java.lang.String[] strArray50 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray51 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray52 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray50, methodArray51);
        java.lang.reflect.Method[] methodArray53 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray35, methodArray52);
        java.lang.Object obj54 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor33, (java.lang.Object[]) strArray35);
        org.mockito.cglib.core.MethodInfo methodInfo55 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor33);
        java.lang.Object[] objArray56 = new java.lang.Object[] {};
        java.lang.Object obj57 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor33, objArray56);
        org.mockito.cglib.core.Signature signature58 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor33);
        org.mockito.asm.Type[] typeArray59 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor33);
        java.lang.Class[] classArray60 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) typeArray59);
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        org.mockito.cglib.core.ClassInfo classInfo63 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass62);
        java.lang.Object obj64 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass62);
        java.beans.PropertyDescriptor[] propertyDescriptorArray65 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray68 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray65, false, true);
        java.lang.Class[] classArray69 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray65);
        java.lang.Class[] classArray70 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray69);
        java.lang.String[] strArray71 = org.mockito.cglib.core.ReflectUtils.getNames(classArray70);
        java.lang.reflect.Constructor constructor72 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass62, classArray70);
        org.mockito.cglib.core.MethodInfo methodInfo73 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor72);
        java.lang.Object obj74 = new java.lang.Object();
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray76 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray79 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray76, false, true);
        java.lang.Class[] classArray80 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray79);
        java.lang.Object[] objArray81 = null;
        java.lang.Object obj82 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass75, classArray80, objArray81);
        java.lang.Object obj83 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor72, (java.lang.Object[]) classArray80);
        java.lang.String[] strArray84 = org.mockito.cglib.core.ReflectUtils.getNames(classArray80);
        java.lang.Object obj85 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray60, (java.lang.Object[]) strArray84);
        // The following exception was thrown during execution in test generation
        try {
            java.beans.PropertyDescriptor[] propertyDescriptorArray86 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass1);
            org.junit.Assert.fail("Expected exception of type org.mockito.cglib.core.CodeGenerationException; message: java.beans.IntrospectionException-->java.lang.Object not superclass of java.lang.Object");
        } catch (org.mockito.cglib.core.CodeGenerationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(propertyDescriptorArray2);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(classArray6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(constructor10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(classInfo14);
        org.junit.Assert.assertNull(list16);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(methodArray21);
        org.junit.Assert.assertNotNull(methodArray22);
        org.junit.Assert.assertNotNull(methodArray23);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(methodArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(constructor33);
        org.junit.Assert.assertNotNull(methodInfo34);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(methodArray43);
        org.junit.Assert.assertNotNull(methodArray44);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(methodArray46);
        org.junit.Assert.assertNotNull(methodArray47);
        org.junit.Assert.assertNotNull(methodArray48);
        org.junit.Assert.assertNotNull(methodArray49);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(methodArray51);
        org.junit.Assert.assertNotNull(methodArray52);
        org.junit.Assert.assertNotNull(methodArray53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(methodInfo55);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[]");
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(signature58);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertNotNull(classArray60);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(classInfo63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(propertyDescriptorArray65);
        org.junit.Assert.assertNotNull(methodArray68);
        org.junit.Assert.assertNotNull(classArray69);
        org.junit.Assert.assertNotNull(classArray70);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertNotNull(constructor72);
        org.junit.Assert.assertNotNull(methodInfo73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(propertyDescriptorArray76);
        org.junit.Assert.assertNotNull(methodArray79);
        org.junit.Assert.assertNotNull(classArray80);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(obj85);
    }

    @Test
    public void test1089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1089");
        byte[] byteArray6 = new byte[] { (byte) -1, (byte) -1, (byte) -1, (byte) -1, (byte) 1 };
        java.lang.ClassLoader classLoader7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class8 = org.mockito.cglib.core.ReflectUtils.defineClass("", byteArray6, classLoader7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, -1, -1, -1, 1]");
    }

    @Test
    public void test1090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1090");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.lang.String[] strArray23 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray24 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray25 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray24);
        java.lang.String[] strArray26 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray27 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray26, methodArray27);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray28);
        java.lang.String[] strArray30 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray31 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray32 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray31);
        java.lang.String[] strArray33 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray34 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray33, methodArray34);
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray35);
        java.lang.reflect.Method[] methodArray37 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray36);
        java.lang.String[] strArray38 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray39 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray40 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray38, methodArray39);
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray40);
        java.lang.Object obj42 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) strArray23);
        org.mockito.cglib.core.MethodInfo methodInfo43 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        org.mockito.asm.Type[] typeArray44 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        java.lang.Class<?> wildcardClass45 = typeArray44.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method46 = org.mockito.cglib.core.ReflectUtils.findNewInstance((java.lang.Class) wildcardClass45);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: class [Lorg.mockito.asm.Type; is not an interface");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(methodInfo43);
        org.junit.Assert.assertNotNull(typeArray44);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test1091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1091");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.beans.PropertyDescriptor[] propertyDescriptorArray23 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray23, false, true);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray23, false, false);
        java.lang.Object obj30 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) methodArray29);
        java.beans.PropertyDescriptor[] propertyDescriptorArray31 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray31, true, true);
        java.lang.Object obj35 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) propertyDescriptorArray31);
        org.mockito.cglib.core.Signature signature36 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor21);
        org.mockito.cglib.core.MethodInfo methodInfo38 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21, (int) (short) 100);
        org.mockito.cglib.core.MethodInfo methodInfo39 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(propertyDescriptorArray23);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(propertyDescriptorArray31);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(signature36);
        org.junit.Assert.assertNotNull(methodInfo38);
        org.junit.Assert.assertNotNull(methodInfo39);
    }

    @Test
    public void test1092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1092");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.lang.Object obj3 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        org.mockito.cglib.core.ClassInfo classInfo4 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.beans.PropertyDescriptor[] propertyDescriptorArray5 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray8 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray5, false, true);
        java.lang.Class[] classArray9 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray5);
        java.lang.Class[] classArray10 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray9);
        java.lang.String[] strArray11 = org.mockito.cglib.core.ReflectUtils.getNames(classArray9);
        java.lang.Class<?> wildcardClass12 = classArray9.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray13 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass12);
        java.beans.PropertyDescriptor[] propertyDescriptorArray14 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass12);
        java.lang.Class[] classArray15 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray14);
        java.lang.String[] strArray16 = org.mockito.cglib.core.ReflectUtils.getNames(classArray15);
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        org.mockito.cglib.core.ClassInfo classInfo19 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass18);
        java.util.List list20 = null;
        java.util.List list21 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass18, list20);
        java.lang.String[] strArray22 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray23 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray24 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray22, methodArray23);
        java.lang.String[] strArray25 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray26 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray27 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray25, methodArray26);
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray22, methodArray27);
        java.lang.String[] strArray29 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray30 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray31 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray29, methodArray30);
        java.lang.String[] strArray32 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray33 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray32, methodArray33);
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray29, methodArray34);
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray22, methodArray35);
        java.lang.Class[] classArray37 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray35);
        java.lang.reflect.Constructor constructor38 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass18, classArray37);
        org.mockito.cglib.core.MethodInfo methodInfo39 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor38);
        java.lang.String[] strArray40 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray41 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray42 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray40, methodArray41);
        java.lang.String[] strArray43 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray44 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray45 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray43, methodArray44);
        java.lang.reflect.Method[] methodArray46 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray40, methodArray45);
        java.lang.String[] strArray47 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray48 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray49 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray47, methodArray48);
        java.lang.String[] strArray50 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray51 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray52 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray50, methodArray51);
        java.lang.reflect.Method[] methodArray53 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray47, methodArray52);
        java.lang.reflect.Method[] methodArray54 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray40, methodArray53);
        java.lang.String[] strArray55 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray56 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray57 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray55, methodArray56);
        java.lang.reflect.Method[] methodArray58 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray40, methodArray57);
        java.lang.Object obj59 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor38, (java.lang.Object[]) strArray40);
        org.mockito.cglib.core.MethodInfo methodInfo61 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor38, (int) (byte) 0);
        java.beans.PropertyDescriptor[] propertyDescriptorArray62 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray65 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray62, true, true);
        java.lang.reflect.Method[] methodArray68 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray62, false, true);
        java.lang.Class[] classArray69 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray62);
        java.lang.Object obj70 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor38, (java.lang.Object[]) classArray69);
        java.lang.Object obj71 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray15, (java.lang.Object[]) classArray69);
        int int72 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray15);
        int int73 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray15);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(classInfo4);
        org.junit.Assert.assertNotNull(propertyDescriptorArray5);
        org.junit.Assert.assertNotNull(methodArray8);
        org.junit.Assert.assertNotNull(classArray9);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(propertyDescriptorArray13);
        org.junit.Assert.assertNotNull(propertyDescriptorArray14);
        org.junit.Assert.assertNotNull(classArray15);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(classInfo19);
        org.junit.Assert.assertNull(list21);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(methodArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(methodArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(methodArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(classArray37);
        org.junit.Assert.assertNotNull(constructor38);
        org.junit.Assert.assertNotNull(methodInfo39);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(methodArray42);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(methodArray44);
        org.junit.Assert.assertNotNull(methodArray45);
        org.junit.Assert.assertNotNull(methodArray46);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(methodArray48);
        org.junit.Assert.assertNotNull(methodArray49);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(methodArray51);
        org.junit.Assert.assertNotNull(methodArray52);
        org.junit.Assert.assertNotNull(methodArray53);
        org.junit.Assert.assertNotNull(methodArray54);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(methodArray56);
        org.junit.Assert.assertNotNull(methodArray57);
        org.junit.Assert.assertNotNull(methodArray58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(methodInfo61);
        org.junit.Assert.assertNotNull(propertyDescriptorArray62);
        org.junit.Assert.assertNotNull(methodArray65);
        org.junit.Assert.assertNotNull(methodArray68);
        org.junit.Assert.assertNotNull(classArray69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
    }

    @Test
    public void test1093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1093");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.lang.String[] strArray23 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray24 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray25 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray24);
        java.lang.String[] strArray26 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray27 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray26, methodArray27);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray28);
        java.lang.String[] strArray30 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray31 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray32 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray31);
        java.lang.String[] strArray33 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray34 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray33, methodArray34);
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray35);
        java.lang.reflect.Method[] methodArray37 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray36);
        java.lang.String[] strArray38 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray39 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray40 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray38, methodArray39);
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray40);
        java.lang.Object obj42 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) strArray23);
        org.mockito.asm.Type[] typeArray43 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        java.lang.Object[] objArray44 = null;
        java.lang.Object obj45 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, objArray44);
        org.mockito.cglib.core.Signature signature46 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor21);
        org.mockito.cglib.core.Signature signature47 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor21);
        org.mockito.cglib.core.Signature signature48 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor21);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(signature46);
        org.junit.Assert.assertNotNull(signature47);
        org.junit.Assert.assertNotNull(signature48);
    }

    @Test
    public void test1094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1094");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray1 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray2 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray1);
        java.lang.String[] strArray3 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray4 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray3, methodArray4);
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray5);
        java.lang.String[] strArray7 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray8 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray9 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.reflect.Method[] methodArray13 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray12);
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray17);
        java.lang.Class<?> wildcardClass19 = methodArray17.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray20 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass19);
        java.beans.PropertyDescriptor[] propertyDescriptorArray21 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass19);
        java.beans.PropertyDescriptor[] propertyDescriptorArray22 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass19);
        java.beans.PropertyDescriptor[] propertyDescriptorArray23 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass19);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method24 = org.mockito.cglib.core.ReflectUtils.findInterfaceMethod((java.lang.Class) wildcardClass19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: class [Ljava.lang.reflect.Method; is not an interface");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(methodArray1);
        org.junit.Assert.assertNotNull(methodArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(methodArray4);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(methodArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(propertyDescriptorArray20);
        org.junit.Assert.assertNotNull(propertyDescriptorArray21);
        org.junit.Assert.assertNotNull(propertyDescriptorArray22);
        org.junit.Assert.assertNotNull(propertyDescriptorArray23);
    }

    @Test
    public void test1095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1095");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.lang.Object obj3 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        org.mockito.cglib.core.ClassInfo classInfo4 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list5 = null;
        java.util.List list6 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray9 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray9, false, true);
        java.lang.Class[] classArray13 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray12);
        java.lang.Object[] objArray14 = null;
        java.lang.Object obj15 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass8, classArray13, objArray14);
        java.lang.Class[] classArray16 = null;
        java.lang.reflect.Constructor constructor17 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass8, classArray16);
        java.lang.Class[] classArray18 = null;
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        org.mockito.cglib.core.ClassInfo classInfo21 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass20);
        java.util.List list22 = null;
        java.util.List list23 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass20, list22);
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        org.mockito.cglib.core.ClassInfo classInfo26 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass25);
        java.util.List list27 = null;
        java.util.List list28 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass25, list27);
        java.lang.String[] strArray29 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray30 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray31 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray29, methodArray30);
        java.lang.String[] strArray32 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray33 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray32, methodArray33);
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray29, methodArray34);
        java.lang.String[] strArray36 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray37 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray38 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray37);
        java.lang.String[] strArray39 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray40 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray39, methodArray40);
        java.lang.reflect.Method[] methodArray42 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray41);
        java.lang.reflect.Method[] methodArray43 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray29, methodArray42);
        java.lang.Class[] classArray44 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray42);
        java.lang.reflect.Constructor constructor45 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass25, classArray44);
        java.lang.Class[] classArray46 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray44);
        java.lang.String[] strArray47 = org.mockito.cglib.core.ReflectUtils.getNames(classArray46);
        java.lang.reflect.Constructor constructor48 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass20, classArray46);
        int int49 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray46);
        java.lang.Object obj50 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass8, classArray18, (java.lang.Object[]) classArray46);
        java.beans.PropertyDescriptor[] propertyDescriptorArray51 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray54 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray51, false, true);
        java.lang.Class[] classArray55 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray51);
        java.lang.Object obj56 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray46, (java.lang.Object[]) classArray55);
        org.mockito.cglib.core.ClassInfo classInfo57 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.lang.Object obj58 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        // The following exception was thrown during execution in test generation
        try {
            java.beans.PropertyDescriptor[] propertyDescriptorArray59 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass1);
            org.junit.Assert.fail("Expected exception of type org.mockito.cglib.core.CodeGenerationException; message: java.beans.IntrospectionException-->java.lang.Object not superclass of java.lang.Object");
        } catch (org.mockito.cglib.core.CodeGenerationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(classInfo4);
        org.junit.Assert.assertNull(list6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(propertyDescriptorArray9);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(classArray13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(constructor17);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(classInfo21);
        org.junit.Assert.assertNull(list23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(classInfo26);
        org.junit.Assert.assertNull(list28);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(methodArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(methodArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(methodArray38);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(methodArray42);
        org.junit.Assert.assertNotNull(methodArray43);
        org.junit.Assert.assertNotNull(classArray44);
        org.junit.Assert.assertNotNull(constructor45);
        org.junit.Assert.assertNotNull(classArray46);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(constructor48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(propertyDescriptorArray51);
        org.junit.Assert.assertNotNull(methodArray54);
        org.junit.Assert.assertNotNull(classArray55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(classInfo57);
        org.junit.Assert.assertNotNull(obj58);
    }

    @Test
    public void test1096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1096");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray1 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray2 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray1);
        java.lang.String[] strArray3 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray4 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray3, methodArray4);
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray5);
        java.lang.String[] strArray7 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray8 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray9 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.reflect.Method[] methodArray13 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray12);
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray13);
        java.lang.Class<?> wildcardClass15 = methodArray13.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray16 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass15);
        java.lang.Class<?> wildcardClass17 = propertyDescriptorArray16.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method18 = org.mockito.cglib.core.ReflectUtils.findInterfaceMethod((java.lang.Class) wildcardClass17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: class [Ljava.beans.PropertyDescriptor; is not an interface");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(methodArray1);
        org.junit.Assert.assertNotNull(methodArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(methodArray4);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(methodArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(propertyDescriptorArray16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1097");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.lang.Object obj3 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        org.mockito.cglib.core.ClassInfo classInfo4 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.beans.PropertyDescriptor[] propertyDescriptorArray5 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray8 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray5, false, true);
        java.lang.Class[] classArray9 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray5);
        java.lang.Class[] classArray10 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray9);
        java.lang.String[] strArray11 = org.mockito.cglib.core.ReflectUtils.getNames(classArray9);
        java.lang.Class<?> wildcardClass12 = classArray9.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray13 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass12);
        java.beans.PropertyDescriptor[] propertyDescriptorArray14 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass12);
        java.lang.Class[] classArray15 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray14);
        java.lang.String[] strArray16 = org.mockito.cglib.core.ReflectUtils.getNames(classArray15);
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        org.mockito.cglib.core.ClassInfo classInfo19 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass18);
        java.util.List list20 = null;
        java.util.List list21 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass18, list20);
        java.lang.String[] strArray22 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray23 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray24 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray22, methodArray23);
        java.lang.String[] strArray25 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray26 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray27 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray25, methodArray26);
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray22, methodArray27);
        java.lang.String[] strArray29 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray30 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray31 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray29, methodArray30);
        java.lang.String[] strArray32 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray33 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray32, methodArray33);
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray29, methodArray34);
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray22, methodArray35);
        java.lang.Class[] classArray37 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray35);
        java.lang.reflect.Constructor constructor38 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass18, classArray37);
        org.mockito.cglib.core.MethodInfo methodInfo39 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor38);
        java.lang.String[] strArray40 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray41 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray42 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray40, methodArray41);
        java.lang.String[] strArray43 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray44 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray45 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray43, methodArray44);
        java.lang.reflect.Method[] methodArray46 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray40, methodArray45);
        java.lang.String[] strArray47 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray48 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray49 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray47, methodArray48);
        java.lang.String[] strArray50 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray51 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray52 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray50, methodArray51);
        java.lang.reflect.Method[] methodArray53 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray47, methodArray52);
        java.lang.reflect.Method[] methodArray54 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray40, methodArray53);
        java.lang.String[] strArray55 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray56 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray57 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray55, methodArray56);
        java.lang.reflect.Method[] methodArray58 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray40, methodArray57);
        java.lang.Object obj59 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor38, (java.lang.Object[]) strArray40);
        org.mockito.cglib.core.MethodInfo methodInfo61 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor38, (int) (byte) 0);
        java.beans.PropertyDescriptor[] propertyDescriptorArray62 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray65 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray62, true, true);
        java.lang.reflect.Method[] methodArray68 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray62, false, true);
        java.lang.Class[] classArray69 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray62);
        java.lang.Object obj70 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor38, (java.lang.Object[]) classArray69);
        java.lang.Object obj71 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray15, (java.lang.Object[]) classArray69);
        java.beans.PropertyDescriptor[] propertyDescriptorArray72 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray75 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray72, false, true);
        java.lang.reflect.Method[] methodArray78 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray72, true, true);
        java.lang.reflect.Method[] methodArray81 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray72, false, true);
        java.lang.Class[] classArray82 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray72);
        java.lang.reflect.Constructor constructor83 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray82);
        int int84 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray82);
        java.lang.String[] strArray85 = org.mockito.cglib.core.ReflectUtils.getNames(classArray82);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(classInfo4);
        org.junit.Assert.assertNotNull(propertyDescriptorArray5);
        org.junit.Assert.assertNotNull(methodArray8);
        org.junit.Assert.assertNotNull(classArray9);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(propertyDescriptorArray13);
        org.junit.Assert.assertNotNull(propertyDescriptorArray14);
        org.junit.Assert.assertNotNull(classArray15);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(classInfo19);
        org.junit.Assert.assertNull(list21);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(methodArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(methodArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(methodArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(classArray37);
        org.junit.Assert.assertNotNull(constructor38);
        org.junit.Assert.assertNotNull(methodInfo39);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(methodArray42);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(methodArray44);
        org.junit.Assert.assertNotNull(methodArray45);
        org.junit.Assert.assertNotNull(methodArray46);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(methodArray48);
        org.junit.Assert.assertNotNull(methodArray49);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(methodArray51);
        org.junit.Assert.assertNotNull(methodArray52);
        org.junit.Assert.assertNotNull(methodArray53);
        org.junit.Assert.assertNotNull(methodArray54);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(methodArray56);
        org.junit.Assert.assertNotNull(methodArray57);
        org.junit.Assert.assertNotNull(methodArray58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(methodInfo61);
        org.junit.Assert.assertNotNull(propertyDescriptorArray62);
        org.junit.Assert.assertNotNull(methodArray65);
        org.junit.Assert.assertNotNull(methodArray68);
        org.junit.Assert.assertNotNull(classArray69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(propertyDescriptorArray72);
        org.junit.Assert.assertNotNull(methodArray75);
        org.junit.Assert.assertNotNull(methodArray78);
        org.junit.Assert.assertNotNull(methodArray81);
        org.junit.Assert.assertNotNull(classArray82);
        org.junit.Assert.assertNotNull(constructor83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertNotNull(strArray85);
    }

    @Test
    public void test1098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1098");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray1 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray2 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray1);
        java.lang.String[] strArray3 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray4 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray3, methodArray4);
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray5);
        java.lang.String[] strArray7 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray8 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray9 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.reflect.Method[] methodArray13 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray12);
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray13);
        java.lang.Class<?> wildcardClass15 = strArray0.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray16 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass15);
        java.lang.Class<?> wildcardClass17 = propertyDescriptorArray16.getClass();
        java.lang.Class[] classArray18 = null;
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        org.mockito.cglib.core.ClassInfo classInfo21 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass20);
        java.lang.Object obj22 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass20);
        java.beans.PropertyDescriptor[] propertyDescriptorArray23 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray23, false, true);
        java.lang.Class[] classArray27 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray23);
        java.lang.Class[] classArray28 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray27);
        java.lang.String[] strArray29 = org.mockito.cglib.core.ReflectUtils.getNames(classArray28);
        java.lang.reflect.Constructor constructor30 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass20, classArray28);
        org.mockito.cglib.core.MethodInfo methodInfo31 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor30);
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray34 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray37 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray34, false, true);
        java.lang.Class[] classArray38 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray37);
        java.lang.Object[] objArray39 = null;
        java.lang.Object obj40 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass33, classArray38, objArray39);
        java.lang.Object obj41 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor30, (java.lang.Object[]) classArray38);
        org.mockito.cglib.core.MethodInfo methodInfo43 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor30, (int) (byte) 0);
        org.mockito.asm.Type[] typeArray44 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor30);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj45 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass17, classArray18, (java.lang.Object[]) typeArray44);
            org.junit.Assert.fail("Expected exception of type org.mockito.cglib.core.CodeGenerationException; message: java.lang.NoSuchMethodException-->[Ljava.beans.PropertyDescriptor;.<init>()");
        } catch (org.mockito.cglib.core.CodeGenerationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(methodArray1);
        org.junit.Assert.assertNotNull(methodArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(methodArray4);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(methodArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(propertyDescriptorArray16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(classInfo21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(propertyDescriptorArray23);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(classArray27);
        org.junit.Assert.assertNotNull(classArray28);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(constructor30);
        org.junit.Assert.assertNotNull(methodInfo31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(propertyDescriptorArray34);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(classArray38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(methodInfo43);
        org.junit.Assert.assertNotNull(typeArray44);
    }

    @Test
    public void test1099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1099");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.beans.PropertyDescriptor[] propertyDescriptorArray5 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray8 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray5, false, true);
        java.lang.Class[] classArray9 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray5);
        int int10 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray9);
        java.lang.String[] strArray11 = org.mockito.cglib.core.ReflectUtils.getNames(classArray9);
        java.lang.String[] strArray12 = org.mockito.cglib.core.ReflectUtils.getNames(classArray9);
        java.lang.String[] strArray13 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray14 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray15 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray13, methodArray14);
        java.lang.String[] strArray16 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray17 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray16, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray13, methodArray18);
        java.lang.String[] strArray20 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray21 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray22 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray20, methodArray21);
        java.lang.String[] strArray23 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray24 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray25 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray24);
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray20, methodArray25);
        java.lang.reflect.Method[] methodArray27 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray13, methodArray26);
        java.lang.Object obj28 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray9, (java.lang.Object[]) methodArray27);
        java.lang.Class[] classArray29 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray9);
        java.lang.Class<?> wildcardClass30 = classArray29.getClass();
        org.mockito.cglib.core.ClassInfo classInfo31 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass30);
        java.beans.PropertyDescriptor[] propertyDescriptorArray32 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass30);
        java.util.List list33 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List list34 = org.mockito.cglib.core.ReflectUtils.addAllMethods((java.lang.Class) wildcardClass30, list33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(propertyDescriptorArray5);
        org.junit.Assert.assertNotNull(methodArray8);
        org.junit.Assert.assertNotNull(classArray9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(methodArray15);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(methodArray21);
        org.junit.Assert.assertNotNull(methodArray22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(classArray29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classInfo31);
        org.junit.Assert.assertNotNull(propertyDescriptorArray32);
    }

    @Test
    public void test1100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1100");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.beans.PropertyDescriptor[] propertyDescriptorArray23 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray23, false, true);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray23, false, false);
        java.lang.Object obj30 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) methodArray29);
        java.beans.PropertyDescriptor[] propertyDescriptorArray31 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray31, true, true);
        java.lang.Object obj35 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) propertyDescriptorArray31);
        java.lang.String[] strArray36 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray37 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray38 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray37);
        java.lang.String[] strArray39 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray40 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray39, methodArray40);
        java.lang.reflect.Method[] methodArray42 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray41);
        java.lang.String[] strArray43 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray44 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray45 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray43, methodArray44);
        java.lang.String[] strArray46 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray47 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray48 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray46, methodArray47);
        java.lang.reflect.Method[] methodArray49 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray43, methodArray48);
        java.lang.reflect.Method[] methodArray50 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray49);
        java.lang.String[] strArray51 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray52 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray53 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray51, methodArray52);
        java.lang.String[] strArray54 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray55 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray56 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray54, methodArray55);
        java.lang.String[] strArray57 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray58 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray59 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray57, methodArray58);
        java.lang.String[] strArray60 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray61 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray62 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray60, methodArray61);
        java.lang.reflect.Method[] methodArray63 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray57, methodArray62);
        java.lang.reflect.Method[] methodArray64 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray54, methodArray63);
        java.lang.reflect.Method[] methodArray65 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray51, methodArray64);
        java.lang.reflect.Method[] methodArray66 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray64);
        java.lang.Object obj67 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) methodArray66);
        org.mockito.cglib.core.MethodInfo methodInfo68 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.lang.Class<?> wildcardClass69 = constructor21.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray70 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass69);
        java.beans.PropertyDescriptor[] propertyDescriptorArray71 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass69);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method72 = org.mockito.cglib.core.ReflectUtils.findNewInstance((java.lang.Class) wildcardClass69);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: class java.lang.reflect.Constructor is not an interface");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(propertyDescriptorArray23);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(propertyDescriptorArray31);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(methodArray38);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(methodArray42);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(methodArray44);
        org.junit.Assert.assertNotNull(methodArray45);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(methodArray47);
        org.junit.Assert.assertNotNull(methodArray48);
        org.junit.Assert.assertNotNull(methodArray49);
        org.junit.Assert.assertNotNull(methodArray50);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(methodArray52);
        org.junit.Assert.assertNotNull(methodArray53);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(methodArray55);
        org.junit.Assert.assertNotNull(methodArray56);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(methodArray58);
        org.junit.Assert.assertNotNull(methodArray59);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(methodArray61);
        org.junit.Assert.assertNotNull(methodArray62);
        org.junit.Assert.assertNotNull(methodArray63);
        org.junit.Assert.assertNotNull(methodArray64);
        org.junit.Assert.assertNotNull(methodArray65);
        org.junit.Assert.assertNotNull(methodArray66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(methodInfo68);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(propertyDescriptorArray70);
        org.junit.Assert.assertNotNull(propertyDescriptorArray71);
    }

    @Test
    public void test1101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1101");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.lang.String[] strArray23 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray24 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray25 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray24);
        java.lang.String[] strArray26 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray27 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray26, methodArray27);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray28);
        java.lang.String[] strArray30 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray31 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray32 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray31);
        java.lang.String[] strArray33 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray34 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray33, methodArray34);
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray35);
        java.lang.reflect.Method[] methodArray37 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray36);
        java.lang.String[] strArray38 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray39 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray40 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray38, methodArray39);
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray40);
        java.lang.Object obj42 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) strArray23);
        org.mockito.asm.Type[] typeArray43 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        java.lang.Class<?> wildcardClass44 = typeArray43.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray45 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass44);
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        org.mockito.cglib.core.ClassInfo classInfo49 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass48);
        java.util.List list50 = null;
        java.util.List list51 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass48, list50);
        java.lang.String[] strArray52 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray53 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray54 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray52, methodArray53);
        java.lang.String[] strArray55 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray56 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray57 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray55, methodArray56);
        java.lang.reflect.Method[] methodArray58 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray52, methodArray57);
        java.lang.String[] strArray59 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray60 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray61 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray59, methodArray60);
        java.lang.String[] strArray62 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray63 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray64 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray62, methodArray63);
        java.lang.reflect.Method[] methodArray65 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray59, methodArray64);
        java.lang.reflect.Method[] methodArray66 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray52, methodArray65);
        java.lang.Class[] classArray67 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray65);
        java.lang.reflect.Constructor constructor68 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass48, classArray67);
        java.lang.Object obj69 = new java.lang.Object();
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        org.mockito.cglib.core.ClassInfo classInfo71 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass70);
        java.lang.Object obj72 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass70);
        java.beans.PropertyDescriptor[] propertyDescriptorArray73 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray76 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray73, false, true);
        java.lang.Class[] classArray77 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray73);
        java.lang.Class[] classArray78 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray77);
        java.lang.String[] strArray79 = org.mockito.cglib.core.ReflectUtils.getNames(classArray78);
        java.lang.reflect.Constructor constructor80 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass70, classArray78);
        int int81 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray78);
        java.lang.Object obj82 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor68, (java.lang.Object[]) classArray78);
        int int83 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray78);
        java.lang.Class[] classArray84 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray78);
        int int85 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray84);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method86 = org.mockito.cglib.core.ReflectUtils.findDeclaredMethod((java.lang.Class) wildcardClass44, "hi!", classArray84);
            org.junit.Assert.fail("Expected exception of type java.lang.NoSuchMethodException; message: hi!");
        } catch (java.lang.NoSuchMethodException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(propertyDescriptorArray45);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(classInfo49);
        org.junit.Assert.assertNull(list51);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(methodArray53);
        org.junit.Assert.assertNotNull(methodArray54);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(methodArray56);
        org.junit.Assert.assertNotNull(methodArray57);
        org.junit.Assert.assertNotNull(methodArray58);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(methodArray60);
        org.junit.Assert.assertNotNull(methodArray61);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(methodArray63);
        org.junit.Assert.assertNotNull(methodArray64);
        org.junit.Assert.assertNotNull(methodArray65);
        org.junit.Assert.assertNotNull(methodArray66);
        org.junit.Assert.assertNotNull(classArray67);
        org.junit.Assert.assertNotNull(constructor68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(classInfo71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(propertyDescriptorArray73);
        org.junit.Assert.assertNotNull(methodArray76);
        org.junit.Assert.assertNotNull(classArray77);
        org.junit.Assert.assertNotNull(classArray78);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertNotNull(constructor80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertNotNull(classArray84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
    }

    @Test
    public void test1102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1102");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray2 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray2, false, true);
        java.lang.Class[] classArray6 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray5);
        java.lang.Object[] objArray7 = null;
        java.lang.Object obj8 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray6, objArray7);
        java.lang.Class[] classArray9 = null;
        java.lang.reflect.Constructor constructor10 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray9);
        org.mockito.cglib.core.MethodInfo methodInfo11 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor10);
        org.mockito.asm.Type[] typeArray12 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor10);
        java.lang.String[] strArray13 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray14 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray15 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray13, methodArray14);
        java.lang.String[] strArray16 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray17 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray16, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray13, methodArray18);
        java.lang.String[] strArray20 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray21 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray22 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray20, methodArray21);
        java.lang.String[] strArray23 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray24 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray25 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray24);
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray20, methodArray25);
        java.lang.reflect.Method[] methodArray27 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray13, methodArray26);
        java.lang.Class<?> wildcardClass28 = methodArray26.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray29 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass28);
        java.lang.Class[] classArray30 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray29);
        java.lang.Object obj31 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor10, (java.lang.Object[]) propertyDescriptorArray29);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(propertyDescriptorArray2);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(classArray6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(constructor10);
        org.junit.Assert.assertNotNull(methodInfo11);
        org.junit.Assert.assertNotNull(typeArray12);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(methodArray15);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(methodArray21);
        org.junit.Assert.assertNotNull(methodArray22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(propertyDescriptorArray29);
        org.junit.Assert.assertNotNull(classArray30);
        org.junit.Assert.assertNotNull(obj31);
    }

    @Test
    public void test1103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1103");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.lang.String[] strArray23 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray24 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray25 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray24);
        java.lang.String[] strArray26 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray27 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray26, methodArray27);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray28);
        java.lang.String[] strArray30 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray31 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray32 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray31);
        java.lang.String[] strArray33 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray34 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray33, methodArray34);
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray35);
        java.lang.reflect.Method[] methodArray37 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray36);
        java.lang.String[] strArray38 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray39 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray40 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray38, methodArray39);
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray40);
        java.lang.Object obj42 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) strArray23);
        org.mockito.asm.Type[] typeArray43 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        java.lang.Class<?> wildcardClass44 = typeArray43.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray45 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass44);
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        org.mockito.cglib.core.ClassInfo classInfo48 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass47);
        java.lang.Object obj49 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass47);
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        org.mockito.cglib.core.ClassInfo classInfo52 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass51);
        java.util.List list53 = null;
        java.util.List list54 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass51, list53);
        java.lang.String[] strArray55 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray56 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray57 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray55, methodArray56);
        java.lang.String[] strArray58 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray59 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray60 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray58, methodArray59);
        java.lang.reflect.Method[] methodArray61 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray55, methodArray60);
        java.lang.String[] strArray62 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray63 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray64 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray62, methodArray63);
        java.lang.String[] strArray65 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray66 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray67 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray65, methodArray66);
        java.lang.reflect.Method[] methodArray68 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray62, methodArray67);
        java.lang.reflect.Method[] methodArray69 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray55, methodArray68);
        java.lang.Class[] classArray70 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray68);
        java.lang.reflect.Constructor constructor71 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass51, classArray70);
        java.lang.Class[] classArray72 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray70);
        java.lang.reflect.Constructor constructor73 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass47, classArray72);
        int int74 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray72);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Constructor constructor75 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass44, classArray72);
            org.junit.Assert.fail("Expected exception of type org.mockito.cglib.core.CodeGenerationException; message: java.lang.NoSuchMethodException-->[Lorg.mockito.asm.Type;.<init>()");
        } catch (org.mockito.cglib.core.CodeGenerationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(propertyDescriptorArray45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(classInfo48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(classInfo52);
        org.junit.Assert.assertNull(list54);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(methodArray56);
        org.junit.Assert.assertNotNull(methodArray57);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(methodArray59);
        org.junit.Assert.assertNotNull(methodArray60);
        org.junit.Assert.assertNotNull(methodArray61);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(methodArray63);
        org.junit.Assert.assertNotNull(methodArray64);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(methodArray66);
        org.junit.Assert.assertNotNull(methodArray67);
        org.junit.Assert.assertNotNull(methodArray68);
        org.junit.Assert.assertNotNull(methodArray69);
        org.junit.Assert.assertNotNull(classArray70);
        org.junit.Assert.assertNotNull(constructor71);
        org.junit.Assert.assertNotNull(classArray72);
        org.junit.Assert.assertNotNull(constructor73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
    }

    @Test
    public void test1104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1104");
        java.beans.PropertyDescriptor[] propertyDescriptorArray0 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray3 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray0, false, true);
        java.lang.Class[] classArray4 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray0);
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray0, false, true);
        java.lang.Class<?> wildcardClass8 = methodArray7.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj9 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass8);
            org.junit.Assert.fail("Expected exception of type org.mockito.cglib.core.CodeGenerationException; message: java.lang.NoSuchMethodException-->[Ljava.lang.reflect.Method;.<init>()");
        } catch (org.mockito.cglib.core.CodeGenerationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(propertyDescriptorArray0);
        org.junit.Assert.assertNotNull(methodArray3);
        org.junit.Assert.assertNotNull(classArray4);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test1105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1105");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        java.util.List list2 = null;
        java.util.List list3 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list2);
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        org.mockito.cglib.core.ClassInfo classInfo6 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass5);
        java.beans.PropertyDescriptor[] propertyDescriptorArray8 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray8, false, true);
        java.lang.Class[] classArray12 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray8);
        java.lang.Class[] classArray13 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray12);
        java.lang.String[] strArray14 = org.mockito.cglib.core.ReflectUtils.getNames(classArray13);
        java.lang.reflect.Constructor constructor15 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass5, classArray13);
        org.mockito.cglib.core.MethodInfo methodInfo16 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor15);
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray19 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray22 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray19, false, true);
        java.lang.Class[] classArray23 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray22);
        java.lang.Object[] objArray24 = null;
        java.lang.Object obj25 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass18, classArray23, objArray24);
        java.lang.Object obj26 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor15, (java.lang.Object[]) classArray23);
        java.lang.String[] strArray27 = org.mockito.cglib.core.ReflectUtils.getNames(classArray23);
        java.lang.reflect.Constructor constructor28 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray23);
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray31 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray31, false, true);
        java.lang.Class[] classArray35 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray34);
        java.lang.Object[] objArray36 = null;
        java.lang.Object obj37 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass30, classArray35, objArray36);
        int int38 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray35);
        java.lang.reflect.Constructor constructor39 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray35);
        org.mockito.cglib.core.Signature signature40 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor39);
        java.lang.Class<?> wildcardClass41 = signature40.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method42 = org.mockito.cglib.core.ReflectUtils.findNewInstance((java.lang.Class) wildcardClass41);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: class org.mockito.cglib.core.Signature is not an interface");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNull(list3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(classInfo6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(propertyDescriptorArray8);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(classArray13);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(constructor15);
        org.junit.Assert.assertNotNull(methodInfo16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(propertyDescriptorArray19);
        org.junit.Assert.assertNotNull(methodArray22);
        org.junit.Assert.assertNotNull(classArray23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(constructor28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(propertyDescriptorArray31);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(classArray35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(constructor39);
        org.junit.Assert.assertNotNull(signature40);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test1106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1106");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        java.lang.Object obj2 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.beans.PropertyDescriptor[] propertyDescriptorArray3 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray3, false, true);
        java.lang.Class[] classArray7 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray3);
        java.lang.Class[] classArray8 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray7);
        java.lang.String[] strArray9 = org.mockito.cglib.core.ReflectUtils.getNames(classArray8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.Object obj13 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray8, (java.lang.Object[]) strArray10);
        java.lang.Object obj14 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.util.List list15 = null;
        java.util.List list16 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list15);
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        org.mockito.cglib.core.ClassInfo classInfo19 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass18);
        java.util.List list20 = null;
        java.util.List list21 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass18, list20);
        java.lang.String[] strArray22 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray23 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray24 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray22, methodArray23);
        java.lang.String[] strArray25 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray26 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray27 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray25, methodArray26);
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray22, methodArray27);
        java.lang.String[] strArray29 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray30 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray31 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray29, methodArray30);
        java.lang.String[] strArray32 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray33 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray32, methodArray33);
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray29, methodArray34);
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray22, methodArray35);
        java.lang.Class[] classArray37 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray35);
        java.lang.reflect.Constructor constructor38 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass18, classArray37);
        org.mockito.cglib.core.MethodInfo methodInfo39 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor38);
        java.beans.PropertyDescriptor[] propertyDescriptorArray40 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray43 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray40, false, true);
        java.lang.reflect.Method[] methodArray46 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray40, false, false);
        java.lang.Object obj47 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor38, (java.lang.Object[]) methodArray46);
        java.lang.Class[] classArray48 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray46);
        java.lang.reflect.Constructor constructor49 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray48);
        org.mockito.cglib.core.MethodInfo methodInfo50 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor49);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(propertyDescriptorArray3);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(classArray7);
        org.junit.Assert.assertNotNull(classArray8);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNull(list16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(classInfo19);
        org.junit.Assert.assertNull(list21);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(methodArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(methodArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(methodArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(classArray37);
        org.junit.Assert.assertNotNull(constructor38);
        org.junit.Assert.assertNotNull(methodInfo39);
        org.junit.Assert.assertNotNull(propertyDescriptorArray40);
        org.junit.Assert.assertNotNull(methodArray43);
        org.junit.Assert.assertNotNull(methodArray46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(classArray48);
        org.junit.Assert.assertNotNull(constructor49);
        org.junit.Assert.assertNotNull(methodInfo50);
    }

    @Test
    public void test1107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1107");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.beans.PropertyDescriptor[] propertyDescriptorArray5 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray8 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray5, false, true);
        java.lang.Class[] classArray9 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray5);
        int int10 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray9);
        java.lang.String[] strArray11 = org.mockito.cglib.core.ReflectUtils.getNames(classArray9);
        java.lang.String[] strArray12 = org.mockito.cglib.core.ReflectUtils.getNames(classArray9);
        java.lang.String[] strArray13 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray14 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray15 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray13, methodArray14);
        java.lang.String[] strArray16 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray17 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray16, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray13, methodArray18);
        java.lang.String[] strArray20 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray21 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray22 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray20, methodArray21);
        java.lang.String[] strArray23 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray24 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray25 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray24);
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray20, methodArray25);
        java.lang.reflect.Method[] methodArray27 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray13, methodArray26);
        java.lang.Object obj28 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray9, (java.lang.Object[]) methodArray27);
        java.lang.Class[] classArray29 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray9);
        java.lang.Class<?> wildcardClass30 = classArray29.getClass();
        org.mockito.cglib.core.ClassInfo classInfo31 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass30);
        java.beans.PropertyDescriptor[] propertyDescriptorArray32 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass30);
        java.beans.PropertyDescriptor[] propertyDescriptorArray33 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass30);
        java.beans.PropertyDescriptor[] propertyDescriptorArray34 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass30);
        java.beans.PropertyDescriptor[] propertyDescriptorArray35 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass30);
        java.beans.PropertyDescriptor[] propertyDescriptorArray36 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray39 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray36, false, true);
        java.lang.reflect.Method[] methodArray42 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray36, false, false);
        java.lang.Class[] classArray43 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray36);
        java.lang.Class[] classArray44 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray36);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Constructor constructor45 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass30, classArray44);
            org.junit.Assert.fail("Expected exception of type org.mockito.cglib.core.CodeGenerationException; message: java.lang.NoSuchMethodException-->[Ljava.lang.Class;.<init>()");
        } catch (org.mockito.cglib.core.CodeGenerationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(propertyDescriptorArray5);
        org.junit.Assert.assertNotNull(methodArray8);
        org.junit.Assert.assertNotNull(classArray9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(methodArray15);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(methodArray21);
        org.junit.Assert.assertNotNull(methodArray22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(classArray29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classInfo31);
        org.junit.Assert.assertNotNull(propertyDescriptorArray32);
        org.junit.Assert.assertNotNull(propertyDescriptorArray33);
        org.junit.Assert.assertNotNull(propertyDescriptorArray34);
        org.junit.Assert.assertNotNull(propertyDescriptorArray35);
        org.junit.Assert.assertNotNull(propertyDescriptorArray36);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(methodArray42);
        org.junit.Assert.assertNotNull(classArray43);
        org.junit.Assert.assertNotNull(classArray44);
    }

    @Test
    public void test1108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1108");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.beans.PropertyDescriptor[] propertyDescriptorArray23 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray23, false, true);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray23, false, false);
        java.lang.Object obj30 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) methodArray29);
        java.beans.PropertyDescriptor[] propertyDescriptorArray31 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray31, true, true);
        java.lang.Object obj35 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) propertyDescriptorArray31);
        java.lang.String[] strArray36 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray37 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray38 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray37);
        java.lang.String[] strArray39 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray40 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray39, methodArray40);
        java.lang.reflect.Method[] methodArray42 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray41);
        java.lang.String[] strArray43 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray44 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray45 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray43, methodArray44);
        java.lang.String[] strArray46 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray47 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray48 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray46, methodArray47);
        java.lang.reflect.Method[] methodArray49 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray43, methodArray48);
        java.lang.reflect.Method[] methodArray50 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray49);
        java.lang.String[] strArray51 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray52 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray53 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray51, methodArray52);
        java.lang.String[] strArray54 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray55 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray56 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray54, methodArray55);
        java.lang.String[] strArray57 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray58 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray59 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray57, methodArray58);
        java.lang.String[] strArray60 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray61 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray62 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray60, methodArray61);
        java.lang.reflect.Method[] methodArray63 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray57, methodArray62);
        java.lang.reflect.Method[] methodArray64 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray54, methodArray63);
        java.lang.reflect.Method[] methodArray65 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray51, methodArray64);
        java.lang.reflect.Method[] methodArray66 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray64);
        java.lang.Object obj67 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) methodArray66);
        org.mockito.cglib.core.MethodInfo methodInfo68 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        org.mockito.asm.Type[] typeArray69 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        org.mockito.cglib.core.ClassInfo classInfo72 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass71);
        java.lang.Object obj73 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass71);
        java.beans.PropertyDescriptor[] propertyDescriptorArray74 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray77 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray74, false, true);
        java.lang.Class[] classArray78 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray74);
        java.lang.Class[] classArray79 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray78);
        java.lang.String[] strArray80 = org.mockito.cglib.core.ReflectUtils.getNames(classArray79);
        java.lang.reflect.Constructor constructor81 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass71, classArray79);
        org.mockito.cglib.core.MethodInfo methodInfo82 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor81);
        java.lang.Object obj83 = new java.lang.Object();
        java.lang.Class<?> wildcardClass84 = obj83.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray85 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray88 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray85, false, true);
        java.lang.Class[] classArray89 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray88);
        java.lang.Object[] objArray90 = null;
        java.lang.Object obj91 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass84, classArray89, objArray90);
        java.lang.Object obj92 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor81, (java.lang.Object[]) classArray89);
        java.lang.Object obj93 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) classArray89);
        org.mockito.cglib.core.Signature signature94 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor21);
        java.lang.Class<?> wildcardClass95 = constructor21.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(propertyDescriptorArray23);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(propertyDescriptorArray31);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(methodArray38);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(methodArray42);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(methodArray44);
        org.junit.Assert.assertNotNull(methodArray45);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(methodArray47);
        org.junit.Assert.assertNotNull(methodArray48);
        org.junit.Assert.assertNotNull(methodArray49);
        org.junit.Assert.assertNotNull(methodArray50);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(methodArray52);
        org.junit.Assert.assertNotNull(methodArray53);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(methodArray55);
        org.junit.Assert.assertNotNull(methodArray56);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(methodArray58);
        org.junit.Assert.assertNotNull(methodArray59);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(methodArray61);
        org.junit.Assert.assertNotNull(methodArray62);
        org.junit.Assert.assertNotNull(methodArray63);
        org.junit.Assert.assertNotNull(methodArray64);
        org.junit.Assert.assertNotNull(methodArray65);
        org.junit.Assert.assertNotNull(methodArray66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(methodInfo68);
        org.junit.Assert.assertNotNull(typeArray69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(classInfo72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(propertyDescriptorArray74);
        org.junit.Assert.assertNotNull(methodArray77);
        org.junit.Assert.assertNotNull(classArray78);
        org.junit.Assert.assertNotNull(classArray79);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertNotNull(constructor81);
        org.junit.Assert.assertNotNull(methodInfo82);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(propertyDescriptorArray85);
        org.junit.Assert.assertNotNull(methodArray88);
        org.junit.Assert.assertNotNull(classArray89);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(signature94);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test1109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1109");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.beans.PropertyDescriptor[] propertyDescriptorArray23 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray23, false, true);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray23, false, false);
        java.lang.Object obj30 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) methodArray29);
        java.beans.PropertyDescriptor[] propertyDescriptorArray31 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray31, true, true);
        java.lang.Object obj35 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) propertyDescriptorArray31);
        java.lang.String[] strArray36 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray37 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray38 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray37);
        java.lang.String[] strArray39 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray40 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray39, methodArray40);
        java.lang.reflect.Method[] methodArray42 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray41);
        java.lang.String[] strArray43 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray44 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray45 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray43, methodArray44);
        java.lang.String[] strArray46 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray47 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray48 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray46, methodArray47);
        java.lang.reflect.Method[] methodArray49 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray43, methodArray48);
        java.lang.reflect.Method[] methodArray50 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray49);
        java.lang.String[] strArray51 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray52 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray53 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray51, methodArray52);
        java.lang.String[] strArray54 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray55 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray56 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray54, methodArray55);
        java.lang.String[] strArray57 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray58 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray59 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray57, methodArray58);
        java.lang.String[] strArray60 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray61 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray62 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray60, methodArray61);
        java.lang.reflect.Method[] methodArray63 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray57, methodArray62);
        java.lang.reflect.Method[] methodArray64 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray54, methodArray63);
        java.lang.reflect.Method[] methodArray65 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray51, methodArray64);
        java.lang.reflect.Method[] methodArray66 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray64);
        java.lang.Object obj67 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) methodArray66);
        org.mockito.cglib.core.MethodInfo methodInfo68 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        org.mockito.cglib.core.MethodInfo methodInfo70 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21, (int) (short) 100);
        org.mockito.cglib.core.Signature signature71 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor21);
        org.mockito.cglib.core.MethodInfo methodInfo73 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21, (int) (byte) 0);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(propertyDescriptorArray23);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(propertyDescriptorArray31);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(methodArray38);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(methodArray42);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(methodArray44);
        org.junit.Assert.assertNotNull(methodArray45);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(methodArray47);
        org.junit.Assert.assertNotNull(methodArray48);
        org.junit.Assert.assertNotNull(methodArray49);
        org.junit.Assert.assertNotNull(methodArray50);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(methodArray52);
        org.junit.Assert.assertNotNull(methodArray53);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(methodArray55);
        org.junit.Assert.assertNotNull(methodArray56);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(methodArray58);
        org.junit.Assert.assertNotNull(methodArray59);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(methodArray61);
        org.junit.Assert.assertNotNull(methodArray62);
        org.junit.Assert.assertNotNull(methodArray63);
        org.junit.Assert.assertNotNull(methodArray64);
        org.junit.Assert.assertNotNull(methodArray65);
        org.junit.Assert.assertNotNull(methodArray66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(methodInfo68);
        org.junit.Assert.assertNotNull(methodInfo70);
        org.junit.Assert.assertNotNull(signature71);
        org.junit.Assert.assertNotNull(methodInfo73);
    }

    @Test
    public void test1110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1110");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.lang.Object obj3 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        org.mockito.cglib.core.ClassInfo classInfo6 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass5);
        java.util.List list7 = null;
        java.util.List list8 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass5, list7);
        java.lang.String[] strArray9 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray10 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray9, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.reflect.Method[] methodArray15 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray9, methodArray14);
        java.lang.String[] strArray16 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray17 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray16, methodArray17);
        java.lang.String[] strArray19 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray20 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray21 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray19, methodArray20);
        java.lang.reflect.Method[] methodArray22 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray16, methodArray21);
        java.lang.reflect.Method[] methodArray23 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray9, methodArray22);
        java.lang.Class[] classArray24 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray22);
        java.lang.reflect.Constructor constructor25 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass5, classArray24);
        java.lang.Class[] classArray26 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray24);
        java.lang.reflect.Constructor constructor27 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray26);
        org.mockito.cglib.core.MethodInfo methodInfo29 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor27, 0);
        org.mockito.cglib.core.MethodInfo methodInfo30 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor27);
        org.mockito.cglib.core.Signature signature31 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor27);
        org.mockito.cglib.core.MethodInfo methodInfo33 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor27, 0);
        org.mockito.cglib.core.Signature signature34 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor27);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(classInfo6);
        org.junit.Assert.assertNull(list8);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(methodArray15);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(methodArray20);
        org.junit.Assert.assertNotNull(methodArray21);
        org.junit.Assert.assertNotNull(methodArray22);
        org.junit.Assert.assertNotNull(methodArray23);
        org.junit.Assert.assertNotNull(classArray24);
        org.junit.Assert.assertNotNull(constructor25);
        org.junit.Assert.assertNotNull(classArray26);
        org.junit.Assert.assertNotNull(constructor27);
        org.junit.Assert.assertNotNull(methodInfo29);
        org.junit.Assert.assertNotNull(methodInfo30);
        org.junit.Assert.assertNotNull(signature31);
        org.junit.Assert.assertNotNull(methodInfo33);
        org.junit.Assert.assertNotNull(signature34);
    }

    @Test
    public void test1111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1111");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.lang.String[] strArray23 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray24 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray25 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray24);
        java.lang.String[] strArray26 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray27 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray26, methodArray27);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray28);
        java.lang.String[] strArray30 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray31 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray32 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray31);
        java.lang.String[] strArray33 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray34 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray33, methodArray34);
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray35);
        java.lang.reflect.Method[] methodArray37 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray36);
        java.lang.String[] strArray38 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray39 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray40 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray38, methodArray39);
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray40);
        java.lang.Object obj42 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) strArray23);
        org.mockito.asm.Type[] typeArray43 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        java.lang.Class<?> wildcardClass44 = typeArray43.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray45 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass44);
        java.lang.reflect.Method[] methodArray48 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray45, true, true);
        java.lang.reflect.Method[] methodArray51 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray45, true, true);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(propertyDescriptorArray45);
        org.junit.Assert.assertNotNull(methodArray48);
        org.junit.Assert.assertNotNull(methodArray51);
    }

    @Test
    public void test1112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1112");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.lang.String[] strArray23 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray24 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray25 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray24);
        java.lang.String[] strArray26 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray27 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray26, methodArray27);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray28);
        java.lang.String[] strArray30 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray31 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray32 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray31);
        java.lang.String[] strArray33 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray34 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray33, methodArray34);
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray35);
        java.lang.reflect.Method[] methodArray37 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray36);
        java.lang.String[] strArray38 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray39 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray40 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray38, methodArray39);
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray40);
        java.lang.Object obj42 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) strArray23);
        org.mockito.asm.Type[] typeArray43 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        java.lang.Class<?> wildcardClass44 = typeArray43.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray45 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass44);
        java.beans.PropertyDescriptor[] propertyDescriptorArray46 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass44);
        java.lang.Class[] classArray47 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray46);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(propertyDescriptorArray45);
        org.junit.Assert.assertNotNull(propertyDescriptorArray46);
        org.junit.Assert.assertNotNull(classArray47);
    }

    @Test
    public void test1113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1113");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.Object obj5 = new java.lang.Object();
        java.lang.Class<?> wildcardClass6 = obj5.getClass();
        org.mockito.cglib.core.ClassInfo classInfo7 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass6);
        java.util.List list8 = null;
        java.util.List list9 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass6, list8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.String[] strArray13 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray14 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray15 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray13, methodArray14);
        java.lang.reflect.Method[] methodArray16 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray15);
        java.lang.String[] strArray17 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray18 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray17, methodArray18);
        java.lang.String[] strArray20 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray21 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray22 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray20, methodArray21);
        java.lang.reflect.Method[] methodArray23 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray17, methodArray22);
        java.lang.reflect.Method[] methodArray24 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray23);
        java.lang.Class[] classArray25 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray23);
        java.lang.reflect.Constructor constructor26 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass6, classArray25);
        java.lang.Class[] classArray27 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray25);
        java.lang.String[] strArray28 = org.mockito.cglib.core.ReflectUtils.getNames(classArray27);
        java.lang.reflect.Constructor constructor29 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray27);
        org.mockito.cglib.core.MethodInfo methodInfo31 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor29, (int) (byte) 0);
        org.mockito.asm.Type[] typeArray32 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor29);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(classInfo7);
        org.junit.Assert.assertNull(list9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(methodArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(methodArray21);
        org.junit.Assert.assertNotNull(methodArray22);
        org.junit.Assert.assertNotNull(methodArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(classArray25);
        org.junit.Assert.assertNotNull(constructor26);
        org.junit.Assert.assertNotNull(classArray27);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(constructor29);
        org.junit.Assert.assertNotNull(methodInfo31);
        org.junit.Assert.assertNotNull(typeArray32);
    }

    @Test
    public void test1114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1114");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray1 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray2 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray1);
        java.lang.String[] strArray3 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray4 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray3, methodArray4);
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray5);
        java.lang.String[] strArray7 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray8 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray9 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.reflect.Method[] methodArray13 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray12);
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray13);
        java.lang.Class<?> wildcardClass15 = methodArray13.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray16 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass15);
        java.lang.Class<?> wildcardClass17 = propertyDescriptorArray16.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray18 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass17);
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(methodArray1);
        org.junit.Assert.assertNotNull(methodArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(methodArray4);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(methodArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(propertyDescriptorArray16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(propertyDescriptorArray18);
    }

    @Test
    public void test1115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1115");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.lang.String[] strArray23 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray24 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray25 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray24);
        java.lang.String[] strArray26 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray27 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray26, methodArray27);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray28);
        java.lang.String[] strArray30 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray31 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray32 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray31);
        java.lang.String[] strArray33 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray34 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray33, methodArray34);
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray35);
        java.lang.reflect.Method[] methodArray37 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray36);
        java.lang.String[] strArray38 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray39 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray40 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray38, methodArray39);
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray40);
        java.lang.Object obj42 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) strArray23);
        org.mockito.asm.Type[] typeArray43 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        java.lang.Class<?> wildcardClass44 = typeArray43.getClass();
        org.mockito.cglib.core.ClassInfo classInfo45 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass44);
        java.beans.PropertyDescriptor[] propertyDescriptorArray46 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass44);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj47 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass44);
            org.junit.Assert.fail("Expected exception of type org.mockito.cglib.core.CodeGenerationException; message: java.lang.NoSuchMethodException-->[Lorg.mockito.asm.Type;.<init>()");
        } catch (org.mockito.cglib.core.CodeGenerationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(classInfo45);
        org.junit.Assert.assertNotNull(propertyDescriptorArray46);
    }

    @Test
    public void test1116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1116");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray2 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray2, false, true);
        java.lang.Class[] classArray6 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray5);
        java.lang.Object[] objArray7 = null;
        java.lang.Object obj8 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray6, objArray7);
        java.lang.Class[] classArray9 = null;
        java.lang.reflect.Constructor constructor10 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray9);
        java.beans.PropertyDescriptor[] propertyDescriptorArray11 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray11, false, true);
        java.lang.Class[] classArray15 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray11);
        java.lang.Class[] classArray16 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray15);
        java.lang.reflect.Constructor constructor17 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray16);
        org.mockito.cglib.core.MethodInfo methodInfo19 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor17, 0);
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Object obj22 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass21);
        java.lang.Object obj23 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass21);
        java.lang.Object obj24 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass21);
        org.mockito.cglib.core.ClassInfo classInfo25 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass21);
        java.lang.String[] strArray26 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray27 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray26, methodArray27);
        java.lang.String[] strArray29 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray30 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray31 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray29, methodArray30);
        java.lang.String[] strArray32 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray33 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray32, methodArray33);
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray29, methodArray34);
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray26, methodArray35);
        java.lang.Class[] classArray37 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) strArray26);
        java.beans.PropertyDescriptor[] propertyDescriptorArray38 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray38, false, true);
        java.lang.reflect.Method[] methodArray44 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray38, false, false);
        java.lang.reflect.Method[] methodArray47 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray38, true, false);
        java.lang.Object obj48 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass21, classArray37, (java.lang.Object[]) propertyDescriptorArray38);
        java.lang.Object obj49 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass21);
        org.mockito.cglib.core.ClassInfo classInfo50 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass21);
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.Object obj53 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass52);
        java.beans.PropertyDescriptor[] propertyDescriptorArray54 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray57 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray54, false, true);
        java.lang.Class[] classArray58 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray54);
        java.lang.Class[] classArray59 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray58);
        java.lang.String[] strArray60 = org.mockito.cglib.core.ReflectUtils.getNames(classArray59);
        java.lang.String[] strArray61 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray62 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray63 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray61, methodArray62);
        java.lang.Object obj64 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass52, classArray59, (java.lang.Object[]) strArray61);
        java.lang.Object obj65 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass52);
        java.beans.PropertyDescriptor[] propertyDescriptorArray66 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray69 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray66, false, true);
        java.lang.Class[] classArray70 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray66);
        java.lang.Class[] classArray71 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray70);
        java.lang.String[] strArray72 = org.mockito.cglib.core.ReflectUtils.getNames(classArray70);
        java.lang.reflect.Constructor constructor73 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass52, classArray70);
        java.lang.reflect.Constructor constructor74 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass21, classArray70);
        java.lang.String[] strArray75 = org.mockito.cglib.core.ReflectUtils.getNames(classArray70);
        java.lang.Object obj76 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor17, (java.lang.Object[]) classArray70);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(propertyDescriptorArray2);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(classArray6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(constructor10);
        org.junit.Assert.assertNotNull(propertyDescriptorArray11);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(classArray15);
        org.junit.Assert.assertNotNull(classArray16);
        org.junit.Assert.assertNotNull(constructor17);
        org.junit.Assert.assertNotNull(methodInfo19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(classInfo25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(methodArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(methodArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(classArray37);
        org.junit.Assert.assertNotNull(propertyDescriptorArray38);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(methodArray44);
        org.junit.Assert.assertNotNull(methodArray47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(classInfo50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(propertyDescriptorArray54);
        org.junit.Assert.assertNotNull(methodArray57);
        org.junit.Assert.assertNotNull(classArray58);
        org.junit.Assert.assertNotNull(classArray59);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(methodArray62);
        org.junit.Assert.assertNotNull(methodArray63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(propertyDescriptorArray66);
        org.junit.Assert.assertNotNull(methodArray69);
        org.junit.Assert.assertNotNull(classArray70);
        org.junit.Assert.assertNotNull(classArray71);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(constructor73);
        org.junit.Assert.assertNotNull(constructor74);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(obj76);
    }

    @Test
    public void test1117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1117");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray1 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray2 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray1);
        java.lang.String[] strArray3 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray4 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray3, methodArray4);
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray5);
        java.lang.String[] strArray7 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray8 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray9 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.reflect.Method[] methodArray13 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray12);
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray13);
        java.lang.Class[] classArray15 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray13);
        java.lang.Class<?> wildcardClass16 = classArray15.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray17 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass16);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method18 = org.mockito.cglib.core.ReflectUtils.findInterfaceMethod((java.lang.Class) wildcardClass16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: class [Ljava.lang.Class; is not an interface");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(methodArray1);
        org.junit.Assert.assertNotNull(methodArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(methodArray4);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(methodArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(classArray15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(propertyDescriptorArray17);
    }

    @Test
    public void test1118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1118");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        java.util.List list2 = null;
        java.util.List list3 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list2);
        // The following exception was thrown during execution in test generation
        try {
            java.beans.PropertyDescriptor[] propertyDescriptorArray4 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass1);
            org.junit.Assert.fail("Expected exception of type org.mockito.cglib.core.CodeGenerationException; message: java.beans.IntrospectionException-->java.lang.Object not superclass of java.lang.Object");
        } catch (org.mockito.cglib.core.CodeGenerationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNull(list3);
    }

    @Test
    public void test1119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1119");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.lang.Object obj3 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.beans.PropertyDescriptor[] propertyDescriptorArray4 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray4, false, true);
        java.lang.Class[] classArray8 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray4);
        java.lang.Class[] classArray9 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray8);
        java.lang.String[] strArray10 = org.mockito.cglib.core.ReflectUtils.getNames(classArray9);
        java.lang.reflect.Constructor constructor11 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray9);
        java.lang.Object obj12 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        org.mockito.cglib.core.ClassInfo classInfo15 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass14);
        java.util.List list16 = null;
        java.util.List list17 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass14, list16);
        java.beans.PropertyDescriptor[] propertyDescriptorArray18 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray21 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray18, false, true);
        java.lang.Class[] classArray22 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray18);
        int int23 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray22);
        java.lang.String[] strArray24 = org.mockito.cglib.core.ReflectUtils.getNames(classArray22);
        java.lang.String[] strArray25 = org.mockito.cglib.core.ReflectUtils.getNames(classArray22);
        java.lang.String[] strArray26 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray27 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray26, methodArray27);
        java.lang.String[] strArray29 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray30 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray31 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray29, methodArray30);
        java.lang.reflect.Method[] methodArray32 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray26, methodArray31);
        java.lang.String[] strArray33 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray34 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray33, methodArray34);
        java.lang.String[] strArray36 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray37 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray38 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray37);
        java.lang.reflect.Method[] methodArray39 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray33, methodArray38);
        java.lang.reflect.Method[] methodArray40 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray26, methodArray39);
        java.lang.Object obj41 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass14, classArray22, (java.lang.Object[]) methodArray40);
        java.lang.Class[] classArray42 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray22);
        java.lang.String[] strArray43 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray44 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray45 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray43, methodArray44);
        java.lang.String[] strArray46 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray47 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray48 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray46, methodArray47);
        java.lang.reflect.Method[] methodArray49 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray43, methodArray48);
        java.lang.String[] strArray50 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray51 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray52 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray50, methodArray51);
        java.lang.String[] strArray53 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray54 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray55 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray53, methodArray54);
        java.lang.reflect.Method[] methodArray56 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray50, methodArray55);
        java.lang.reflect.Method[] methodArray57 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray43, methodArray56);
        java.lang.String[] strArray58 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray59 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray60 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray58, methodArray59);
        java.lang.String[] strArray61 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray62 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray63 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray61, methodArray62);
        java.lang.String[] strArray64 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray65 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray66 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray64, methodArray65);
        java.lang.String[] strArray67 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray68 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray69 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray67, methodArray68);
        java.lang.reflect.Method[] methodArray70 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray64, methodArray69);
        java.lang.reflect.Method[] methodArray71 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray61, methodArray70);
        java.lang.reflect.Method[] methodArray72 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray58, methodArray71);
        java.lang.reflect.Method[] methodArray73 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray43, methodArray71);
        java.lang.Object obj74 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray42, (java.lang.Object[]) strArray43);
        java.beans.PropertyDescriptor[] propertyDescriptorArray75 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray78 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray75, false, true);
        java.lang.Class[] classArray79 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray75);
        java.lang.Class[] classArray80 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray79);
        java.lang.String[] strArray81 = org.mockito.cglib.core.ReflectUtils.getNames(classArray79);
        java.lang.Class<?> wildcardClass82 = classArray79.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray83 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass82);
        java.beans.PropertyDescriptor[] propertyDescriptorArray84 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass82);
        java.beans.PropertyDescriptor[] propertyDescriptorArray85 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass82);
        java.beans.PropertyDescriptor[] propertyDescriptorArray86 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass82);
        java.beans.PropertyDescriptor[] propertyDescriptorArray87 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass82);
        java.lang.reflect.Method[] methodArray90 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray87, true, true);
        java.lang.reflect.Method[] methodArray91 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray43, methodArray90);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(propertyDescriptorArray4);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(classArray8);
        org.junit.Assert.assertNotNull(classArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(constructor11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(classInfo15);
        org.junit.Assert.assertNull(list17);
        org.junit.Assert.assertNotNull(propertyDescriptorArray18);
        org.junit.Assert.assertNotNull(methodArray21);
        org.junit.Assert.assertNotNull(classArray22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(methodArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(methodArray38);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(classArray42);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(methodArray44);
        org.junit.Assert.assertNotNull(methodArray45);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(methodArray47);
        org.junit.Assert.assertNotNull(methodArray48);
        org.junit.Assert.assertNotNull(methodArray49);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(methodArray51);
        org.junit.Assert.assertNotNull(methodArray52);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(methodArray54);
        org.junit.Assert.assertNotNull(methodArray55);
        org.junit.Assert.assertNotNull(methodArray56);
        org.junit.Assert.assertNotNull(methodArray57);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(methodArray59);
        org.junit.Assert.assertNotNull(methodArray60);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(methodArray62);
        org.junit.Assert.assertNotNull(methodArray63);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(methodArray65);
        org.junit.Assert.assertNotNull(methodArray66);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(methodArray68);
        org.junit.Assert.assertNotNull(methodArray69);
        org.junit.Assert.assertNotNull(methodArray70);
        org.junit.Assert.assertNotNull(methodArray71);
        org.junit.Assert.assertNotNull(methodArray72);
        org.junit.Assert.assertNotNull(methodArray73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(propertyDescriptorArray75);
        org.junit.Assert.assertNotNull(methodArray78);
        org.junit.Assert.assertNotNull(classArray79);
        org.junit.Assert.assertNotNull(classArray80);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(propertyDescriptorArray83);
        org.junit.Assert.assertNotNull(propertyDescriptorArray84);
        org.junit.Assert.assertNotNull(propertyDescriptorArray85);
        org.junit.Assert.assertNotNull(propertyDescriptorArray86);
        org.junit.Assert.assertNotNull(propertyDescriptorArray87);
        org.junit.Assert.assertNotNull(methodArray90);
        org.junit.Assert.assertNotNull(methodArray91);
    }

    @Test
    public void test1120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1120");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.Object obj5 = new java.lang.Object();
        java.lang.Class<?> wildcardClass6 = obj5.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray7 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray7, false, true);
        java.lang.Class[] classArray11 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray10);
        java.lang.Object[] objArray12 = null;
        java.lang.Object obj13 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass6, classArray11, objArray12);
        java.lang.reflect.Constructor constructor14 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray11);
        java.lang.Class[] classArray15 = null;
        java.lang.reflect.Constructor constructor16 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray15);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method17 = org.mockito.cglib.core.ReflectUtils.findNewInstance((java.lang.Class) wildcardClass1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: class java.lang.Object is not an interface");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(propertyDescriptorArray7);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(constructor14);
        org.junit.Assert.assertNotNull(constructor16);
    }

    @Test
    public void test1121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1121");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        org.mockito.cglib.core.ClassInfo classInfo4 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass3);
        java.lang.Object obj5 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass3);
        java.beans.PropertyDescriptor[] propertyDescriptorArray6 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray9 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray6, false, true);
        java.lang.Class[] classArray10 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray6);
        java.lang.Class[] classArray11 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray10);
        java.lang.String[] strArray12 = org.mockito.cglib.core.ReflectUtils.getNames(classArray11);
        java.lang.reflect.Constructor constructor13 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass3, classArray11);
        java.lang.Object obj14 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass3);
        org.mockito.cglib.core.ClassInfo classInfo15 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass3);
        java.util.List list16 = null;
        java.util.List list17 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass3, list16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Object obj20 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass19);
        java.lang.Object obj21 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass19);
        java.lang.String[] strArray22 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray23 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray24 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray22, methodArray23);
        java.lang.Class[] classArray25 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) strArray22);
        java.lang.String[] strArray26 = org.mockito.cglib.core.ReflectUtils.getNames(classArray25);
        java.beans.PropertyDescriptor[] propertyDescriptorArray27 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray30 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray27, false, true);
        java.lang.Class[] classArray31 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray27);
        int int32 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray31);
        int int33 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray31);
        java.lang.Object obj34 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass19, classArray25, (java.lang.Object[]) classArray31);
        java.lang.reflect.Constructor constructor35 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass3, classArray31);
        java.lang.reflect.Constructor constructor36 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray31);
        org.mockito.asm.Type[] typeArray37 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor36);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(classInfo4);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(propertyDescriptorArray6);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(constructor13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(classInfo15);
        org.junit.Assert.assertNull(list17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(methodArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(classArray25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(propertyDescriptorArray27);
        org.junit.Assert.assertNotNull(methodArray30);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(constructor35);
        org.junit.Assert.assertNotNull(constructor36);
        org.junit.Assert.assertNotNull(typeArray37);
    }

    @Test
    public void test1122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1122");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        java.lang.Object obj2 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.beans.PropertyDescriptor[] propertyDescriptorArray3 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray3, false, true);
        java.lang.Class[] classArray7 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray3);
        java.lang.Class[] classArray8 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray7);
        java.lang.String[] strArray9 = org.mockito.cglib.core.ReflectUtils.getNames(classArray8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.Object obj13 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray8, (java.lang.Object[]) strArray10);
        java.beans.PropertyDescriptor[] propertyDescriptorArray14 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray14, false, true);
        java.lang.Class[] classArray18 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray14);
        int int19 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray18);
        int int20 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray18);
        java.beans.PropertyDescriptor[] propertyDescriptorArray22 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray25 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray22, true, true);
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray22, false, true);
        java.lang.Class[] classArray29 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray22);
        java.lang.String[] strArray30 = org.mockito.cglib.core.ReflectUtils.getNames(classArray29);
        java.lang.reflect.Constructor constructor31 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray29);
        java.lang.String[] strArray32 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray33 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray32, methodArray33);
        java.lang.String[] strArray35 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray36 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray37 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray35, methodArray36);
        java.lang.reflect.Method[] methodArray38 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray32, methodArray37);
        java.lang.Object obj39 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor31, (java.lang.Object[]) methodArray37);
        java.lang.Class<?> wildcardClass40 = constructor31.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(propertyDescriptorArray3);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(classArray7);
        org.junit.Assert.assertNotNull(classArray8);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(propertyDescriptorArray14);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(propertyDescriptorArray22);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(classArray29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(constructor31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(methodArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(methodArray38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test1123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1123");
        byte[] byteArray5 = new byte[] { (byte) -1, (byte) 100, (byte) 0, (byte) -1 };
        java.lang.ClassLoader classLoader6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class7 = org.mockito.cglib.core.ReflectUtils.defineClass("", byteArray5, classLoader6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100, 0, -1]");
    }

    @Test
    public void test1124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1124");
        java.beans.PropertyDescriptor[] propertyDescriptorArray0 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray3 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray0, false, true);
        java.lang.Class[] classArray4 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray0);
        java.lang.Class[] classArray5 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray4);
        java.lang.Class<?> wildcardClass6 = classArray5.getClass();
        org.mockito.cglib.core.ClassInfo classInfo7 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass6);
        java.beans.PropertyDescriptor[] propertyDescriptorArray8 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass6);
        java.beans.PropertyDescriptor[] propertyDescriptorArray9 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass6);
        java.beans.PropertyDescriptor[] propertyDescriptorArray10 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass6);
        java.lang.reflect.Method[] methodArray13 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray10, false, false);
        org.junit.Assert.assertNotNull(propertyDescriptorArray0);
        org.junit.Assert.assertNotNull(methodArray3);
        org.junit.Assert.assertNotNull(classArray4);
        org.junit.Assert.assertNotNull(classArray5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(classInfo7);
        org.junit.Assert.assertNotNull(propertyDescriptorArray8);
        org.junit.Assert.assertNotNull(propertyDescriptorArray9);
        org.junit.Assert.assertNotNull(propertyDescriptorArray10);
        org.junit.Assert.assertNotNull(methodArray13);
    }

    @Test
    public void test1125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1125");
        java.beans.PropertyDescriptor[] propertyDescriptorArray0 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray3 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray0, false, true);
        java.lang.Class[] classArray4 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray0);
        java.lang.Class[] classArray5 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray4);
        java.lang.String[] strArray6 = org.mockito.cglib.core.ReflectUtils.getNames(classArray4);
        java.lang.Class<?> wildcardClass7 = classArray4.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray8 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass7);
        java.beans.PropertyDescriptor[] propertyDescriptorArray9 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass7);
        java.beans.PropertyDescriptor[] propertyDescriptorArray10 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass7);
        java.beans.PropertyDescriptor[] propertyDescriptorArray11 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass7);
        java.beans.PropertyDescriptor[] propertyDescriptorArray12 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass7);
        java.beans.PropertyDescriptor[] propertyDescriptorArray13 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray16 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray13, false, true);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray13, false, false);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray13);
        int int21 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray20);
        int int22 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray20);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Constructor constructor23 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass7, classArray20);
            org.junit.Assert.fail("Expected exception of type org.mockito.cglib.core.CodeGenerationException; message: java.lang.NoSuchMethodException-->[Ljava.lang.Class;.<init>()");
        } catch (org.mockito.cglib.core.CodeGenerationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(propertyDescriptorArray0);
        org.junit.Assert.assertNotNull(methodArray3);
        org.junit.Assert.assertNotNull(classArray4);
        org.junit.Assert.assertNotNull(classArray5);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(propertyDescriptorArray8);
        org.junit.Assert.assertNotNull(propertyDescriptorArray9);
        org.junit.Assert.assertNotNull(propertyDescriptorArray10);
        org.junit.Assert.assertNotNull(propertyDescriptorArray11);
        org.junit.Assert.assertNotNull(propertyDescriptorArray12);
        org.junit.Assert.assertNotNull(propertyDescriptorArray13);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
    }

    @Test
    public void test1126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1126");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.beans.PropertyDescriptor[] propertyDescriptorArray23 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray23, false, true);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray23, false, false);
        java.lang.Object obj30 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) methodArray29);
        java.beans.PropertyDescriptor[] propertyDescriptorArray31 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray31, true, true);
        java.lang.Object obj35 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) propertyDescriptorArray31);
        org.mockito.asm.Type[] typeArray36 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        java.lang.String[] strArray37 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray38 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray39 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray37, methodArray38);
        java.lang.String[] strArray40 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray41 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray42 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray40, methodArray41);
        java.lang.reflect.Method[] methodArray43 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray37, methodArray42);
        java.lang.String[] strArray44 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray45 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray46 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray44, methodArray45);
        java.lang.String[] strArray47 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray48 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray49 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray47, methodArray48);
        java.lang.reflect.Method[] methodArray50 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray44, methodArray49);
        java.lang.reflect.Method[] methodArray51 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray37, methodArray50);
        java.lang.String[] strArray52 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray53 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray54 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray52, methodArray53);
        java.lang.String[] strArray55 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray56 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray57 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray55, methodArray56);
        java.lang.String[] strArray58 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray59 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray60 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray58, methodArray59);
        java.lang.String[] strArray61 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray62 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray63 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray61, methodArray62);
        java.lang.reflect.Method[] methodArray64 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray58, methodArray63);
        java.lang.reflect.Method[] methodArray65 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray55, methodArray64);
        java.lang.reflect.Method[] methodArray66 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray52, methodArray65);
        java.lang.reflect.Method[] methodArray67 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray37, methodArray65);
        java.lang.Object obj68 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) methodArray65);
        org.mockito.asm.Type[] typeArray69 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        org.mockito.cglib.core.MethodInfo methodInfo71 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21, (int) ' ');
        org.mockito.cglib.core.Signature signature72 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor21);
        org.mockito.cglib.core.MethodInfo methodInfo73 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        org.mockito.asm.Type[] typeArray74 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        java.lang.Class<?> wildcardClass75 = typeArray74.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(propertyDescriptorArray23);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(propertyDescriptorArray31);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(methodArray38);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(methodArray42);
        org.junit.Assert.assertNotNull(methodArray43);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(methodArray45);
        org.junit.Assert.assertNotNull(methodArray46);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(methodArray48);
        org.junit.Assert.assertNotNull(methodArray49);
        org.junit.Assert.assertNotNull(methodArray50);
        org.junit.Assert.assertNotNull(methodArray51);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(methodArray53);
        org.junit.Assert.assertNotNull(methodArray54);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(methodArray56);
        org.junit.Assert.assertNotNull(methodArray57);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(methodArray59);
        org.junit.Assert.assertNotNull(methodArray60);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(methodArray62);
        org.junit.Assert.assertNotNull(methodArray63);
        org.junit.Assert.assertNotNull(methodArray64);
        org.junit.Assert.assertNotNull(methodArray65);
        org.junit.Assert.assertNotNull(methodArray66);
        org.junit.Assert.assertNotNull(methodArray67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(typeArray69);
        org.junit.Assert.assertNotNull(methodInfo71);
        org.junit.Assert.assertNotNull(signature72);
        org.junit.Assert.assertNotNull(methodInfo73);
        org.junit.Assert.assertNotNull(typeArray74);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test1127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1127");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.lang.String[] strArray23 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray24 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray25 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray24);
        java.lang.String[] strArray26 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray27 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray26, methodArray27);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray28);
        java.lang.String[] strArray30 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray31 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray32 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray31);
        java.lang.String[] strArray33 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray34 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray33, methodArray34);
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray35);
        java.lang.reflect.Method[] methodArray37 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray36);
        java.lang.String[] strArray38 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray39 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray40 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray38, methodArray39);
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray40);
        java.lang.Object obj42 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) strArray23);
        org.mockito.asm.Type[] typeArray43 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        java.lang.Object[] objArray44 = null;
        java.lang.Object obj45 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, objArray44);
        org.mockito.cglib.core.MethodInfo methodInfo47 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21, (int) '4');
        org.mockito.cglib.core.Signature signature48 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor21);
        org.mockito.cglib.core.Signature signature49 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor21);
        org.mockito.asm.Type[] typeArray50 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        java.lang.Class<?> wildcardClass51 = typeArray50.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray52 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass51);
        java.beans.PropertyDescriptor[] propertyDescriptorArray53 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(methodInfo47);
        org.junit.Assert.assertNotNull(signature48);
        org.junit.Assert.assertNotNull(signature49);
        org.junit.Assert.assertNotNull(typeArray50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(propertyDescriptorArray52);
        org.junit.Assert.assertNotNull(propertyDescriptorArray53);
    }

    @Test
    public void test1128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1128");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.lang.String[] strArray23 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray24 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray25 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray24);
        java.lang.String[] strArray26 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray27 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray26, methodArray27);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray28);
        java.lang.String[] strArray30 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray31 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray32 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray31);
        java.lang.String[] strArray33 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray34 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray33, methodArray34);
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray35);
        java.lang.reflect.Method[] methodArray37 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray36);
        java.lang.String[] strArray38 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray39 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray40 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray38, methodArray39);
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray40);
        java.lang.Object obj42 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) strArray23);
        org.mockito.asm.Type[] typeArray43 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        java.lang.Object[] objArray44 = null;
        java.lang.Object obj45 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, objArray44);
        org.mockito.cglib.core.Signature signature46 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor21);
        java.beans.PropertyDescriptor[] propertyDescriptorArray47 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray50 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray47, false, true);
        java.lang.Class[] classArray51 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray47);
        java.lang.reflect.Method[] methodArray54 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray47, false, true);
        java.lang.Object obj55 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) methodArray54);
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Object obj57 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass56);
        // The following exception was thrown during execution in test generation
        try {
            java.beans.PropertyDescriptor[] propertyDescriptorArray58 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass56);
            org.junit.Assert.fail("Expected exception of type org.mockito.cglib.core.CodeGenerationException; message: java.beans.IntrospectionException-->java.lang.Object not superclass of java.lang.Object");
        } catch (org.mockito.cglib.core.CodeGenerationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(signature46);
        org.junit.Assert.assertNotNull(propertyDescriptorArray47);
        org.junit.Assert.assertNotNull(methodArray50);
        org.junit.Assert.assertNotNull(classArray51);
        org.junit.Assert.assertNotNull(methodArray54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(obj57);
    }

    @Test
    public void test1129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1129");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        java.util.List list2 = null;
        java.util.List list3 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list2);
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        org.mockito.cglib.core.ClassInfo classInfo6 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass5);
        java.beans.PropertyDescriptor[] propertyDescriptorArray8 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray8, false, true);
        java.lang.Class[] classArray12 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray8);
        java.lang.Class[] classArray13 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray12);
        java.lang.String[] strArray14 = org.mockito.cglib.core.ReflectUtils.getNames(classArray13);
        java.lang.reflect.Constructor constructor15 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass5, classArray13);
        org.mockito.cglib.core.MethodInfo methodInfo16 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor15);
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray19 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray22 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray19, false, true);
        java.lang.Class[] classArray23 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray22);
        java.lang.Object[] objArray24 = null;
        java.lang.Object obj25 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass18, classArray23, objArray24);
        java.lang.Object obj26 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor15, (java.lang.Object[]) classArray23);
        java.lang.String[] strArray27 = org.mockito.cglib.core.ReflectUtils.getNames(classArray23);
        java.lang.reflect.Constructor constructor28 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray23);
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray31 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray31, false, true);
        java.lang.Class[] classArray35 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray34);
        java.lang.Object[] objArray36 = null;
        java.lang.Object obj37 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass30, classArray35, objArray36);
        int int38 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray35);
        java.lang.reflect.Constructor constructor39 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray35);
        org.mockito.cglib.core.Signature signature40 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor39);
        java.lang.Class<?> wildcardClass41 = signature40.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray42 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNull(list3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(classInfo6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(propertyDescriptorArray8);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(classArray13);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(constructor15);
        org.junit.Assert.assertNotNull(methodInfo16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(propertyDescriptorArray19);
        org.junit.Assert.assertNotNull(methodArray22);
        org.junit.Assert.assertNotNull(classArray23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(constructor28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(propertyDescriptorArray31);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(classArray35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(constructor39);
        org.junit.Assert.assertNotNull(signature40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(propertyDescriptorArray42);
    }

    @Test
    public void test1130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1130");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        java.lang.Object obj2 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.beans.PropertyDescriptor[] propertyDescriptorArray3 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray3, false, true);
        java.lang.Class[] classArray7 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray3);
        java.lang.Class[] classArray8 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray7);
        java.lang.String[] strArray9 = org.mockito.cglib.core.ReflectUtils.getNames(classArray8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.Object obj13 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray8, (java.lang.Object[]) strArray10);
        java.beans.PropertyDescriptor[] propertyDescriptorArray14 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray14, false, true);
        java.lang.Class[] classArray18 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray14);
        int int19 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray18);
        int int20 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray18);
        org.mockito.asm.Type[] typeArray22 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(propertyDescriptorArray3);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(classArray7);
        org.junit.Assert.assertNotNull(classArray8);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(propertyDescriptorArray14);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(typeArray22);
    }

    @Test
    public void test1131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1131");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray1 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray2 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray1);
        java.lang.String[] strArray3 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray4 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray3, methodArray4);
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray5);
        java.lang.String[] strArray7 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray8 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray9 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.reflect.Method[] methodArray13 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray12);
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray13);
        java.lang.Class<?> wildcardClass15 = methodArray13.getClass();
        org.mockito.cglib.core.ClassInfo classInfo16 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass15);
        java.beans.PropertyDescriptor[] propertyDescriptorArray17 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass15);
        java.beans.PropertyDescriptor[] propertyDescriptorArray18 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass15);
        java.beans.PropertyDescriptor[] propertyDescriptorArray19 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass15);
        java.beans.PropertyDescriptor[] propertyDescriptorArray20 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass15);
        java.beans.PropertyDescriptor[] propertyDescriptorArray21 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass15);
        org.mockito.cglib.core.ClassInfo classInfo22 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass15);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj23 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass15);
            org.junit.Assert.fail("Expected exception of type org.mockito.cglib.core.CodeGenerationException; message: java.lang.NoSuchMethodException-->[Ljava.lang.reflect.Method;.<init>()");
        } catch (org.mockito.cglib.core.CodeGenerationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(methodArray1);
        org.junit.Assert.assertNotNull(methodArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(methodArray4);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(methodArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(classInfo16);
        org.junit.Assert.assertNotNull(propertyDescriptorArray17);
        org.junit.Assert.assertNotNull(propertyDescriptorArray18);
        org.junit.Assert.assertNotNull(propertyDescriptorArray19);
        org.junit.Assert.assertNotNull(propertyDescriptorArray20);
        org.junit.Assert.assertNotNull(propertyDescriptorArray21);
        org.junit.Assert.assertNotNull(classInfo22);
    }

    @Test
    public void test1132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1132");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray1 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray2 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray1);
        java.lang.String[] strArray3 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray4 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray3, methodArray4);
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray5);
        java.lang.String[] strArray7 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray8 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray9 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.reflect.Method[] methodArray13 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray12);
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray17);
        java.lang.Class<?> wildcardClass19 = methodArray18.getClass();
        org.mockito.cglib.core.ClassInfo classInfo20 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass19);
        java.beans.PropertyDescriptor[] propertyDescriptorArray21 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass19);
        java.beans.PropertyDescriptor[] propertyDescriptorArray22 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass19);
        org.mockito.cglib.core.ClassInfo classInfo23 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass19);
        java.beans.PropertyDescriptor[] propertyDescriptorArray24 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass19);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method25 = org.mockito.cglib.core.ReflectUtils.findInterfaceMethod((java.lang.Class) wildcardClass19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: class [Ljava.lang.reflect.Method; is not an interface");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(methodArray1);
        org.junit.Assert.assertNotNull(methodArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(methodArray4);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(methodArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(classInfo20);
        org.junit.Assert.assertNotNull(propertyDescriptorArray21);
        org.junit.Assert.assertNotNull(propertyDescriptorArray22);
        org.junit.Assert.assertNotNull(classInfo23);
        org.junit.Assert.assertNotNull(propertyDescriptorArray24);
    }

    @Test
    public void test1133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1133");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.Object obj5 = new java.lang.Object();
        java.lang.Class<?> wildcardClass6 = obj5.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray7 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray7, false, true);
        java.lang.Class[] classArray11 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray10);
        java.lang.Object[] objArray12 = null;
        java.lang.Object obj13 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass6, classArray11, objArray12);
        java.lang.reflect.Constructor constructor14 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray11);
        org.mockito.cglib.core.ClassInfo classInfo15 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.beans.PropertyDescriptor[] propertyDescriptorArray16 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray16, false, true);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray19);
        int int21 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray20);
        java.lang.String[] strArray22 = org.mockito.cglib.core.ReflectUtils.getNames(classArray20);
        java.lang.String[] strArray23 = org.mockito.cglib.core.ReflectUtils.getNames(classArray20);
        java.lang.String[] strArray24 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray25 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray24, methodArray25);
        java.lang.Object obj27 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray20, (java.lang.Object[]) methodArray25);
        int int28 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray20);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(propertyDescriptorArray7);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(constructor14);
        org.junit.Assert.assertNotNull(classInfo15);
        org.junit.Assert.assertNotNull(propertyDescriptorArray16);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
    }

    @Test
    public void test1134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1134");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.lang.String[] strArray23 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray24 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray25 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray24);
        java.lang.String[] strArray26 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray27 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray26, methodArray27);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray28);
        java.lang.String[] strArray30 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray31 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray32 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray31);
        java.lang.String[] strArray33 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray34 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray33, methodArray34);
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray35);
        java.lang.reflect.Method[] methodArray37 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray36);
        java.lang.String[] strArray38 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray39 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray40 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray38, methodArray39);
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray40);
        java.lang.Object obj42 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) strArray23);
        org.mockito.asm.Type[] typeArray43 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        java.lang.Object[] objArray44 = null;
        java.lang.Object obj45 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, objArray44);
        org.mockito.cglib.core.Signature signature46 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor21);
        java.beans.PropertyDescriptor[] propertyDescriptorArray47 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray50 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray47, false, true);
        java.lang.Class[] classArray51 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray47);
        java.lang.reflect.Method[] methodArray54 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray47, false, true);
        java.lang.Object obj55 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) methodArray54);
        org.mockito.cglib.core.Signature signature56 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor21);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(signature46);
        org.junit.Assert.assertNotNull(propertyDescriptorArray47);
        org.junit.Assert.assertNotNull(methodArray50);
        org.junit.Assert.assertNotNull(classArray51);
        org.junit.Assert.assertNotNull(methodArray54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(signature56);
    }

    @Test
    public void test1135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1135");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.lang.Object obj3 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.beans.PropertyDescriptor[] propertyDescriptorArray4 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray4, false, true);
        java.lang.Class[] classArray8 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray4);
        java.lang.Class[] classArray9 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray8);
        java.lang.String[] strArray10 = org.mockito.cglib.core.ReflectUtils.getNames(classArray9);
        java.lang.reflect.Constructor constructor11 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray9);
        org.mockito.cglib.core.MethodInfo methodInfo12 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray15 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray15, false, true);
        java.lang.Class[] classArray19 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.Object[] objArray20 = null;
        java.lang.Object obj21 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass14, classArray19, objArray20);
        java.lang.Object obj22 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor11, (java.lang.Object[]) classArray19);
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray25 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray25, false, true);
        java.lang.Class[] classArray29 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray28);
        java.lang.Object[] objArray30 = null;
        java.lang.Object obj31 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass24, classArray29, objArray30);
        java.lang.String[] strArray32 = org.mockito.cglib.core.ReflectUtils.getNames(classArray29);
        java.lang.Object obj33 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor11, (java.lang.Object[]) strArray32);
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.util.List list36 = null;
        java.util.List list37 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass35, list36);
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        org.mockito.cglib.core.ClassInfo classInfo40 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass39);
        java.lang.Object obj41 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass39);
        java.beans.PropertyDescriptor[] propertyDescriptorArray42 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray45 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray42, false, true);
        java.lang.Class[] classArray46 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray42);
        java.lang.Class[] classArray47 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray46);
        java.lang.String[] strArray48 = org.mockito.cglib.core.ReflectUtils.getNames(classArray47);
        java.lang.reflect.Constructor constructor49 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass39, classArray47);
        org.mockito.cglib.core.MethodInfo methodInfo50 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor49);
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray53 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray56 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray53, false, true);
        java.lang.Class[] classArray57 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray56);
        java.lang.Object[] objArray58 = null;
        java.lang.Object obj59 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass52, classArray57, objArray58);
        java.lang.Object obj60 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor49, (java.lang.Object[]) classArray57);
        java.lang.String[] strArray61 = org.mockito.cglib.core.ReflectUtils.getNames(classArray57);
        java.lang.reflect.Constructor constructor62 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass35, classArray57);
        org.mockito.cglib.core.MethodInfo methodInfo64 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor62, (int) (byte) 10);
        org.mockito.asm.Type[] typeArray65 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor62);
        java.lang.Object obj66 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor11, (java.lang.Object[]) typeArray65);
        org.mockito.cglib.core.Signature signature67 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor11);
        org.mockito.cglib.core.MethodInfo methodInfo68 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor11);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(propertyDescriptorArray4);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(classArray8);
        org.junit.Assert.assertNotNull(classArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(constructor11);
        org.junit.Assert.assertNotNull(methodInfo12);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(propertyDescriptorArray15);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(classArray19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(propertyDescriptorArray25);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(classArray29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNull(list37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(classInfo40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(propertyDescriptorArray42);
        org.junit.Assert.assertNotNull(methodArray45);
        org.junit.Assert.assertNotNull(classArray46);
        org.junit.Assert.assertNotNull(classArray47);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(constructor49);
        org.junit.Assert.assertNotNull(methodInfo50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(propertyDescriptorArray53);
        org.junit.Assert.assertNotNull(methodArray56);
        org.junit.Assert.assertNotNull(classArray57);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(constructor62);
        org.junit.Assert.assertNotNull(methodInfo64);
        org.junit.Assert.assertNotNull(typeArray65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(signature67);
        org.junit.Assert.assertNotNull(methodInfo68);
    }

    @Test
    public void test1136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1136");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.beans.PropertyDescriptor[] propertyDescriptorArray23 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray23, false, true);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray23, false, false);
        java.lang.Object obj30 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) methodArray29);
        java.beans.PropertyDescriptor[] propertyDescriptorArray31 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray31, true, true);
        java.lang.Object obj35 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) propertyDescriptorArray31);
        java.lang.String[] strArray36 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray37 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray38 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray37);
        java.lang.String[] strArray39 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray40 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray39, methodArray40);
        java.lang.String[] strArray42 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray43 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray44 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray42, methodArray43);
        java.lang.reflect.Method[] methodArray45 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray39, methodArray44);
        java.lang.reflect.Method[] methodArray46 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray45);
        java.lang.Object obj47 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) methodArray46);
        org.mockito.asm.Type[] typeArray48 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        org.mockito.cglib.core.MethodInfo methodInfo50 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21, 100);
        org.mockito.cglib.core.MethodInfo methodInfo51 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        org.mockito.cglib.core.Signature signature52 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor21);
        org.mockito.cglib.core.MethodInfo methodInfo53 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(propertyDescriptorArray23);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(propertyDescriptorArray31);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(methodArray38);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(methodArray43);
        org.junit.Assert.assertNotNull(methodArray44);
        org.junit.Assert.assertNotNull(methodArray45);
        org.junit.Assert.assertNotNull(methodArray46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(typeArray48);
        org.junit.Assert.assertNotNull(methodInfo50);
        org.junit.Assert.assertNotNull(methodInfo51);
        org.junit.Assert.assertNotNull(signature52);
        org.junit.Assert.assertNotNull(methodInfo53);
    }

    @Test
    public void test1137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1137");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray1 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray2 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray1);
        java.lang.String[] strArray3 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray4 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray3, methodArray4);
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray5);
        java.lang.String[] strArray7 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray8 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray9 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.reflect.Method[] methodArray13 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray12);
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray13);
        java.lang.Class<?> wildcardClass15 = methodArray13.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray16 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass15);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray16, false, true);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray16);
        int int21 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray20);
        java.lang.String[] strArray22 = org.mockito.cglib.core.ReflectUtils.getNames(classArray20);
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(methodArray1);
        org.junit.Assert.assertNotNull(methodArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(methodArray4);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(methodArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(propertyDescriptorArray16);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(strArray22);
    }

    @Test
    public void test1138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1138");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.lang.Object obj3 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        org.mockito.cglib.core.ClassInfo classInfo6 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass5);
        java.util.List list7 = null;
        java.util.List list8 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass5, list7);
        java.lang.String[] strArray9 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray10 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray9, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.reflect.Method[] methodArray15 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray9, methodArray14);
        java.lang.String[] strArray16 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray17 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray16, methodArray17);
        java.lang.String[] strArray19 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray20 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray21 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray19, methodArray20);
        java.lang.reflect.Method[] methodArray22 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray16, methodArray21);
        java.lang.reflect.Method[] methodArray23 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray9, methodArray22);
        java.lang.Class[] classArray24 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray22);
        java.lang.reflect.Constructor constructor25 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass5, classArray24);
        java.lang.Class[] classArray26 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray24);
        java.lang.reflect.Constructor constructor27 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray26);
        java.lang.Object obj28 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.util.List list29 = null;
        java.util.List list30 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list29);
        java.lang.String[] strArray31 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray32 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray33 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray31, methodArray32);
        java.lang.String[] strArray34 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray35 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray34, methodArray35);
        java.lang.reflect.Method[] methodArray37 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray31, methodArray36);
        java.lang.String[] strArray38 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray39 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray40 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray38, methodArray39);
        java.lang.String[] strArray41 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray42 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray43 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray41, methodArray42);
        java.lang.reflect.Method[] methodArray44 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray38, methodArray43);
        java.lang.reflect.Method[] methodArray45 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray31, methodArray44);
        java.lang.Class<?> wildcardClass46 = methodArray44.getClass();
        org.mockito.cglib.core.ClassInfo classInfo47 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass46);
        java.beans.PropertyDescriptor[] propertyDescriptorArray48 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass46);
        java.beans.PropertyDescriptor[] propertyDescriptorArray49 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass46);
        java.beans.PropertyDescriptor[] propertyDescriptorArray50 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass46);
        java.lang.Class[] classArray51 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray50);
        java.lang.String[] strArray52 = org.mockito.cglib.core.ReflectUtils.getNames(classArray51);
        java.lang.String[] strArray53 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray54 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray55 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray53, methodArray54);
        java.lang.String[] strArray56 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray57 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray58 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray56, methodArray57);
        java.lang.reflect.Method[] methodArray59 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray53, methodArray58);
        java.lang.String[] strArray60 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray61 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray62 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray60, methodArray61);
        java.lang.String[] strArray63 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray64 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray65 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray63, methodArray64);
        java.lang.reflect.Method[] methodArray66 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray60, methodArray65);
        java.lang.reflect.Method[] methodArray67 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray53, methodArray66);
        java.lang.Class[] classArray68 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray66);
        java.lang.Class[] classArray69 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray66);
        java.lang.Object obj70 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray51, (java.lang.Object[]) classArray69);
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        java.lang.Object obj73 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass72);
        java.beans.PropertyDescriptor[] propertyDescriptorArray74 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray77 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray74, false, true);
        java.lang.Class[] classArray78 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray74);
        java.lang.Class[] classArray79 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray78);
        java.lang.String[] strArray80 = org.mockito.cglib.core.ReflectUtils.getNames(classArray79);
        java.lang.String[] strArray81 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray82 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray83 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray81, methodArray82);
        java.lang.Object obj84 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass72, classArray79, (java.lang.Object[]) strArray81);
        java.lang.Object obj85 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass72);
        java.beans.PropertyDescriptor[] propertyDescriptorArray86 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray89 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray86, false, true);
        java.lang.Class[] classArray90 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray86);
        java.lang.Class[] classArray91 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray90);
        java.lang.String[] strArray92 = org.mockito.cglib.core.ReflectUtils.getNames(classArray90);
        java.lang.reflect.Constructor constructor93 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass72, classArray90);
        java.lang.reflect.Constructor constructor94 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray90);
        org.mockito.cglib.core.ClassInfo classInfo95 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(classInfo6);
        org.junit.Assert.assertNull(list8);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(methodArray15);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(methodArray20);
        org.junit.Assert.assertNotNull(methodArray21);
        org.junit.Assert.assertNotNull(methodArray22);
        org.junit.Assert.assertNotNull(methodArray23);
        org.junit.Assert.assertNotNull(classArray24);
        org.junit.Assert.assertNotNull(constructor25);
        org.junit.Assert.assertNotNull(classArray26);
        org.junit.Assert.assertNotNull(constructor27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNull(list30);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(methodArray33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(methodArray42);
        org.junit.Assert.assertNotNull(methodArray43);
        org.junit.Assert.assertNotNull(methodArray44);
        org.junit.Assert.assertNotNull(methodArray45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(classInfo47);
        org.junit.Assert.assertNotNull(propertyDescriptorArray48);
        org.junit.Assert.assertNotNull(propertyDescriptorArray49);
        org.junit.Assert.assertNotNull(propertyDescriptorArray50);
        org.junit.Assert.assertNotNull(classArray51);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(methodArray54);
        org.junit.Assert.assertNotNull(methodArray55);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(methodArray57);
        org.junit.Assert.assertNotNull(methodArray58);
        org.junit.Assert.assertNotNull(methodArray59);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(methodArray61);
        org.junit.Assert.assertNotNull(methodArray62);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(methodArray64);
        org.junit.Assert.assertNotNull(methodArray65);
        org.junit.Assert.assertNotNull(methodArray66);
        org.junit.Assert.assertNotNull(methodArray67);
        org.junit.Assert.assertNotNull(classArray68);
        org.junit.Assert.assertNotNull(classArray69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(propertyDescriptorArray74);
        org.junit.Assert.assertNotNull(methodArray77);
        org.junit.Assert.assertNotNull(classArray78);
        org.junit.Assert.assertNotNull(classArray79);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertNotNull(methodArray82);
        org.junit.Assert.assertNotNull(methodArray83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(propertyDescriptorArray86);
        org.junit.Assert.assertNotNull(methodArray89);
        org.junit.Assert.assertNotNull(classArray90);
        org.junit.Assert.assertNotNull(classArray91);
        org.junit.Assert.assertNotNull(strArray92);
        org.junit.Assert.assertNotNull(constructor93);
        org.junit.Assert.assertNotNull(constructor94);
        org.junit.Assert.assertNotNull(classInfo95);
    }

    @Test
    public void test1139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1139");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.beans.PropertyDescriptor[] propertyDescriptorArray23 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray23, false, true);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray23, false, false);
        java.lang.Object obj30 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) methodArray29);
        java.beans.PropertyDescriptor[] propertyDescriptorArray31 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray31, true, true);
        java.lang.Object obj35 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) propertyDescriptorArray31);
        java.lang.String[] strArray36 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray37 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray38 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray37);
        java.lang.String[] strArray39 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray40 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray39, methodArray40);
        java.lang.reflect.Method[] methodArray42 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray41);
        java.lang.String[] strArray43 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray44 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray45 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray43, methodArray44);
        java.lang.String[] strArray46 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray47 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray48 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray46, methodArray47);
        java.lang.reflect.Method[] methodArray49 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray43, methodArray48);
        java.lang.reflect.Method[] methodArray50 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray49);
        java.lang.String[] strArray51 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray52 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray53 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray51, methodArray52);
        java.lang.String[] strArray54 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray55 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray56 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray54, methodArray55);
        java.lang.String[] strArray57 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray58 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray59 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray57, methodArray58);
        java.lang.String[] strArray60 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray61 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray62 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray60, methodArray61);
        java.lang.reflect.Method[] methodArray63 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray57, methodArray62);
        java.lang.reflect.Method[] methodArray64 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray54, methodArray63);
        java.lang.reflect.Method[] methodArray65 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray51, methodArray64);
        java.lang.reflect.Method[] methodArray66 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray64);
        java.lang.Object obj67 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) methodArray66);
        org.mockito.cglib.core.MethodInfo methodInfo68 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.lang.Class<?> wildcardClass69 = constructor21.getClass();
        org.mockito.cglib.core.ClassInfo classInfo70 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass69);
        java.beans.PropertyDescriptor[] propertyDescriptorArray71 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass69);
        java.beans.PropertyDescriptor[] propertyDescriptorArray72 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(propertyDescriptorArray23);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(propertyDescriptorArray31);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(methodArray38);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(methodArray42);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(methodArray44);
        org.junit.Assert.assertNotNull(methodArray45);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(methodArray47);
        org.junit.Assert.assertNotNull(methodArray48);
        org.junit.Assert.assertNotNull(methodArray49);
        org.junit.Assert.assertNotNull(methodArray50);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(methodArray52);
        org.junit.Assert.assertNotNull(methodArray53);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(methodArray55);
        org.junit.Assert.assertNotNull(methodArray56);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(methodArray58);
        org.junit.Assert.assertNotNull(methodArray59);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(methodArray61);
        org.junit.Assert.assertNotNull(methodArray62);
        org.junit.Assert.assertNotNull(methodArray63);
        org.junit.Assert.assertNotNull(methodArray64);
        org.junit.Assert.assertNotNull(methodArray65);
        org.junit.Assert.assertNotNull(methodArray66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(methodInfo68);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(classInfo70);
        org.junit.Assert.assertNotNull(propertyDescriptorArray71);
        org.junit.Assert.assertNotNull(propertyDescriptorArray72);
    }

    @Test
    public void test1140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1140");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        java.lang.Object obj2 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.lang.Object obj3 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.lang.Object obj4 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        org.mockito.cglib.core.ClassInfo classInfo5 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.lang.String[] strArray6 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray7 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray8 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray6, methodArray7);
        java.lang.String[] strArray9 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray10 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray9, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.reflect.Method[] methodArray15 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray9, methodArray14);
        java.lang.reflect.Method[] methodArray16 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray6, methodArray15);
        java.lang.Class[] classArray17 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) strArray6);
        java.beans.PropertyDescriptor[] propertyDescriptorArray18 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray21 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray18, false, true);
        java.lang.reflect.Method[] methodArray24 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray18, false, false);
        java.lang.reflect.Method[] methodArray27 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray18, true, false);
        java.lang.Object obj28 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray17, (java.lang.Object[]) propertyDescriptorArray18);
        java.lang.Object obj29 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        org.mockito.cglib.core.ClassInfo classInfo30 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Object obj33 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass32);
        java.beans.PropertyDescriptor[] propertyDescriptorArray34 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray37 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray34, false, true);
        java.lang.Class[] classArray38 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray34);
        java.lang.Class[] classArray39 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray38);
        java.lang.String[] strArray40 = org.mockito.cglib.core.ReflectUtils.getNames(classArray39);
        java.lang.String[] strArray41 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray42 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray43 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray41, methodArray42);
        java.lang.Object obj44 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass32, classArray39, (java.lang.Object[]) strArray41);
        java.lang.Object obj45 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass32);
        java.beans.PropertyDescriptor[] propertyDescriptorArray46 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray49 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray46, false, true);
        java.lang.Class[] classArray50 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray46);
        java.lang.Class[] classArray51 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray50);
        java.lang.String[] strArray52 = org.mockito.cglib.core.ReflectUtils.getNames(classArray50);
        java.lang.reflect.Constructor constructor53 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass32, classArray50);
        java.lang.reflect.Constructor constructor54 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray50);
        org.mockito.asm.Type[] typeArray55 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor54);
        org.mockito.cglib.core.Signature signature56 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor54);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(classInfo5);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(methodArray8);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(methodArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(classArray17);
        org.junit.Assert.assertNotNull(propertyDescriptorArray18);
        org.junit.Assert.assertNotNull(methodArray21);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(classInfo30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(propertyDescriptorArray34);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(classArray38);
        org.junit.Assert.assertNotNull(classArray39);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(methodArray42);
        org.junit.Assert.assertNotNull(methodArray43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(propertyDescriptorArray46);
        org.junit.Assert.assertNotNull(methodArray49);
        org.junit.Assert.assertNotNull(classArray50);
        org.junit.Assert.assertNotNull(classArray51);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(constructor53);
        org.junit.Assert.assertNotNull(constructor54);
        org.junit.Assert.assertNotNull(typeArray55);
        org.junit.Assert.assertNotNull(signature56);
    }

    @Test
    public void test1141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1141");
        java.beans.PropertyDescriptor[] propertyDescriptorArray0 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray3 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray0, false, true);
        java.lang.Class[] classArray4 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray0);
        int int5 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray4);
        java.lang.String[] strArray6 = org.mockito.cglib.core.ReflectUtils.getNames(classArray4);
        java.lang.String[] strArray7 = org.mockito.cglib.core.ReflectUtils.getNames(classArray4);
        java.lang.Class[] classArray8 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) strArray7);
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        org.mockito.cglib.core.ClassInfo classInfo11 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass10);
        java.util.List list12 = null;
        java.util.List list13 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass10, list12);
        java.lang.String[] strArray14 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray15 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray16 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray14, methodArray15);
        java.lang.String[] strArray17 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray18 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray17, methodArray18);
        java.lang.reflect.Method[] methodArray20 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray14, methodArray19);
        java.lang.String[] strArray21 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray22 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray23 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray21, methodArray22);
        java.lang.String[] strArray24 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray25 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray24, methodArray25);
        java.lang.reflect.Method[] methodArray27 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray21, methodArray26);
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray14, methodArray27);
        java.lang.Class[] classArray29 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray27);
        java.lang.reflect.Constructor constructor30 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass10, classArray29);
        org.mockito.cglib.core.MethodInfo methodInfo31 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor30);
        java.lang.Class<?> wildcardClass32 = constructor30.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray33 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass32);
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray33, false, false);
        java.lang.reflect.Method[] methodArray39 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray33, true, true);
        java.lang.reflect.Method[] methodArray40 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray39);
        java.lang.String[] strArray41 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray42 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray43 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray41, methodArray42);
        java.lang.Class[] classArray44 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) strArray41);
        java.lang.String[] strArray45 = org.mockito.cglib.core.ReflectUtils.getNames(classArray44);
        java.lang.String[] strArray46 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray47 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray48 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray46, methodArray47);
        java.lang.String[] strArray49 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray50 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray51 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray49, methodArray50);
        java.lang.String[] strArray52 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray53 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray54 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray52, methodArray53);
        java.lang.reflect.Method[] methodArray55 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray49, methodArray54);
        java.lang.reflect.Method[] methodArray56 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray46, methodArray55);
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        org.mockito.cglib.core.ClassInfo classInfo59 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass58);
        java.lang.Object obj60 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass58);
        java.beans.PropertyDescriptor[] propertyDescriptorArray61 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray64 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray61, false, true);
        java.lang.Class[] classArray65 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray61);
        java.lang.Class[] classArray66 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray65);
        java.lang.String[] strArray67 = org.mockito.cglib.core.ReflectUtils.getNames(classArray66);
        java.lang.reflect.Constructor constructor68 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass58, classArray66);
        org.mockito.cglib.core.MethodInfo methodInfo69 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor68);
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray72 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray75 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray72, false, true);
        java.lang.Class[] classArray76 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray75);
        java.lang.Object[] objArray77 = null;
        java.lang.Object obj78 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass71, classArray76, objArray77);
        java.lang.Object obj79 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor68, (java.lang.Object[]) classArray76);
        java.lang.String[] strArray80 = org.mockito.cglib.core.ReflectUtils.getNames(classArray76);
        java.beans.PropertyDescriptor[] propertyDescriptorArray81 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray84 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray81, false, true);
        java.lang.reflect.Method[] methodArray85 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray80, methodArray84);
        java.lang.reflect.Method[] methodArray86 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray46, methodArray85);
        java.lang.reflect.Method[] methodArray87 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray45, methodArray85);
        java.lang.reflect.Method[] methodArray88 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray85);
        java.lang.Class<?> wildcardClass89 = methodArray88.getClass();
        java.util.List list90 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List list91 = org.mockito.cglib.core.ReflectUtils.addAllMethods((java.lang.Class) wildcardClass89, list90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(propertyDescriptorArray0);
        org.junit.Assert.assertNotNull(methodArray3);
        org.junit.Assert.assertNotNull(classArray4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(classArray8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(classInfo11);
        org.junit.Assert.assertNull(list13);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(methodArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(methodArray20);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(methodArray22);
        org.junit.Assert.assertNotNull(methodArray23);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(classArray29);
        org.junit.Assert.assertNotNull(constructor30);
        org.junit.Assert.assertNotNull(methodInfo31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(propertyDescriptorArray33);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(methodArray42);
        org.junit.Assert.assertNotNull(methodArray43);
        org.junit.Assert.assertNotNull(classArray44);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(methodArray47);
        org.junit.Assert.assertNotNull(methodArray48);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(methodArray50);
        org.junit.Assert.assertNotNull(methodArray51);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(methodArray53);
        org.junit.Assert.assertNotNull(methodArray54);
        org.junit.Assert.assertNotNull(methodArray55);
        org.junit.Assert.assertNotNull(methodArray56);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(classInfo59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(propertyDescriptorArray61);
        org.junit.Assert.assertNotNull(methodArray64);
        org.junit.Assert.assertNotNull(classArray65);
        org.junit.Assert.assertNotNull(classArray66);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(constructor68);
        org.junit.Assert.assertNotNull(methodInfo69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(propertyDescriptorArray72);
        org.junit.Assert.assertNotNull(methodArray75);
        org.junit.Assert.assertNotNull(classArray76);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertNotNull(propertyDescriptorArray81);
        org.junit.Assert.assertNotNull(methodArray84);
        org.junit.Assert.assertNotNull(methodArray85);
        org.junit.Assert.assertNotNull(methodArray86);
        org.junit.Assert.assertNotNull(methodArray87);
        org.junit.Assert.assertNotNull(methodArray88);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test1142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1142");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.lang.String[] strArray23 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray24 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray25 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray24);
        java.lang.String[] strArray26 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray27 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray26, methodArray27);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray28);
        java.lang.String[] strArray30 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray31 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray32 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray31);
        java.lang.String[] strArray33 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray34 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray33, methodArray34);
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray35);
        java.lang.reflect.Method[] methodArray37 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray36);
        java.lang.String[] strArray38 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray39 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray40 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray38, methodArray39);
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray40);
        java.lang.Object obj42 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) strArray23);
        org.mockito.cglib.core.MethodInfo methodInfo43 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        org.mockito.asm.Type[] typeArray44 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        java.lang.Class<?> wildcardClass45 = constructor21.getClass();
        org.mockito.cglib.core.ClassInfo classInfo46 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass45);
        java.beans.PropertyDescriptor[] propertyDescriptorArray47 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass45);
        java.beans.PropertyDescriptor[] propertyDescriptorArray48 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass45);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method49 = org.mockito.cglib.core.ReflectUtils.findInterfaceMethod((java.lang.Class) wildcardClass45);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: class java.lang.reflect.Constructor is not an interface");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(methodInfo43);
        org.junit.Assert.assertNotNull(typeArray44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(classInfo46);
        org.junit.Assert.assertNotNull(propertyDescriptorArray47);
        org.junit.Assert.assertNotNull(propertyDescriptorArray48);
    }

    @Test
    public void test1143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1143");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray1 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray2 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray1);
        java.lang.String[] strArray3 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray4 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray3, methodArray4);
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray5);
        java.lang.String[] strArray7 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray8 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray9 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.reflect.Method[] methodArray13 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray12);
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray13);
        java.lang.Class<?> wildcardClass15 = strArray0.getClass();
        java.util.List list16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List list17 = org.mockito.cglib.core.ReflectUtils.addAllMethods((java.lang.Class) wildcardClass15, list16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(methodArray1);
        org.junit.Assert.assertNotNull(methodArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(methodArray4);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(methodArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1144");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray1 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray2 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray1);
        java.lang.String[] strArray3 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray4 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray3, methodArray4);
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray5);
        java.lang.String[] strArray7 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray8 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray9 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.reflect.Method[] methodArray13 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray12);
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray13);
        java.lang.Class<?> wildcardClass15 = methodArray13.getClass();
        org.mockito.cglib.core.ClassInfo classInfo16 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass15);
        java.beans.PropertyDescriptor[] propertyDescriptorArray17 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass15);
        java.beans.PropertyDescriptor[] propertyDescriptorArray18 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass15);
        java.beans.PropertyDescriptor[] propertyDescriptorArray19 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass15);
        org.mockito.cglib.core.ClassInfo classInfo20 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass15);
        java.util.List list21 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List list22 = org.mockito.cglib.core.ReflectUtils.addAllMethods((java.lang.Class) wildcardClass15, list21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(methodArray1);
        org.junit.Assert.assertNotNull(methodArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(methodArray4);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(methodArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(classInfo16);
        org.junit.Assert.assertNotNull(propertyDescriptorArray17);
        org.junit.Assert.assertNotNull(propertyDescriptorArray18);
        org.junit.Assert.assertNotNull(propertyDescriptorArray19);
        org.junit.Assert.assertNotNull(classInfo20);
    }

    @Test
    public void test1145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1145");
        java.beans.PropertyDescriptor[] propertyDescriptorArray0 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray3 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray0, false, true);
        java.lang.Class[] classArray4 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray0);
        java.lang.Class[] classArray5 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray4);
        java.lang.String[] strArray6 = org.mockito.cglib.core.ReflectUtils.getNames(classArray4);
        java.lang.Class<?> wildcardClass7 = strArray6.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray8 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass7);
        org.junit.Assert.assertNotNull(propertyDescriptorArray0);
        org.junit.Assert.assertNotNull(methodArray3);
        org.junit.Assert.assertNotNull(classArray4);
        org.junit.Assert.assertNotNull(classArray5);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(propertyDescriptorArray8);
    }

    @Test
    public void test1146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1146");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.lang.String[] strArray23 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray24 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray25 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray24);
        java.lang.String[] strArray26 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray27 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray26, methodArray27);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray28);
        java.lang.String[] strArray30 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray31 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray32 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray31);
        java.lang.String[] strArray33 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray34 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray33, methodArray34);
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray35);
        java.lang.reflect.Method[] methodArray37 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray36);
        java.lang.String[] strArray38 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray39 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray40 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray38, methodArray39);
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray40);
        java.lang.Object obj42 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) strArray23);
        org.mockito.cglib.core.MethodInfo methodInfo44 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21, (int) (byte) 0);
        org.mockito.asm.Type[] typeArray45 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        org.mockito.cglib.core.MethodInfo methodInfo47 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21, (int) '4');
        java.beans.PropertyDescriptor[] propertyDescriptorArray48 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray51 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray48, false, true);
        java.lang.Class[] classArray52 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray48);
        java.lang.Class[] classArray53 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray52);
        java.lang.String[] strArray54 = org.mockito.cglib.core.ReflectUtils.getNames(classArray52);
        java.lang.Class[] classArray55 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray52);
        java.lang.String[] strArray56 = org.mockito.cglib.core.ReflectUtils.getNames(classArray52);
        int int57 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray52);
        java.lang.Object obj58 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) classArray52);
        org.mockito.cglib.core.MethodInfo methodInfo60 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21, (int) (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(methodInfo44);
        org.junit.Assert.assertNotNull(typeArray45);
        org.junit.Assert.assertNotNull(methodInfo47);
        org.junit.Assert.assertNotNull(propertyDescriptorArray48);
        org.junit.Assert.assertNotNull(methodArray51);
        org.junit.Assert.assertNotNull(classArray52);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(classArray55);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(methodInfo60);
    }

    @Test
    public void test1147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1147");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        java.lang.Object obj2 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.beans.PropertyDescriptor[] propertyDescriptorArray3 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray3, false, true);
        java.lang.Class[] classArray7 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray3);
        java.lang.Class[] classArray8 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray7);
        java.lang.String[] strArray9 = org.mockito.cglib.core.ReflectUtils.getNames(classArray8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.Object obj13 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray8, (java.lang.Object[]) strArray10);
        java.util.List list14 = null;
        java.util.List list15 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list14);
        java.lang.Object obj16 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        org.mockito.cglib.core.ClassInfo classInfo17 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(propertyDescriptorArray3);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(classArray7);
        org.junit.Assert.assertNotNull(classArray8);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNull(list15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(classInfo17);
    }

    @Test
    public void test1148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1148");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.Object obj5 = new java.lang.Object();
        java.lang.Class<?> wildcardClass6 = obj5.getClass();
        org.mockito.cglib.core.ClassInfo classInfo7 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass6);
        java.util.List list8 = null;
        java.util.List list9 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass6, list8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.String[] strArray13 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray14 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray15 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray13, methodArray14);
        java.lang.reflect.Method[] methodArray16 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray15);
        java.lang.String[] strArray17 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray18 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray17, methodArray18);
        java.lang.String[] strArray20 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray21 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray22 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray20, methodArray21);
        java.lang.reflect.Method[] methodArray23 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray17, methodArray22);
        java.lang.reflect.Method[] methodArray24 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray23);
        java.lang.Class[] classArray25 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray23);
        java.lang.reflect.Constructor constructor26 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass6, classArray25);
        java.lang.Class[] classArray27 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray25);
        java.lang.String[] strArray28 = org.mockito.cglib.core.ReflectUtils.getNames(classArray27);
        java.lang.reflect.Constructor constructor29 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray27);
        org.mockito.asm.Type[] typeArray30 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor29);
        org.mockito.cglib.core.MethodInfo methodInfo32 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor29, (int) (byte) 1);
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass34);
        java.lang.Object obj36 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass34);
        java.lang.Object obj37 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass34);
        org.mockito.cglib.core.ClassInfo classInfo38 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass34);
        java.lang.String[] strArray39 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray40 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray39, methodArray40);
        java.lang.String[] strArray42 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray43 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray44 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray42, methodArray43);
        java.lang.String[] strArray45 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray46 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray47 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray45, methodArray46);
        java.lang.reflect.Method[] methodArray48 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray42, methodArray47);
        java.lang.reflect.Method[] methodArray49 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray39, methodArray48);
        java.lang.Class[] classArray50 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) strArray39);
        java.beans.PropertyDescriptor[] propertyDescriptorArray51 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray54 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray51, false, true);
        java.lang.reflect.Method[] methodArray57 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray51, false, false);
        java.lang.reflect.Method[] methodArray60 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray51, true, false);
        java.lang.Object obj61 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass34, classArray50, (java.lang.Object[]) propertyDescriptorArray51);
        java.lang.Object obj62 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass34);
        org.mockito.cglib.core.ClassInfo classInfo63 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass34);
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        java.lang.Object obj66 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass65);
        java.beans.PropertyDescriptor[] propertyDescriptorArray67 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray70 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray67, false, true);
        java.lang.Class[] classArray71 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray67);
        java.lang.Class[] classArray72 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray71);
        java.lang.String[] strArray73 = org.mockito.cglib.core.ReflectUtils.getNames(classArray72);
        java.lang.String[] strArray74 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray75 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray76 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray74, methodArray75);
        java.lang.Object obj77 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass65, classArray72, (java.lang.Object[]) strArray74);
        java.lang.Object obj78 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass65);
        java.beans.PropertyDescriptor[] propertyDescriptorArray79 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray82 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray79, false, true);
        java.lang.Class[] classArray83 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray79);
        java.lang.Class[] classArray84 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray83);
        java.lang.String[] strArray85 = org.mockito.cglib.core.ReflectUtils.getNames(classArray83);
        java.lang.reflect.Constructor constructor86 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass65, classArray83);
        java.lang.reflect.Constructor constructor87 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass34, classArray83);
        java.lang.Object obj88 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor29, (java.lang.Object[]) classArray83);
        org.mockito.asm.Type[] typeArray89 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor29);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(classInfo7);
        org.junit.Assert.assertNull(list9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(methodArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(methodArray21);
        org.junit.Assert.assertNotNull(methodArray22);
        org.junit.Assert.assertNotNull(methodArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(classArray25);
        org.junit.Assert.assertNotNull(constructor26);
        org.junit.Assert.assertNotNull(classArray27);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(constructor29);
        org.junit.Assert.assertNotNull(typeArray30);
        org.junit.Assert.assertNotNull(methodInfo32);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(classInfo38);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(methodArray43);
        org.junit.Assert.assertNotNull(methodArray44);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(methodArray46);
        org.junit.Assert.assertNotNull(methodArray47);
        org.junit.Assert.assertNotNull(methodArray48);
        org.junit.Assert.assertNotNull(methodArray49);
        org.junit.Assert.assertNotNull(classArray50);
        org.junit.Assert.assertNotNull(propertyDescriptorArray51);
        org.junit.Assert.assertNotNull(methodArray54);
        org.junit.Assert.assertNotNull(methodArray57);
        org.junit.Assert.assertNotNull(methodArray60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(classInfo63);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(propertyDescriptorArray67);
        org.junit.Assert.assertNotNull(methodArray70);
        org.junit.Assert.assertNotNull(classArray71);
        org.junit.Assert.assertNotNull(classArray72);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertNotNull(methodArray75);
        org.junit.Assert.assertNotNull(methodArray76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(propertyDescriptorArray79);
        org.junit.Assert.assertNotNull(methodArray82);
        org.junit.Assert.assertNotNull(classArray83);
        org.junit.Assert.assertNotNull(classArray84);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertNotNull(constructor86);
        org.junit.Assert.assertNotNull(constructor87);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(typeArray89);
    }

    @Test
    public void test1149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1149");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.lang.Object obj3 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        org.mockito.cglib.core.ClassInfo classInfo6 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass5);
        java.util.List list7 = null;
        java.util.List list8 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass5, list7);
        java.lang.String[] strArray9 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray10 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray9, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.reflect.Method[] methodArray15 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray9, methodArray14);
        java.lang.String[] strArray16 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray17 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray16, methodArray17);
        java.lang.String[] strArray19 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray20 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray21 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray19, methodArray20);
        java.lang.reflect.Method[] methodArray22 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray16, methodArray21);
        java.lang.reflect.Method[] methodArray23 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray9, methodArray22);
        java.lang.Class[] classArray24 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray22);
        java.lang.reflect.Constructor constructor25 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass5, classArray24);
        java.lang.Class[] classArray26 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray24);
        java.lang.reflect.Constructor constructor27 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray26);
        org.mockito.asm.Type[] typeArray28 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor27);
        org.mockito.cglib.core.Signature signature29 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor27);
        org.mockito.cglib.core.Signature signature30 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor27);
        org.mockito.asm.Type[] typeArray31 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor27);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(classInfo6);
        org.junit.Assert.assertNull(list8);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(methodArray15);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(methodArray20);
        org.junit.Assert.assertNotNull(methodArray21);
        org.junit.Assert.assertNotNull(methodArray22);
        org.junit.Assert.assertNotNull(methodArray23);
        org.junit.Assert.assertNotNull(classArray24);
        org.junit.Assert.assertNotNull(constructor25);
        org.junit.Assert.assertNotNull(classArray26);
        org.junit.Assert.assertNotNull(constructor27);
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertNotNull(signature29);
        org.junit.Assert.assertNotNull(signature30);
        org.junit.Assert.assertNotNull(typeArray31);
    }

    @Test
    public void test1150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1150");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.beans.PropertyDescriptor[] propertyDescriptorArray23 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray23, false, true);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray23, false, false);
        java.lang.Object obj30 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) methodArray29);
        java.beans.PropertyDescriptor[] propertyDescriptorArray31 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray31, true, true);
        java.lang.Object obj35 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) propertyDescriptorArray31);
        java.lang.String[] strArray36 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray37 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray38 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray37);
        java.lang.String[] strArray39 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray40 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray39, methodArray40);
        java.lang.String[] strArray42 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray43 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray44 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray42, methodArray43);
        java.lang.reflect.Method[] methodArray45 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray39, methodArray44);
        java.lang.reflect.Method[] methodArray46 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray45);
        java.lang.Object obj47 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) methodArray46);
        org.mockito.cglib.core.MethodInfo methodInfo48 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(propertyDescriptorArray23);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(propertyDescriptorArray31);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(methodArray38);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(methodArray43);
        org.junit.Assert.assertNotNull(methodArray44);
        org.junit.Assert.assertNotNull(methodArray45);
        org.junit.Assert.assertNotNull(methodArray46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(methodInfo48);
    }

    @Test
    public void test1151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1151");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo23 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21, (int) ' ');
        org.mockito.cglib.core.MethodInfo methodInfo25 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21, 10);
        org.mockito.cglib.core.MethodInfo methodInfo27 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21, 100);
        org.mockito.cglib.core.MethodInfo methodInfo28 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray31 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray31, false, true);
        java.lang.Class[] classArray35 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray34);
        java.lang.Object[] objArray36 = null;
        java.lang.Object obj37 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass30, classArray35, objArray36);
        java.lang.Class[] classArray38 = null;
        java.lang.reflect.Constructor constructor39 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass30, classArray38);
        java.lang.Class[] classArray40 = null;
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        org.mockito.cglib.core.ClassInfo classInfo43 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass42);
        java.util.List list44 = null;
        java.util.List list45 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass42, list44);
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        org.mockito.cglib.core.ClassInfo classInfo48 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass47);
        java.util.List list49 = null;
        java.util.List list50 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass47, list49);
        java.lang.String[] strArray51 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray52 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray53 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray51, methodArray52);
        java.lang.String[] strArray54 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray55 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray56 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray54, methodArray55);
        java.lang.reflect.Method[] methodArray57 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray51, methodArray56);
        java.lang.String[] strArray58 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray59 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray60 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray58, methodArray59);
        java.lang.String[] strArray61 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray62 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray63 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray61, methodArray62);
        java.lang.reflect.Method[] methodArray64 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray58, methodArray63);
        java.lang.reflect.Method[] methodArray65 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray51, methodArray64);
        java.lang.Class[] classArray66 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray64);
        java.lang.reflect.Constructor constructor67 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass47, classArray66);
        java.lang.Class[] classArray68 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray66);
        java.lang.String[] strArray69 = org.mockito.cglib.core.ReflectUtils.getNames(classArray68);
        java.lang.reflect.Constructor constructor70 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass42, classArray68);
        int int71 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray68);
        java.lang.Object obj72 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass30, classArray40, (java.lang.Object[]) classArray68);
        java.lang.Object obj73 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) classArray68);
        java.lang.Class<?> wildcardClass74 = constructor21.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method75 = org.mockito.cglib.core.ReflectUtils.findInterfaceMethod((java.lang.Class) wildcardClass74);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: class java.lang.reflect.Constructor is not an interface");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo23);
        org.junit.Assert.assertNotNull(methodInfo25);
        org.junit.Assert.assertNotNull(methodInfo27);
        org.junit.Assert.assertNotNull(methodInfo28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(propertyDescriptorArray31);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(classArray35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(constructor39);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(classInfo43);
        org.junit.Assert.assertNull(list45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(classInfo48);
        org.junit.Assert.assertNull(list50);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(methodArray52);
        org.junit.Assert.assertNotNull(methodArray53);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(methodArray55);
        org.junit.Assert.assertNotNull(methodArray56);
        org.junit.Assert.assertNotNull(methodArray57);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(methodArray59);
        org.junit.Assert.assertNotNull(methodArray60);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(methodArray62);
        org.junit.Assert.assertNotNull(methodArray63);
        org.junit.Assert.assertNotNull(methodArray64);
        org.junit.Assert.assertNotNull(methodArray65);
        org.junit.Assert.assertNotNull(classArray66);
        org.junit.Assert.assertNotNull(constructor67);
        org.junit.Assert.assertNotNull(classArray68);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(constructor70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test1152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1152");
        java.lang.Class class0 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray1 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray4 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray1, false, true);
        java.lang.Class[] classArray5 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray1);
        int int6 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray5);
        java.lang.String[] strArray7 = org.mockito.cglib.core.ReflectUtils.getNames(classArray5);
        java.lang.String[] strArray8 = org.mockito.cglib.core.ReflectUtils.getNames(classArray5);
        java.lang.String[] strArray9 = org.mockito.cglib.core.ReflectUtils.getNames(classArray5);
        int int10 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray5);
        java.lang.String[] strArray11 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray12 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray13 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray11, methodArray12);
        java.lang.String[] strArray14 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray15 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray16 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray14, methodArray15);
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray11, methodArray16);
        java.lang.String[] strArray18 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray19 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray20 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray18, methodArray19);
        java.lang.String[] strArray21 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray22 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray23 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray21, methodArray22);
        java.lang.reflect.Method[] methodArray24 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray18, methodArray23);
        java.lang.reflect.Method[] methodArray25 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray11, methodArray24);
        java.lang.Class[] classArray26 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray24);
        java.lang.Class<?> wildcardClass27 = classArray26.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray28 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass27);
        java.lang.reflect.Method[] methodArray31 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray28, true, false);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj32 = org.mockito.cglib.core.ReflectUtils.newInstance(class0, classArray5, (java.lang.Object[]) methodArray31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(propertyDescriptorArray1);
        org.junit.Assert.assertNotNull(methodArray4);
        org.junit.Assert.assertNotNull(classArray5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(methodArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(methodArray20);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(methodArray22);
        org.junit.Assert.assertNotNull(methodArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(classArray26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(propertyDescriptorArray28);
        org.junit.Assert.assertNotNull(methodArray31);
    }

    @Test
    public void test1153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1153");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        java.util.List list2 = null;
        java.util.List list3 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list2);
        java.beans.PropertyDescriptor[] propertyDescriptorArray4 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray4, false, true);
        java.lang.Class[] classArray8 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray4);
        java.lang.Class[] classArray9 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray8);
        java.lang.String[] strArray10 = org.mockito.cglib.core.ReflectUtils.getNames(classArray9);
        java.lang.Object[] objArray11 = null;
        java.lang.Object obj12 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray9, objArray11);
        // The following exception was thrown during execution in test generation
        try {
            java.beans.PropertyDescriptor[] propertyDescriptorArray13 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass1);
            org.junit.Assert.fail("Expected exception of type org.mockito.cglib.core.CodeGenerationException; message: java.beans.IntrospectionException-->java.lang.Object not superclass of java.lang.Object");
        } catch (org.mockito.cglib.core.CodeGenerationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNull(list3);
        org.junit.Assert.assertNotNull(propertyDescriptorArray4);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(classArray8);
        org.junit.Assert.assertNotNull(classArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(obj12);
    }

    @Test
    public void test1154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1154");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        java.util.List list2 = null;
        java.util.List list3 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list2);
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        org.mockito.cglib.core.ClassInfo classInfo6 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass5);
        java.beans.PropertyDescriptor[] propertyDescriptorArray8 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray8, false, true);
        java.lang.Class[] classArray12 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray8);
        java.lang.Class[] classArray13 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray12);
        java.lang.String[] strArray14 = org.mockito.cglib.core.ReflectUtils.getNames(classArray13);
        java.lang.reflect.Constructor constructor15 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass5, classArray13);
        org.mockito.cglib.core.MethodInfo methodInfo16 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor15);
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray19 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray22 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray19, false, true);
        java.lang.Class[] classArray23 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray22);
        java.lang.Object[] objArray24 = null;
        java.lang.Object obj25 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass18, classArray23, objArray24);
        java.lang.Object obj26 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor15, (java.lang.Object[]) classArray23);
        java.lang.String[] strArray27 = org.mockito.cglib.core.ReflectUtils.getNames(classArray23);
        java.lang.reflect.Constructor constructor28 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray23);
        org.mockito.cglib.core.MethodInfo methodInfo30 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor28, (int) (byte) 10);
        org.mockito.asm.Type[] typeArray31 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor28);
        java.beans.PropertyDescriptor[] propertyDescriptorArray32 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray32, true, true);
        java.lang.reflect.Method[] methodArray38 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray32, false, true);
        java.lang.Class[] classArray39 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray32);
        java.lang.Object obj40 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor28, (java.lang.Object[]) classArray39);
        org.mockito.cglib.core.MethodInfo methodInfo42 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor28, 1);
        org.mockito.cglib.core.MethodInfo methodInfo43 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor28);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNull(list3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(classInfo6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(propertyDescriptorArray8);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(classArray13);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(constructor15);
        org.junit.Assert.assertNotNull(methodInfo16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(propertyDescriptorArray19);
        org.junit.Assert.assertNotNull(methodArray22);
        org.junit.Assert.assertNotNull(classArray23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(constructor28);
        org.junit.Assert.assertNotNull(methodInfo30);
        org.junit.Assert.assertNotNull(typeArray31);
        org.junit.Assert.assertNotNull(propertyDescriptorArray32);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray38);
        org.junit.Assert.assertNotNull(classArray39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(methodInfo42);
        org.junit.Assert.assertNotNull(methodInfo43);
    }

    @Test
    public void test1155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1155");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray1 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray2 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray1);
        java.lang.String[] strArray3 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray4 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray3, methodArray4);
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray5);
        java.lang.String[] strArray7 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray8 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray9 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.reflect.Method[] methodArray13 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray12);
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray13);
        java.lang.Class<?> wildcardClass15 = methodArray13.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray16 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass15);
        java.util.List list17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List list18 = org.mockito.cglib.core.ReflectUtils.addAllMethods((java.lang.Class) wildcardClass15, list17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(methodArray1);
        org.junit.Assert.assertNotNull(methodArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(methodArray4);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(methodArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(propertyDescriptorArray16);
    }

    @Test
    public void test1156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1156");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.lang.Object obj3 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.beans.PropertyDescriptor[] propertyDescriptorArray4 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray4, false, true);
        java.lang.Class[] classArray8 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray4);
        java.lang.Class[] classArray9 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray8);
        java.lang.String[] strArray10 = org.mockito.cglib.core.ReflectUtils.getNames(classArray9);
        java.lang.reflect.Constructor constructor11 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray9);
        org.mockito.cglib.core.MethodInfo methodInfo12 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray15 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray15, false, true);
        java.lang.Class[] classArray19 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.Object[] objArray20 = null;
        java.lang.Object obj21 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass14, classArray19, objArray20);
        java.lang.Object obj22 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor11, (java.lang.Object[]) classArray19);
        org.mockito.cglib.core.MethodInfo methodInfo23 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor11);
        java.lang.String[] strArray24 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray25 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray24, methodArray25);
        java.lang.String[] strArray27 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray28 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray27, methodArray28);
        java.lang.reflect.Method[] methodArray30 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray24, methodArray29);
        java.lang.String[] strArray31 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray32 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray33 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray31, methodArray32);
        java.lang.String[] strArray34 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray35 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray34, methodArray35);
        java.lang.reflect.Method[] methodArray37 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray31, methodArray36);
        java.lang.reflect.Method[] methodArray38 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray24, methodArray37);
        java.lang.Class<?> wildcardClass39 = methodArray37.getClass();
        org.mockito.cglib.core.ClassInfo classInfo40 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass39);
        java.beans.PropertyDescriptor[] propertyDescriptorArray41 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass39);
        java.beans.PropertyDescriptor[] propertyDescriptorArray42 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass39);
        java.beans.PropertyDescriptor[] propertyDescriptorArray43 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass39);
        java.lang.Class[] classArray44 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray43);
        java.lang.Object obj45 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor11, (java.lang.Object[]) propertyDescriptorArray43);
        org.mockito.cglib.core.MethodInfo methodInfo46 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor11);
        org.mockito.cglib.core.MethodInfo methodInfo48 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor11, (int) (byte) 1);
        org.mockito.cglib.core.Signature signature49 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor11);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(propertyDescriptorArray4);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(classArray8);
        org.junit.Assert.assertNotNull(classArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(constructor11);
        org.junit.Assert.assertNotNull(methodInfo12);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(propertyDescriptorArray15);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(classArray19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(methodInfo23);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(methodArray30);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(methodArray33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(methodArray38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(classInfo40);
        org.junit.Assert.assertNotNull(propertyDescriptorArray41);
        org.junit.Assert.assertNotNull(propertyDescriptorArray42);
        org.junit.Assert.assertNotNull(propertyDescriptorArray43);
        org.junit.Assert.assertNotNull(classArray44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(methodInfo46);
        org.junit.Assert.assertNotNull(methodInfo48);
        org.junit.Assert.assertNotNull(signature49);
    }

    @Test
    public void test1157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1157");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo23 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21, (int) ' ');
        org.mockito.cglib.core.Signature signature24 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor21);
        java.lang.Class<?> wildcardClass25 = signature24.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray26 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass25);
        org.mockito.cglib.core.ClassInfo classInfo27 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass25);
        java.beans.PropertyDescriptor[] propertyDescriptorArray28 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass25);
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        org.mockito.cglib.core.ClassInfo classInfo31 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass30);
        java.util.List list32 = null;
        java.util.List list33 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass30, list32);
        java.lang.String[] strArray34 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray35 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray34, methodArray35);
        java.lang.String[] strArray37 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray38 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray39 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray37, methodArray38);
        java.lang.reflect.Method[] methodArray40 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray34, methodArray39);
        java.lang.String[] strArray41 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray42 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray43 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray41, methodArray42);
        java.lang.String[] strArray44 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray45 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray46 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray44, methodArray45);
        java.lang.reflect.Method[] methodArray47 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray41, methodArray46);
        java.lang.reflect.Method[] methodArray48 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray34, methodArray47);
        java.lang.Class[] classArray49 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray47);
        java.lang.reflect.Constructor constructor50 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass30, classArray49);
        org.mockito.cglib.core.MethodInfo methodInfo51 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor50);
        java.lang.String[] strArray52 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray53 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray54 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray52, methodArray53);
        java.lang.String[] strArray55 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray56 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray57 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray55, methodArray56);
        java.lang.reflect.Method[] methodArray58 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray52, methodArray57);
        java.lang.String[] strArray59 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray60 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray61 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray59, methodArray60);
        java.lang.String[] strArray62 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray63 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray64 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray62, methodArray63);
        java.lang.reflect.Method[] methodArray65 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray59, methodArray64);
        java.lang.reflect.Method[] methodArray66 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray52, methodArray65);
        java.lang.String[] strArray67 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray68 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray69 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray67, methodArray68);
        java.lang.reflect.Method[] methodArray70 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray52, methodArray69);
        java.lang.Object obj71 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor50, (java.lang.Object[]) strArray52);
        org.mockito.cglib.core.MethodInfo methodInfo73 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor50, (int) (byte) 0);
        java.beans.PropertyDescriptor[] propertyDescriptorArray74 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray77 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray74, true, true);
        java.lang.reflect.Method[] methodArray80 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray74, false, true);
        java.lang.Class[] classArray81 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray74);
        java.lang.Object obj82 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor50, (java.lang.Object[]) classArray81);
        org.mockito.asm.Type[] typeArray83 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor50);
        org.mockito.cglib.core.Signature signature84 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor50);
        org.mockito.cglib.core.MethodInfo methodInfo85 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor50);
        java.beans.PropertyDescriptor[] propertyDescriptorArray86 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray89 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray86, true, true);
        java.lang.reflect.Method[] methodArray92 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray86, false, true);
        java.lang.Class[] classArray93 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray86);
        java.lang.String[] strArray94 = org.mockito.cglib.core.ReflectUtils.getNames(classArray93);
        int int95 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray93);
        java.lang.String[] strArray96 = org.mockito.cglib.core.ReflectUtils.getNames(classArray93);
        java.lang.Object obj97 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor50, (java.lang.Object[]) classArray93);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Constructor constructor98 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass25, classArray93);
            org.junit.Assert.fail("Expected exception of type org.mockito.cglib.core.CodeGenerationException; message: java.lang.NoSuchMethodException-->org.mockito.cglib.core.Signature.<init>()");
        } catch (org.mockito.cglib.core.CodeGenerationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo23);
        org.junit.Assert.assertNotNull(signature24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(propertyDescriptorArray26);
        org.junit.Assert.assertNotNull(classInfo27);
        org.junit.Assert.assertNotNull(propertyDescriptorArray28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classInfo31);
        org.junit.Assert.assertNull(list33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(methodArray38);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(methodArray42);
        org.junit.Assert.assertNotNull(methodArray43);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(methodArray45);
        org.junit.Assert.assertNotNull(methodArray46);
        org.junit.Assert.assertNotNull(methodArray47);
        org.junit.Assert.assertNotNull(methodArray48);
        org.junit.Assert.assertNotNull(classArray49);
        org.junit.Assert.assertNotNull(constructor50);
        org.junit.Assert.assertNotNull(methodInfo51);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(methodArray53);
        org.junit.Assert.assertNotNull(methodArray54);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(methodArray56);
        org.junit.Assert.assertNotNull(methodArray57);
        org.junit.Assert.assertNotNull(methodArray58);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(methodArray60);
        org.junit.Assert.assertNotNull(methodArray61);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(methodArray63);
        org.junit.Assert.assertNotNull(methodArray64);
        org.junit.Assert.assertNotNull(methodArray65);
        org.junit.Assert.assertNotNull(methodArray66);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(methodArray68);
        org.junit.Assert.assertNotNull(methodArray69);
        org.junit.Assert.assertNotNull(methodArray70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(methodInfo73);
        org.junit.Assert.assertNotNull(propertyDescriptorArray74);
        org.junit.Assert.assertNotNull(methodArray77);
        org.junit.Assert.assertNotNull(methodArray80);
        org.junit.Assert.assertNotNull(classArray81);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(typeArray83);
        org.junit.Assert.assertNotNull(signature84);
        org.junit.Assert.assertNotNull(methodInfo85);
        org.junit.Assert.assertNotNull(propertyDescriptorArray86);
        org.junit.Assert.assertNotNull(methodArray89);
        org.junit.Assert.assertNotNull(methodArray92);
        org.junit.Assert.assertNotNull(classArray93);
        org.junit.Assert.assertNotNull(strArray94);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 0 + "'", int95 == 0);
        org.junit.Assert.assertNotNull(strArray96);
        org.junit.Assert.assertNotNull(obj97);
    }

    @Test
    public void test1158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1158");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.beans.PropertyDescriptor[] propertyDescriptorArray23 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray23, false, true);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray23, false, false);
        java.lang.Object obj30 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) methodArray29);
        java.beans.PropertyDescriptor[] propertyDescriptorArray31 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray31, true, true);
        java.lang.Object obj35 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) propertyDescriptorArray31);
        java.lang.String[] strArray36 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray37 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray38 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray37);
        java.lang.String[] strArray39 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray40 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray39, methodArray40);
        java.lang.reflect.Method[] methodArray42 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray41);
        java.lang.String[] strArray43 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray44 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray45 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray43, methodArray44);
        java.lang.String[] strArray46 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray47 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray48 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray46, methodArray47);
        java.lang.reflect.Method[] methodArray49 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray43, methodArray48);
        java.lang.reflect.Method[] methodArray50 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray49);
        java.lang.String[] strArray51 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray52 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray53 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray51, methodArray52);
        java.lang.String[] strArray54 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray55 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray56 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray54, methodArray55);
        java.lang.String[] strArray57 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray58 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray59 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray57, methodArray58);
        java.lang.String[] strArray60 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray61 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray62 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray60, methodArray61);
        java.lang.reflect.Method[] methodArray63 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray57, methodArray62);
        java.lang.reflect.Method[] methodArray64 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray54, methodArray63);
        java.lang.reflect.Method[] methodArray65 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray51, methodArray64);
        java.lang.reflect.Method[] methodArray66 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray64);
        java.lang.Object obj67 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) methodArray66);
        org.mockito.cglib.core.MethodInfo methodInfo68 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        org.mockito.asm.Type[] typeArray69 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        org.mockito.cglib.core.ClassInfo classInfo72 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass71);
        java.lang.Object obj73 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass71);
        java.beans.PropertyDescriptor[] propertyDescriptorArray74 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray77 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray74, false, true);
        java.lang.Class[] classArray78 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray74);
        java.lang.Class[] classArray79 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray78);
        java.lang.String[] strArray80 = org.mockito.cglib.core.ReflectUtils.getNames(classArray79);
        java.lang.reflect.Constructor constructor81 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass71, classArray79);
        org.mockito.cglib.core.MethodInfo methodInfo82 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor81);
        java.lang.Object obj83 = new java.lang.Object();
        java.lang.Class<?> wildcardClass84 = obj83.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray85 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray88 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray85, false, true);
        java.lang.Class[] classArray89 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray88);
        java.lang.Object[] objArray90 = null;
        java.lang.Object obj91 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass84, classArray89, objArray90);
        java.lang.Object obj92 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor81, (java.lang.Object[]) classArray89);
        java.lang.Object obj93 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) classArray89);
        org.mockito.asm.Type[] typeArray94 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        org.mockito.cglib.core.MethodInfo methodInfo96 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21, (-1));
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(propertyDescriptorArray23);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(propertyDescriptorArray31);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(methodArray38);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(methodArray42);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(methodArray44);
        org.junit.Assert.assertNotNull(methodArray45);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(methodArray47);
        org.junit.Assert.assertNotNull(methodArray48);
        org.junit.Assert.assertNotNull(methodArray49);
        org.junit.Assert.assertNotNull(methodArray50);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(methodArray52);
        org.junit.Assert.assertNotNull(methodArray53);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(methodArray55);
        org.junit.Assert.assertNotNull(methodArray56);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(methodArray58);
        org.junit.Assert.assertNotNull(methodArray59);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(methodArray61);
        org.junit.Assert.assertNotNull(methodArray62);
        org.junit.Assert.assertNotNull(methodArray63);
        org.junit.Assert.assertNotNull(methodArray64);
        org.junit.Assert.assertNotNull(methodArray65);
        org.junit.Assert.assertNotNull(methodArray66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(methodInfo68);
        org.junit.Assert.assertNotNull(typeArray69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(classInfo72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(propertyDescriptorArray74);
        org.junit.Assert.assertNotNull(methodArray77);
        org.junit.Assert.assertNotNull(classArray78);
        org.junit.Assert.assertNotNull(classArray79);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertNotNull(constructor81);
        org.junit.Assert.assertNotNull(methodInfo82);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(propertyDescriptorArray85);
        org.junit.Assert.assertNotNull(methodArray88);
        org.junit.Assert.assertNotNull(classArray89);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(typeArray94);
        org.junit.Assert.assertNotNull(methodInfo96);
    }

    @Test
    public void test1159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1159");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        java.lang.Object obj2 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.beans.PropertyDescriptor[] propertyDescriptorArray3 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray3, false, true);
        java.lang.Class[] classArray7 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray3);
        java.lang.Class[] classArray8 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray7);
        java.lang.String[] strArray9 = org.mockito.cglib.core.ReflectUtils.getNames(classArray8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.Object obj13 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray8, (java.lang.Object[]) strArray10);
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        org.mockito.cglib.core.ClassInfo classInfo16 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass15);
        java.util.List list17 = null;
        java.util.List list18 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass15, list17);
        java.lang.String[] strArray19 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray20 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray21 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray19, methodArray20);
        java.lang.String[] strArray22 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray23 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray24 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray22, methodArray23);
        java.lang.reflect.Method[] methodArray25 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray19, methodArray24);
        java.lang.String[] strArray26 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray27 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray26, methodArray27);
        java.lang.String[] strArray29 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray30 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray31 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray29, methodArray30);
        java.lang.reflect.Method[] methodArray32 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray26, methodArray31);
        java.lang.reflect.Method[] methodArray33 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray19, methodArray32);
        java.lang.Class[] classArray34 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray32);
        java.lang.reflect.Constructor constructor35 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass15, classArray34);
        org.mockito.cglib.core.MethodInfo methodInfo36 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor35);
        java.beans.PropertyDescriptor[] propertyDescriptorArray37 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray40 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray37, false, true);
        java.lang.reflect.Method[] methodArray43 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray37, false, false);
        java.lang.Object obj44 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor35, (java.lang.Object[]) methodArray43);
        java.beans.PropertyDescriptor[] propertyDescriptorArray45 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray48 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray45, true, true);
        java.lang.Object obj49 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor35, (java.lang.Object[]) propertyDescriptorArray45);
        org.mockito.asm.Type[] typeArray50 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor35);
        java.beans.PropertyDescriptor[] propertyDescriptorArray51 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray54 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray51, false, true);
        java.lang.Class[] classArray55 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray51);
        java.lang.reflect.Method[] methodArray58 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray51, true, false);
        java.lang.Object obj59 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor35, (java.lang.Object[]) propertyDescriptorArray51);
        java.lang.reflect.Method[] methodArray62 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray51, true, false);
        java.lang.reflect.Method[] methodArray65 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray51, true, false);
        java.lang.Class[] classArray66 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray65);
        java.lang.Object[] objArray67 = null;
        java.lang.Object obj68 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray66, objArray67);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(propertyDescriptorArray3);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(classArray7);
        org.junit.Assert.assertNotNull(classArray8);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(classInfo16);
        org.junit.Assert.assertNull(list18);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(methodArray20);
        org.junit.Assert.assertNotNull(methodArray21);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(methodArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(methodArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(methodArray33);
        org.junit.Assert.assertNotNull(classArray34);
        org.junit.Assert.assertNotNull(constructor35);
        org.junit.Assert.assertNotNull(methodInfo36);
        org.junit.Assert.assertNotNull(propertyDescriptorArray37);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(propertyDescriptorArray45);
        org.junit.Assert.assertNotNull(methodArray48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(typeArray50);
        org.junit.Assert.assertNotNull(propertyDescriptorArray51);
        org.junit.Assert.assertNotNull(methodArray54);
        org.junit.Assert.assertNotNull(classArray55);
        org.junit.Assert.assertNotNull(methodArray58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(methodArray62);
        org.junit.Assert.assertNotNull(methodArray65);
        org.junit.Assert.assertNotNull(classArray66);
        org.junit.Assert.assertNotNull(obj68);
    }

    @Test
    public void test1160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1160");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        java.util.List list2 = null;
        java.util.List list3 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list2);
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        org.mockito.cglib.core.ClassInfo classInfo6 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass5);
        java.beans.PropertyDescriptor[] propertyDescriptorArray8 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray8, false, true);
        java.lang.Class[] classArray12 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray8);
        java.lang.Class[] classArray13 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray12);
        java.lang.String[] strArray14 = org.mockito.cglib.core.ReflectUtils.getNames(classArray13);
        java.lang.reflect.Constructor constructor15 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass5, classArray13);
        org.mockito.cglib.core.MethodInfo methodInfo16 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor15);
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray19 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray22 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray19, false, true);
        java.lang.Class[] classArray23 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray22);
        java.lang.Object[] objArray24 = null;
        java.lang.Object obj25 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass18, classArray23, objArray24);
        java.lang.Object obj26 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor15, (java.lang.Object[]) classArray23);
        java.lang.String[] strArray27 = org.mockito.cglib.core.ReflectUtils.getNames(classArray23);
        java.lang.reflect.Constructor constructor28 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray23);
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray31 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray31, false, true);
        java.lang.Class[] classArray35 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray34);
        java.lang.Object[] objArray36 = null;
        java.lang.Object obj37 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass30, classArray35, objArray36);
        int int38 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray35);
        java.lang.reflect.Constructor constructor39 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray35);
        // The following exception was thrown during execution in test generation
        try {
            java.beans.PropertyDescriptor[] propertyDescriptorArray40 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass1);
            org.junit.Assert.fail("Expected exception of type org.mockito.cglib.core.CodeGenerationException; message: java.beans.IntrospectionException-->java.lang.Object not superclass of java.lang.Object");
        } catch (org.mockito.cglib.core.CodeGenerationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNull(list3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(classInfo6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(propertyDescriptorArray8);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(classArray13);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(constructor15);
        org.junit.Assert.assertNotNull(methodInfo16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(propertyDescriptorArray19);
        org.junit.Assert.assertNotNull(methodArray22);
        org.junit.Assert.assertNotNull(classArray23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(constructor28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(propertyDescriptorArray31);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(classArray35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(constructor39);
    }

    @Test
    public void test1161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1161");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.lang.Object obj3 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.beans.PropertyDescriptor[] propertyDescriptorArray4 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray4, false, true);
        java.lang.Class[] classArray8 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray4);
        java.lang.Class[] classArray9 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray8);
        java.lang.String[] strArray10 = org.mockito.cglib.core.ReflectUtils.getNames(classArray9);
        java.lang.reflect.Constructor constructor11 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray9);
        org.mockito.cglib.core.MethodInfo methodInfo12 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray15 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray15, false, true);
        java.lang.Class[] classArray19 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.Object[] objArray20 = null;
        java.lang.Object obj21 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass14, classArray19, objArray20);
        java.lang.Object obj22 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor11, (java.lang.Object[]) classArray19);
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray25 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray25, false, true);
        java.lang.Class[] classArray29 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray28);
        java.lang.Object[] objArray30 = null;
        java.lang.Object obj31 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass24, classArray29, objArray30);
        java.lang.String[] strArray32 = org.mockito.cglib.core.ReflectUtils.getNames(classArray29);
        java.lang.Object obj33 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor11, (java.lang.Object[]) strArray32);
        java.beans.PropertyDescriptor[] propertyDescriptorArray34 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray37 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray34, false, true);
        java.lang.Class[] classArray38 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray34);
        int int39 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray38);
        java.lang.String[] strArray40 = org.mockito.cglib.core.ReflectUtils.getNames(classArray38);
        java.lang.String[] strArray41 = org.mockito.cglib.core.ReflectUtils.getNames(classArray38);
        java.lang.Class[] classArray42 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) strArray41);
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        org.mockito.cglib.core.ClassInfo classInfo45 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass44);
        java.util.List list46 = null;
        java.util.List list47 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass44, list46);
        java.beans.PropertyDescriptor[] propertyDescriptorArray48 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray51 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray48, false, true);
        java.lang.Class[] classArray52 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray48);
        int int53 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray52);
        java.lang.String[] strArray54 = org.mockito.cglib.core.ReflectUtils.getNames(classArray52);
        java.lang.String[] strArray55 = org.mockito.cglib.core.ReflectUtils.getNames(classArray52);
        java.lang.String[] strArray56 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray57 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray58 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray56, methodArray57);
        java.lang.String[] strArray59 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray60 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray61 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray59, methodArray60);
        java.lang.reflect.Method[] methodArray62 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray56, methodArray61);
        java.lang.String[] strArray63 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray64 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray65 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray63, methodArray64);
        java.lang.String[] strArray66 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray67 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray68 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray66, methodArray67);
        java.lang.reflect.Method[] methodArray69 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray63, methodArray68);
        java.lang.reflect.Method[] methodArray70 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray56, methodArray69);
        java.lang.Object obj71 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass44, classArray52, (java.lang.Object[]) methodArray70);
        java.lang.reflect.Method[] methodArray72 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray41, methodArray70);
        java.lang.reflect.Method[] methodArray73 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray32, methodArray70);
        java.lang.Class<?> wildcardClass74 = methodArray70.getClass();
        java.util.List list75 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List list76 = org.mockito.cglib.core.ReflectUtils.addAllMethods((java.lang.Class) wildcardClass74, list75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(propertyDescriptorArray4);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(classArray8);
        org.junit.Assert.assertNotNull(classArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(constructor11);
        org.junit.Assert.assertNotNull(methodInfo12);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(propertyDescriptorArray15);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(classArray19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(propertyDescriptorArray25);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(classArray29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(propertyDescriptorArray34);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(classArray38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(classArray42);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(classInfo45);
        org.junit.Assert.assertNull(list47);
        org.junit.Assert.assertNotNull(propertyDescriptorArray48);
        org.junit.Assert.assertNotNull(methodArray51);
        org.junit.Assert.assertNotNull(classArray52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(methodArray57);
        org.junit.Assert.assertNotNull(methodArray58);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(methodArray60);
        org.junit.Assert.assertNotNull(methodArray61);
        org.junit.Assert.assertNotNull(methodArray62);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(methodArray64);
        org.junit.Assert.assertNotNull(methodArray65);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(methodArray67);
        org.junit.Assert.assertNotNull(methodArray68);
        org.junit.Assert.assertNotNull(methodArray69);
        org.junit.Assert.assertNotNull(methodArray70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(methodArray72);
        org.junit.Assert.assertNotNull(methodArray73);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test1162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1162");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray1 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray2 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray1);
        java.lang.String[] strArray3 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray4 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray3, methodArray4);
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray5);
        java.lang.String[] strArray7 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray8 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray9 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.reflect.Method[] methodArray13 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray12);
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray13);
        java.lang.Class<?> wildcardClass15 = methodArray13.getClass();
        org.mockito.cglib.core.ClassInfo classInfo16 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass15);
        java.beans.PropertyDescriptor[] propertyDescriptorArray17 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass15);
        java.beans.PropertyDescriptor[] propertyDescriptorArray18 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass15);
        org.mockito.cglib.core.ClassInfo classInfo19 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass15);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method20 = org.mockito.cglib.core.ReflectUtils.findInterfaceMethod((java.lang.Class) wildcardClass15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: class [Ljava.lang.reflect.Method; is not an interface");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(methodArray1);
        org.junit.Assert.assertNotNull(methodArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(methodArray4);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(methodArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(classInfo16);
        org.junit.Assert.assertNotNull(propertyDescriptorArray17);
        org.junit.Assert.assertNotNull(propertyDescriptorArray18);
        org.junit.Assert.assertNotNull(classInfo19);
    }

    @Test
    public void test1163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1163");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        java.lang.Object obj2 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.lang.String[] strArray3 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray4 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray3, methodArray4);
        java.lang.Class[] classArray6 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) strArray3);
        int int7 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray6);
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        org.mockito.cglib.core.ClassInfo classInfo10 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass9);
        java.util.List list11 = null;
        java.util.List list12 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass9, list11);
        java.lang.String[] strArray13 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray14 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray15 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray13, methodArray14);
        java.lang.String[] strArray16 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray17 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray16, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray13, methodArray18);
        java.lang.String[] strArray20 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray21 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray22 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray20, methodArray21);
        java.lang.String[] strArray23 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray24 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray25 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray24);
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray20, methodArray25);
        java.lang.reflect.Method[] methodArray27 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray13, methodArray26);
        java.lang.Class[] classArray28 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray26);
        java.lang.reflect.Constructor constructor29 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass9, classArray28);
        org.mockito.cglib.core.MethodInfo methodInfo30 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor29);
        java.lang.String[] strArray31 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray32 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray33 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray31, methodArray32);
        java.lang.String[] strArray34 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray35 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray34, methodArray35);
        java.lang.reflect.Method[] methodArray37 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray31, methodArray36);
        java.lang.String[] strArray38 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray39 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray40 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray38, methodArray39);
        java.lang.String[] strArray41 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray42 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray43 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray41, methodArray42);
        java.lang.reflect.Method[] methodArray44 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray38, methodArray43);
        java.lang.reflect.Method[] methodArray45 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray31, methodArray44);
        java.lang.String[] strArray46 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray47 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray48 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray46, methodArray47);
        java.lang.reflect.Method[] methodArray49 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray31, methodArray48);
        java.lang.Object obj50 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor29, (java.lang.Object[]) strArray31);
        java.beans.PropertyDescriptor[] propertyDescriptorArray51 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray54 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray51, false, true);
        java.lang.Class[] classArray55 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray54);
        java.lang.reflect.Method[] methodArray56 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray31, methodArray54);
        java.lang.Object obj57 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray6, (java.lang.Object[]) methodArray54);
        int int58 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray6);
        java.lang.Class<?> wildcardClass59 = classArray6.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray60 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass59);
        java.beans.PropertyDescriptor[] propertyDescriptorArray61 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass59);
        java.util.List list62 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List list63 = org.mockito.cglib.core.ReflectUtils.addAllMethods((java.lang.Class) wildcardClass59, list62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(methodArray4);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(classArray6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classInfo10);
        org.junit.Assert.assertNull(list12);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(methodArray15);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(methodArray21);
        org.junit.Assert.assertNotNull(methodArray22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(classArray28);
        org.junit.Assert.assertNotNull(constructor29);
        org.junit.Assert.assertNotNull(methodInfo30);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(methodArray33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(methodArray42);
        org.junit.Assert.assertNotNull(methodArray43);
        org.junit.Assert.assertNotNull(methodArray44);
        org.junit.Assert.assertNotNull(methodArray45);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(methodArray47);
        org.junit.Assert.assertNotNull(methodArray48);
        org.junit.Assert.assertNotNull(methodArray49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(propertyDescriptorArray51);
        org.junit.Assert.assertNotNull(methodArray54);
        org.junit.Assert.assertNotNull(classArray55);
        org.junit.Assert.assertNotNull(methodArray56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(propertyDescriptorArray60);
        org.junit.Assert.assertNotNull(propertyDescriptorArray61);
    }

    @Test
    public void test1164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1164");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray1 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray2 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray1);
        java.lang.String[] strArray3 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray4 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray3, methodArray4);
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray5);
        java.lang.String[] strArray7 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray8 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray9 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.reflect.Method[] methodArray13 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray12);
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray13);
        java.lang.Class[] classArray15 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray13);
        java.lang.Class<?> wildcardClass16 = classArray15.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray17 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass16);
        java.beans.PropertyDescriptor[] propertyDescriptorArray18 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass16);
        java.beans.PropertyDescriptor[] propertyDescriptorArray19 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass16);
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        org.mockito.cglib.core.ClassInfo classInfo23 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass22);
        java.lang.Object obj24 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass22);
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        org.mockito.cglib.core.ClassInfo classInfo27 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass26);
        java.util.List list28 = null;
        java.util.List list29 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass26, list28);
        java.lang.String[] strArray30 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray31 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray32 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray31);
        java.lang.String[] strArray33 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray34 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray33, methodArray34);
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray35);
        java.lang.String[] strArray37 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray38 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray39 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray37, methodArray38);
        java.lang.String[] strArray40 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray41 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray42 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray40, methodArray41);
        java.lang.reflect.Method[] methodArray43 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray37, methodArray42);
        java.lang.reflect.Method[] methodArray44 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray43);
        java.lang.Class[] classArray45 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray43);
        java.lang.reflect.Constructor constructor46 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass26, classArray45);
        java.lang.Class[] classArray47 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray45);
        java.lang.reflect.Constructor constructor48 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass22, classArray47);
        int int49 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray47);
        java.lang.String[] strArray50 = org.mockito.cglib.core.ReflectUtils.getNames(classArray47);
        int int51 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray47);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method52 = org.mockito.cglib.core.ReflectUtils.findDeclaredMethod((java.lang.Class) wildcardClass16, "", classArray47);
            org.junit.Assert.fail("Expected exception of type java.lang.NoSuchMethodException; message: ");
        } catch (java.lang.NoSuchMethodException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(methodArray1);
        org.junit.Assert.assertNotNull(methodArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(methodArray4);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(methodArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(classArray15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(propertyDescriptorArray17);
        org.junit.Assert.assertNotNull(propertyDescriptorArray18);
        org.junit.Assert.assertNotNull(propertyDescriptorArray19);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(classInfo23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(classInfo27);
        org.junit.Assert.assertNull(list29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(methodArray38);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(methodArray42);
        org.junit.Assert.assertNotNull(methodArray43);
        org.junit.Assert.assertNotNull(methodArray44);
        org.junit.Assert.assertNotNull(classArray45);
        org.junit.Assert.assertNotNull(constructor46);
        org.junit.Assert.assertNotNull(classArray47);
        org.junit.Assert.assertNotNull(constructor48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
    }

    @Test
    public void test1165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1165");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.lang.Object obj3 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.beans.PropertyDescriptor[] propertyDescriptorArray4 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray4, false, true);
        java.lang.Class[] classArray8 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray4);
        java.lang.Class[] classArray9 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray8);
        java.lang.String[] strArray10 = org.mockito.cglib.core.ReflectUtils.getNames(classArray9);
        java.lang.reflect.Constructor constructor11 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray9);
        org.mockito.cglib.core.MethodInfo methodInfo12 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor11);
        org.mockito.cglib.core.Signature signature13 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor11);
        org.mockito.cglib.core.MethodInfo methodInfo15 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor11, (int) 'a');
        java.lang.Class<?> wildcardClass16 = methodInfo15.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(propertyDescriptorArray4);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(classArray8);
        org.junit.Assert.assertNotNull(classArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(constructor11);
        org.junit.Assert.assertNotNull(methodInfo12);
        org.junit.Assert.assertNotNull(signature13);
        org.junit.Assert.assertNotNull(methodInfo15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1166");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray1 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray2 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray1);
        java.lang.String[] strArray3 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray4 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray3, methodArray4);
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray5);
        java.lang.String[] strArray7 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray8 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray9 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.reflect.Method[] methodArray13 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray12);
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray13);
        java.lang.Class<?> wildcardClass15 = methodArray13.getClass();
        org.mockito.cglib.core.ClassInfo classInfo16 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass15);
        java.beans.PropertyDescriptor[] propertyDescriptorArray17 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass15);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj18 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass15);
            org.junit.Assert.fail("Expected exception of type org.mockito.cglib.core.CodeGenerationException; message: java.lang.NoSuchMethodException-->[Ljava.lang.reflect.Method;.<init>()");
        } catch (org.mockito.cglib.core.CodeGenerationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(methodArray1);
        org.junit.Assert.assertNotNull(methodArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(methodArray4);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(methodArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(classInfo16);
        org.junit.Assert.assertNotNull(propertyDescriptorArray17);
    }

    @Test
    public void test1167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1167");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray1 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray2 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray1);
        java.lang.String[] strArray3 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray4 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray3, methodArray4);
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray5);
        java.lang.String[] strArray7 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray8 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray9 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.reflect.Method[] methodArray13 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray12);
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray13);
        java.lang.Class<?> wildcardClass15 = methodArray13.getClass();
        org.mockito.cglib.core.ClassInfo classInfo16 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass15);
        java.beans.PropertyDescriptor[] propertyDescriptorArray17 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass15);
        org.mockito.cglib.core.ClassInfo classInfo18 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass15);
        java.beans.PropertyDescriptor[] propertyDescriptorArray19 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass15);
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(methodArray1);
        org.junit.Assert.assertNotNull(methodArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(methodArray4);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(methodArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(classInfo16);
        org.junit.Assert.assertNotNull(propertyDescriptorArray17);
        org.junit.Assert.assertNotNull(classInfo18);
        org.junit.Assert.assertNotNull(propertyDescriptorArray19);
    }

    @Test
    public void test1168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1168");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.lang.Object obj3 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        org.mockito.cglib.core.ClassInfo classInfo6 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass5);
        java.util.List list7 = null;
        java.util.List list8 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass5, list7);
        java.lang.String[] strArray9 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray10 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray9, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.reflect.Method[] methodArray15 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray9, methodArray14);
        java.lang.String[] strArray16 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray17 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray16, methodArray17);
        java.lang.String[] strArray19 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray20 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray21 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray19, methodArray20);
        java.lang.reflect.Method[] methodArray22 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray16, methodArray21);
        java.lang.reflect.Method[] methodArray23 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray9, methodArray22);
        java.lang.Class[] classArray24 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray22);
        java.lang.reflect.Constructor constructor25 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass5, classArray24);
        java.lang.Class[] classArray26 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray24);
        java.lang.reflect.Constructor constructor27 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray26);
        java.lang.Object obj28 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.util.List list29 = null;
        java.util.List list30 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list29);
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        org.mockito.cglib.core.ClassInfo classInfo34 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass33);
        java.util.List list35 = null;
        java.util.List list36 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass33, list35);
        java.lang.String[] strArray37 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray38 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray39 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray37, methodArray38);
        java.lang.String[] strArray40 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray41 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray42 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray40, methodArray41);
        java.lang.reflect.Method[] methodArray43 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray37, methodArray42);
        java.lang.String[] strArray44 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray45 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray46 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray44, methodArray45);
        java.lang.String[] strArray47 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray48 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray49 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray47, methodArray48);
        java.lang.reflect.Method[] methodArray50 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray44, methodArray49);
        java.lang.reflect.Method[] methodArray51 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray37, methodArray50);
        java.lang.Class[] classArray52 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray50);
        java.lang.reflect.Constructor constructor53 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass33, classArray52);
        org.mockito.cglib.core.MethodInfo methodInfo54 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor53);
        java.beans.PropertyDescriptor[] propertyDescriptorArray55 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray58 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray55, false, true);
        java.lang.reflect.Method[] methodArray61 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray55, false, false);
        java.lang.Object obj62 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor53, (java.lang.Object[]) methodArray61);
        java.lang.Class[] classArray63 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray61);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method64 = org.mockito.cglib.core.ReflectUtils.findDeclaredMethod((java.lang.Class) wildcardClass1, "", classArray63);
            org.junit.Assert.fail("Expected exception of type java.lang.NoSuchMethodException; message: ");
        } catch (java.lang.NoSuchMethodException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(classInfo6);
        org.junit.Assert.assertNull(list8);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(methodArray15);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(methodArray20);
        org.junit.Assert.assertNotNull(methodArray21);
        org.junit.Assert.assertNotNull(methodArray22);
        org.junit.Assert.assertNotNull(methodArray23);
        org.junit.Assert.assertNotNull(classArray24);
        org.junit.Assert.assertNotNull(constructor25);
        org.junit.Assert.assertNotNull(classArray26);
        org.junit.Assert.assertNotNull(constructor27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNull(list30);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(classInfo34);
        org.junit.Assert.assertNull(list36);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(methodArray38);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(methodArray42);
        org.junit.Assert.assertNotNull(methodArray43);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(methodArray45);
        org.junit.Assert.assertNotNull(methodArray46);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(methodArray48);
        org.junit.Assert.assertNotNull(methodArray49);
        org.junit.Assert.assertNotNull(methodArray50);
        org.junit.Assert.assertNotNull(methodArray51);
        org.junit.Assert.assertNotNull(classArray52);
        org.junit.Assert.assertNotNull(constructor53);
        org.junit.Assert.assertNotNull(methodInfo54);
        org.junit.Assert.assertNotNull(propertyDescriptorArray55);
        org.junit.Assert.assertNotNull(methodArray58);
        org.junit.Assert.assertNotNull(methodArray61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(classArray63);
    }

    @Test
    public void test1169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1169");
        java.lang.Class class0 = null;
        java.lang.Object obj1 = new java.lang.Object();
        java.lang.Class<?> wildcardClass2 = obj1.getClass();
        org.mockito.cglib.core.ClassInfo classInfo3 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass2);
        java.lang.Object obj4 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass2);
        java.beans.PropertyDescriptor[] propertyDescriptorArray5 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray8 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray5, false, true);
        java.lang.Class[] classArray9 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray5);
        java.lang.Class[] classArray10 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray9);
        java.lang.String[] strArray11 = org.mockito.cglib.core.ReflectUtils.getNames(classArray10);
        java.lang.reflect.Constructor constructor12 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass2, classArray10);
        org.mockito.cglib.core.MethodInfo methodInfo13 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor12);
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray16 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray16, false, true);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray19);
        java.lang.Object[] objArray21 = null;
        java.lang.Object obj22 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass15, classArray20, objArray21);
        java.lang.Object obj23 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor12, (java.lang.Object[]) classArray20);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Constructor constructor24 = org.mockito.cglib.core.ReflectUtils.getConstructor(class0, classArray20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(classInfo3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(propertyDescriptorArray5);
        org.junit.Assert.assertNotNull(methodArray8);
        org.junit.Assert.assertNotNull(classArray9);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(constructor12);
        org.junit.Assert.assertNotNull(methodInfo13);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(propertyDescriptorArray16);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
    }

    @Test
    public void test1170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1170");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.lang.String[] strArray23 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray24 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray25 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray24);
        java.lang.String[] strArray26 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray27 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray26, methodArray27);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray28);
        java.lang.String[] strArray30 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray31 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray32 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray31);
        java.lang.String[] strArray33 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray34 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray33, methodArray34);
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray35);
        java.lang.reflect.Method[] methodArray37 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray36);
        java.lang.String[] strArray38 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray39 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray40 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray38, methodArray39);
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray40);
        java.lang.Object obj42 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) strArray23);
        org.mockito.cglib.core.MethodInfo methodInfo44 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21, (int) (byte) 0);
        org.mockito.asm.Type[] typeArray45 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        org.mockito.cglib.core.MethodInfo methodInfo47 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21, (int) '4');
        org.mockito.cglib.core.Signature signature48 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor21);
        org.mockito.asm.Type[] typeArray49 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        org.mockito.cglib.core.Signature signature50 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor21);
        org.mockito.asm.Type[] typeArray51 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(methodInfo44);
        org.junit.Assert.assertNotNull(typeArray45);
        org.junit.Assert.assertNotNull(methodInfo47);
        org.junit.Assert.assertNotNull(signature48);
        org.junit.Assert.assertNotNull(typeArray49);
        org.junit.Assert.assertNotNull(signature50);
        org.junit.Assert.assertNotNull(typeArray51);
    }

    @Test
    public void test1171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1171");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.lang.Object obj3 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.beans.PropertyDescriptor[] propertyDescriptorArray4 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray4, false, true);
        java.lang.Class[] classArray8 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray4);
        java.lang.Class[] classArray9 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray8);
        java.lang.String[] strArray10 = org.mockito.cglib.core.ReflectUtils.getNames(classArray9);
        java.lang.reflect.Constructor constructor11 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray9);
        java.lang.Object obj12 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        org.mockito.cglib.core.ClassInfo classInfo13 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list14 = null;
        java.util.List list15 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list14);
        java.lang.Object obj16 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.util.List list17 = null;
        java.util.List list18 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list17);
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        org.mockito.cglib.core.ClassInfo classInfo22 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass21);
        java.lang.Object obj23 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass21);
        java.beans.PropertyDescriptor[] propertyDescriptorArray24 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray27 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray24, false, true);
        java.lang.Class[] classArray28 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray24);
        java.lang.Class[] classArray29 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray28);
        java.lang.String[] strArray30 = org.mockito.cglib.core.ReflectUtils.getNames(classArray29);
        java.lang.reflect.Constructor constructor31 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass21, classArray29);
        java.lang.Object obj32 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass21);
        org.mockito.cglib.core.ClassInfo classInfo33 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass21);
        java.util.List list34 = null;
        java.util.List list35 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass21, list34);
        java.lang.Object obj36 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass21);
        java.beans.PropertyDescriptor[] propertyDescriptorArray37 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray40 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray37, false, true);
        java.lang.Class[] classArray41 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray37);
        java.lang.Class[] classArray42 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray41);
        java.lang.String[] strArray43 = org.mockito.cglib.core.ReflectUtils.getNames(classArray42);
        int int44 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray42);
        int int45 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray42);
        java.lang.reflect.Constructor constructor46 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass21, classArray42);
        java.lang.String[] strArray47 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray48 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray49 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray47, methodArray48);
        java.lang.Class[] classArray50 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) strArray47);
        java.lang.String[] strArray51 = org.mockito.cglib.core.ReflectUtils.getNames(classArray50);
        java.lang.reflect.Constructor constructor52 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass21, classArray50);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method53 = org.mockito.cglib.core.ReflectUtils.findDeclaredMethod((java.lang.Class) wildcardClass1, "hi!", classArray50);
            org.junit.Assert.fail("Expected exception of type java.lang.NoSuchMethodException; message: hi!");
        } catch (java.lang.NoSuchMethodException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(propertyDescriptorArray4);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(classArray8);
        org.junit.Assert.assertNotNull(classArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(constructor11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(classInfo13);
        org.junit.Assert.assertNull(list15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNull(list18);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(classInfo22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(propertyDescriptorArray24);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(classArray28);
        org.junit.Assert.assertNotNull(classArray29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(constructor31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(classInfo33);
        org.junit.Assert.assertNull(list35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(propertyDescriptorArray37);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(classArray41);
        org.junit.Assert.assertNotNull(classArray42);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(constructor46);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(methodArray48);
        org.junit.Assert.assertNotNull(methodArray49);
        org.junit.Assert.assertNotNull(classArray50);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(constructor52);
    }

    @Test
    public void test1172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1172");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.lang.String[] strArray23 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray24 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray25 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray24);
        java.lang.String[] strArray26 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray27 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray26, methodArray27);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray28);
        java.lang.String[] strArray30 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray31 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray32 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray31);
        java.lang.String[] strArray33 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray34 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray33, methodArray34);
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray35);
        java.lang.reflect.Method[] methodArray37 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray36);
        java.lang.String[] strArray38 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray39 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray40 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray38, methodArray39);
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray40);
        java.lang.Object obj42 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) strArray23);
        org.mockito.asm.Type[] typeArray43 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        java.lang.Class<?> wildcardClass44 = typeArray43.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray45 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass44);
        java.beans.PropertyDescriptor[] propertyDescriptorArray47 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray50 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray47, false, true);
        java.lang.Class[] classArray51 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray47);
        java.lang.Class[] classArray52 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray51);
        java.lang.String[] strArray53 = org.mockito.cglib.core.ReflectUtils.getNames(classArray51);
        java.lang.String[] strArray54 = org.mockito.cglib.core.ReflectUtils.getNames(classArray51);
        java.lang.Class[] classArray55 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray51);
        int int56 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray51);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method57 = org.mockito.cglib.core.ReflectUtils.findDeclaredMethod((java.lang.Class) wildcardClass44, "", classArray51);
            org.junit.Assert.fail("Expected exception of type java.lang.NoSuchMethodException; message: ");
        } catch (java.lang.NoSuchMethodException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(propertyDescriptorArray45);
        org.junit.Assert.assertNotNull(propertyDescriptorArray47);
        org.junit.Assert.assertNotNull(methodArray50);
        org.junit.Assert.assertNotNull(classArray51);
        org.junit.Assert.assertNotNull(classArray52);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(classArray55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
    }

    @Test
    public void test1173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1173");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.beans.PropertyDescriptor[] propertyDescriptorArray23 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray23, false, true);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray23, false, false);
        java.lang.Object obj30 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) methodArray29);
        java.beans.PropertyDescriptor[] propertyDescriptorArray31 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray31, true, true);
        java.lang.Object obj35 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) propertyDescriptorArray31);
        java.lang.String[] strArray36 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray37 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray38 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray37);
        java.lang.String[] strArray39 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray40 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray39, methodArray40);
        java.lang.reflect.Method[] methodArray42 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray41);
        java.lang.String[] strArray43 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray44 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray45 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray43, methodArray44);
        java.lang.String[] strArray46 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray47 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray48 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray46, methodArray47);
        java.lang.reflect.Method[] methodArray49 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray43, methodArray48);
        java.lang.reflect.Method[] methodArray50 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray49);
        java.lang.String[] strArray51 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray52 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray53 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray51, methodArray52);
        java.lang.String[] strArray54 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray55 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray56 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray54, methodArray55);
        java.lang.String[] strArray57 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray58 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray59 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray57, methodArray58);
        java.lang.String[] strArray60 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray61 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray62 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray60, methodArray61);
        java.lang.reflect.Method[] methodArray63 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray57, methodArray62);
        java.lang.reflect.Method[] methodArray64 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray54, methodArray63);
        java.lang.reflect.Method[] methodArray65 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray51, methodArray64);
        java.lang.reflect.Method[] methodArray66 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray64);
        java.lang.Object obj67 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) methodArray66);
        org.mockito.cglib.core.MethodInfo methodInfo68 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.lang.Class<?> wildcardClass69 = constructor21.getClass();
        org.mockito.cglib.core.ClassInfo classInfo70 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass69);
        java.beans.PropertyDescriptor[] propertyDescriptorArray71 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass69);
        org.mockito.cglib.core.ClassInfo classInfo72 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass69);
        java.util.List list73 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List list74 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass69, list73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(propertyDescriptorArray23);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(propertyDescriptorArray31);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(methodArray38);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(methodArray42);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(methodArray44);
        org.junit.Assert.assertNotNull(methodArray45);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(methodArray47);
        org.junit.Assert.assertNotNull(methodArray48);
        org.junit.Assert.assertNotNull(methodArray49);
        org.junit.Assert.assertNotNull(methodArray50);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(methodArray52);
        org.junit.Assert.assertNotNull(methodArray53);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(methodArray55);
        org.junit.Assert.assertNotNull(methodArray56);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(methodArray58);
        org.junit.Assert.assertNotNull(methodArray59);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(methodArray61);
        org.junit.Assert.assertNotNull(methodArray62);
        org.junit.Assert.assertNotNull(methodArray63);
        org.junit.Assert.assertNotNull(methodArray64);
        org.junit.Assert.assertNotNull(methodArray65);
        org.junit.Assert.assertNotNull(methodArray66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(methodInfo68);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(classInfo70);
        org.junit.Assert.assertNotNull(propertyDescriptorArray71);
        org.junit.Assert.assertNotNull(classInfo72);
    }

    @Test
    public void test1174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1174");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        org.mockito.cglib.core.ClassInfo classInfo4 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass3);
        java.lang.Object obj5 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass3);
        java.beans.PropertyDescriptor[] propertyDescriptorArray6 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray9 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray6, false, true);
        java.lang.Class[] classArray10 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray6);
        java.lang.Class[] classArray11 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray10);
        java.lang.String[] strArray12 = org.mockito.cglib.core.ReflectUtils.getNames(classArray11);
        java.lang.reflect.Constructor constructor13 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass3, classArray11);
        java.lang.Object obj14 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass3);
        org.mockito.cglib.core.ClassInfo classInfo15 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass3);
        java.util.List list16 = null;
        java.util.List list17 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass3, list16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Object obj20 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass19);
        java.lang.Object obj21 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass19);
        java.lang.String[] strArray22 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray23 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray24 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray22, methodArray23);
        java.lang.Class[] classArray25 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) strArray22);
        java.lang.String[] strArray26 = org.mockito.cglib.core.ReflectUtils.getNames(classArray25);
        java.beans.PropertyDescriptor[] propertyDescriptorArray27 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray30 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray27, false, true);
        java.lang.Class[] classArray31 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray27);
        int int32 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray31);
        int int33 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray31);
        java.lang.Object obj34 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass19, classArray25, (java.lang.Object[]) classArray31);
        java.lang.reflect.Constructor constructor35 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass3, classArray31);
        java.lang.reflect.Constructor constructor36 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray31);
        java.lang.Class<?> wildcardClass37 = constructor36.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method38 = org.mockito.cglib.core.ReflectUtils.findNewInstance((java.lang.Class) wildcardClass37);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: class java.lang.reflect.Constructor is not an interface");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(classInfo4);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(propertyDescriptorArray6);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(constructor13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(classInfo15);
        org.junit.Assert.assertNull(list17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(methodArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(classArray25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(propertyDescriptorArray27);
        org.junit.Assert.assertNotNull(methodArray30);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(constructor35);
        org.junit.Assert.assertNotNull(constructor36);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test1175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1175");
        java.beans.PropertyDescriptor[] propertyDescriptorArray0 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray3 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray0, true, true);
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray0, false, true);
        java.lang.Class[] classArray7 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray0);
        java.lang.String[] strArray8 = org.mockito.cglib.core.ReflectUtils.getNames(classArray7);
        java.lang.Class<?> wildcardClass9 = strArray8.getClass();
        org.junit.Assert.assertNotNull(propertyDescriptorArray0);
        org.junit.Assert.assertNotNull(methodArray3);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(classArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1176");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray1 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray2 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray1);
        java.lang.String[] strArray3 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray4 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray3, methodArray4);
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray5);
        java.lang.String[] strArray7 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray8 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray9 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.reflect.Method[] methodArray13 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray12);
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray13);
        java.lang.Class<?> wildcardClass15 = strArray0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo16 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass15);
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        org.mockito.cglib.core.ClassInfo classInfo19 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass18);
        java.util.List list20 = null;
        java.util.List list21 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass18, list20);
        java.lang.String[] strArray22 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray23 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray24 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray22, methodArray23);
        java.lang.String[] strArray25 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray26 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray27 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray25, methodArray26);
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray22, methodArray27);
        java.lang.String[] strArray29 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray30 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray31 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray29, methodArray30);
        java.lang.String[] strArray32 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray33 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray32, methodArray33);
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray29, methodArray34);
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray22, methodArray35);
        java.lang.Class[] classArray37 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray35);
        java.lang.reflect.Constructor constructor38 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass18, classArray37);
        org.mockito.cglib.core.MethodInfo methodInfo39 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor38);
        java.beans.PropertyDescriptor[] propertyDescriptorArray40 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray43 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray40, false, true);
        java.lang.reflect.Method[] methodArray46 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray40, false, false);
        java.lang.Object obj47 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor38, (java.lang.Object[]) methodArray46);
        java.beans.PropertyDescriptor[] propertyDescriptorArray48 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray51 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray48, true, true);
        java.lang.Object obj52 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor38, (java.lang.Object[]) propertyDescriptorArray48);
        org.mockito.asm.Type[] typeArray53 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor38);
        org.mockito.cglib.core.MethodInfo methodInfo55 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor38, (int) '#');
        java.beans.PropertyDescriptor[] propertyDescriptorArray56 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray59 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray56, true, true);
        java.lang.Class[] classArray60 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray59);
        java.lang.Object obj61 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor38, (java.lang.Object[]) classArray60);
        java.lang.String[] strArray62 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray63 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray64 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray62, methodArray63);
        java.lang.Class[] classArray65 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) strArray62);
        int int66 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray65);
        java.lang.String[] strArray67 = org.mockito.cglib.core.ReflectUtils.getNames(classArray65);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj68 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass15, classArray60, (java.lang.Object[]) strArray67);
            org.junit.Assert.fail("Expected exception of type org.mockito.cglib.core.CodeGenerationException; message: java.lang.NoSuchMethodException-->[Ljava.lang.String;.<init>()");
        } catch (org.mockito.cglib.core.CodeGenerationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(methodArray1);
        org.junit.Assert.assertNotNull(methodArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(methodArray4);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(methodArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(classInfo16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(classInfo19);
        org.junit.Assert.assertNull(list21);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(methodArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(methodArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(methodArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(classArray37);
        org.junit.Assert.assertNotNull(constructor38);
        org.junit.Assert.assertNotNull(methodInfo39);
        org.junit.Assert.assertNotNull(propertyDescriptorArray40);
        org.junit.Assert.assertNotNull(methodArray43);
        org.junit.Assert.assertNotNull(methodArray46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(propertyDescriptorArray48);
        org.junit.Assert.assertNotNull(methodArray51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(typeArray53);
        org.junit.Assert.assertNotNull(methodInfo55);
        org.junit.Assert.assertNotNull(propertyDescriptorArray56);
        org.junit.Assert.assertNotNull(methodArray59);
        org.junit.Assert.assertNotNull(classArray60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(methodArray63);
        org.junit.Assert.assertNotNull(methodArray64);
        org.junit.Assert.assertNotNull(classArray65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(strArray67);
    }

    @Test
    public void test1177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1177");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray1 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray2 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray1);
        java.lang.String[] strArray3 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray4 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray3, methodArray4);
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray5);
        java.lang.String[] strArray7 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray8 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray9 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.reflect.Method[] methodArray13 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray12);
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray13);
        java.lang.Class<?> wildcardClass15 = methodArray13.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray16 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass15);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method17 = org.mockito.cglib.core.ReflectUtils.findInterfaceMethod((java.lang.Class) wildcardClass15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: class [Ljava.lang.reflect.Method; is not an interface");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(methodArray1);
        org.junit.Assert.assertNotNull(methodArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(methodArray4);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(methodArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(propertyDescriptorArray16);
    }

    @Test
    public void test1178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1178");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        java.lang.Object obj2 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.beans.PropertyDescriptor[] propertyDescriptorArray3 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray3, false, true);
        java.lang.Class[] classArray7 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray3);
        java.lang.Class[] classArray8 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray7);
        java.lang.String[] strArray9 = org.mockito.cglib.core.ReflectUtils.getNames(classArray8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.Object obj13 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray8, (java.lang.Object[]) strArray10);
        java.beans.PropertyDescriptor[] propertyDescriptorArray14 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray14, false, true);
        java.lang.Class[] classArray18 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray14);
        int int19 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray18);
        int int20 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray18);
        java.lang.Class<?> wildcardClass22 = constructor21.getClass();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Object obj25 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass24);
        java.beans.PropertyDescriptor[] propertyDescriptorArray26 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray26, false, true);
        java.lang.Class[] classArray30 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray26);
        java.lang.Class[] classArray31 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray30);
        java.lang.String[] strArray32 = org.mockito.cglib.core.ReflectUtils.getNames(classArray31);
        java.lang.String[] strArray33 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray34 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray33, methodArray34);
        java.lang.Object obj36 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass24, classArray31, (java.lang.Object[]) strArray33);
        int int37 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray31);
        java.lang.String[] strArray38 = org.mockito.cglib.core.ReflectUtils.getNames(classArray31);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Constructor constructor39 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass22, classArray31);
            org.junit.Assert.fail("Expected exception of type org.mockito.cglib.core.CodeGenerationException; message: java.lang.NoSuchMethodException-->java.lang.reflect.Constructor.<init>()");
        } catch (org.mockito.cglib.core.CodeGenerationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(propertyDescriptorArray3);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(classArray7);
        org.junit.Assert.assertNotNull(classArray8);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(propertyDescriptorArray14);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(propertyDescriptorArray26);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(classArray30);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(strArray38);
    }

    @Test
    public void test1179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1179");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo23 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21, (int) ' ');
        org.mockito.cglib.core.MethodInfo methodInfo24 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.lang.String[] strArray25 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray26 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray27 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray25, methodArray26);
        java.lang.String[] strArray28 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray29 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray30 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray28, methodArray29);
        java.lang.reflect.Method[] methodArray31 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray25, methodArray30);
        java.lang.String[] strArray32 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray33 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray32, methodArray33);
        java.lang.String[] strArray35 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray36 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray37 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray35, methodArray36);
        java.lang.reflect.Method[] methodArray38 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray32, methodArray37);
        java.lang.reflect.Method[] methodArray39 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray25, methodArray38);
        java.lang.Class<?> wildcardClass40 = methodArray38.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray41 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass40);
        java.lang.Class[] classArray42 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray41);
        java.lang.Object obj43 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) classArray42);
        java.lang.Class<?> wildcardClass44 = constructor21.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method45 = org.mockito.cglib.core.ReflectUtils.findInterfaceMethod((java.lang.Class) wildcardClass44);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: class java.lang.reflect.Constructor is not an interface");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo23);
        org.junit.Assert.assertNotNull(methodInfo24);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(methodArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(methodArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(methodArray38);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(propertyDescriptorArray41);
        org.junit.Assert.assertNotNull(classArray42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test1180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1180");
        java.beans.PropertyDescriptor[] propertyDescriptorArray0 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray3 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray0, true, true);
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray0, false, true);
        java.lang.Class[] classArray7 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray0);
        java.lang.String[] strArray8 = org.mockito.cglib.core.ReflectUtils.getNames(classArray7);
        int int9 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray7);
        java.lang.String[] strArray10 = org.mockito.cglib.core.ReflectUtils.getNames(classArray7);
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray13 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray16 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray13, false, true);
        java.lang.Class[] classArray17 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray16);
        java.lang.Object[] objArray18 = null;
        java.lang.Object obj19 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass12, classArray17, objArray18);
        java.lang.String[] strArray20 = org.mockito.cglib.core.ReflectUtils.getNames(classArray17);
        java.lang.String[] strArray21 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray22 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray23 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray21, methodArray22);
        java.lang.String[] strArray24 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray25 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray24, methodArray25);
        java.lang.reflect.Method[] methodArray27 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray21, methodArray26);
        java.lang.String[] strArray28 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray29 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray30 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray28, methodArray29);
        java.lang.String[] strArray31 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray32 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray33 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray31, methodArray32);
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray28, methodArray33);
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray21, methodArray34);
        java.lang.Class[] classArray36 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray34);
        java.lang.Class[] classArray37 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray34);
        java.lang.reflect.Method[] methodArray38 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray20, methodArray34);
        java.lang.reflect.Method[] methodArray39 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray34);
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!", "hi!" };
        java.beans.PropertyDescriptor[] propertyDescriptorArray43 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray46 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray43, false, true);
        java.lang.Class[] classArray47 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray43);
        java.lang.Class[] classArray48 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray47);
        java.lang.String[] strArray49 = org.mockito.cglib.core.ReflectUtils.getNames(classArray47);
        java.lang.Class<?> wildcardClass50 = classArray47.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray51 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass50);
        java.beans.PropertyDescriptor[] propertyDescriptorArray52 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass50);
        java.lang.reflect.Method[] methodArray55 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray52, false, false);
        java.lang.reflect.Method[] methodArray56 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray42, methodArray55);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method[] methodArray57 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(propertyDescriptorArray0);
        org.junit.Assert.assertNotNull(methodArray3);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(classArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(propertyDescriptorArray13);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(classArray17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(methodArray22);
        org.junit.Assert.assertNotNull(methodArray23);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(methodArray30);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(methodArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(classArray36);
        org.junit.Assert.assertNotNull(classArray37);
        org.junit.Assert.assertNotNull(methodArray38);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(propertyDescriptorArray43);
        org.junit.Assert.assertNotNull(methodArray46);
        org.junit.Assert.assertNotNull(classArray47);
        org.junit.Assert.assertNotNull(classArray48);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(propertyDescriptorArray51);
        org.junit.Assert.assertNotNull(propertyDescriptorArray52);
        org.junit.Assert.assertNotNull(methodArray55);
        org.junit.Assert.assertNotNull(methodArray56);
    }

    @Test
    public void test1181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1181");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo23 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21, (int) ' ');
        org.mockito.cglib.core.Signature signature24 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor21);
        java.lang.Class<?> wildcardClass25 = signature24.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray26 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass25);
        java.beans.PropertyDescriptor[] propertyDescriptorArray27 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo23);
        org.junit.Assert.assertNotNull(signature24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(propertyDescriptorArray26);
        org.junit.Assert.assertNotNull(propertyDescriptorArray27);
    }

    @Test
    public void test1182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1182");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray2 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray2, false, true);
        java.lang.Class[] classArray6 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray5);
        java.lang.Object[] objArray7 = null;
        java.lang.Object obj8 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray6, objArray7);
        java.lang.Class[] classArray9 = null;
        java.lang.reflect.Constructor constructor10 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray9);
        org.mockito.cglib.core.MethodInfo methodInfo12 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor10, 10);
        java.beans.PropertyDescriptor[] propertyDescriptorArray13 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray16 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray13, true, true);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray13, false, true);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray13);
        java.lang.Object obj21 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor10, (java.lang.Object[]) classArray20);
        java.lang.Class<?> wildcardClass22 = classArray20.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method23 = org.mockito.cglib.core.ReflectUtils.findInterfaceMethod((java.lang.Class) wildcardClass22);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: class [Ljava.lang.Class; is not an interface");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(propertyDescriptorArray2);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(classArray6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(constructor10);
        org.junit.Assert.assertNotNull(methodInfo12);
        org.junit.Assert.assertNotNull(propertyDescriptorArray13);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test1183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1183");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.lang.Class<?> wildcardClass23 = constructor21.getClass();
        org.mockito.cglib.core.ClassInfo classInfo24 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass23);
        java.beans.PropertyDescriptor[] propertyDescriptorArray25 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass23);
        java.beans.PropertyDescriptor[] propertyDescriptorArray26 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass23);
        org.mockito.cglib.core.ClassInfo classInfo27 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass23);
        java.lang.Class<?> wildcardClass28 = classInfo27.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj29 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass28);
            org.junit.Assert.fail("Expected exception of type org.mockito.cglib.core.CodeGenerationException; message: java.lang.NoSuchMethodException-->org.mockito.cglib.core.ReflectUtils$4.<init>()");
        } catch (org.mockito.cglib.core.CodeGenerationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(classInfo24);
        org.junit.Assert.assertNotNull(propertyDescriptorArray25);
        org.junit.Assert.assertNotNull(propertyDescriptorArray26);
        org.junit.Assert.assertNotNull(classInfo27);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test1184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1184");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.lang.Object obj3 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        org.mockito.cglib.core.ClassInfo classInfo6 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass5);
        java.util.List list7 = null;
        java.util.List list8 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass5, list7);
        java.lang.String[] strArray9 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray10 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray9, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.reflect.Method[] methodArray15 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray9, methodArray14);
        java.lang.String[] strArray16 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray17 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray16, methodArray17);
        java.lang.String[] strArray19 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray20 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray21 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray19, methodArray20);
        java.lang.reflect.Method[] methodArray22 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray16, methodArray21);
        java.lang.reflect.Method[] methodArray23 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray9, methodArray22);
        java.lang.Class[] classArray24 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray22);
        java.lang.reflect.Constructor constructor25 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass5, classArray24);
        java.lang.Class[] classArray26 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray24);
        java.lang.reflect.Constructor constructor27 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray26);
        java.lang.Object obj28 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        // The following exception was thrown during execution in test generation
        try {
            java.beans.PropertyDescriptor[] propertyDescriptorArray29 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass1);
            org.junit.Assert.fail("Expected exception of type org.mockito.cglib.core.CodeGenerationException; message: java.beans.IntrospectionException-->java.lang.Object not superclass of java.lang.Object");
        } catch (org.mockito.cglib.core.CodeGenerationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(classInfo6);
        org.junit.Assert.assertNull(list8);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(methodArray15);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(methodArray20);
        org.junit.Assert.assertNotNull(methodArray21);
        org.junit.Assert.assertNotNull(methodArray22);
        org.junit.Assert.assertNotNull(methodArray23);
        org.junit.Assert.assertNotNull(classArray24);
        org.junit.Assert.assertNotNull(constructor25);
        org.junit.Assert.assertNotNull(classArray26);
        org.junit.Assert.assertNotNull(constructor27);
        org.junit.Assert.assertNotNull(obj28);
    }

    @Test
    public void test1185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1185");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.lang.Object obj3 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.beans.PropertyDescriptor[] propertyDescriptorArray4 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray4, false, true);
        java.lang.Class[] classArray8 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray4);
        java.lang.Class[] classArray9 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray8);
        java.lang.String[] strArray10 = org.mockito.cglib.core.ReflectUtils.getNames(classArray9);
        java.lang.reflect.Constructor constructor11 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray9);
        java.lang.Object obj12 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        org.mockito.cglib.core.ClassInfo classInfo13 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list14 = null;
        java.util.List list15 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list14);
        java.lang.Object obj16 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.lang.Object obj17 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method18 = org.mockito.cglib.core.ReflectUtils.findNewInstance((java.lang.Class) wildcardClass1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: class java.lang.Object is not an interface");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(propertyDescriptorArray4);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(classArray8);
        org.junit.Assert.assertNotNull(classArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(constructor11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(classInfo13);
        org.junit.Assert.assertNull(list15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(obj17);
    }

    @Test
    public void test1186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1186");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.lang.Object obj3 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        org.mockito.cglib.core.ClassInfo classInfo6 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass5);
        java.util.List list7 = null;
        java.util.List list8 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass5, list7);
        java.lang.String[] strArray9 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray10 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray9, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.reflect.Method[] methodArray15 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray9, methodArray14);
        java.lang.String[] strArray16 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray17 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray16, methodArray17);
        java.lang.String[] strArray19 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray20 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray21 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray19, methodArray20);
        java.lang.reflect.Method[] methodArray22 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray16, methodArray21);
        java.lang.reflect.Method[] methodArray23 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray9, methodArray22);
        java.lang.Class[] classArray24 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray22);
        java.lang.reflect.Constructor constructor25 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass5, classArray24);
        java.lang.Class[] classArray26 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray24);
        java.lang.reflect.Constructor constructor27 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray26);
        org.mockito.cglib.core.MethodInfo methodInfo29 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor27, 0);
        org.mockito.cglib.core.MethodInfo methodInfo30 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor27);
        org.mockito.cglib.core.Signature signature31 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor27);
        java.beans.PropertyDescriptor[] propertyDescriptorArray32 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray32, false, true);
        java.lang.Class[] classArray36 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray35);
        int int37 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray36);
        java.lang.String[] strArray38 = org.mockito.cglib.core.ReflectUtils.getNames(classArray36);
        java.lang.Object obj39 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor27, (java.lang.Object[]) classArray36);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(classInfo6);
        org.junit.Assert.assertNull(list8);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(methodArray15);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(methodArray20);
        org.junit.Assert.assertNotNull(methodArray21);
        org.junit.Assert.assertNotNull(methodArray22);
        org.junit.Assert.assertNotNull(methodArray23);
        org.junit.Assert.assertNotNull(classArray24);
        org.junit.Assert.assertNotNull(constructor25);
        org.junit.Assert.assertNotNull(classArray26);
        org.junit.Assert.assertNotNull(constructor27);
        org.junit.Assert.assertNotNull(methodInfo29);
        org.junit.Assert.assertNotNull(methodInfo30);
        org.junit.Assert.assertNotNull(signature31);
        org.junit.Assert.assertNotNull(propertyDescriptorArray32);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(classArray36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(obj39);
    }

    @Test
    public void test1187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1187");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.lang.Object obj3 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.beans.PropertyDescriptor[] propertyDescriptorArray4 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray4, false, true);
        java.lang.Class[] classArray8 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray4);
        java.lang.Class[] classArray9 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray8);
        java.lang.String[] strArray10 = org.mockito.cglib.core.ReflectUtils.getNames(classArray9);
        java.lang.reflect.Constructor constructor11 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray9);
        org.mockito.cglib.core.MethodInfo methodInfo12 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray15 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray15, false, true);
        java.lang.Class[] classArray19 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.Object[] objArray20 = null;
        java.lang.Object obj21 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass14, classArray19, objArray20);
        java.lang.Object obj22 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor11, (java.lang.Object[]) classArray19);
        org.mockito.cglib.core.MethodInfo methodInfo24 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor11, (int) (byte) 0);
        org.mockito.cglib.core.MethodInfo methodInfo25 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor11);
        org.mockito.asm.Type[] typeArray26 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor11);
        org.mockito.asm.Type[] typeArray27 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor11);
        org.mockito.cglib.core.MethodInfo methodInfo29 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor11, 0);
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        org.mockito.cglib.core.ClassInfo classInfo32 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass31);
        java.lang.Object obj33 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass31);
        java.beans.PropertyDescriptor[] propertyDescriptorArray34 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray37 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray34, false, true);
        java.lang.Class[] classArray38 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray34);
        java.lang.Class[] classArray39 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray38);
        java.lang.String[] strArray40 = org.mockito.cglib.core.ReflectUtils.getNames(classArray39);
        java.lang.reflect.Constructor constructor41 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass31, classArray39);
        org.mockito.cglib.core.MethodInfo methodInfo42 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor41);
        org.mockito.cglib.core.MethodInfo methodInfo43 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor41);
        org.mockito.asm.Type[] typeArray44 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor41);
        java.lang.Object obj45 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor11, (java.lang.Object[]) typeArray44);
        org.mockito.cglib.core.MethodInfo methodInfo47 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor11, 10);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(propertyDescriptorArray4);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(classArray8);
        org.junit.Assert.assertNotNull(classArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(constructor11);
        org.junit.Assert.assertNotNull(methodInfo12);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(propertyDescriptorArray15);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(classArray19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(methodInfo24);
        org.junit.Assert.assertNotNull(methodInfo25);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertNotNull(methodInfo29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classInfo32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(propertyDescriptorArray34);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(classArray38);
        org.junit.Assert.assertNotNull(classArray39);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(constructor41);
        org.junit.Assert.assertNotNull(methodInfo42);
        org.junit.Assert.assertNotNull(methodInfo43);
        org.junit.Assert.assertNotNull(typeArray44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(methodInfo47);
    }

    @Test
    public void test1188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1188");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo23 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21, (int) ' ');
        org.mockito.cglib.core.MethodInfo methodInfo25 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21, 10);
        java.beans.PropertyDescriptor[] propertyDescriptorArray26 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray26, false, true);
        java.lang.Class[] classArray30 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray26);
        java.lang.Class[] classArray31 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray30);
        java.lang.Object obj32 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) classArray30);
        org.mockito.cglib.core.MethodInfo methodInfo34 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21, (-1));
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        org.mockito.cglib.core.ClassInfo classInfo37 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass36);
        java.lang.Object obj38 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass36);
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        org.mockito.cglib.core.ClassInfo classInfo41 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass40);
        java.util.List list42 = null;
        java.util.List list43 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass40, list42);
        java.lang.String[] strArray44 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray45 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray46 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray44, methodArray45);
        java.lang.String[] strArray47 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray48 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray49 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray47, methodArray48);
        java.lang.reflect.Method[] methodArray50 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray44, methodArray49);
        java.lang.String[] strArray51 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray52 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray53 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray51, methodArray52);
        java.lang.String[] strArray54 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray55 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray56 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray54, methodArray55);
        java.lang.reflect.Method[] methodArray57 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray51, methodArray56);
        java.lang.reflect.Method[] methodArray58 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray44, methodArray57);
        java.lang.Class[] classArray59 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray57);
        java.lang.reflect.Constructor constructor60 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass40, classArray59);
        java.lang.Class[] classArray61 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray59);
        java.lang.reflect.Constructor constructor62 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass36, classArray61);
        org.mockito.cglib.core.MethodInfo methodInfo64 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor62, 0);
        org.mockito.asm.Type[] typeArray65 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor62);
        java.lang.Object obj66 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) typeArray65);
        java.lang.String[] strArray67 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray68 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray69 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray67, methodArray68);
        java.lang.String[] strArray70 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray71 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray72 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray70, methodArray71);
        java.lang.reflect.Method[] methodArray73 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray67, methodArray72);
        java.lang.String[] strArray74 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray75 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray76 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray74, methodArray75);
        java.lang.String[] strArray77 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray78 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray79 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray77, methodArray78);
        java.lang.reflect.Method[] methodArray80 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray74, methodArray79);
        java.lang.reflect.Method[] methodArray81 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray67, methodArray80);
        java.lang.String[] strArray82 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray83 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray84 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray82, methodArray83);
        java.lang.reflect.Method[] methodArray85 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray67, methodArray84);
        java.lang.Class[] classArray86 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray85);
        java.lang.Object obj87 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) methodArray85);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo23);
        org.junit.Assert.assertNotNull(methodInfo25);
        org.junit.Assert.assertNotNull(propertyDescriptorArray26);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(classArray30);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(methodInfo34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(classInfo37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(classInfo41);
        org.junit.Assert.assertNull(list43);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(methodArray45);
        org.junit.Assert.assertNotNull(methodArray46);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(methodArray48);
        org.junit.Assert.assertNotNull(methodArray49);
        org.junit.Assert.assertNotNull(methodArray50);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(methodArray52);
        org.junit.Assert.assertNotNull(methodArray53);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(methodArray55);
        org.junit.Assert.assertNotNull(methodArray56);
        org.junit.Assert.assertNotNull(methodArray57);
        org.junit.Assert.assertNotNull(methodArray58);
        org.junit.Assert.assertNotNull(classArray59);
        org.junit.Assert.assertNotNull(constructor60);
        org.junit.Assert.assertNotNull(classArray61);
        org.junit.Assert.assertNotNull(constructor62);
        org.junit.Assert.assertNotNull(methodInfo64);
        org.junit.Assert.assertNotNull(typeArray65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(methodArray68);
        org.junit.Assert.assertNotNull(methodArray69);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertNotNull(methodArray71);
        org.junit.Assert.assertNotNull(methodArray72);
        org.junit.Assert.assertNotNull(methodArray73);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertNotNull(methodArray75);
        org.junit.Assert.assertNotNull(methodArray76);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(methodArray78);
        org.junit.Assert.assertNotNull(methodArray79);
        org.junit.Assert.assertNotNull(methodArray80);
        org.junit.Assert.assertNotNull(methodArray81);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNotNull(methodArray83);
        org.junit.Assert.assertNotNull(methodArray84);
        org.junit.Assert.assertNotNull(methodArray85);
        org.junit.Assert.assertNotNull(classArray86);
        org.junit.Assert.assertNotNull(obj87);
    }

    @Test
    public void test1189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1189");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.beans.PropertyDescriptor[] propertyDescriptorArray23 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray23, false, true);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray23, false, false);
        java.lang.Object obj30 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) methodArray29);
        java.beans.PropertyDescriptor[] propertyDescriptorArray31 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray31, true, true);
        java.lang.Object obj35 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) propertyDescriptorArray31);
        org.mockito.asm.Type[] typeArray36 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        org.mockito.cglib.core.MethodInfo methodInfo38 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21, (int) '#');
        org.mockito.asm.Type[] typeArray39 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        java.beans.PropertyDescriptor[] propertyDescriptorArray40 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray43 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray40, false, true);
        java.lang.Class[] classArray44 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray40);
        int int45 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray44);
        java.lang.String[] strArray46 = org.mockito.cglib.core.ReflectUtils.getNames(classArray44);
        java.lang.String[] strArray47 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray48 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray49 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray47, methodArray48);
        java.lang.String[] strArray50 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray51 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray52 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray50, methodArray51);
        java.lang.reflect.Method[] methodArray53 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray47, methodArray52);
        java.lang.String[] strArray54 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray55 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray56 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray54, methodArray55);
        java.lang.String[] strArray57 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray58 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray59 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray57, methodArray58);
        java.lang.reflect.Method[] methodArray60 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray54, methodArray59);
        java.lang.String[] strArray61 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray62 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray63 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray61, methodArray62);
        java.lang.String[] strArray64 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray65 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray66 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray64, methodArray65);
        java.lang.reflect.Method[] methodArray67 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray61, methodArray66);
        java.lang.reflect.Method[] methodArray68 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray54, methodArray67);
        java.lang.String[] strArray69 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray70 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray71 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray69, methodArray70);
        java.lang.String[] strArray72 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray73 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray74 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray72, methodArray73);
        java.lang.String[] strArray75 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray76 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray77 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray75, methodArray76);
        java.lang.String[] strArray78 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray79 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray80 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray78, methodArray79);
        java.lang.reflect.Method[] methodArray81 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray75, methodArray80);
        java.lang.reflect.Method[] methodArray82 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray72, methodArray81);
        java.lang.reflect.Method[] methodArray83 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray69, methodArray82);
        java.lang.reflect.Method[] methodArray84 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray54, methodArray82);
        java.lang.reflect.Method[] methodArray85 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray47, methodArray82);
        java.lang.reflect.Method[] methodArray86 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray46, methodArray85);
        java.lang.Object obj87 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) methodArray86);
        org.mockito.asm.Type[] typeArray88 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(propertyDescriptorArray23);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(propertyDescriptorArray31);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertNotNull(methodInfo38);
        org.junit.Assert.assertNotNull(typeArray39);
        org.junit.Assert.assertNotNull(propertyDescriptorArray40);
        org.junit.Assert.assertNotNull(methodArray43);
        org.junit.Assert.assertNotNull(classArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(methodArray48);
        org.junit.Assert.assertNotNull(methodArray49);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(methodArray51);
        org.junit.Assert.assertNotNull(methodArray52);
        org.junit.Assert.assertNotNull(methodArray53);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(methodArray55);
        org.junit.Assert.assertNotNull(methodArray56);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(methodArray58);
        org.junit.Assert.assertNotNull(methodArray59);
        org.junit.Assert.assertNotNull(methodArray60);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(methodArray62);
        org.junit.Assert.assertNotNull(methodArray63);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(methodArray65);
        org.junit.Assert.assertNotNull(methodArray66);
        org.junit.Assert.assertNotNull(methodArray67);
        org.junit.Assert.assertNotNull(methodArray68);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(methodArray70);
        org.junit.Assert.assertNotNull(methodArray71);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(methodArray73);
        org.junit.Assert.assertNotNull(methodArray74);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(methodArray76);
        org.junit.Assert.assertNotNull(methodArray77);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertNotNull(methodArray79);
        org.junit.Assert.assertNotNull(methodArray80);
        org.junit.Assert.assertNotNull(methodArray81);
        org.junit.Assert.assertNotNull(methodArray82);
        org.junit.Assert.assertNotNull(methodArray83);
        org.junit.Assert.assertNotNull(methodArray84);
        org.junit.Assert.assertNotNull(methodArray85);
        org.junit.Assert.assertNotNull(methodArray86);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(typeArray88);
    }

    @Test
    public void test1190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1190");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray2 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray2, false, true);
        java.lang.Class[] classArray6 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray2);
        java.beans.PropertyDescriptor[] propertyDescriptorArray7 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray7, false, true);
        java.lang.Class[] classArray11 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray7);
        int int12 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray11);
        java.lang.String[] strArray13 = org.mockito.cglib.core.ReflectUtils.getNames(classArray11);
        java.lang.String[] strArray14 = org.mockito.cglib.core.ReflectUtils.getNames(classArray11);
        java.lang.Class[] classArray15 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) strArray14);
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        org.mockito.cglib.core.ClassInfo classInfo18 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass17);
        java.util.List list19 = null;
        java.util.List list20 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass17, list19);
        java.beans.PropertyDescriptor[] propertyDescriptorArray21 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray24 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray21, false, true);
        java.lang.Class[] classArray25 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray21);
        int int26 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray25);
        java.lang.String[] strArray27 = org.mockito.cglib.core.ReflectUtils.getNames(classArray25);
        java.lang.String[] strArray28 = org.mockito.cglib.core.ReflectUtils.getNames(classArray25);
        java.lang.String[] strArray29 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray30 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray31 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray29, methodArray30);
        java.lang.String[] strArray32 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray33 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray32, methodArray33);
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray29, methodArray34);
        java.lang.String[] strArray36 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray37 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray38 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray37);
        java.lang.String[] strArray39 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray40 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray39, methodArray40);
        java.lang.reflect.Method[] methodArray42 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray41);
        java.lang.reflect.Method[] methodArray43 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray29, methodArray42);
        java.lang.Object obj44 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass17, classArray25, (java.lang.Object[]) methodArray43);
        java.lang.reflect.Method[] methodArray45 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray14, methodArray43);
        java.lang.Object obj46 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray6, (java.lang.Object[]) strArray14);
        java.util.List list47 = null;
        java.util.List list48 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list47);
        org.mockito.cglib.core.ClassInfo classInfo49 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        org.mockito.cglib.core.ClassInfo classInfo50 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method51 = org.mockito.cglib.core.ReflectUtils.findInterfaceMethod((java.lang.Class) wildcardClass1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: class java.lang.Object is not an interface");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(propertyDescriptorArray2);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(classArray6);
        org.junit.Assert.assertNotNull(propertyDescriptorArray7);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(classArray15);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(classInfo18);
        org.junit.Assert.assertNull(list20);
        org.junit.Assert.assertNotNull(propertyDescriptorArray21);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(classArray25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(methodArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(methodArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(methodArray38);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(methodArray42);
        org.junit.Assert.assertNotNull(methodArray43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(methodArray45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNull(list48);
        org.junit.Assert.assertNotNull(classInfo49);
        org.junit.Assert.assertNotNull(classInfo50);
    }

    @Test
    public void test1191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1191");
        java.beans.PropertyDescriptor[] propertyDescriptorArray0 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray3 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray0, false, true);
        java.lang.Class[] classArray4 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray0);
        java.lang.Class[] classArray5 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray4);
        java.lang.String[] strArray6 = org.mockito.cglib.core.ReflectUtils.getNames(classArray4);
        java.lang.Class<?> wildcardClass7 = classArray4.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray8 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass7);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method9 = org.mockito.cglib.core.ReflectUtils.findNewInstance((java.lang.Class) wildcardClass7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: class [Ljava.lang.Class; is not an interface");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(propertyDescriptorArray0);
        org.junit.Assert.assertNotNull(methodArray3);
        org.junit.Assert.assertNotNull(classArray4);
        org.junit.Assert.assertNotNull(classArray5);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(propertyDescriptorArray8);
    }

    @Test
    public void test1192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1192");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.lang.Object obj3 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.beans.PropertyDescriptor[] propertyDescriptorArray4 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray4, false, true);
        java.lang.Class[] classArray8 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray4);
        java.lang.Class[] classArray9 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray8);
        java.lang.String[] strArray10 = org.mockito.cglib.core.ReflectUtils.getNames(classArray9);
        java.lang.reflect.Constructor constructor11 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray9);
        java.lang.Object obj12 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        org.mockito.cglib.core.ClassInfo classInfo13 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list14 = null;
        java.util.List list15 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list14);
        java.lang.Object obj16 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.lang.Object obj17 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.mockito.cglib.core.ClassInfo classInfo20 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass19);
        java.lang.Object obj21 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass19);
        org.mockito.cglib.core.ClassInfo classInfo22 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass19);
        java.beans.PropertyDescriptor[] propertyDescriptorArray23 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray23, false, true);
        java.lang.Class[] classArray27 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray23);
        java.lang.Class[] classArray28 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray27);
        java.lang.String[] strArray29 = org.mockito.cglib.core.ReflectUtils.getNames(classArray27);
        java.lang.Class<?> wildcardClass30 = classArray27.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray31 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass30);
        java.beans.PropertyDescriptor[] propertyDescriptorArray32 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass30);
        java.lang.Class[] classArray33 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray32);
        java.lang.String[] strArray34 = org.mockito.cglib.core.ReflectUtils.getNames(classArray33);
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        org.mockito.cglib.core.ClassInfo classInfo37 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass36);
        java.util.List list38 = null;
        java.util.List list39 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass36, list38);
        java.lang.String[] strArray40 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray41 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray42 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray40, methodArray41);
        java.lang.String[] strArray43 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray44 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray45 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray43, methodArray44);
        java.lang.reflect.Method[] methodArray46 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray40, methodArray45);
        java.lang.String[] strArray47 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray48 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray49 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray47, methodArray48);
        java.lang.String[] strArray50 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray51 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray52 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray50, methodArray51);
        java.lang.reflect.Method[] methodArray53 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray47, methodArray52);
        java.lang.reflect.Method[] methodArray54 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray40, methodArray53);
        java.lang.Class[] classArray55 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray53);
        java.lang.reflect.Constructor constructor56 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass36, classArray55);
        org.mockito.cglib.core.MethodInfo methodInfo57 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor56);
        java.lang.String[] strArray58 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray59 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray60 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray58, methodArray59);
        java.lang.String[] strArray61 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray62 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray63 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray61, methodArray62);
        java.lang.reflect.Method[] methodArray64 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray58, methodArray63);
        java.lang.String[] strArray65 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray66 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray67 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray65, methodArray66);
        java.lang.String[] strArray68 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray69 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray70 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray68, methodArray69);
        java.lang.reflect.Method[] methodArray71 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray65, methodArray70);
        java.lang.reflect.Method[] methodArray72 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray58, methodArray71);
        java.lang.String[] strArray73 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray74 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray75 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray73, methodArray74);
        java.lang.reflect.Method[] methodArray76 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray58, methodArray75);
        java.lang.Object obj77 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor56, (java.lang.Object[]) strArray58);
        org.mockito.cglib.core.MethodInfo methodInfo79 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor56, (int) (byte) 0);
        java.beans.PropertyDescriptor[] propertyDescriptorArray80 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray83 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray80, true, true);
        java.lang.reflect.Method[] methodArray86 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray80, false, true);
        java.lang.Class[] classArray87 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray80);
        java.lang.Object obj88 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor56, (java.lang.Object[]) classArray87);
        java.lang.Object obj89 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass19, classArray33, (java.lang.Object[]) classArray87);
        java.lang.reflect.Constructor constructor90 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray33);
        java.util.List list91 = null;
        java.util.List list92 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list91);
        java.lang.Object obj93 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.lang.Object obj94 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(propertyDescriptorArray4);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(classArray8);
        org.junit.Assert.assertNotNull(classArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(constructor11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(classInfo13);
        org.junit.Assert.assertNull(list15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(classInfo20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(classInfo22);
        org.junit.Assert.assertNotNull(propertyDescriptorArray23);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(classArray27);
        org.junit.Assert.assertNotNull(classArray28);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(propertyDescriptorArray31);
        org.junit.Assert.assertNotNull(propertyDescriptorArray32);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(classInfo37);
        org.junit.Assert.assertNull(list39);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(methodArray42);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(methodArray44);
        org.junit.Assert.assertNotNull(methodArray45);
        org.junit.Assert.assertNotNull(methodArray46);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(methodArray48);
        org.junit.Assert.assertNotNull(methodArray49);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(methodArray51);
        org.junit.Assert.assertNotNull(methodArray52);
        org.junit.Assert.assertNotNull(methodArray53);
        org.junit.Assert.assertNotNull(methodArray54);
        org.junit.Assert.assertNotNull(classArray55);
        org.junit.Assert.assertNotNull(constructor56);
        org.junit.Assert.assertNotNull(methodInfo57);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(methodArray59);
        org.junit.Assert.assertNotNull(methodArray60);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(methodArray62);
        org.junit.Assert.assertNotNull(methodArray63);
        org.junit.Assert.assertNotNull(methodArray64);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(methodArray66);
        org.junit.Assert.assertNotNull(methodArray67);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(methodArray69);
        org.junit.Assert.assertNotNull(methodArray70);
        org.junit.Assert.assertNotNull(methodArray71);
        org.junit.Assert.assertNotNull(methodArray72);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(methodArray74);
        org.junit.Assert.assertNotNull(methodArray75);
        org.junit.Assert.assertNotNull(methodArray76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(methodInfo79);
        org.junit.Assert.assertNotNull(propertyDescriptorArray80);
        org.junit.Assert.assertNotNull(methodArray83);
        org.junit.Assert.assertNotNull(methodArray86);
        org.junit.Assert.assertNotNull(classArray87);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(constructor90);
        org.junit.Assert.assertNull(list92);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(obj94);
    }

    @Test
    public void test1193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1193");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray2 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray2, false, true);
        java.lang.Class[] classArray6 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray5);
        java.lang.Object[] objArray7 = null;
        java.lang.Object obj8 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray6, objArray7);
        java.lang.Class[] classArray9 = null;
        java.lang.reflect.Constructor constructor10 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray9);
        java.beans.PropertyDescriptor[] propertyDescriptorArray11 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray11, false, true);
        java.lang.Class[] classArray15 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray11);
        java.lang.Class[] classArray16 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray15);
        java.lang.reflect.Constructor constructor17 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray16);
        java.lang.String[] strArray18 = org.mockito.cglib.core.ReflectUtils.getNames(classArray16);
        java.lang.Class<?> wildcardClass19 = classArray16.getClass();
        org.mockito.cglib.core.ClassInfo classInfo20 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass19);
        java.beans.PropertyDescriptor[] propertyDescriptorArray21 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(propertyDescriptorArray2);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(classArray6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(constructor10);
        org.junit.Assert.assertNotNull(propertyDescriptorArray11);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(classArray15);
        org.junit.Assert.assertNotNull(classArray16);
        org.junit.Assert.assertNotNull(constructor17);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(classInfo20);
        org.junit.Assert.assertNotNull(propertyDescriptorArray21);
    }

    @Test
    public void test1194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1194");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        java.util.List list2 = null;
        java.util.List list3 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list2);
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        org.mockito.cglib.core.ClassInfo classInfo6 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass5);
        java.beans.PropertyDescriptor[] propertyDescriptorArray8 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray8, false, true);
        java.lang.Class[] classArray12 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray8);
        java.lang.Class[] classArray13 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray12);
        java.lang.String[] strArray14 = org.mockito.cglib.core.ReflectUtils.getNames(classArray13);
        java.lang.reflect.Constructor constructor15 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass5, classArray13);
        org.mockito.cglib.core.MethodInfo methodInfo16 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor15);
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray19 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray22 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray19, false, true);
        java.lang.Class[] classArray23 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray22);
        java.lang.Object[] objArray24 = null;
        java.lang.Object obj25 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass18, classArray23, objArray24);
        java.lang.Object obj26 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor15, (java.lang.Object[]) classArray23);
        java.lang.String[] strArray27 = org.mockito.cglib.core.ReflectUtils.getNames(classArray23);
        java.lang.reflect.Constructor constructor28 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray23);
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray31 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray31, false, true);
        java.lang.Class[] classArray35 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray34);
        java.lang.Object[] objArray36 = null;
        java.lang.Object obj37 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass30, classArray35, objArray36);
        int int38 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray35);
        java.lang.reflect.Constructor constructor39 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray35);
        java.lang.String[] strArray40 = org.mockito.cglib.core.ReflectUtils.getNames(classArray35);
        java.lang.String[] strArray41 = org.mockito.cglib.core.ReflectUtils.getNames(classArray35);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNull(list3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(classInfo6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(propertyDescriptorArray8);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(classArray13);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(constructor15);
        org.junit.Assert.assertNotNull(methodInfo16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(propertyDescriptorArray19);
        org.junit.Assert.assertNotNull(methodArray22);
        org.junit.Assert.assertNotNull(classArray23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(constructor28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(propertyDescriptorArray31);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(classArray35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(constructor39);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(strArray41);
    }

    @Test
    public void test1195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1195");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.lang.Class<?> wildcardClass23 = constructor21.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray24 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass23);
        org.mockito.cglib.core.ClassInfo classInfo25 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass23);
        java.beans.PropertyDescriptor[] propertyDescriptorArray26 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass23);
        java.util.List list27 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List list28 = org.mockito.cglib.core.ReflectUtils.addAllMethods((java.lang.Class) wildcardClass23, list27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(propertyDescriptorArray24);
        org.junit.Assert.assertNotNull(classInfo25);
        org.junit.Assert.assertNotNull(propertyDescriptorArray26);
    }

    @Test
    public void test1196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1196");
        byte[] byteArray4 = new byte[] { (byte) 0, (byte) 0, (byte) 10 };
        java.lang.ClassLoader classLoader5 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class6 = org.mockito.cglib.core.ReflectUtils.defineClass("hi!", byteArray4, classLoader5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[0, 0, 10]");
    }

    @Test
    public void test1197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1197");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray1 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray2 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray1);
        java.lang.String[] strArray3 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray4 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray3, methodArray4);
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray5);
        java.lang.String[] strArray7 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray8 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray9 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.reflect.Method[] methodArray13 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray12);
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray13);
        java.lang.Class[] classArray15 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray13);
        java.lang.Class<?> wildcardClass16 = classArray15.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray17 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass16);
        java.lang.reflect.Method[] methodArray20 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray17, true, false);
        java.lang.Class<?> wildcardClass21 = propertyDescriptorArray17.getClass();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        org.mockito.cglib.core.ClassInfo classInfo24 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass23);
        java.lang.Object obj25 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass23);
        java.beans.PropertyDescriptor[] propertyDescriptorArray26 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray26, false, true);
        java.lang.Class[] classArray30 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray26);
        java.lang.Class[] classArray31 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray30);
        java.lang.String[] strArray32 = org.mockito.cglib.core.ReflectUtils.getNames(classArray31);
        java.lang.reflect.Constructor constructor33 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass23, classArray31);
        java.lang.Object obj34 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass23);
        org.mockito.cglib.core.ClassInfo classInfo35 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass23);
        java.util.List list36 = null;
        java.util.List list37 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass23, list36);
        java.lang.Object obj38 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass23);
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        org.mockito.cglib.core.ClassInfo classInfo41 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass40);
        java.util.List list42 = null;
        java.util.List list43 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass40, list42);
        java.lang.String[] strArray44 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray45 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray46 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray44, methodArray45);
        java.lang.String[] strArray47 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray48 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray49 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray47, methodArray48);
        java.lang.reflect.Method[] methodArray50 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray44, methodArray49);
        java.lang.String[] strArray51 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray52 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray53 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray51, methodArray52);
        java.lang.String[] strArray54 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray55 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray56 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray54, methodArray55);
        java.lang.reflect.Method[] methodArray57 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray51, methodArray56);
        java.lang.reflect.Method[] methodArray58 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray44, methodArray57);
        java.lang.Class[] classArray59 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray57);
        java.lang.reflect.Constructor constructor60 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass40, classArray59);
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        org.mockito.cglib.core.ClassInfo classInfo63 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass62);
        java.lang.Object obj64 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass62);
        java.beans.PropertyDescriptor[] propertyDescriptorArray65 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray68 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray65, false, true);
        java.lang.Class[] classArray69 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray65);
        java.lang.Class[] classArray70 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray69);
        java.lang.String[] strArray71 = org.mockito.cglib.core.ReflectUtils.getNames(classArray70);
        java.lang.reflect.Constructor constructor72 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass62, classArray70);
        int int73 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray70);
        java.lang.Object obj74 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor60, (java.lang.Object[]) classArray70);
        int int75 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray70);
        int int76 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray70);
        java.lang.reflect.Constructor constructor77 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass23, classArray70);
        java.beans.PropertyDescriptor[] propertyDescriptorArray78 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray81 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray78, false, true);
        java.lang.reflect.Method[] methodArray84 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray78, false, false);
        java.lang.Class[] classArray85 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray78);
        int int86 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray85);
        int int87 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray85);
        java.lang.reflect.Constructor constructor88 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass23, classArray85);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Constructor constructor89 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass21, classArray85);
            org.junit.Assert.fail("Expected exception of type org.mockito.cglib.core.CodeGenerationException; message: java.lang.NoSuchMethodException-->[Ljava.beans.PropertyDescriptor;.<init>()");
        } catch (org.mockito.cglib.core.CodeGenerationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(methodArray1);
        org.junit.Assert.assertNotNull(methodArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(methodArray4);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(methodArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(classArray15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(propertyDescriptorArray17);
        org.junit.Assert.assertNotNull(methodArray20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(classInfo24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(propertyDescriptorArray26);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(classArray30);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(constructor33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(classInfo35);
        org.junit.Assert.assertNull(list37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(classInfo41);
        org.junit.Assert.assertNull(list43);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(methodArray45);
        org.junit.Assert.assertNotNull(methodArray46);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(methodArray48);
        org.junit.Assert.assertNotNull(methodArray49);
        org.junit.Assert.assertNotNull(methodArray50);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(methodArray52);
        org.junit.Assert.assertNotNull(methodArray53);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(methodArray55);
        org.junit.Assert.assertNotNull(methodArray56);
        org.junit.Assert.assertNotNull(methodArray57);
        org.junit.Assert.assertNotNull(methodArray58);
        org.junit.Assert.assertNotNull(classArray59);
        org.junit.Assert.assertNotNull(constructor60);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(classInfo63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(propertyDescriptorArray65);
        org.junit.Assert.assertNotNull(methodArray68);
        org.junit.Assert.assertNotNull(classArray69);
        org.junit.Assert.assertNotNull(classArray70);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertNotNull(constructor72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(constructor77);
        org.junit.Assert.assertNotNull(propertyDescriptorArray78);
        org.junit.Assert.assertNotNull(methodArray81);
        org.junit.Assert.assertNotNull(methodArray84);
        org.junit.Assert.assertNotNull(classArray85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertNotNull(constructor88);
    }

    @Test
    public void test1198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1198");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray1 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray2 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray1);
        java.lang.String[] strArray3 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray4 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray3, methodArray4);
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray5);
        java.lang.String[] strArray7 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray8 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray9 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.reflect.Method[] methodArray13 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray12);
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray13);
        java.lang.Class<?> wildcardClass15 = strArray0.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray16 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass15);
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.util.List list19 = null;
        java.util.List list20 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass18, list19);
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        org.mockito.cglib.core.ClassInfo classInfo23 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass22);
        java.lang.Object obj24 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass22);
        java.beans.PropertyDescriptor[] propertyDescriptorArray25 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray25, false, true);
        java.lang.Class[] classArray29 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray25);
        java.lang.Class[] classArray30 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray29);
        java.lang.String[] strArray31 = org.mockito.cglib.core.ReflectUtils.getNames(classArray30);
        java.lang.reflect.Constructor constructor32 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass22, classArray30);
        org.mockito.cglib.core.MethodInfo methodInfo33 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor32);
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray36 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray39 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray36, false, true);
        java.lang.Class[] classArray40 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray39);
        java.lang.Object[] objArray41 = null;
        java.lang.Object obj42 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass35, classArray40, objArray41);
        java.lang.Object obj43 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor32, (java.lang.Object[]) classArray40);
        java.lang.String[] strArray44 = org.mockito.cglib.core.ReflectUtils.getNames(classArray40);
        java.lang.reflect.Constructor constructor45 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass18, classArray40);
        int int46 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray40);
        int int47 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray40);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Constructor constructor48 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass15, classArray40);
            org.junit.Assert.fail("Expected exception of type org.mockito.cglib.core.CodeGenerationException; message: java.lang.NoSuchMethodException-->[Ljava.lang.String;.<init>()");
        } catch (org.mockito.cglib.core.CodeGenerationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(methodArray1);
        org.junit.Assert.assertNotNull(methodArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(methodArray4);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(methodArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(propertyDescriptorArray16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNull(list20);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(classInfo23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(propertyDescriptorArray25);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(classArray29);
        org.junit.Assert.assertNotNull(classArray30);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(constructor32);
        org.junit.Assert.assertNotNull(methodInfo33);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(propertyDescriptorArray36);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(classArray40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(constructor45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
    }

    @Test
    public void test1199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1199");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.lang.String[] strArray23 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray24 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray25 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray24);
        java.lang.String[] strArray26 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray27 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray26, methodArray27);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray28);
        java.lang.String[] strArray30 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray31 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray32 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray31);
        java.lang.String[] strArray33 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray34 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray33, methodArray34);
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray35);
        java.lang.reflect.Method[] methodArray37 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray36);
        java.lang.String[] strArray38 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray39 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray40 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray38, methodArray39);
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray40);
        java.lang.Object obj42 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) strArray23);
        org.mockito.cglib.core.MethodInfo methodInfo43 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        org.mockito.cglib.core.Signature signature44 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor21);
        org.mockito.asm.Type[] typeArray45 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(methodInfo43);
        org.junit.Assert.assertNotNull(signature44);
        org.junit.Assert.assertNotNull(typeArray45);
    }

    @Test
    public void test1200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1200");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray2 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray2, false, true);
        java.lang.Class[] classArray6 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray5);
        java.lang.Object[] objArray7 = null;
        java.lang.Object obj8 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray6, objArray7);
        java.lang.Class[] classArray9 = null;
        java.lang.reflect.Constructor constructor10 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray9);
        java.lang.Class[] classArray11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        org.mockito.cglib.core.ClassInfo classInfo14 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass13);
        java.util.List list15 = null;
        java.util.List list16 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass13, list15);
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        org.mockito.cglib.core.ClassInfo classInfo19 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass18);
        java.util.List list20 = null;
        java.util.List list21 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass18, list20);
        java.lang.String[] strArray22 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray23 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray24 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray22, methodArray23);
        java.lang.String[] strArray25 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray26 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray27 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray25, methodArray26);
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray22, methodArray27);
        java.lang.String[] strArray29 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray30 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray31 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray29, methodArray30);
        java.lang.String[] strArray32 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray33 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray32, methodArray33);
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray29, methodArray34);
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray22, methodArray35);
        java.lang.Class[] classArray37 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray35);
        java.lang.reflect.Constructor constructor38 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass18, classArray37);
        java.lang.Class[] classArray39 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray37);
        java.lang.String[] strArray40 = org.mockito.cglib.core.ReflectUtils.getNames(classArray39);
        java.lang.reflect.Constructor constructor41 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass13, classArray39);
        int int42 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray39);
        java.lang.Object obj43 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray11, (java.lang.Object[]) classArray39);
        // The following exception was thrown during execution in test generation
        try {
            java.beans.PropertyDescriptor[] propertyDescriptorArray44 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass1);
            org.junit.Assert.fail("Expected exception of type org.mockito.cglib.core.CodeGenerationException; message: java.beans.IntrospectionException-->java.lang.Object not superclass of java.lang.Object");
        } catch (org.mockito.cglib.core.CodeGenerationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(propertyDescriptorArray2);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(classArray6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(constructor10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(classInfo14);
        org.junit.Assert.assertNull(list16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(classInfo19);
        org.junit.Assert.assertNull(list21);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(methodArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(methodArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(methodArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(classArray37);
        org.junit.Assert.assertNotNull(constructor38);
        org.junit.Assert.assertNotNull(classArray39);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(constructor41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(obj43);
    }

    @Test
    public void test1201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1201");
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) 1, (byte) 10, (byte) 1, (byte) 100, (byte) -1 };
        java.lang.ClassLoader classLoader8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class9 = org.mockito.cglib.core.ReflectUtils.defineClass("", byteArray7, classLoader8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[100, 1, 10, 1, 100, -1]");
    }

    @Test
    public void test1202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1202");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray2 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray2, false, true);
        java.lang.Class[] classArray6 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray2);
        java.beans.PropertyDescriptor[] propertyDescriptorArray7 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray7, false, true);
        java.lang.Class[] classArray11 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray7);
        int int12 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray11);
        java.lang.String[] strArray13 = org.mockito.cglib.core.ReflectUtils.getNames(classArray11);
        java.lang.String[] strArray14 = org.mockito.cglib.core.ReflectUtils.getNames(classArray11);
        java.lang.Class[] classArray15 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) strArray14);
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        org.mockito.cglib.core.ClassInfo classInfo18 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass17);
        java.util.List list19 = null;
        java.util.List list20 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass17, list19);
        java.beans.PropertyDescriptor[] propertyDescriptorArray21 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray24 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray21, false, true);
        java.lang.Class[] classArray25 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray21);
        int int26 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray25);
        java.lang.String[] strArray27 = org.mockito.cglib.core.ReflectUtils.getNames(classArray25);
        java.lang.String[] strArray28 = org.mockito.cglib.core.ReflectUtils.getNames(classArray25);
        java.lang.String[] strArray29 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray30 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray31 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray29, methodArray30);
        java.lang.String[] strArray32 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray33 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray32, methodArray33);
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray29, methodArray34);
        java.lang.String[] strArray36 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray37 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray38 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray37);
        java.lang.String[] strArray39 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray40 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray39, methodArray40);
        java.lang.reflect.Method[] methodArray42 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray41);
        java.lang.reflect.Method[] methodArray43 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray29, methodArray42);
        java.lang.Object obj44 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass17, classArray25, (java.lang.Object[]) methodArray43);
        java.lang.reflect.Method[] methodArray45 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray14, methodArray43);
        java.lang.Object obj46 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray6, (java.lang.Object[]) strArray14);
        java.lang.String[] strArray47 = org.mockito.cglib.core.ReflectUtils.getNames(classArray6);
        int int48 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray6);
        java.lang.String[] strArray49 = org.mockito.cglib.core.ReflectUtils.getNames(classArray6);
        java.lang.Class<?> wildcardClass50 = classArray6.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray51 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass50);
        org.mockito.cglib.core.ClassInfo classInfo52 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass50);
        org.mockito.cglib.core.ClassInfo classInfo53 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass50);
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        org.mockito.cglib.core.ClassInfo classInfo57 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass56);
        java.util.List list58 = null;
        java.util.List list59 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass56, list58);
        java.lang.String[] strArray60 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray61 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray62 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray60, methodArray61);
        java.lang.String[] strArray63 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray64 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray65 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray63, methodArray64);
        java.lang.reflect.Method[] methodArray66 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray60, methodArray65);
        java.lang.String[] strArray67 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray68 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray69 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray67, methodArray68);
        java.lang.String[] strArray70 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray71 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray72 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray70, methodArray71);
        java.lang.reflect.Method[] methodArray73 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray67, methodArray72);
        java.lang.reflect.Method[] methodArray74 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray60, methodArray73);
        java.lang.Class[] classArray75 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray73);
        java.lang.reflect.Constructor constructor76 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass56, classArray75);
        java.lang.Object obj77 = new java.lang.Object();
        java.lang.Class<?> wildcardClass78 = obj77.getClass();
        org.mockito.cglib.core.ClassInfo classInfo79 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass78);
        java.lang.Object obj80 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass78);
        java.beans.PropertyDescriptor[] propertyDescriptorArray81 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray84 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray81, false, true);
        java.lang.Class[] classArray85 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray81);
        java.lang.Class[] classArray86 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray85);
        java.lang.String[] strArray87 = org.mockito.cglib.core.ReflectUtils.getNames(classArray86);
        java.lang.reflect.Constructor constructor88 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass78, classArray86);
        int int89 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray86);
        java.lang.Object obj90 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor76, (java.lang.Object[]) classArray86);
        int int91 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray86);
        java.lang.Class[] classArray92 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray86);
        int int93 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray92);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method94 = org.mockito.cglib.core.ReflectUtils.findDeclaredMethod((java.lang.Class) wildcardClass50, "", classArray92);
            org.junit.Assert.fail("Expected exception of type java.lang.NoSuchMethodException; message: ");
        } catch (java.lang.NoSuchMethodException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(propertyDescriptorArray2);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(classArray6);
        org.junit.Assert.assertNotNull(propertyDescriptorArray7);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(classArray15);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(classInfo18);
        org.junit.Assert.assertNull(list20);
        org.junit.Assert.assertNotNull(propertyDescriptorArray21);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(classArray25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(methodArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(methodArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(methodArray38);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(methodArray42);
        org.junit.Assert.assertNotNull(methodArray43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(methodArray45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(propertyDescriptorArray51);
        org.junit.Assert.assertNotNull(classInfo52);
        org.junit.Assert.assertNotNull(classInfo53);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(classInfo57);
        org.junit.Assert.assertNull(list59);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(methodArray61);
        org.junit.Assert.assertNotNull(methodArray62);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(methodArray64);
        org.junit.Assert.assertNotNull(methodArray65);
        org.junit.Assert.assertNotNull(methodArray66);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(methodArray68);
        org.junit.Assert.assertNotNull(methodArray69);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertNotNull(methodArray71);
        org.junit.Assert.assertNotNull(methodArray72);
        org.junit.Assert.assertNotNull(methodArray73);
        org.junit.Assert.assertNotNull(methodArray74);
        org.junit.Assert.assertNotNull(classArray75);
        org.junit.Assert.assertNotNull(constructor76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(classInfo79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(propertyDescriptorArray81);
        org.junit.Assert.assertNotNull(methodArray84);
        org.junit.Assert.assertNotNull(classArray85);
        org.junit.Assert.assertNotNull(classArray86);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertNotNull(constructor88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0);
        org.junit.Assert.assertNotNull(classArray92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 0 + "'", int93 == 0);
    }

    @Test
    public void test1203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1203");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo23 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21, (int) ' ');
        org.mockito.cglib.core.Signature signature24 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor21);
        java.lang.Class<?> wildcardClass25 = signature24.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray26 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass25);
        org.mockito.cglib.core.ClassInfo classInfo27 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass25);
        java.beans.PropertyDescriptor[] propertyDescriptorArray28 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass25);
        org.mockito.cglib.core.ClassInfo classInfo29 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass25);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj30 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass25);
            org.junit.Assert.fail("Expected exception of type org.mockito.cglib.core.CodeGenerationException; message: java.lang.NoSuchMethodException-->org.mockito.cglib.core.Signature.<init>()");
        } catch (org.mockito.cglib.core.CodeGenerationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo23);
        org.junit.Assert.assertNotNull(signature24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(propertyDescriptorArray26);
        org.junit.Assert.assertNotNull(classInfo27);
        org.junit.Assert.assertNotNull(propertyDescriptorArray28);
        org.junit.Assert.assertNotNull(classInfo29);
    }

    @Test
    public void test1204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1204");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo23 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21, (int) ' ');
        org.mockito.cglib.core.Signature signature24 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor21);
        java.lang.Class<?> wildcardClass25 = signature24.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray26 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass25);
        java.beans.PropertyDescriptor[] propertyDescriptorArray27 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass25);
        java.lang.reflect.Method[] methodArray30 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray27, true, false);
        java.lang.reflect.Method[] methodArray33 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray27, true, true);
        java.lang.Class<?> wildcardClass34 = propertyDescriptorArray27.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method35 = org.mockito.cglib.core.ReflectUtils.findInterfaceMethod((java.lang.Class) wildcardClass34);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: class [Ljava.beans.PropertyDescriptor; is not an interface");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo23);
        org.junit.Assert.assertNotNull(signature24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(propertyDescriptorArray26);
        org.junit.Assert.assertNotNull(propertyDescriptorArray27);
        org.junit.Assert.assertNotNull(methodArray30);
        org.junit.Assert.assertNotNull(methodArray33);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test1205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1205");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.lang.String[] strArray23 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray24 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray25 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray24);
        java.lang.String[] strArray26 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray27 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray26, methodArray27);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray28);
        java.lang.String[] strArray30 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray31 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray32 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray31);
        java.lang.String[] strArray33 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray34 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray33, methodArray34);
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray35);
        java.lang.reflect.Method[] methodArray37 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray36);
        java.lang.String[] strArray38 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray39 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray40 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray38, methodArray39);
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray40);
        java.lang.Object obj42 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) strArray23);
        org.mockito.cglib.core.MethodInfo methodInfo44 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21, (int) (short) -1);
        org.mockito.cglib.core.Signature signature45 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor21);
        org.mockito.cglib.core.MethodInfo methodInfo47 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21, (int) (byte) -1);
        org.mockito.asm.Type[] typeArray48 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(methodInfo44);
        org.junit.Assert.assertNotNull(signature45);
        org.junit.Assert.assertNotNull(methodInfo47);
        org.junit.Assert.assertNotNull(typeArray48);
    }

    @Test
    public void test1206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1206");
        java.beans.PropertyDescriptor[] propertyDescriptorArray0 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray3 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray0, false, true);
        java.lang.Class[] classArray4 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray0);
        java.lang.Class[] classArray5 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray4);
        java.lang.Class<?> wildcardClass6 = classArray4.getClass();
        org.mockito.cglib.core.ClassInfo classInfo7 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass6);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method8 = org.mockito.cglib.core.ReflectUtils.findInterfaceMethod((java.lang.Class) wildcardClass6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: class [Ljava.lang.Class; is not an interface");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(propertyDescriptorArray0);
        org.junit.Assert.assertNotNull(methodArray3);
        org.junit.Assert.assertNotNull(classArray4);
        org.junit.Assert.assertNotNull(classArray5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(classInfo7);
    }

    @Test
    public void test1207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1207");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.lang.Object obj3 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.beans.PropertyDescriptor[] propertyDescriptorArray4 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray4, false, true);
        java.lang.Class[] classArray8 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray4);
        java.lang.Class[] classArray9 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray8);
        java.lang.String[] strArray10 = org.mockito.cglib.core.ReflectUtils.getNames(classArray9);
        java.lang.reflect.Constructor constructor11 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray9);
        org.mockito.cglib.core.MethodInfo methodInfo13 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor11, 0);
        org.mockito.cglib.core.MethodInfo methodInfo15 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor11, (int) 'a');
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(propertyDescriptorArray4);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(classArray8);
        org.junit.Assert.assertNotNull(classArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(constructor11);
        org.junit.Assert.assertNotNull(methodInfo13);
        org.junit.Assert.assertNotNull(methodInfo15);
    }

    @Test
    public void test1208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1208");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        java.lang.Object obj2 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.beans.PropertyDescriptor[] propertyDescriptorArray3 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray3, false, true);
        java.lang.Class[] classArray7 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray3);
        java.lang.Class[] classArray8 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray7);
        java.lang.String[] strArray9 = org.mockito.cglib.core.ReflectUtils.getNames(classArray8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.Object obj13 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray8, (java.lang.Object[]) strArray10);
        java.lang.Object obj14 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.util.List list15 = null;
        java.util.List list16 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list15);
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        org.mockito.cglib.core.ClassInfo classInfo19 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass18);
        java.util.List list20 = null;
        java.util.List list21 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass18, list20);
        java.lang.String[] strArray22 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray23 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray24 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray22, methodArray23);
        java.lang.String[] strArray25 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray26 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray27 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray25, methodArray26);
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray22, methodArray27);
        java.lang.String[] strArray29 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray30 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray31 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray29, methodArray30);
        java.lang.String[] strArray32 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray33 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray32, methodArray33);
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray29, methodArray34);
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray22, methodArray35);
        java.lang.Class[] classArray37 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray35);
        java.lang.reflect.Constructor constructor38 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass18, classArray37);
        org.mockito.cglib.core.MethodInfo methodInfo39 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor38);
        java.beans.PropertyDescriptor[] propertyDescriptorArray40 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray43 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray40, false, true);
        java.lang.reflect.Method[] methodArray46 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray40, false, false);
        java.lang.Object obj47 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor38, (java.lang.Object[]) methodArray46);
        java.lang.Class[] classArray48 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray46);
        java.lang.reflect.Constructor constructor49 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray48);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method50 = org.mockito.cglib.core.ReflectUtils.findInterfaceMethod((java.lang.Class) wildcardClass1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: class java.lang.Object is not an interface");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(propertyDescriptorArray3);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(classArray7);
        org.junit.Assert.assertNotNull(classArray8);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNull(list16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(classInfo19);
        org.junit.Assert.assertNull(list21);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(methodArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(methodArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(methodArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(classArray37);
        org.junit.Assert.assertNotNull(constructor38);
        org.junit.Assert.assertNotNull(methodInfo39);
        org.junit.Assert.assertNotNull(propertyDescriptorArray40);
        org.junit.Assert.assertNotNull(methodArray43);
        org.junit.Assert.assertNotNull(methodArray46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(classArray48);
        org.junit.Assert.assertNotNull(constructor49);
    }

    @Test
    public void test1209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1209");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        java.lang.Object obj2 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.beans.PropertyDescriptor[] propertyDescriptorArray3 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray3, false, true);
        java.lang.Class[] classArray7 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray3);
        java.lang.Class[] classArray8 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray7);
        java.lang.String[] strArray9 = org.mockito.cglib.core.ReflectUtils.getNames(classArray8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.Object obj13 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray8, (java.lang.Object[]) strArray10);
        java.lang.Object obj14 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.String[] strArray18 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray19 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray20 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray18, methodArray19);
        java.lang.String[] strArray21 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray22 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray23 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray21, methodArray22);
        java.lang.String[] strArray24 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray25 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray24, methodArray25);
        java.lang.reflect.Method[] methodArray27 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray21, methodArray26);
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray18, methodArray27);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray28);
        java.lang.Class[] classArray30 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray29);
        int int31 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray30);
        java.lang.reflect.Constructor constructor32 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray30);
        java.util.List list33 = null;
        java.util.List list34 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list33);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(propertyDescriptorArray3);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(classArray7);
        org.junit.Assert.assertNotNull(classArray8);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(methodArray20);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(methodArray22);
        org.junit.Assert.assertNotNull(methodArray23);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(classArray30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(constructor32);
        org.junit.Assert.assertNull(list34);
    }

    @Test
    public void test1210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1210");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.lang.String[] strArray23 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray24 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray25 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray24);
        java.lang.String[] strArray26 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray27 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray26, methodArray27);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray28);
        java.lang.String[] strArray30 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray31 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray32 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray31);
        java.lang.String[] strArray33 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray34 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray33, methodArray34);
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray35);
        java.lang.reflect.Method[] methodArray37 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray36);
        java.lang.String[] strArray38 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray39 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray40 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray38, methodArray39);
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray40);
        java.lang.Object obj42 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) strArray23);
        org.mockito.asm.Type[] typeArray43 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        java.lang.Class<?> wildcardClass44 = typeArray43.getClass();
        org.mockito.cglib.core.ClassInfo classInfo45 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass44);
        java.beans.PropertyDescriptor[] propertyDescriptorArray46 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass44);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method47 = org.mockito.cglib.core.ReflectUtils.findInterfaceMethod((java.lang.Class) wildcardClass44);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: class [Lorg.mockito.asm.Type; is not an interface");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(classInfo45);
        org.junit.Assert.assertNotNull(propertyDescriptorArray46);
    }

    @Test
    public void test1211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1211");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray1 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray2 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray1);
        java.lang.String[] strArray3 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray4 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray3, methodArray4);
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray5);
        java.lang.String[] strArray7 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray8 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray9 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.reflect.Method[] methodArray13 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray12);
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray17);
        java.lang.Class<?> wildcardClass19 = methodArray18.getClass();
        org.mockito.cglib.core.ClassInfo classInfo20 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass19);
        java.beans.PropertyDescriptor[] propertyDescriptorArray21 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass19);
        java.beans.PropertyDescriptor[] propertyDescriptorArray22 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass19);
        java.beans.PropertyDescriptor[] propertyDescriptorArray23 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass19);
        java.beans.PropertyDescriptor[] propertyDescriptorArray24 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass19);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj25 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass19);
            org.junit.Assert.fail("Expected exception of type org.mockito.cglib.core.CodeGenerationException; message: java.lang.NoSuchMethodException-->[Ljava.lang.reflect.Method;.<init>()");
        } catch (org.mockito.cglib.core.CodeGenerationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(methodArray1);
        org.junit.Assert.assertNotNull(methodArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(methodArray4);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(methodArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(classInfo20);
        org.junit.Assert.assertNotNull(propertyDescriptorArray21);
        org.junit.Assert.assertNotNull(propertyDescriptorArray22);
        org.junit.Assert.assertNotNull(propertyDescriptorArray23);
        org.junit.Assert.assertNotNull(propertyDescriptorArray24);
    }

    @Test
    public void test1212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1212");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        java.lang.Object obj2 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.lang.Object obj3 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.lang.Object obj4 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        org.mockito.cglib.core.ClassInfo classInfo5 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.beans.PropertyDescriptor[] propertyDescriptorArray6 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray9 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray6, false, true);
        java.lang.Class[] classArray10 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray6);
        java.lang.reflect.Constructor constructor11 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray10);
        java.lang.Object obj12 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method13 = org.mockito.cglib.core.ReflectUtils.findNewInstance((java.lang.Class) wildcardClass1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: class java.lang.Object is not an interface");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(classInfo5);
        org.junit.Assert.assertNotNull(propertyDescriptorArray6);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(constructor11);
        org.junit.Assert.assertNotNull(obj12);
    }

    @Test
    public void test1213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1213");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.lang.Object obj3 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.beans.PropertyDescriptor[] propertyDescriptorArray4 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray4, false, true);
        java.lang.Class[] classArray8 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray4);
        java.lang.Class[] classArray9 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray8);
        java.lang.String[] strArray10 = org.mockito.cglib.core.ReflectUtils.getNames(classArray9);
        java.lang.reflect.Constructor constructor11 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray9);
        org.mockito.cglib.core.MethodInfo methodInfo12 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray15 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray15, false, true);
        java.lang.Class[] classArray19 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.Object[] objArray20 = null;
        java.lang.Object obj21 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass14, classArray19, objArray20);
        java.lang.Object obj22 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor11, (java.lang.Object[]) classArray19);
        org.mockito.cglib.core.MethodInfo methodInfo24 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor11, (int) (byte) 0);
        org.mockito.cglib.core.MethodInfo methodInfo25 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor11);
        org.mockito.asm.Type[] typeArray26 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor11);
        org.mockito.asm.Type[] typeArray27 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor11);
        org.mockito.cglib.core.MethodInfo methodInfo29 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor11, (int) 'a');
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(propertyDescriptorArray4);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(classArray8);
        org.junit.Assert.assertNotNull(classArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(constructor11);
        org.junit.Assert.assertNotNull(methodInfo12);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(propertyDescriptorArray15);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(classArray19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(methodInfo24);
        org.junit.Assert.assertNotNull(methodInfo25);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertNotNull(methodInfo29);
    }

    @Test
    public void test1214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1214");
        java.lang.Class class0 = null;
        java.lang.Object obj1 = new java.lang.Object();
        java.lang.Class<?> wildcardClass2 = obj1.getClass();
        java.lang.Object obj3 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass2);
        java.beans.PropertyDescriptor[] propertyDescriptorArray4 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray4, false, true);
        java.lang.Class[] classArray8 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray4);
        java.lang.Class[] classArray9 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray8);
        java.lang.String[] strArray10 = org.mockito.cglib.core.ReflectUtils.getNames(classArray9);
        java.lang.String[] strArray11 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray12 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray13 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray11, methodArray12);
        java.lang.Object obj14 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass2, classArray9, (java.lang.Object[]) strArray11);
        java.beans.PropertyDescriptor[] propertyDescriptorArray15 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray15, false, true);
        java.lang.reflect.Method[] methodArray21 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray15, false, false);
        java.lang.reflect.Method[] methodArray24 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray15, true, false);
        java.lang.Class[] classArray25 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray24);
        java.beans.PropertyDescriptor[] propertyDescriptorArray26 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray26, false, true);
        java.lang.Class[] classArray30 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray26);
        java.lang.Class[] classArray31 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray30);
        java.lang.String[] strArray32 = org.mockito.cglib.core.ReflectUtils.getNames(classArray30);
        java.lang.Class[] classArray33 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray30);
        int int34 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray30);
        java.lang.Object obj35 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass2, classArray25, (java.lang.Object[]) classArray30);
        int int36 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray30);
        java.lang.String[] strArray37 = org.mockito.cglib.core.ReflectUtils.getNames(classArray30);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Constructor constructor38 = org.mockito.cglib.core.ReflectUtils.getConstructor(class0, classArray30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(propertyDescriptorArray4);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(classArray8);
        org.junit.Assert.assertNotNull(classArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(propertyDescriptorArray15);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray21);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(classArray25);
        org.junit.Assert.assertNotNull(propertyDescriptorArray26);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(classArray30);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(strArray37);
    }

    @Test
    public void test1215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1215");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 1, (byte) 0, (byte) 1, (byte) 1 };
        java.lang.ClassLoader classLoader7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class8 = org.mockito.cglib.core.ReflectUtils.defineClass("hi!", byteArray6, classLoader7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 1, 0, 1, 1]");
    }

    @Test
    public void test1216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1216");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray1 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray2 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray1);
        java.lang.String[] strArray3 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray4 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray3, methodArray4);
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray5);
        java.lang.String[] strArray7 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray8 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray9 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.reflect.Method[] methodArray13 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray12);
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray13);
        java.lang.Class<?> wildcardClass15 = methodArray13.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray16 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass15);
        java.beans.PropertyDescriptor[] propertyDescriptorArray17 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass15);
        java.beans.PropertyDescriptor[] propertyDescriptorArray18 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass15);
        java.beans.PropertyDescriptor[] propertyDescriptorArray19 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass15);
        java.util.List list20 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List list21 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass15, list20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(methodArray1);
        org.junit.Assert.assertNotNull(methodArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(methodArray4);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(methodArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(propertyDescriptorArray16);
        org.junit.Assert.assertNotNull(propertyDescriptorArray17);
        org.junit.Assert.assertNotNull(propertyDescriptorArray18);
        org.junit.Assert.assertNotNull(propertyDescriptorArray19);
    }

    @Test
    public void test1217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1217");
        java.beans.PropertyDescriptor[] propertyDescriptorArray0 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray3 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray0, false, true);
        java.lang.Class[] classArray4 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray0);
        java.lang.Class[] classArray5 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray4);
        java.lang.String[] strArray6 = org.mockito.cglib.core.ReflectUtils.getNames(classArray4);
        java.lang.String[] strArray7 = org.mockito.cglib.core.ReflectUtils.getNames(classArray4);
        java.beans.PropertyDescriptor[] propertyDescriptorArray8 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray8, false, true);
        java.lang.Class[] classArray12 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray11);
        int int13 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray12);
        java.lang.String[] strArray14 = org.mockito.cglib.core.ReflectUtils.getNames(classArray12);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.String[] strArray18 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray19 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray20 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray18, methodArray19);
        java.lang.String[] strArray21 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray22 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray23 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray21, methodArray22);
        java.lang.String[] strArray24 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray25 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray24, methodArray25);
        java.lang.reflect.Method[] methodArray27 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray21, methodArray26);
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray18, methodArray27);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray28);
        java.lang.reflect.Method[] methodArray30 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray14, methodArray28);
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Object obj33 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass32);
        java.beans.PropertyDescriptor[] propertyDescriptorArray34 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray37 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray34, false, true);
        java.lang.Class[] classArray38 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray34);
        java.lang.Class[] classArray39 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray38);
        java.lang.String[] strArray40 = org.mockito.cglib.core.ReflectUtils.getNames(classArray39);
        java.lang.String[] strArray41 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray42 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray43 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray41, methodArray42);
        java.lang.Object obj44 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass32, classArray39, (java.lang.Object[]) strArray41);
        java.lang.String[] strArray45 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray46 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray47 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray45, methodArray46);
        java.lang.String[] strArray48 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray49 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray50 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray48, methodArray49);
        java.lang.reflect.Method[] methodArray51 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray45, methodArray50);
        java.lang.String[] strArray52 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray53 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray54 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray52, methodArray53);
        java.lang.String[] strArray55 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray56 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray57 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray55, methodArray56);
        java.lang.reflect.Method[] methodArray58 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray52, methodArray57);
        java.lang.reflect.Method[] methodArray59 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray45, methodArray58);
        java.lang.Class[] classArray60 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray58);
        java.beans.PropertyDescriptor[] propertyDescriptorArray61 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray64 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray61, false, true);
        java.lang.Class[] classArray65 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray64);
        java.lang.Object obj66 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass32, classArray60, (java.lang.Object[]) methodArray64);
        java.lang.reflect.Method[] methodArray67 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray14, methodArray64);
        java.lang.reflect.Method[] methodArray68 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray64);
        org.junit.Assert.assertNotNull(propertyDescriptorArray0);
        org.junit.Assert.assertNotNull(methodArray3);
        org.junit.Assert.assertNotNull(classArray4);
        org.junit.Assert.assertNotNull(classArray5);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(propertyDescriptorArray8);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(methodArray20);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(methodArray22);
        org.junit.Assert.assertNotNull(methodArray23);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(methodArray30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(propertyDescriptorArray34);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(classArray38);
        org.junit.Assert.assertNotNull(classArray39);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(methodArray42);
        org.junit.Assert.assertNotNull(methodArray43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(methodArray46);
        org.junit.Assert.assertNotNull(methodArray47);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(methodArray49);
        org.junit.Assert.assertNotNull(methodArray50);
        org.junit.Assert.assertNotNull(methodArray51);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(methodArray53);
        org.junit.Assert.assertNotNull(methodArray54);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(methodArray56);
        org.junit.Assert.assertNotNull(methodArray57);
        org.junit.Assert.assertNotNull(methodArray58);
        org.junit.Assert.assertNotNull(methodArray59);
        org.junit.Assert.assertNotNull(classArray60);
        org.junit.Assert.assertNotNull(propertyDescriptorArray61);
        org.junit.Assert.assertNotNull(methodArray64);
        org.junit.Assert.assertNotNull(classArray65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(methodArray67);
        org.junit.Assert.assertNotNull(methodArray68);
    }

    @Test
    public void test1218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1218");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray2 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray2, false, true);
        java.lang.Class[] classArray6 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray2);
        java.beans.PropertyDescriptor[] propertyDescriptorArray7 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray7, false, true);
        java.lang.Class[] classArray11 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray7);
        int int12 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray11);
        java.lang.String[] strArray13 = org.mockito.cglib.core.ReflectUtils.getNames(classArray11);
        java.lang.String[] strArray14 = org.mockito.cglib.core.ReflectUtils.getNames(classArray11);
        java.lang.Class[] classArray15 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) strArray14);
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        org.mockito.cglib.core.ClassInfo classInfo18 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass17);
        java.util.List list19 = null;
        java.util.List list20 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass17, list19);
        java.beans.PropertyDescriptor[] propertyDescriptorArray21 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray24 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray21, false, true);
        java.lang.Class[] classArray25 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray21);
        int int26 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray25);
        java.lang.String[] strArray27 = org.mockito.cglib.core.ReflectUtils.getNames(classArray25);
        java.lang.String[] strArray28 = org.mockito.cglib.core.ReflectUtils.getNames(classArray25);
        java.lang.String[] strArray29 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray30 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray31 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray29, methodArray30);
        java.lang.String[] strArray32 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray33 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray32, methodArray33);
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray29, methodArray34);
        java.lang.String[] strArray36 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray37 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray38 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray37);
        java.lang.String[] strArray39 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray40 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray39, methodArray40);
        java.lang.reflect.Method[] methodArray42 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray41);
        java.lang.reflect.Method[] methodArray43 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray29, methodArray42);
        java.lang.Object obj44 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass17, classArray25, (java.lang.Object[]) methodArray43);
        java.lang.reflect.Method[] methodArray45 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray14, methodArray43);
        java.lang.Object obj46 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray6, (java.lang.Object[]) strArray14);
        java.util.List list47 = null;
        java.util.List list48 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list47);
        java.lang.Object obj49 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.util.List list50 = null;
        java.util.List list51 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list50);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(propertyDescriptorArray2);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(classArray6);
        org.junit.Assert.assertNotNull(propertyDescriptorArray7);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(classArray15);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(classInfo18);
        org.junit.Assert.assertNull(list20);
        org.junit.Assert.assertNotNull(propertyDescriptorArray21);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(classArray25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(methodArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(methodArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(methodArray38);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(methodArray42);
        org.junit.Assert.assertNotNull(methodArray43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(methodArray45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNull(list48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNull(list51);
    }

    @Test
    public void test1219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1219");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.beans.PropertyDescriptor[] propertyDescriptorArray23 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray23, false, true);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray23, false, false);
        java.lang.Object obj30 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) methodArray29);
        java.beans.PropertyDescriptor[] propertyDescriptorArray31 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray31, true, true);
        java.lang.Object obj35 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) propertyDescriptorArray31);
        java.lang.String[] strArray36 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray37 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray38 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray37);
        java.lang.String[] strArray39 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray40 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray39, methodArray40);
        java.lang.reflect.Method[] methodArray42 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray41);
        java.lang.String[] strArray43 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray44 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray45 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray43, methodArray44);
        java.lang.String[] strArray46 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray47 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray48 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray46, methodArray47);
        java.lang.reflect.Method[] methodArray49 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray43, methodArray48);
        java.lang.reflect.Method[] methodArray50 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray49);
        java.lang.String[] strArray51 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray52 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray53 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray51, methodArray52);
        java.lang.String[] strArray54 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray55 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray56 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray54, methodArray55);
        java.lang.String[] strArray57 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray58 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray59 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray57, methodArray58);
        java.lang.String[] strArray60 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray61 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray62 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray60, methodArray61);
        java.lang.reflect.Method[] methodArray63 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray57, methodArray62);
        java.lang.reflect.Method[] methodArray64 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray54, methodArray63);
        java.lang.reflect.Method[] methodArray65 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray51, methodArray64);
        java.lang.reflect.Method[] methodArray66 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray64);
        java.lang.Object obj67 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) methodArray66);
        org.mockito.cglib.core.MethodInfo methodInfo68 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.lang.Class<?> wildcardClass69 = constructor21.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray70 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass69);
        java.beans.PropertyDescriptor[] propertyDescriptorArray71 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass69);
        java.util.List list72 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List list73 = org.mockito.cglib.core.ReflectUtils.addAllMethods((java.lang.Class) wildcardClass69, list72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(propertyDescriptorArray23);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(propertyDescriptorArray31);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(methodArray38);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(methodArray42);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(methodArray44);
        org.junit.Assert.assertNotNull(methodArray45);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(methodArray47);
        org.junit.Assert.assertNotNull(methodArray48);
        org.junit.Assert.assertNotNull(methodArray49);
        org.junit.Assert.assertNotNull(methodArray50);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(methodArray52);
        org.junit.Assert.assertNotNull(methodArray53);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(methodArray55);
        org.junit.Assert.assertNotNull(methodArray56);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(methodArray58);
        org.junit.Assert.assertNotNull(methodArray59);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(methodArray61);
        org.junit.Assert.assertNotNull(methodArray62);
        org.junit.Assert.assertNotNull(methodArray63);
        org.junit.Assert.assertNotNull(methodArray64);
        org.junit.Assert.assertNotNull(methodArray65);
        org.junit.Assert.assertNotNull(methodArray66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(methodInfo68);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(propertyDescriptorArray70);
        org.junit.Assert.assertNotNull(propertyDescriptorArray71);
    }

    @Test
    public void test1220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1220");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.lang.Object obj3 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        org.mockito.cglib.core.ClassInfo classInfo6 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass5);
        java.util.List list7 = null;
        java.util.List list8 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass5, list7);
        java.lang.String[] strArray9 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray10 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray9, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.reflect.Method[] methodArray15 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray9, methodArray14);
        java.lang.String[] strArray16 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray17 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray16, methodArray17);
        java.lang.String[] strArray19 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray20 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray21 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray19, methodArray20);
        java.lang.reflect.Method[] methodArray22 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray16, methodArray21);
        java.lang.reflect.Method[] methodArray23 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray9, methodArray22);
        java.lang.Class[] classArray24 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray22);
        java.lang.reflect.Constructor constructor25 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass5, classArray24);
        java.lang.Class[] classArray26 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray24);
        java.lang.reflect.Constructor constructor27 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray26);
        java.lang.Object obj28 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.util.List list29 = null;
        java.util.List list30 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list29);
        java.lang.String[] strArray31 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray32 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray33 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray31, methodArray32);
        java.lang.String[] strArray34 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray35 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray34, methodArray35);
        java.lang.reflect.Method[] methodArray37 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray31, methodArray36);
        java.lang.String[] strArray38 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray39 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray40 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray38, methodArray39);
        java.lang.String[] strArray41 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray42 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray43 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray41, methodArray42);
        java.lang.reflect.Method[] methodArray44 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray38, methodArray43);
        java.lang.reflect.Method[] methodArray45 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray31, methodArray44);
        java.lang.Class<?> wildcardClass46 = methodArray44.getClass();
        org.mockito.cglib.core.ClassInfo classInfo47 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass46);
        java.beans.PropertyDescriptor[] propertyDescriptorArray48 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass46);
        java.beans.PropertyDescriptor[] propertyDescriptorArray49 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass46);
        java.beans.PropertyDescriptor[] propertyDescriptorArray50 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass46);
        java.lang.Class[] classArray51 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray50);
        java.lang.String[] strArray52 = org.mockito.cglib.core.ReflectUtils.getNames(classArray51);
        java.lang.String[] strArray53 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray54 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray55 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray53, methodArray54);
        java.lang.String[] strArray56 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray57 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray58 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray56, methodArray57);
        java.lang.reflect.Method[] methodArray59 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray53, methodArray58);
        java.lang.String[] strArray60 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray61 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray62 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray60, methodArray61);
        java.lang.String[] strArray63 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray64 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray65 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray63, methodArray64);
        java.lang.reflect.Method[] methodArray66 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray60, methodArray65);
        java.lang.reflect.Method[] methodArray67 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray53, methodArray66);
        java.lang.Class[] classArray68 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray66);
        java.lang.Class[] classArray69 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray66);
        java.lang.Object obj70 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray51, (java.lang.Object[]) classArray69);
        java.util.List list71 = null;
        java.util.List list72 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list71);
        // The following exception was thrown during execution in test generation
        try {
            java.beans.PropertyDescriptor[] propertyDescriptorArray73 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass1);
            org.junit.Assert.fail("Expected exception of type org.mockito.cglib.core.CodeGenerationException; message: java.beans.IntrospectionException-->java.lang.Object not superclass of java.lang.Object");
        } catch (org.mockito.cglib.core.CodeGenerationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(classInfo6);
        org.junit.Assert.assertNull(list8);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(methodArray15);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(methodArray20);
        org.junit.Assert.assertNotNull(methodArray21);
        org.junit.Assert.assertNotNull(methodArray22);
        org.junit.Assert.assertNotNull(methodArray23);
        org.junit.Assert.assertNotNull(classArray24);
        org.junit.Assert.assertNotNull(constructor25);
        org.junit.Assert.assertNotNull(classArray26);
        org.junit.Assert.assertNotNull(constructor27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNull(list30);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(methodArray33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(methodArray42);
        org.junit.Assert.assertNotNull(methodArray43);
        org.junit.Assert.assertNotNull(methodArray44);
        org.junit.Assert.assertNotNull(methodArray45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(classInfo47);
        org.junit.Assert.assertNotNull(propertyDescriptorArray48);
        org.junit.Assert.assertNotNull(propertyDescriptorArray49);
        org.junit.Assert.assertNotNull(propertyDescriptorArray50);
        org.junit.Assert.assertNotNull(classArray51);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(methodArray54);
        org.junit.Assert.assertNotNull(methodArray55);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(methodArray57);
        org.junit.Assert.assertNotNull(methodArray58);
        org.junit.Assert.assertNotNull(methodArray59);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(methodArray61);
        org.junit.Assert.assertNotNull(methodArray62);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(methodArray64);
        org.junit.Assert.assertNotNull(methodArray65);
        org.junit.Assert.assertNotNull(methodArray66);
        org.junit.Assert.assertNotNull(methodArray67);
        org.junit.Assert.assertNotNull(classArray68);
        org.junit.Assert.assertNotNull(classArray69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNull(list72);
    }

    @Test
    public void test1221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1221");
        java.beans.PropertyDescriptor[] propertyDescriptorArray0 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray3 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray0, true, true);
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray0, false, true);
        java.lang.Class[] classArray7 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray0);
        java.lang.String[] strArray8 = org.mockito.cglib.core.ReflectUtils.getNames(classArray7);
        int int9 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray7);
        java.lang.String[] strArray10 = org.mockito.cglib.core.ReflectUtils.getNames(classArray7);
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray13 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray16 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray13, false, true);
        java.lang.Class[] classArray17 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray16);
        java.lang.Object[] objArray18 = null;
        java.lang.Object obj19 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass12, classArray17, objArray18);
        java.lang.String[] strArray20 = org.mockito.cglib.core.ReflectUtils.getNames(classArray17);
        java.lang.String[] strArray21 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray22 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray23 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray21, methodArray22);
        java.lang.String[] strArray24 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray25 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray24, methodArray25);
        java.lang.reflect.Method[] methodArray27 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray21, methodArray26);
        java.lang.String[] strArray28 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray29 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray30 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray28, methodArray29);
        java.lang.String[] strArray31 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray32 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray33 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray31, methodArray32);
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray28, methodArray33);
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray21, methodArray34);
        java.lang.Class[] classArray36 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray34);
        java.lang.Class[] classArray37 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray34);
        java.lang.reflect.Method[] methodArray38 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray20, methodArray34);
        java.lang.reflect.Method[] methodArray39 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray34);
        java.lang.String[] strArray40 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray41 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray42 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray40, methodArray41);
        java.lang.String[] strArray43 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray44 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray45 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray43, methodArray44);
        java.lang.reflect.Method[] methodArray46 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray40, methodArray45);
        java.lang.String[] strArray47 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray48 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray49 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray47, methodArray48);
        java.lang.String[] strArray50 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray51 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray52 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray50, methodArray51);
        java.lang.reflect.Method[] methodArray53 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray47, methodArray52);
        java.lang.reflect.Method[] methodArray54 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray40, methodArray53);
        java.lang.Class<?> wildcardClass55 = methodArray53.getClass();
        org.mockito.cglib.core.ClassInfo classInfo56 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass55);
        java.beans.PropertyDescriptor[] propertyDescriptorArray57 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass55);
        java.lang.reflect.Method[] methodArray60 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray57, false, false);
        java.lang.reflect.Method[] methodArray61 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray60);
        java.lang.Class[] classArray62 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray61);
        java.lang.Class[] classArray63 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray62);
        org.junit.Assert.assertNotNull(propertyDescriptorArray0);
        org.junit.Assert.assertNotNull(methodArray3);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(classArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(propertyDescriptorArray13);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(classArray17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(methodArray22);
        org.junit.Assert.assertNotNull(methodArray23);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(methodArray30);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(methodArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(classArray36);
        org.junit.Assert.assertNotNull(classArray37);
        org.junit.Assert.assertNotNull(methodArray38);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(methodArray42);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(methodArray44);
        org.junit.Assert.assertNotNull(methodArray45);
        org.junit.Assert.assertNotNull(methodArray46);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(methodArray48);
        org.junit.Assert.assertNotNull(methodArray49);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(methodArray51);
        org.junit.Assert.assertNotNull(methodArray52);
        org.junit.Assert.assertNotNull(methodArray53);
        org.junit.Assert.assertNotNull(methodArray54);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(classInfo56);
        org.junit.Assert.assertNotNull(propertyDescriptorArray57);
        org.junit.Assert.assertNotNull(methodArray60);
        org.junit.Assert.assertNotNull(methodArray61);
        org.junit.Assert.assertNotNull(classArray62);
        org.junit.Assert.assertNotNull(classArray63);
    }

    @Test
    public void test1222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1222");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.lang.String[] strArray23 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray24 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray25 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray24);
        java.lang.String[] strArray26 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray27 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray26, methodArray27);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray28);
        java.lang.String[] strArray30 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray31 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray32 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray31);
        java.lang.String[] strArray33 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray34 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray33, methodArray34);
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray35);
        java.lang.reflect.Method[] methodArray37 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray36);
        java.lang.String[] strArray38 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray39 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray40 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray38, methodArray39);
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray40);
        java.lang.Object obj42 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) strArray23);
        org.mockito.cglib.core.MethodInfo methodInfo44 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21, (int) (byte) 0);
        org.mockito.cglib.core.MethodInfo methodInfo45 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        org.mockito.cglib.core.Signature signature46 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor21);
        org.mockito.cglib.core.Signature signature47 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor21);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(methodInfo44);
        org.junit.Assert.assertNotNull(methodInfo45);
        org.junit.Assert.assertNotNull(signature46);
        org.junit.Assert.assertNotNull(signature47);
    }

    @Test
    public void test1223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1223");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray1 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray2 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray1);
        java.lang.String[] strArray3 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray4 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray3, methodArray4);
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray5);
        java.lang.String[] strArray7 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray8 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray9 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.reflect.Method[] methodArray13 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray12);
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray13);
        java.lang.Class<?> wildcardClass15 = methodArray13.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray16 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass15);
        java.beans.PropertyDescriptor[] propertyDescriptorArray17 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass15);
        org.mockito.cglib.core.ClassInfo classInfo18 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass15);
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(methodArray1);
        org.junit.Assert.assertNotNull(methodArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(methodArray4);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(methodArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(propertyDescriptorArray16);
        org.junit.Assert.assertNotNull(propertyDescriptorArray17);
        org.junit.Assert.assertNotNull(classInfo18);
    }

    @Test
    public void test1224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1224");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray2 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray2, false, true);
        java.lang.Class[] classArray6 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray2);
        java.beans.PropertyDescriptor[] propertyDescriptorArray7 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray7, false, true);
        java.lang.Class[] classArray11 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray7);
        int int12 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray11);
        java.lang.String[] strArray13 = org.mockito.cglib.core.ReflectUtils.getNames(classArray11);
        java.lang.String[] strArray14 = org.mockito.cglib.core.ReflectUtils.getNames(classArray11);
        java.lang.Class[] classArray15 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) strArray14);
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        org.mockito.cglib.core.ClassInfo classInfo18 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass17);
        java.util.List list19 = null;
        java.util.List list20 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass17, list19);
        java.beans.PropertyDescriptor[] propertyDescriptorArray21 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray24 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray21, false, true);
        java.lang.Class[] classArray25 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray21);
        int int26 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray25);
        java.lang.String[] strArray27 = org.mockito.cglib.core.ReflectUtils.getNames(classArray25);
        java.lang.String[] strArray28 = org.mockito.cglib.core.ReflectUtils.getNames(classArray25);
        java.lang.String[] strArray29 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray30 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray31 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray29, methodArray30);
        java.lang.String[] strArray32 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray33 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray32, methodArray33);
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray29, methodArray34);
        java.lang.String[] strArray36 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray37 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray38 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray37);
        java.lang.String[] strArray39 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray40 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray39, methodArray40);
        java.lang.reflect.Method[] methodArray42 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray41);
        java.lang.reflect.Method[] methodArray43 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray29, methodArray42);
        java.lang.Object obj44 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass17, classArray25, (java.lang.Object[]) methodArray43);
        java.lang.reflect.Method[] methodArray45 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray14, methodArray43);
        java.lang.Object obj46 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray6, (java.lang.Object[]) strArray14);
        java.util.List list47 = null;
        java.util.List list48 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list47);
        java.lang.Object obj49 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        // The following exception was thrown during execution in test generation
        try {
            java.beans.PropertyDescriptor[] propertyDescriptorArray50 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass1);
            org.junit.Assert.fail("Expected exception of type org.mockito.cglib.core.CodeGenerationException; message: java.beans.IntrospectionException-->java.lang.Object not superclass of java.lang.Object");
        } catch (org.mockito.cglib.core.CodeGenerationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(propertyDescriptorArray2);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(classArray6);
        org.junit.Assert.assertNotNull(propertyDescriptorArray7);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(classArray15);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(classInfo18);
        org.junit.Assert.assertNull(list20);
        org.junit.Assert.assertNotNull(propertyDescriptorArray21);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(classArray25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(methodArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(methodArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(methodArray38);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(methodArray42);
        org.junit.Assert.assertNotNull(methodArray43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(methodArray45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNull(list48);
        org.junit.Assert.assertNotNull(obj49);
    }

    @Test
    public void test1225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1225");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo23 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21, (int) ' ');
        org.mockito.cglib.core.MethodInfo methodInfo25 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21, 10);
        org.mockito.cglib.core.MethodInfo methodInfo26 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo23);
        org.junit.Assert.assertNotNull(methodInfo25);
        org.junit.Assert.assertNotNull(methodInfo26);
    }

    @Test
    public void test1226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1226");
        java.beans.PropertyDescriptor[] propertyDescriptorArray0 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray3 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray0, false, true);
        java.lang.Class[] classArray4 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray0);
        java.lang.Class[] classArray5 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray4);
        java.lang.Class<?> wildcardClass6 = classArray5.getClass();
        org.mockito.cglib.core.ClassInfo classInfo7 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass6);
        java.beans.PropertyDescriptor[] propertyDescriptorArray8 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass6);
        java.beans.PropertyDescriptor[] propertyDescriptorArray9 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass6);
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray9, true, true);
        java.lang.Class<?> wildcardClass13 = propertyDescriptorArray9.getClass();
        org.mockito.cglib.core.ClassInfo classInfo14 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass13);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj15 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass13);
            org.junit.Assert.fail("Expected exception of type org.mockito.cglib.core.CodeGenerationException; message: java.lang.NoSuchMethodException-->[Ljava.beans.PropertyDescriptor;.<init>()");
        } catch (org.mockito.cglib.core.CodeGenerationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(propertyDescriptorArray0);
        org.junit.Assert.assertNotNull(methodArray3);
        org.junit.Assert.assertNotNull(classArray4);
        org.junit.Assert.assertNotNull(classArray5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(classInfo7);
        org.junit.Assert.assertNotNull(propertyDescriptorArray8);
        org.junit.Assert.assertNotNull(propertyDescriptorArray9);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(classInfo14);
    }

    @Test
    public void test1227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1227");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.lang.String[] strArray23 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray24 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray25 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray24);
        java.lang.String[] strArray26 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray27 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray26, methodArray27);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray28);
        java.lang.String[] strArray30 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray31 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray32 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray31);
        java.lang.String[] strArray33 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray34 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray33, methodArray34);
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray35);
        java.lang.reflect.Method[] methodArray37 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray36);
        java.lang.String[] strArray38 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray39 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray40 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray38, methodArray39);
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray40);
        java.lang.Object obj42 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) strArray23);
        org.mockito.cglib.core.MethodInfo methodInfo43 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        org.mockito.asm.Type[] typeArray44 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        java.lang.Class<?> wildcardClass45 = typeArray44.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray46 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass45);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method47 = org.mockito.cglib.core.ReflectUtils.findInterfaceMethod((java.lang.Class) wildcardClass45);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: class [Lorg.mockito.asm.Type; is not an interface");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(methodInfo43);
        org.junit.Assert.assertNotNull(typeArray44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(propertyDescriptorArray46);
    }

    @Test
    public void test1228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1228");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray1 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray2 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray1);
        java.lang.String[] strArray3 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray4 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray3, methodArray4);
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray5);
        java.lang.String[] strArray7 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray8 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray9 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.reflect.Method[] methodArray13 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray12);
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray13);
        java.lang.Class[] classArray15 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray13);
        java.lang.Class<?> wildcardClass16 = classArray15.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray17 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass16);
        java.beans.PropertyDescriptor[] propertyDescriptorArray18 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass16);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method19 = org.mockito.cglib.core.ReflectUtils.findNewInstance((java.lang.Class) wildcardClass16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: class [Ljava.lang.Class; is not an interface");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(methodArray1);
        org.junit.Assert.assertNotNull(methodArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(methodArray4);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(methodArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(classArray15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(propertyDescriptorArray17);
        org.junit.Assert.assertNotNull(propertyDescriptorArray18);
    }

    @Test
    public void test1229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1229");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo23 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21, (int) ' ');
        org.mockito.cglib.core.MethodInfo methodInfo25 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21, 10);
        org.mockito.cglib.core.MethodInfo methodInfo27 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21, 100);
        org.mockito.cglib.core.MethodInfo methodInfo28 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray31 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray31, false, true);
        java.lang.Class[] classArray35 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray34);
        java.lang.Object[] objArray36 = null;
        java.lang.Object obj37 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass30, classArray35, objArray36);
        java.lang.Class[] classArray38 = null;
        java.lang.reflect.Constructor constructor39 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass30, classArray38);
        java.lang.Class[] classArray40 = null;
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        org.mockito.cglib.core.ClassInfo classInfo43 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass42);
        java.util.List list44 = null;
        java.util.List list45 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass42, list44);
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        org.mockito.cglib.core.ClassInfo classInfo48 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass47);
        java.util.List list49 = null;
        java.util.List list50 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass47, list49);
        java.lang.String[] strArray51 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray52 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray53 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray51, methodArray52);
        java.lang.String[] strArray54 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray55 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray56 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray54, methodArray55);
        java.lang.reflect.Method[] methodArray57 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray51, methodArray56);
        java.lang.String[] strArray58 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray59 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray60 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray58, methodArray59);
        java.lang.String[] strArray61 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray62 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray63 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray61, methodArray62);
        java.lang.reflect.Method[] methodArray64 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray58, methodArray63);
        java.lang.reflect.Method[] methodArray65 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray51, methodArray64);
        java.lang.Class[] classArray66 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray64);
        java.lang.reflect.Constructor constructor67 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass47, classArray66);
        java.lang.Class[] classArray68 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray66);
        java.lang.String[] strArray69 = org.mockito.cglib.core.ReflectUtils.getNames(classArray68);
        java.lang.reflect.Constructor constructor70 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass42, classArray68);
        int int71 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray68);
        java.lang.Object obj72 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass30, classArray40, (java.lang.Object[]) classArray68);
        java.lang.Object obj73 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) classArray68);
        java.lang.Class<?> wildcardClass74 = constructor21.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray75 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo23);
        org.junit.Assert.assertNotNull(methodInfo25);
        org.junit.Assert.assertNotNull(methodInfo27);
        org.junit.Assert.assertNotNull(methodInfo28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(propertyDescriptorArray31);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(classArray35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(constructor39);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(classInfo43);
        org.junit.Assert.assertNull(list45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(classInfo48);
        org.junit.Assert.assertNull(list50);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(methodArray52);
        org.junit.Assert.assertNotNull(methodArray53);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(methodArray55);
        org.junit.Assert.assertNotNull(methodArray56);
        org.junit.Assert.assertNotNull(methodArray57);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(methodArray59);
        org.junit.Assert.assertNotNull(methodArray60);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(methodArray62);
        org.junit.Assert.assertNotNull(methodArray63);
        org.junit.Assert.assertNotNull(methodArray64);
        org.junit.Assert.assertNotNull(methodArray65);
        org.junit.Assert.assertNotNull(classArray66);
        org.junit.Assert.assertNotNull(constructor67);
        org.junit.Assert.assertNotNull(classArray68);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(constructor70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(propertyDescriptorArray75);
    }

    @Test
    public void test1230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1230");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray1 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray2 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray1);
        java.lang.String[] strArray3 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray4 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray3, methodArray4);
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray5);
        java.lang.String[] strArray7 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray8 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray9 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.reflect.Method[] methodArray13 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray12);
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray13);
        java.lang.Class<?> wildcardClass15 = strArray0.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray16 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass15);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method17 = org.mockito.cglib.core.ReflectUtils.findInterfaceMethod((java.lang.Class) wildcardClass15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: class [Ljava.lang.String; is not an interface");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(methodArray1);
        org.junit.Assert.assertNotNull(methodArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(methodArray4);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(methodArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(propertyDescriptorArray16);
    }

    @Test
    public void test1231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1231");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.Object obj5 = new java.lang.Object();
        java.lang.Class<?> wildcardClass6 = obj5.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray7 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray7, false, true);
        java.lang.Class[] classArray11 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray10);
        java.lang.Object[] objArray12 = null;
        java.lang.Object obj13 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass6, classArray11, objArray12);
        java.lang.reflect.Constructor constructor14 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray11);
        org.mockito.cglib.core.ClassInfo classInfo15 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.lang.Class[] classArray16 = null;
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        org.mockito.cglib.core.ClassInfo classInfo19 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass18);
        java.util.List list20 = null;
        java.util.List list21 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass18, list20);
        java.lang.String[] strArray22 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray23 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray24 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray22, methodArray23);
        java.lang.String[] strArray25 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray26 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray27 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray25, methodArray26);
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray22, methodArray27);
        java.lang.String[] strArray29 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray30 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray31 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray29, methodArray30);
        java.lang.String[] strArray32 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray33 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray32, methodArray33);
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray29, methodArray34);
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray22, methodArray35);
        java.lang.Class[] classArray37 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray35);
        java.lang.reflect.Constructor constructor38 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass18, classArray37);
        java.lang.Class[] classArray39 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray37);
        java.lang.String[] strArray40 = org.mockito.cglib.core.ReflectUtils.getNames(classArray39);
        java.lang.String[] strArray41 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray42 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray43 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray41, methodArray42);
        java.lang.String[] strArray44 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray45 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray46 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray44, methodArray45);
        java.lang.String[] strArray47 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray48 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray49 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray47, methodArray48);
        java.lang.reflect.Method[] methodArray50 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray44, methodArray49);
        java.lang.reflect.Method[] methodArray51 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray41, methodArray50);
        java.lang.reflect.Method[] methodArray52 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray40, methodArray50);
        java.lang.Object obj53 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray16, (java.lang.Object[]) methodArray50);
        java.util.List list54 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List list55 = org.mockito.cglib.core.ReflectUtils.addAllMethods((java.lang.Class) wildcardClass1, list54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(propertyDescriptorArray7);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(constructor14);
        org.junit.Assert.assertNotNull(classInfo15);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(classInfo19);
        org.junit.Assert.assertNull(list21);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(methodArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(methodArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(methodArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(classArray37);
        org.junit.Assert.assertNotNull(constructor38);
        org.junit.Assert.assertNotNull(classArray39);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(methodArray42);
        org.junit.Assert.assertNotNull(methodArray43);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(methodArray45);
        org.junit.Assert.assertNotNull(methodArray46);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(methodArray48);
        org.junit.Assert.assertNotNull(methodArray49);
        org.junit.Assert.assertNotNull(methodArray50);
        org.junit.Assert.assertNotNull(methodArray51);
        org.junit.Assert.assertNotNull(methodArray52);
        org.junit.Assert.assertNotNull(obj53);
    }

    @Test
    public void test1232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1232");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.lang.Object obj3 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.beans.PropertyDescriptor[] propertyDescriptorArray4 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray4, false, true);
        java.lang.Class[] classArray8 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray4);
        java.lang.Class[] classArray9 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray8);
        java.lang.String[] strArray10 = org.mockito.cglib.core.ReflectUtils.getNames(classArray9);
        java.lang.reflect.Constructor constructor11 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray9);
        java.lang.Object obj12 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        org.mockito.cglib.core.ClassInfo classInfo13 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list14 = null;
        java.util.List list15 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list14);
        java.lang.Object obj16 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        org.mockito.cglib.core.ClassInfo classInfo19 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass18);
        java.util.List list20 = null;
        java.util.List list21 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass18, list20);
        java.lang.String[] strArray22 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray23 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray24 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray22, methodArray23);
        java.lang.String[] strArray25 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray26 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray27 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray25, methodArray26);
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray22, methodArray27);
        java.lang.String[] strArray29 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray30 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray31 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray29, methodArray30);
        java.lang.String[] strArray32 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray33 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray32, methodArray33);
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray29, methodArray34);
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray22, methodArray35);
        java.lang.Class[] classArray37 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray35);
        java.lang.reflect.Constructor constructor38 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass18, classArray37);
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        org.mockito.cglib.core.ClassInfo classInfo41 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass40);
        java.lang.Object obj42 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass40);
        java.beans.PropertyDescriptor[] propertyDescriptorArray43 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray46 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray43, false, true);
        java.lang.Class[] classArray47 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray43);
        java.lang.Class[] classArray48 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray47);
        java.lang.String[] strArray49 = org.mockito.cglib.core.ReflectUtils.getNames(classArray48);
        java.lang.reflect.Constructor constructor50 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass40, classArray48);
        int int51 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray48);
        java.lang.Object obj52 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor38, (java.lang.Object[]) classArray48);
        int int53 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray48);
        int int54 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray48);
        java.lang.reflect.Constructor constructor55 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray48);
        java.beans.PropertyDescriptor[] propertyDescriptorArray56 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray59 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray56, false, true);
        java.lang.reflect.Method[] methodArray62 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray56, false, false);
        java.lang.Class[] classArray63 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray56);
        int int64 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray63);
        int int65 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray63);
        java.lang.reflect.Constructor constructor66 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray63);
        org.mockito.cglib.core.MethodInfo methodInfo68 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor66, 100);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(propertyDescriptorArray4);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(classArray8);
        org.junit.Assert.assertNotNull(classArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(constructor11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(classInfo13);
        org.junit.Assert.assertNull(list15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(classInfo19);
        org.junit.Assert.assertNull(list21);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(methodArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(methodArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(methodArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(classArray37);
        org.junit.Assert.assertNotNull(constructor38);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(classInfo41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(propertyDescriptorArray43);
        org.junit.Assert.assertNotNull(methodArray46);
        org.junit.Assert.assertNotNull(classArray47);
        org.junit.Assert.assertNotNull(classArray48);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(constructor50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(constructor55);
        org.junit.Assert.assertNotNull(propertyDescriptorArray56);
        org.junit.Assert.assertNotNull(methodArray59);
        org.junit.Assert.assertNotNull(methodArray62);
        org.junit.Assert.assertNotNull(classArray63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(constructor66);
        org.junit.Assert.assertNotNull(methodInfo68);
    }

    @Test
    public void test1233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1233");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.lang.Object obj3 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.beans.PropertyDescriptor[] propertyDescriptorArray4 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray4, false, true);
        java.lang.Class[] classArray8 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray4);
        java.lang.Class[] classArray9 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray8);
        java.lang.String[] strArray10 = org.mockito.cglib.core.ReflectUtils.getNames(classArray9);
        java.lang.reflect.Constructor constructor11 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray9);
        org.mockito.cglib.core.Signature signature12 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass14);
        java.beans.PropertyDescriptor[] propertyDescriptorArray16 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray16, false, true);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray16);
        java.lang.Class[] classArray21 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray20);
        java.lang.String[] strArray22 = org.mockito.cglib.core.ReflectUtils.getNames(classArray21);
        java.lang.String[] strArray23 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray24 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray25 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray24);
        java.lang.Object obj26 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass14, classArray21, (java.lang.Object[]) strArray23);
        java.lang.String[] strArray27 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray28 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray27, methodArray28);
        java.lang.String[] strArray30 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray31 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray32 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray31);
        java.lang.reflect.Method[] methodArray33 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray27, methodArray32);
        java.lang.String[] strArray34 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray35 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray34, methodArray35);
        java.lang.String[] strArray37 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray38 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray39 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray37, methodArray38);
        java.lang.reflect.Method[] methodArray40 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray34, methodArray39);
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray27, methodArray40);
        java.lang.Class[] classArray42 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray40);
        java.beans.PropertyDescriptor[] propertyDescriptorArray43 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray46 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray43, false, true);
        java.lang.Class[] classArray47 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray46);
        java.lang.Object obj48 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass14, classArray42, (java.lang.Object[]) methodArray46);
        java.lang.String[] strArray49 = org.mockito.cglib.core.ReflectUtils.getNames(classArray42);
        java.lang.String[] strArray50 = org.mockito.cglib.core.ReflectUtils.getNames(classArray42);
        java.lang.Object obj51 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor11, (java.lang.Object[]) strArray50);
        java.beans.PropertyDescriptor[] propertyDescriptorArray52 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray55 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray52, false, true);
        java.lang.Class[] classArray56 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray52);
        java.lang.Class[] classArray57 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray56);
        java.lang.String[] strArray58 = org.mockito.cglib.core.ReflectUtils.getNames(classArray56);
        java.lang.Class<?> wildcardClass59 = classArray56.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray60 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass59);
        java.beans.PropertyDescriptor[] propertyDescriptorArray61 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass59);
        java.beans.PropertyDescriptor[] propertyDescriptorArray62 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass59);
        java.beans.PropertyDescriptor[] propertyDescriptorArray63 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass59);
        java.beans.PropertyDescriptor[] propertyDescriptorArray64 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass59);
        java.lang.reflect.Method[] methodArray67 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray64, true, true);
        java.lang.reflect.Method[] methodArray70 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray64, false, false);
        java.lang.Object obj71 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor11, (java.lang.Object[]) methodArray70);
        org.mockito.cglib.core.MethodInfo methodInfo72 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor11);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(propertyDescriptorArray4);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(classArray8);
        org.junit.Assert.assertNotNull(classArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(constructor11);
        org.junit.Assert.assertNotNull(signature12);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(propertyDescriptorArray16);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(classArray21);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(methodArray33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(methodArray38);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(classArray42);
        org.junit.Assert.assertNotNull(propertyDescriptorArray43);
        org.junit.Assert.assertNotNull(methodArray46);
        org.junit.Assert.assertNotNull(classArray47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(propertyDescriptorArray52);
        org.junit.Assert.assertNotNull(methodArray55);
        org.junit.Assert.assertNotNull(classArray56);
        org.junit.Assert.assertNotNull(classArray57);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(propertyDescriptorArray60);
        org.junit.Assert.assertNotNull(propertyDescriptorArray61);
        org.junit.Assert.assertNotNull(propertyDescriptorArray62);
        org.junit.Assert.assertNotNull(propertyDescriptorArray63);
        org.junit.Assert.assertNotNull(propertyDescriptorArray64);
        org.junit.Assert.assertNotNull(methodArray67);
        org.junit.Assert.assertNotNull(methodArray70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(methodInfo72);
    }

    @Test
    public void test1234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1234");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray1 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray2 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray1);
        java.lang.String[] strArray3 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray4 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray3, methodArray4);
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray5);
        java.lang.String[] strArray7 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray8 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray9 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.reflect.Method[] methodArray13 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray12);
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray13);
        java.lang.Class<?> wildcardClass15 = methodArray13.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray16 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass15);
        java.beans.PropertyDescriptor[] propertyDescriptorArray17 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass15);
        java.beans.PropertyDescriptor[] propertyDescriptorArray18 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass15);
        java.beans.PropertyDescriptor[] propertyDescriptorArray19 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass15);
        java.lang.reflect.Method[] methodArray22 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray19, false, true);
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(methodArray1);
        org.junit.Assert.assertNotNull(methodArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(methodArray4);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(methodArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(propertyDescriptorArray16);
        org.junit.Assert.assertNotNull(propertyDescriptorArray17);
        org.junit.Assert.assertNotNull(propertyDescriptorArray18);
        org.junit.Assert.assertNotNull(propertyDescriptorArray19);
        org.junit.Assert.assertNotNull(methodArray22);
    }

    @Test
    public void test1235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1235");
        java.beans.PropertyDescriptor[] propertyDescriptorArray0 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray3 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray0, false, true);
        java.lang.Class[] classArray4 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray0);
        java.lang.Class[] classArray5 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray4);
        java.lang.String[] strArray6 = org.mockito.cglib.core.ReflectUtils.getNames(classArray4);
        java.lang.Class<?> wildcardClass7 = classArray4.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray8 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass7);
        java.beans.PropertyDescriptor[] propertyDescriptorArray9 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass7);
        java.lang.Class[] classArray10 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray9);
        java.lang.String[] strArray11 = org.mockito.cglib.core.ReflectUtils.getNames(classArray10);
        java.lang.Class[] classArray12 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) strArray11);
        java.beans.PropertyDescriptor[] propertyDescriptorArray13 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray16 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray13, false, true);
        java.lang.Class[] classArray17 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray13);
        java.lang.Class[] classArray18 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray17);
        java.lang.String[] strArray19 = org.mockito.cglib.core.ReflectUtils.getNames(classArray17);
        java.lang.Class<?> wildcardClass20 = classArray17.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray21 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass20);
        java.beans.PropertyDescriptor[] propertyDescriptorArray22 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass20);
        java.beans.PropertyDescriptor[] propertyDescriptorArray23 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass20);
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray23, false, true);
        java.lang.reflect.Method[] methodArray27 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray11, methodArray26);
        org.junit.Assert.assertNotNull(propertyDescriptorArray0);
        org.junit.Assert.assertNotNull(methodArray3);
        org.junit.Assert.assertNotNull(classArray4);
        org.junit.Assert.assertNotNull(classArray5);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(propertyDescriptorArray8);
        org.junit.Assert.assertNotNull(propertyDescriptorArray9);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(propertyDescriptorArray13);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(classArray17);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(propertyDescriptorArray21);
        org.junit.Assert.assertNotNull(propertyDescriptorArray22);
        org.junit.Assert.assertNotNull(propertyDescriptorArray23);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(methodArray27);
    }

    @Test
    public void test1236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1236");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.lang.Object obj3 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        org.mockito.cglib.core.ClassInfo classInfo4 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list5 = null;
        java.util.List list6 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        org.mockito.cglib.core.ClassInfo classInfo9 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass8);
        java.util.List list10 = null;
        java.util.List list11 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass8, list10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.String[] strArray19 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray20 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray21 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray19, methodArray20);
        java.lang.String[] strArray22 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray23 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray24 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray22, methodArray23);
        java.lang.reflect.Method[] methodArray25 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray19, methodArray24);
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray25);
        java.lang.Class[] classArray27 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray25);
        java.lang.reflect.Constructor constructor28 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass8, classArray27);
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        org.mockito.cglib.core.ClassInfo classInfo31 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass30);
        java.lang.Object obj32 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass30);
        java.beans.PropertyDescriptor[] propertyDescriptorArray33 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray33, false, true);
        java.lang.Class[] classArray37 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray33);
        java.lang.Class[] classArray38 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray37);
        java.lang.String[] strArray39 = org.mockito.cglib.core.ReflectUtils.getNames(classArray38);
        java.lang.reflect.Constructor constructor40 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass30, classArray38);
        int int41 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray38);
        java.lang.Object obj42 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor28, (java.lang.Object[]) classArray38);
        int int43 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray38);
        java.lang.Class[] classArray44 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray38);
        java.lang.Class[] classArray45 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray38);
        int int46 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray38);
        java.lang.reflect.Constructor constructor47 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray38);
        org.mockito.asm.Type[] typeArray48 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor47);
        org.mockito.cglib.core.MethodInfo methodInfo49 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor47);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(classInfo4);
        org.junit.Assert.assertNull(list6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classInfo9);
        org.junit.Assert.assertNull(list11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(methodArray20);
        org.junit.Assert.assertNotNull(methodArray21);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(methodArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(classArray27);
        org.junit.Assert.assertNotNull(constructor28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classInfo31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(propertyDescriptorArray33);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(classArray37);
        org.junit.Assert.assertNotNull(classArray38);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(constructor40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(classArray44);
        org.junit.Assert.assertNotNull(classArray45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(constructor47);
        org.junit.Assert.assertNotNull(typeArray48);
        org.junit.Assert.assertNotNull(methodInfo49);
    }

    @Test
    public void test1237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1237");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.util.List list5 = null;
        java.util.List list6 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list5);
        java.lang.Object obj7 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        org.mockito.cglib.core.ClassInfo classInfo8 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray11 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray11, false, true);
        java.lang.Class[] classArray15 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray14);
        java.lang.Object[] objArray16 = null;
        java.lang.Object obj17 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass10, classArray15, objArray16);
        java.lang.Class[] classArray18 = null;
        java.lang.reflect.Constructor constructor19 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass10, classArray18);
        java.beans.PropertyDescriptor[] propertyDescriptorArray20 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray23 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray20, false, true);
        java.lang.Class[] classArray24 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray20);
        java.lang.Class[] classArray25 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray24);
        java.lang.reflect.Constructor constructor26 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass10, classArray25);
        java.lang.reflect.Constructor constructor27 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray25);
        // The following exception was thrown during execution in test generation
        try {
            java.beans.PropertyDescriptor[] propertyDescriptorArray28 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass1);
            org.junit.Assert.fail("Expected exception of type org.mockito.cglib.core.CodeGenerationException; message: java.beans.IntrospectionException-->java.lang.Object not superclass of java.lang.Object");
        } catch (org.mockito.cglib.core.CodeGenerationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNull(list6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(classInfo8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(propertyDescriptorArray11);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(classArray15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(constructor19);
        org.junit.Assert.assertNotNull(propertyDescriptorArray20);
        org.junit.Assert.assertNotNull(methodArray23);
        org.junit.Assert.assertNotNull(classArray24);
        org.junit.Assert.assertNotNull(classArray25);
        org.junit.Assert.assertNotNull(constructor26);
        org.junit.Assert.assertNotNull(constructor27);
    }

    @Test
    public void test1238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1238");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.lang.Object obj3 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.beans.PropertyDescriptor[] propertyDescriptorArray4 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray4, false, true);
        java.lang.Class[] classArray8 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray4);
        java.lang.Class[] classArray9 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray8);
        java.lang.String[] strArray10 = org.mockito.cglib.core.ReflectUtils.getNames(classArray9);
        java.lang.reflect.Constructor constructor11 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray9);
        org.mockito.cglib.core.MethodInfo methodInfo12 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray15 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray15, false, true);
        java.lang.Class[] classArray19 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.Object[] objArray20 = null;
        java.lang.Object obj21 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass14, classArray19, objArray20);
        java.lang.Object obj22 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor11, (java.lang.Object[]) classArray19);
        java.beans.PropertyDescriptor[] propertyDescriptorArray23 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray23, false, true);
        java.lang.Class[] classArray27 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray23);
        java.lang.Class[] classArray28 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray27);
        java.lang.String[] strArray29 = org.mockito.cglib.core.ReflectUtils.getNames(classArray27);
        java.lang.Class[] classArray30 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray27);
        java.lang.Object obj31 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor11, (java.lang.Object[]) classArray27);
        org.mockito.cglib.core.MethodInfo methodInfo33 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor11, 100);
        org.mockito.cglib.core.MethodInfo methodInfo34 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor11);
        java.lang.Class<?> wildcardClass35 = methodInfo34.getClass();
        org.mockito.cglib.core.ClassInfo classInfo36 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass35);
        java.util.List list37 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List list38 = org.mockito.cglib.core.ReflectUtils.addAllMethods((java.lang.Class) wildcardClass35, list37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(propertyDescriptorArray4);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(classArray8);
        org.junit.Assert.assertNotNull(classArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(constructor11);
        org.junit.Assert.assertNotNull(methodInfo12);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(propertyDescriptorArray15);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(classArray19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(propertyDescriptorArray23);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(classArray27);
        org.junit.Assert.assertNotNull(classArray28);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(classArray30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(methodInfo33);
        org.junit.Assert.assertNotNull(methodInfo34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(classInfo36);
    }

    @Test
    public void test1239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1239");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.lang.Object obj3 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.beans.PropertyDescriptor[] propertyDescriptorArray4 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray4, false, true);
        java.lang.Class[] classArray8 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray4);
        java.lang.Class[] classArray9 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray8);
        java.lang.String[] strArray10 = org.mockito.cglib.core.ReflectUtils.getNames(classArray9);
        java.lang.reflect.Constructor constructor11 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray9);
        java.lang.Object obj12 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        org.mockito.cglib.core.ClassInfo classInfo13 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.beans.PropertyDescriptor[] propertyDescriptorArray14 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray14, false, true);
        java.lang.Class[] classArray18 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray14);
        java.lang.Class[] classArray19 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray18);
        java.lang.String[] strArray20 = org.mockito.cglib.core.ReflectUtils.getNames(classArray19);
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        org.mockito.cglib.core.ClassInfo classInfo23 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass22);
        java.util.List list24 = null;
        java.util.List list25 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass22, list24);
        java.beans.PropertyDescriptor[] propertyDescriptorArray26 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray26, false, true);
        java.lang.Class[] classArray30 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray26);
        int int31 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray30);
        java.lang.String[] strArray32 = org.mockito.cglib.core.ReflectUtils.getNames(classArray30);
        java.lang.String[] strArray33 = org.mockito.cglib.core.ReflectUtils.getNames(classArray30);
        java.lang.String[] strArray34 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray35 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray34, methodArray35);
        java.lang.String[] strArray37 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray38 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray39 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray37, methodArray38);
        java.lang.reflect.Method[] methodArray40 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray34, methodArray39);
        java.lang.String[] strArray41 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray42 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray43 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray41, methodArray42);
        java.lang.String[] strArray44 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray45 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray46 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray44, methodArray45);
        java.lang.reflect.Method[] methodArray47 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray41, methodArray46);
        java.lang.reflect.Method[] methodArray48 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray34, methodArray47);
        java.lang.Object obj49 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass22, classArray30, (java.lang.Object[]) methodArray48);
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.util.List list52 = null;
        java.util.List list53 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass51, list52);
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        org.mockito.cglib.core.ClassInfo classInfo56 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass55);
        java.lang.Object obj57 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass55);
        java.beans.PropertyDescriptor[] propertyDescriptorArray58 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray61 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray58, false, true);
        java.lang.Class[] classArray62 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray58);
        java.lang.Class[] classArray63 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray62);
        java.lang.String[] strArray64 = org.mockito.cglib.core.ReflectUtils.getNames(classArray63);
        java.lang.reflect.Constructor constructor65 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass55, classArray63);
        org.mockito.cglib.core.MethodInfo methodInfo66 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor65);
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray69 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray72 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray69, false, true);
        java.lang.Class[] classArray73 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray72);
        java.lang.Object[] objArray74 = null;
        java.lang.Object obj75 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass68, classArray73, objArray74);
        java.lang.Object obj76 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor65, (java.lang.Object[]) classArray73);
        java.lang.String[] strArray77 = org.mockito.cglib.core.ReflectUtils.getNames(classArray73);
        java.lang.reflect.Constructor constructor78 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass51, classArray73);
        java.lang.reflect.Constructor constructor79 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass22, classArray73);
        java.lang.Object obj80 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray19, (java.lang.Object[]) classArray73);
        java.util.List list81 = null;
        java.util.List list82 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list81);
        java.util.List list83 = null;
        java.util.List list84 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list83);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method85 = org.mockito.cglib.core.ReflectUtils.findInterfaceMethod((java.lang.Class) wildcardClass1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: class java.lang.Object is not an interface");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(propertyDescriptorArray4);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(classArray8);
        org.junit.Assert.assertNotNull(classArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(constructor11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(classInfo13);
        org.junit.Assert.assertNotNull(propertyDescriptorArray14);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(classArray19);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(classInfo23);
        org.junit.Assert.assertNull(list25);
        org.junit.Assert.assertNotNull(propertyDescriptorArray26);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(classArray30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(methodArray38);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(methodArray42);
        org.junit.Assert.assertNotNull(methodArray43);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(methodArray45);
        org.junit.Assert.assertNotNull(methodArray46);
        org.junit.Assert.assertNotNull(methodArray47);
        org.junit.Assert.assertNotNull(methodArray48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNull(list53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(classInfo56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(propertyDescriptorArray58);
        org.junit.Assert.assertNotNull(methodArray61);
        org.junit.Assert.assertNotNull(classArray62);
        org.junit.Assert.assertNotNull(classArray63);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(constructor65);
        org.junit.Assert.assertNotNull(methodInfo66);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(propertyDescriptorArray69);
        org.junit.Assert.assertNotNull(methodArray72);
        org.junit.Assert.assertNotNull(classArray73);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(constructor78);
        org.junit.Assert.assertNotNull(constructor79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNull(list82);
        org.junit.Assert.assertNull(list84);
    }

    @Test
    public void test1240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1240");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        org.mockito.cglib.core.ClassInfo classInfo3 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNotNull(classInfo3);
    }

    @Test
    public void test1241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1241");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.lang.String[] strArray23 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray24 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray25 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray24);
        java.lang.String[] strArray26 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray27 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray26, methodArray27);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray28);
        java.lang.String[] strArray30 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray31 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray32 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray31);
        java.lang.String[] strArray33 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray34 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray33, methodArray34);
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray35);
        java.lang.reflect.Method[] methodArray37 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray36);
        java.lang.String[] strArray38 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray39 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray40 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray38, methodArray39);
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray40);
        java.lang.Object obj42 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) strArray23);
        org.mockito.asm.Type[] typeArray43 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        java.lang.Class<?> wildcardClass44 = typeArray43.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray45 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass44);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method46 = org.mockito.cglib.core.ReflectUtils.findInterfaceMethod((java.lang.Class) wildcardClass44);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: class [Lorg.mockito.asm.Type; is not an interface");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(propertyDescriptorArray45);
    }

    @Test
    public void test1242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1242");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.Object obj5 = new java.lang.Object();
        java.lang.Class<?> wildcardClass6 = obj5.getClass();
        org.mockito.cglib.core.ClassInfo classInfo7 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass6);
        java.util.List list8 = null;
        java.util.List list9 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass6, list8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.String[] strArray13 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray14 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray15 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray13, methodArray14);
        java.lang.reflect.Method[] methodArray16 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray15);
        java.lang.String[] strArray17 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray18 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray17, methodArray18);
        java.lang.String[] strArray20 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray21 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray22 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray20, methodArray21);
        java.lang.reflect.Method[] methodArray23 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray17, methodArray22);
        java.lang.reflect.Method[] methodArray24 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray23);
        java.lang.Class[] classArray25 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray23);
        java.lang.reflect.Constructor constructor26 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass6, classArray25);
        java.lang.Class[] classArray27 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray25);
        java.lang.String[] strArray28 = org.mockito.cglib.core.ReflectUtils.getNames(classArray27);
        java.lang.reflect.Constructor constructor29 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray27);
        java.lang.String[] strArray30 = org.mockito.cglib.core.ReflectUtils.getNames(classArray27);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(classInfo7);
        org.junit.Assert.assertNull(list9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(methodArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(methodArray21);
        org.junit.Assert.assertNotNull(methodArray22);
        org.junit.Assert.assertNotNull(methodArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(classArray25);
        org.junit.Assert.assertNotNull(constructor26);
        org.junit.Assert.assertNotNull(classArray27);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(constructor29);
        org.junit.Assert.assertNotNull(strArray30);
    }

    @Test
    public void test1243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1243");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.Object obj5 = new java.lang.Object();
        java.lang.Class<?> wildcardClass6 = obj5.getClass();
        org.mockito.cglib.core.ClassInfo classInfo7 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass6);
        java.util.List list8 = null;
        java.util.List list9 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass6, list8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.String[] strArray13 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray14 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray15 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray13, methodArray14);
        java.lang.reflect.Method[] methodArray16 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray15);
        java.lang.String[] strArray17 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray18 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray17, methodArray18);
        java.lang.String[] strArray20 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray21 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray22 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray20, methodArray21);
        java.lang.reflect.Method[] methodArray23 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray17, methodArray22);
        java.lang.reflect.Method[] methodArray24 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray23);
        java.lang.Class[] classArray25 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray23);
        java.lang.reflect.Constructor constructor26 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass6, classArray25);
        java.lang.Class[] classArray27 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray25);
        java.lang.String[] strArray28 = org.mockito.cglib.core.ReflectUtils.getNames(classArray27);
        java.lang.reflect.Constructor constructor29 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray27);
        org.mockito.asm.Type[] typeArray30 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor29);
        org.mockito.asm.Type[] typeArray31 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor29);
        java.lang.Class[] classArray32 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) typeArray31);
        java.lang.Class<?> wildcardClass33 = classArray32.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method34 = org.mockito.cglib.core.ReflectUtils.findNewInstance((java.lang.Class) wildcardClass33);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: class [Ljava.lang.Class; is not an interface");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(classInfo7);
        org.junit.Assert.assertNull(list9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(methodArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(methodArray21);
        org.junit.Assert.assertNotNull(methodArray22);
        org.junit.Assert.assertNotNull(methodArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(classArray25);
        org.junit.Assert.assertNotNull(constructor26);
        org.junit.Assert.assertNotNull(classArray27);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(constructor29);
        org.junit.Assert.assertNotNull(typeArray30);
        org.junit.Assert.assertNotNull(typeArray31);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test1244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1244");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.lang.Object obj3 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.beans.PropertyDescriptor[] propertyDescriptorArray4 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray4, false, true);
        java.lang.Class[] classArray8 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray4);
        java.lang.Class[] classArray9 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray8);
        java.lang.String[] strArray10 = org.mockito.cglib.core.ReflectUtils.getNames(classArray9);
        java.lang.reflect.Constructor constructor11 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray9);
        org.mockito.cglib.core.MethodInfo methodInfo12 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray15 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray15, false, true);
        java.lang.Class[] classArray19 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.Object[] objArray20 = null;
        java.lang.Object obj21 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass14, classArray19, objArray20);
        java.lang.Object obj22 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor11, (java.lang.Object[]) classArray19);
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray25 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray25, false, true);
        java.lang.Class[] classArray29 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray28);
        java.lang.Object[] objArray30 = null;
        java.lang.Object obj31 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass24, classArray29, objArray30);
        java.lang.String[] strArray32 = org.mockito.cglib.core.ReflectUtils.getNames(classArray29);
        java.lang.Object obj33 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor11, (java.lang.Object[]) strArray32);
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.util.List list36 = null;
        java.util.List list37 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass35, list36);
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        org.mockito.cglib.core.ClassInfo classInfo40 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass39);
        java.lang.Object obj41 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass39);
        java.beans.PropertyDescriptor[] propertyDescriptorArray42 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray45 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray42, false, true);
        java.lang.Class[] classArray46 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray42);
        java.lang.Class[] classArray47 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray46);
        java.lang.String[] strArray48 = org.mockito.cglib.core.ReflectUtils.getNames(classArray47);
        java.lang.reflect.Constructor constructor49 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass39, classArray47);
        org.mockito.cglib.core.MethodInfo methodInfo50 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor49);
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray53 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray56 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray53, false, true);
        java.lang.Class[] classArray57 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray56);
        java.lang.Object[] objArray58 = null;
        java.lang.Object obj59 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass52, classArray57, objArray58);
        java.lang.Object obj60 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor49, (java.lang.Object[]) classArray57);
        java.lang.String[] strArray61 = org.mockito.cglib.core.ReflectUtils.getNames(classArray57);
        java.lang.reflect.Constructor constructor62 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass35, classArray57);
        org.mockito.cglib.core.MethodInfo methodInfo64 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor62, (int) (byte) 10);
        org.mockito.asm.Type[] typeArray65 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor62);
        java.lang.Object obj66 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor11, (java.lang.Object[]) typeArray65);
        org.mockito.cglib.core.MethodInfo methodInfo67 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor11);
        org.mockito.cglib.core.Signature signature68 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor11);
        org.mockito.cglib.core.MethodInfo methodInfo69 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor11);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(propertyDescriptorArray4);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(classArray8);
        org.junit.Assert.assertNotNull(classArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(constructor11);
        org.junit.Assert.assertNotNull(methodInfo12);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(propertyDescriptorArray15);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(classArray19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(propertyDescriptorArray25);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(classArray29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNull(list37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(classInfo40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(propertyDescriptorArray42);
        org.junit.Assert.assertNotNull(methodArray45);
        org.junit.Assert.assertNotNull(classArray46);
        org.junit.Assert.assertNotNull(classArray47);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(constructor49);
        org.junit.Assert.assertNotNull(methodInfo50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(propertyDescriptorArray53);
        org.junit.Assert.assertNotNull(methodArray56);
        org.junit.Assert.assertNotNull(classArray57);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(constructor62);
        org.junit.Assert.assertNotNull(methodInfo64);
        org.junit.Assert.assertNotNull(typeArray65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(methodInfo67);
        org.junit.Assert.assertNotNull(signature68);
        org.junit.Assert.assertNotNull(methodInfo69);
    }

    @Test
    public void test1245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1245");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.beans.PropertyDescriptor[] propertyDescriptorArray5 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray8 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray5, false, true);
        java.lang.Class[] classArray9 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray5);
        int int10 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray9);
        java.lang.String[] strArray11 = org.mockito.cglib.core.ReflectUtils.getNames(classArray9);
        java.lang.String[] strArray12 = org.mockito.cglib.core.ReflectUtils.getNames(classArray9);
        java.lang.String[] strArray13 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray14 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray15 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray13, methodArray14);
        java.lang.String[] strArray16 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray17 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray16, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray13, methodArray18);
        java.lang.String[] strArray20 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray21 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray22 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray20, methodArray21);
        java.lang.String[] strArray23 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray24 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray25 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray24);
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray20, methodArray25);
        java.lang.reflect.Method[] methodArray27 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray13, methodArray26);
        java.lang.Object obj28 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray9, (java.lang.Object[]) methodArray27);
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        java.util.List list31 = null;
        java.util.List list32 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass30, list31);
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        org.mockito.cglib.core.ClassInfo classInfo35 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass34);
        java.lang.Object obj36 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass34);
        java.beans.PropertyDescriptor[] propertyDescriptorArray37 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray40 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray37, false, true);
        java.lang.Class[] classArray41 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray37);
        java.lang.Class[] classArray42 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray41);
        java.lang.String[] strArray43 = org.mockito.cglib.core.ReflectUtils.getNames(classArray42);
        java.lang.reflect.Constructor constructor44 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass34, classArray42);
        org.mockito.cglib.core.MethodInfo methodInfo45 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor44);
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray48 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray51 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray48, false, true);
        java.lang.Class[] classArray52 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray51);
        java.lang.Object[] objArray53 = null;
        java.lang.Object obj54 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass47, classArray52, objArray53);
        java.lang.Object obj55 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor44, (java.lang.Object[]) classArray52);
        java.lang.String[] strArray56 = org.mockito.cglib.core.ReflectUtils.getNames(classArray52);
        java.lang.reflect.Constructor constructor57 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass30, classArray52);
        java.lang.reflect.Constructor constructor58 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray52);
        org.mockito.cglib.core.Signature signature59 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor58);
        org.mockito.cglib.core.Signature signature60 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor58);
        org.mockito.cglib.core.MethodInfo methodInfo62 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor58, (int) (byte) -1);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(propertyDescriptorArray5);
        org.junit.Assert.assertNotNull(methodArray8);
        org.junit.Assert.assertNotNull(classArray9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(methodArray15);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(methodArray21);
        org.junit.Assert.assertNotNull(methodArray22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNull(list32);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(classInfo35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(propertyDescriptorArray37);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(classArray41);
        org.junit.Assert.assertNotNull(classArray42);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(constructor44);
        org.junit.Assert.assertNotNull(methodInfo45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(propertyDescriptorArray48);
        org.junit.Assert.assertNotNull(methodArray51);
        org.junit.Assert.assertNotNull(classArray52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(constructor57);
        org.junit.Assert.assertNotNull(constructor58);
        org.junit.Assert.assertNotNull(signature59);
        org.junit.Assert.assertNotNull(signature60);
        org.junit.Assert.assertNotNull(methodInfo62);
    }

    @Test
    public void test1246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1246");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.lang.Object obj3 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.lang.Object obj4 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.lang.Object obj5 = new java.lang.Object();
        java.lang.Class<?> wildcardClass6 = obj5.getClass();
        org.mockito.cglib.core.ClassInfo classInfo7 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass6);
        java.lang.Object obj8 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass6);
        java.beans.PropertyDescriptor[] propertyDescriptorArray9 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray9, false, true);
        java.lang.Class[] classArray13 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray9);
        java.lang.Class[] classArray14 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray13);
        java.lang.String[] strArray15 = org.mockito.cglib.core.ReflectUtils.getNames(classArray14);
        java.lang.reflect.Constructor constructor16 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass6, classArray14);
        java.lang.Object obj17 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass6);
        org.mockito.cglib.core.ClassInfo classInfo18 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass6);
        java.util.List list19 = null;
        java.util.List list20 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass6, list19);
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        org.mockito.cglib.core.ClassInfo classInfo23 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass22);
        java.util.List list24 = null;
        java.util.List list25 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass22, list24);
        java.lang.String[] strArray26 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray27 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray26, methodArray27);
        java.lang.String[] strArray29 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray30 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray31 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray29, methodArray30);
        java.lang.reflect.Method[] methodArray32 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray26, methodArray31);
        java.lang.String[] strArray33 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray34 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray33, methodArray34);
        java.lang.String[] strArray36 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray37 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray38 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray37);
        java.lang.reflect.Method[] methodArray39 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray33, methodArray38);
        java.lang.reflect.Method[] methodArray40 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray26, methodArray39);
        java.lang.Class[] classArray41 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray39);
        java.lang.reflect.Constructor constructor42 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass22, classArray41);
        org.mockito.cglib.core.MethodInfo methodInfo43 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor42);
        java.lang.String[] strArray44 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray45 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray46 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray44, methodArray45);
        java.lang.String[] strArray47 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray48 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray49 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray47, methodArray48);
        java.lang.reflect.Method[] methodArray50 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray44, methodArray49);
        java.lang.String[] strArray51 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray52 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray53 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray51, methodArray52);
        java.lang.String[] strArray54 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray55 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray56 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray54, methodArray55);
        java.lang.reflect.Method[] methodArray57 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray51, methodArray56);
        java.lang.reflect.Method[] methodArray58 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray44, methodArray57);
        java.lang.String[] strArray59 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray60 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray61 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray59, methodArray60);
        java.lang.reflect.Method[] methodArray62 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray44, methodArray61);
        java.lang.Object obj63 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor42, (java.lang.Object[]) strArray44);
        org.mockito.cglib.core.MethodInfo methodInfo64 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor42);
        org.mockito.asm.Type[] typeArray65 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor42);
        java.beans.PropertyDescriptor[] propertyDescriptorArray66 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray69 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray66, false, true);
        java.lang.Class[] classArray70 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray66);
        java.lang.Class[] classArray71 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray70);
        java.lang.String[] strArray72 = org.mockito.cglib.core.ReflectUtils.getNames(classArray71);
        int int73 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray71);
        java.lang.Object obj74 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor42, (java.lang.Object[]) classArray71);
        java.lang.reflect.Constructor constructor75 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass6, classArray71);
        java.lang.String[] strArray76 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray77 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray78 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray76, methodArray77);
        java.lang.String[] strArray79 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray80 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray81 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray79, methodArray80);
        java.lang.reflect.Method[] methodArray82 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray76, methodArray81);
        java.lang.String[] strArray83 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray84 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray85 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray83, methodArray84);
        java.lang.String[] strArray86 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray87 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray88 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray86, methodArray87);
        java.lang.reflect.Method[] methodArray89 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray83, methodArray88);
        java.lang.reflect.Method[] methodArray90 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray76, methodArray89);
        java.lang.Class<?> wildcardClass91 = methodArray89.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray92 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass91);
        java.lang.Object obj93 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray71, (java.lang.Object[]) propertyDescriptorArray92);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(classInfo7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(propertyDescriptorArray9);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(classArray13);
        org.junit.Assert.assertNotNull(classArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(constructor16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(classInfo18);
        org.junit.Assert.assertNull(list20);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(classInfo23);
        org.junit.Assert.assertNull(list25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(methodArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(methodArray38);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(classArray41);
        org.junit.Assert.assertNotNull(constructor42);
        org.junit.Assert.assertNotNull(methodInfo43);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(methodArray45);
        org.junit.Assert.assertNotNull(methodArray46);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(methodArray48);
        org.junit.Assert.assertNotNull(methodArray49);
        org.junit.Assert.assertNotNull(methodArray50);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(methodArray52);
        org.junit.Assert.assertNotNull(methodArray53);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(methodArray55);
        org.junit.Assert.assertNotNull(methodArray56);
        org.junit.Assert.assertNotNull(methodArray57);
        org.junit.Assert.assertNotNull(methodArray58);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(methodArray60);
        org.junit.Assert.assertNotNull(methodArray61);
        org.junit.Assert.assertNotNull(methodArray62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(methodInfo64);
        org.junit.Assert.assertNotNull(typeArray65);
        org.junit.Assert.assertNotNull(propertyDescriptorArray66);
        org.junit.Assert.assertNotNull(methodArray69);
        org.junit.Assert.assertNotNull(classArray70);
        org.junit.Assert.assertNotNull(classArray71);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(constructor75);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertNotNull(methodArray77);
        org.junit.Assert.assertNotNull(methodArray78);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertNotNull(methodArray80);
        org.junit.Assert.assertNotNull(methodArray81);
        org.junit.Assert.assertNotNull(methodArray82);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertNotNull(methodArray84);
        org.junit.Assert.assertNotNull(methodArray85);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertNotNull(methodArray87);
        org.junit.Assert.assertNotNull(methodArray88);
        org.junit.Assert.assertNotNull(methodArray89);
        org.junit.Assert.assertNotNull(methodArray90);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertNotNull(propertyDescriptorArray92);
        org.junit.Assert.assertNotNull(obj93);
    }

    @Test
    public void test1247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1247");
        java.beans.PropertyDescriptor[] propertyDescriptorArray0 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray3 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray0, true, true);
        java.lang.Class<?> wildcardClass4 = methodArray3.getClass();
        java.lang.Object obj5 = new java.lang.Object();
        java.lang.Class<?> wildcardClass6 = obj5.getClass();
        java.lang.Object obj7 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass6);
        java.lang.Object obj8 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass6);
        java.lang.String[] strArray9 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray10 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray9, methodArray10);
        java.lang.Class[] classArray12 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) strArray9);
        java.lang.String[] strArray13 = org.mockito.cglib.core.ReflectUtils.getNames(classArray12);
        java.beans.PropertyDescriptor[] propertyDescriptorArray14 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray14, false, true);
        java.lang.Class[] classArray18 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray14);
        int int19 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray18);
        int int20 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray18);
        java.lang.Object obj21 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass6, classArray12, (java.lang.Object[]) classArray18);
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.util.List list24 = null;
        java.util.List list25 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass23, list24);
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        org.mockito.cglib.core.ClassInfo classInfo28 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass27);
        java.lang.Object obj29 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass27);
        java.beans.PropertyDescriptor[] propertyDescriptorArray30 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray33 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray30, false, true);
        java.lang.Class[] classArray34 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray30);
        java.lang.Class[] classArray35 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray34);
        java.lang.String[] strArray36 = org.mockito.cglib.core.ReflectUtils.getNames(classArray35);
        java.lang.reflect.Constructor constructor37 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass27, classArray35);
        org.mockito.cglib.core.MethodInfo methodInfo38 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor37);
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray41 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray44 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray41, false, true);
        java.lang.Class[] classArray45 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray44);
        java.lang.Object[] objArray46 = null;
        java.lang.Object obj47 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass40, classArray45, objArray46);
        java.lang.Object obj48 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor37, (java.lang.Object[]) classArray45);
        java.lang.String[] strArray49 = org.mockito.cglib.core.ReflectUtils.getNames(classArray45);
        java.lang.reflect.Constructor constructor50 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass23, classArray45);
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray53 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray56 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray53, false, true);
        java.lang.Class[] classArray57 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray56);
        java.lang.Object[] objArray58 = null;
        java.lang.Object obj59 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass52, classArray57, objArray58);
        int int60 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray57);
        java.lang.reflect.Constructor constructor61 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass23, classArray57);
        java.lang.Object[] objArray62 = null;
        java.lang.Object obj63 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass6, classArray57, objArray62);
        java.lang.String[] strArray64 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray65 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray66 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray64, methodArray65);
        java.lang.String[] strArray67 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray68 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray69 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray67, methodArray68);
        java.lang.reflect.Method[] methodArray70 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray64, methodArray69);
        java.lang.String[] strArray71 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray72 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray73 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray71, methodArray72);
        java.lang.String[] strArray74 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray75 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray76 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray74, methodArray75);
        java.lang.reflect.Method[] methodArray77 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray71, methodArray76);
        java.lang.reflect.Method[] methodArray78 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray64, methodArray77);
        java.lang.Class[] classArray79 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray77);
        java.lang.String[] strArray80 = org.mockito.cglib.core.ReflectUtils.getNames(classArray79);
        int int81 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray79);
        java.lang.String[] strArray82 = org.mockito.cglib.core.ReflectUtils.getNames(classArray79);
        java.lang.String[] strArray83 = org.mockito.cglib.core.ReflectUtils.getNames(classArray79);
        int int84 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray79);
        java.lang.reflect.Constructor constructor85 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass6, classArray79);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Constructor constructor86 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass4, classArray79);
            org.junit.Assert.fail("Expected exception of type org.mockito.cglib.core.CodeGenerationException; message: java.lang.NoSuchMethodException-->[Ljava.lang.reflect.Method;.<init>()");
        } catch (org.mockito.cglib.core.CodeGenerationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(propertyDescriptorArray0);
        org.junit.Assert.assertNotNull(methodArray3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(propertyDescriptorArray14);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNull(list25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(classInfo28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(propertyDescriptorArray30);
        org.junit.Assert.assertNotNull(methodArray33);
        org.junit.Assert.assertNotNull(classArray34);
        org.junit.Assert.assertNotNull(classArray35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(constructor37);
        org.junit.Assert.assertNotNull(methodInfo38);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(propertyDescriptorArray41);
        org.junit.Assert.assertNotNull(methodArray44);
        org.junit.Assert.assertNotNull(classArray45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(constructor50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(propertyDescriptorArray53);
        org.junit.Assert.assertNotNull(methodArray56);
        org.junit.Assert.assertNotNull(classArray57);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNotNull(constructor61);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(methodArray65);
        org.junit.Assert.assertNotNull(methodArray66);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(methodArray68);
        org.junit.Assert.assertNotNull(methodArray69);
        org.junit.Assert.assertNotNull(methodArray70);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertNotNull(methodArray72);
        org.junit.Assert.assertNotNull(methodArray73);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertNotNull(methodArray75);
        org.junit.Assert.assertNotNull(methodArray76);
        org.junit.Assert.assertNotNull(methodArray77);
        org.junit.Assert.assertNotNull(methodArray78);
        org.junit.Assert.assertNotNull(classArray79);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertNotNull(constructor85);
    }

    @Test
    public void test1248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1248");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.lang.String[] strArray23 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray24 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray25 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray24);
        java.lang.String[] strArray26 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray27 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray26, methodArray27);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray28);
        java.lang.String[] strArray30 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray31 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray32 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray31);
        java.lang.String[] strArray33 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray34 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray33, methodArray34);
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray35);
        java.lang.reflect.Method[] methodArray37 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray36);
        java.lang.String[] strArray38 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray39 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray40 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray38, methodArray39);
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray40);
        java.lang.Object obj42 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) strArray23);
        org.mockito.cglib.core.MethodInfo methodInfo44 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21, (int) (byte) 0);
        java.beans.PropertyDescriptor[] propertyDescriptorArray45 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray48 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray45, true, true);
        java.lang.reflect.Method[] methodArray51 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray45, false, true);
        java.lang.Class[] classArray52 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray45);
        java.lang.Object obj53 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) classArray52);
        org.mockito.cglib.core.Signature signature54 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor21);
        org.mockito.cglib.core.MethodInfo methodInfo56 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21, (int) (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(methodInfo44);
        org.junit.Assert.assertNotNull(propertyDescriptorArray45);
        org.junit.Assert.assertNotNull(methodArray48);
        org.junit.Assert.assertNotNull(methodArray51);
        org.junit.Assert.assertNotNull(classArray52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(signature54);
        org.junit.Assert.assertNotNull(methodInfo56);
    }

    @Test
    public void test1249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1249");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray1 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray2 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray1);
        java.lang.String[] strArray3 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray4 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray3, methodArray4);
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray5);
        java.lang.String[] strArray7 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray8 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray9 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.reflect.Method[] methodArray13 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray12);
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray13);
        java.lang.Class<?> wildcardClass15 = methodArray13.getClass();
        org.mockito.cglib.core.ClassInfo classInfo16 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass15);
        java.beans.PropertyDescriptor[] propertyDescriptorArray17 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass15);
        java.beans.PropertyDescriptor[] propertyDescriptorArray18 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass15);
        java.beans.PropertyDescriptor[] propertyDescriptorArray19 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass15);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj20 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass15);
            org.junit.Assert.fail("Expected exception of type org.mockito.cglib.core.CodeGenerationException; message: java.lang.NoSuchMethodException-->[Ljava.lang.reflect.Method;.<init>()");
        } catch (org.mockito.cglib.core.CodeGenerationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(methodArray1);
        org.junit.Assert.assertNotNull(methodArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(methodArray4);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(methodArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(classInfo16);
        org.junit.Assert.assertNotNull(propertyDescriptorArray17);
        org.junit.Assert.assertNotNull(propertyDescriptorArray18);
        org.junit.Assert.assertNotNull(propertyDescriptorArray19);
    }

    @Test
    public void test1250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1250");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        org.mockito.cglib.core.MethodInfo methodInfo24 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21, (int) (short) 10);
        org.mockito.cglib.core.MethodInfo methodInfo25 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        org.mockito.cglib.core.MethodInfo methodInfo27 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21, (int) (short) 0);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(methodInfo24);
        org.junit.Assert.assertNotNull(methodInfo25);
        org.junit.Assert.assertNotNull(methodInfo27);
    }

    @Test
    public void test1251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1251");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        org.mockito.asm.Type[] typeArray23 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        org.mockito.cglib.core.Signature signature24 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor21);
        org.mockito.cglib.core.Signature signature25 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor21);
        org.mockito.asm.Type[] typeArray26 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(typeArray23);
        org.junit.Assert.assertNotNull(signature24);
        org.junit.Assert.assertNotNull(signature25);
        org.junit.Assert.assertNotNull(typeArray26);
    }

    @Test
    public void test1252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1252");
        java.beans.PropertyDescriptor[] propertyDescriptorArray0 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray3 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray0, false, true);
        java.lang.Class[] classArray4 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray0);
        int int5 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray4);
        java.lang.String[] strArray6 = org.mockito.cglib.core.ReflectUtils.getNames(classArray4);
        int int7 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray4);
        java.lang.Class<?> wildcardClass8 = classArray4.getClass();
        java.util.List list9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List list10 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass8, list9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(propertyDescriptorArray0);
        org.junit.Assert.assertNotNull(methodArray3);
        org.junit.Assert.assertNotNull(classArray4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test1253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1253");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray1 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray2 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray1);
        java.lang.String[] strArray3 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray4 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray3, methodArray4);
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray5);
        java.lang.String[] strArray7 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray8 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray9 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.reflect.Method[] methodArray13 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray12);
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray17);
        java.lang.Class<?> wildcardClass19 = methodArray18.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray21 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray24 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray21, false, true);
        java.lang.Class[] classArray25 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray21);
        int int26 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray25);
        java.lang.String[] strArray27 = org.mockito.cglib.core.ReflectUtils.getNames(classArray25);
        java.lang.String[] strArray28 = org.mockito.cglib.core.ReflectUtils.getNames(classArray25);
        java.lang.String[] strArray29 = org.mockito.cglib.core.ReflectUtils.getNames(classArray25);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method30 = org.mockito.cglib.core.ReflectUtils.findDeclaredMethod((java.lang.Class) wildcardClass19, "", classArray25);
            org.junit.Assert.fail("Expected exception of type java.lang.NoSuchMethodException; message: ");
        } catch (java.lang.NoSuchMethodException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(methodArray1);
        org.junit.Assert.assertNotNull(methodArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(methodArray4);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(methodArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(propertyDescriptorArray21);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(classArray25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strArray29);
    }

    @Test
    public void test1254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1254");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.lang.String[] strArray23 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray24 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray25 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray24);
        java.lang.String[] strArray26 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray27 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray26, methodArray27);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray28);
        java.lang.String[] strArray30 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray31 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray32 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray31);
        java.lang.String[] strArray33 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray34 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray33, methodArray34);
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray35);
        java.lang.reflect.Method[] methodArray37 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray36);
        java.lang.String[] strArray38 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray39 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray40 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray38, methodArray39);
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray40);
        java.lang.Object obj42 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) strArray23);
        org.mockito.cglib.core.MethodInfo methodInfo43 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        org.mockito.asm.Type[] typeArray44 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        org.mockito.cglib.core.MethodInfo methodInfo45 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.lang.Object[] objArray46 = null;
        java.lang.Object obj47 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, objArray46);
        org.mockito.cglib.core.Signature signature48 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor21);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(methodInfo43);
        org.junit.Assert.assertNotNull(typeArray44);
        org.junit.Assert.assertNotNull(methodInfo45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(signature48);
    }

    @Test
    public void test1255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1255");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.Object obj5 = new java.lang.Object();
        java.lang.Class<?> wildcardClass6 = obj5.getClass();
        org.mockito.cglib.core.ClassInfo classInfo7 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass6);
        java.util.List list8 = null;
        java.util.List list9 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass6, list8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.String[] strArray13 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray14 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray15 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray13, methodArray14);
        java.lang.reflect.Method[] methodArray16 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray15);
        java.lang.String[] strArray17 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray18 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray17, methodArray18);
        java.lang.String[] strArray20 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray21 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray22 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray20, methodArray21);
        java.lang.reflect.Method[] methodArray23 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray17, methodArray22);
        java.lang.reflect.Method[] methodArray24 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray23);
        java.lang.Class[] classArray25 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray23);
        java.lang.reflect.Constructor constructor26 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass6, classArray25);
        java.lang.Class[] classArray27 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray25);
        java.lang.String[] strArray28 = org.mockito.cglib.core.ReflectUtils.getNames(classArray27);
        java.lang.reflect.Constructor constructor29 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray27);
        org.mockito.asm.Type[] typeArray30 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor29);
        org.mockito.cglib.core.MethodInfo methodInfo31 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor29);
        java.lang.Class<?> wildcardClass32 = constructor29.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(classInfo7);
        org.junit.Assert.assertNull(list9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(methodArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(methodArray21);
        org.junit.Assert.assertNotNull(methodArray22);
        org.junit.Assert.assertNotNull(methodArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(classArray25);
        org.junit.Assert.assertNotNull(constructor26);
        org.junit.Assert.assertNotNull(classArray27);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(constructor29);
        org.junit.Assert.assertNotNull(typeArray30);
        org.junit.Assert.assertNotNull(methodInfo31);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test1256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1256");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.lang.Object obj3 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.beans.PropertyDescriptor[] propertyDescriptorArray4 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray4, false, true);
        java.lang.Class[] classArray8 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray4);
        java.lang.Class[] classArray9 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray8);
        java.lang.String[] strArray10 = org.mockito.cglib.core.ReflectUtils.getNames(classArray9);
        java.lang.reflect.Constructor constructor11 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray9);
        java.lang.Object obj12 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.util.List list13 = null;
        java.util.List list14 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list13);
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        org.mockito.cglib.core.ClassInfo classInfo17 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass16);
        java.util.List list18 = null;
        java.util.List list19 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass16, list18);
        java.lang.String[] strArray20 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray21 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray22 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray20, methodArray21);
        java.lang.String[] strArray23 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray24 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray25 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray24);
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray20, methodArray25);
        java.lang.String[] strArray27 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray28 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray27, methodArray28);
        java.lang.String[] strArray30 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray31 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray32 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray31);
        java.lang.reflect.Method[] methodArray33 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray27, methodArray32);
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray20, methodArray33);
        java.lang.Class[] classArray35 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray33);
        java.lang.reflect.Constructor constructor36 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass16, classArray35);
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        org.mockito.cglib.core.ClassInfo classInfo39 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass38);
        java.lang.Object obj40 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass38);
        java.beans.PropertyDescriptor[] propertyDescriptorArray41 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray44 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray41, false, true);
        java.lang.Class[] classArray45 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray41);
        java.lang.Class[] classArray46 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray45);
        java.lang.String[] strArray47 = org.mockito.cglib.core.ReflectUtils.getNames(classArray46);
        java.lang.reflect.Constructor constructor48 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass38, classArray46);
        int int49 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray46);
        java.lang.Object obj50 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor36, (java.lang.Object[]) classArray46);
        int int51 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray46);
        java.lang.Class[] classArray52 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray46);
        int int53 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray52);
        java.lang.reflect.Constructor constructor54 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray52);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method55 = org.mockito.cglib.core.ReflectUtils.findNewInstance((java.lang.Class) wildcardClass1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: class java.lang.Object is not an interface");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(propertyDescriptorArray4);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(classArray8);
        org.junit.Assert.assertNotNull(classArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(constructor11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNull(list14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(classInfo17);
        org.junit.Assert.assertNull(list19);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(methodArray21);
        org.junit.Assert.assertNotNull(methodArray22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(methodArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(classArray35);
        org.junit.Assert.assertNotNull(constructor36);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(classInfo39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(propertyDescriptorArray41);
        org.junit.Assert.assertNotNull(methodArray44);
        org.junit.Assert.assertNotNull(classArray45);
        org.junit.Assert.assertNotNull(classArray46);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(constructor48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(classArray52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(constructor54);
    }

    @Test
    public void test1257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1257");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        java.lang.Object obj2 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.beans.PropertyDescriptor[] propertyDescriptorArray3 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray3, false, true);
        java.lang.Class[] classArray7 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray3);
        java.lang.Class[] classArray8 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray7);
        java.lang.String[] strArray9 = org.mockito.cglib.core.ReflectUtils.getNames(classArray8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.Object obj13 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray8, (java.lang.Object[]) strArray10);
        java.beans.PropertyDescriptor[] propertyDescriptorArray14 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray14, false, true);
        java.lang.Class[] classArray18 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray14);
        java.lang.reflect.Method[] methodArray21 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray14, true, false);
        java.lang.reflect.Method[] methodArray22 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray21);
        java.beans.PropertyDescriptor[] propertyDescriptorArray23 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray23, false, true);
        java.lang.Class[] classArray27 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray23);
        int int28 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray27);
        java.lang.String[] strArray29 = org.mockito.cglib.core.ReflectUtils.getNames(classArray27);
        java.lang.String[] strArray30 = org.mockito.cglib.core.ReflectUtils.getNames(classArray27);
        java.lang.String[] strArray31 = org.mockito.cglib.core.ReflectUtils.getNames(classArray27);
        java.lang.Class[] classArray32 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) strArray31);
        java.beans.PropertyDescriptor[] propertyDescriptorArray33 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray33, false, true);
        java.lang.reflect.Method[] methodArray39 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray33, false, false);
        java.lang.reflect.Method[] methodArray42 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray33, true, false);
        java.lang.Class[] classArray43 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray42);
        java.lang.reflect.Method[] methodArray44 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray31, methodArray42);
        java.lang.reflect.Method[] methodArray45 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray44);
        java.lang.Class<?> wildcardClass46 = strArray10.getClass();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        org.mockito.cglib.core.ClassInfo classInfo50 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass49);
        java.util.List list51 = null;
        java.util.List list52 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass49, list51);
        java.lang.String[] strArray53 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray54 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray55 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray53, methodArray54);
        java.lang.String[] strArray56 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray57 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray58 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray56, methodArray57);
        java.lang.reflect.Method[] methodArray59 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray53, methodArray58);
        java.lang.String[] strArray60 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray61 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray62 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray60, methodArray61);
        java.lang.String[] strArray63 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray64 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray65 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray63, methodArray64);
        java.lang.reflect.Method[] methodArray66 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray60, methodArray65);
        java.lang.reflect.Method[] methodArray67 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray53, methodArray66);
        java.lang.Class[] classArray68 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray66);
        java.lang.reflect.Constructor constructor69 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass49, classArray68);
        java.lang.Class[] classArray70 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray68);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method71 = org.mockito.cglib.core.ReflectUtils.findDeclaredMethod((java.lang.Class) wildcardClass46, "", classArray68);
            org.junit.Assert.fail("Expected exception of type java.lang.NoSuchMethodException; message: ");
        } catch (java.lang.NoSuchMethodException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(propertyDescriptorArray3);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(classArray7);
        org.junit.Assert.assertNotNull(classArray8);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(propertyDescriptorArray14);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(methodArray21);
        org.junit.Assert.assertNotNull(methodArray22);
        org.junit.Assert.assertNotNull(propertyDescriptorArray23);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(classArray27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(propertyDescriptorArray33);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(methodArray42);
        org.junit.Assert.assertNotNull(classArray43);
        org.junit.Assert.assertNotNull(methodArray44);
        org.junit.Assert.assertNotNull(methodArray45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(classInfo50);
        org.junit.Assert.assertNull(list52);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(methodArray54);
        org.junit.Assert.assertNotNull(methodArray55);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(methodArray57);
        org.junit.Assert.assertNotNull(methodArray58);
        org.junit.Assert.assertNotNull(methodArray59);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(methodArray61);
        org.junit.Assert.assertNotNull(methodArray62);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(methodArray64);
        org.junit.Assert.assertNotNull(methodArray65);
        org.junit.Assert.assertNotNull(methodArray66);
        org.junit.Assert.assertNotNull(methodArray67);
        org.junit.Assert.assertNotNull(classArray68);
        org.junit.Assert.assertNotNull(constructor69);
        org.junit.Assert.assertNotNull(classArray70);
    }

    @Test
    public void test1258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1258");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.beans.PropertyDescriptor[] propertyDescriptorArray23 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray23, false, true);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray23, false, false);
        java.lang.Object obj30 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) methodArray29);
        java.beans.PropertyDescriptor[] propertyDescriptorArray31 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray31, true, true);
        java.lang.Object obj35 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) propertyDescriptorArray31);
        java.lang.String[] strArray36 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray37 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray38 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray37);
        java.lang.String[] strArray39 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray40 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray39, methodArray40);
        java.lang.reflect.Method[] methodArray42 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray41);
        java.lang.String[] strArray43 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray44 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray45 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray43, methodArray44);
        java.lang.String[] strArray46 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray47 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray48 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray46, methodArray47);
        java.lang.reflect.Method[] methodArray49 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray43, methodArray48);
        java.lang.reflect.Method[] methodArray50 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray49);
        java.lang.String[] strArray51 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray52 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray53 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray51, methodArray52);
        java.lang.String[] strArray54 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray55 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray56 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray54, methodArray55);
        java.lang.String[] strArray57 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray58 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray59 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray57, methodArray58);
        java.lang.String[] strArray60 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray61 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray62 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray60, methodArray61);
        java.lang.reflect.Method[] methodArray63 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray57, methodArray62);
        java.lang.reflect.Method[] methodArray64 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray54, methodArray63);
        java.lang.reflect.Method[] methodArray65 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray51, methodArray64);
        java.lang.reflect.Method[] methodArray66 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray64);
        java.lang.Object obj67 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) methodArray66);
        org.mockito.cglib.core.MethodInfo methodInfo68 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.lang.Class<?> wildcardClass69 = constructor21.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray70 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass69);
        org.mockito.cglib.core.ClassInfo classInfo71 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass69);
        org.mockito.cglib.core.ClassInfo classInfo72 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass69);
        java.beans.PropertyDescriptor[] propertyDescriptorArray73 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(propertyDescriptorArray23);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(propertyDescriptorArray31);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(methodArray38);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(methodArray42);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(methodArray44);
        org.junit.Assert.assertNotNull(methodArray45);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(methodArray47);
        org.junit.Assert.assertNotNull(methodArray48);
        org.junit.Assert.assertNotNull(methodArray49);
        org.junit.Assert.assertNotNull(methodArray50);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(methodArray52);
        org.junit.Assert.assertNotNull(methodArray53);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(methodArray55);
        org.junit.Assert.assertNotNull(methodArray56);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(methodArray58);
        org.junit.Assert.assertNotNull(methodArray59);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(methodArray61);
        org.junit.Assert.assertNotNull(methodArray62);
        org.junit.Assert.assertNotNull(methodArray63);
        org.junit.Assert.assertNotNull(methodArray64);
        org.junit.Assert.assertNotNull(methodArray65);
        org.junit.Assert.assertNotNull(methodArray66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(methodInfo68);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(propertyDescriptorArray70);
        org.junit.Assert.assertNotNull(classInfo71);
        org.junit.Assert.assertNotNull(classInfo72);
        org.junit.Assert.assertNotNull(propertyDescriptorArray73);
    }

    @Test
    public void test1259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1259");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.lang.Object obj3 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        org.mockito.cglib.core.ClassInfo classInfo6 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass5);
        java.util.List list7 = null;
        java.util.List list8 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass5, list7);
        java.lang.String[] strArray9 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray10 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray9, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.reflect.Method[] methodArray15 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray9, methodArray14);
        java.lang.String[] strArray16 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray17 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray16, methodArray17);
        java.lang.String[] strArray19 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray20 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray21 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray19, methodArray20);
        java.lang.reflect.Method[] methodArray22 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray16, methodArray21);
        java.lang.reflect.Method[] methodArray23 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray9, methodArray22);
        java.lang.Class[] classArray24 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray22);
        java.lang.reflect.Constructor constructor25 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass5, classArray24);
        java.lang.Class[] classArray26 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray24);
        java.lang.reflect.Constructor constructor27 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray26);
        java.lang.Object obj28 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.util.List list29 = null;
        java.util.List list30 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list29);
        java.lang.String[] strArray31 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray32 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray33 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray31, methodArray32);
        java.lang.String[] strArray34 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray35 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray34, methodArray35);
        java.lang.reflect.Method[] methodArray37 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray31, methodArray36);
        java.lang.String[] strArray38 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray39 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray40 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray38, methodArray39);
        java.lang.String[] strArray41 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray42 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray43 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray41, methodArray42);
        java.lang.reflect.Method[] methodArray44 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray38, methodArray43);
        java.lang.reflect.Method[] methodArray45 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray31, methodArray44);
        java.lang.Class<?> wildcardClass46 = methodArray44.getClass();
        org.mockito.cglib.core.ClassInfo classInfo47 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass46);
        java.beans.PropertyDescriptor[] propertyDescriptorArray48 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass46);
        java.beans.PropertyDescriptor[] propertyDescriptorArray49 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass46);
        java.beans.PropertyDescriptor[] propertyDescriptorArray50 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass46);
        java.lang.Class[] classArray51 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray50);
        java.lang.String[] strArray52 = org.mockito.cglib.core.ReflectUtils.getNames(classArray51);
        java.lang.String[] strArray53 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray54 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray55 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray53, methodArray54);
        java.lang.String[] strArray56 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray57 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray58 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray56, methodArray57);
        java.lang.reflect.Method[] methodArray59 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray53, methodArray58);
        java.lang.String[] strArray60 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray61 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray62 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray60, methodArray61);
        java.lang.String[] strArray63 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray64 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray65 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray63, methodArray64);
        java.lang.reflect.Method[] methodArray66 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray60, methodArray65);
        java.lang.reflect.Method[] methodArray67 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray53, methodArray66);
        java.lang.Class[] classArray68 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray66);
        java.lang.Class[] classArray69 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray66);
        java.lang.Object obj70 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray51, (java.lang.Object[]) classArray69);
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        java.lang.Object obj73 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass72);
        java.beans.PropertyDescriptor[] propertyDescriptorArray74 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray77 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray74, false, true);
        java.lang.Class[] classArray78 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray74);
        java.lang.Class[] classArray79 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray78);
        java.lang.String[] strArray80 = org.mockito.cglib.core.ReflectUtils.getNames(classArray79);
        java.lang.String[] strArray81 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray82 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray83 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray81, methodArray82);
        java.lang.Object obj84 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass72, classArray79, (java.lang.Object[]) strArray81);
        java.lang.Object obj85 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass72);
        java.beans.PropertyDescriptor[] propertyDescriptorArray86 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray89 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray86, false, true);
        java.lang.Class[] classArray90 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray86);
        java.lang.Class[] classArray91 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray90);
        java.lang.String[] strArray92 = org.mockito.cglib.core.ReflectUtils.getNames(classArray90);
        java.lang.reflect.Constructor constructor93 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass72, classArray90);
        java.lang.reflect.Constructor constructor94 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray90);
        org.mockito.asm.Type[] typeArray95 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor94);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(classInfo6);
        org.junit.Assert.assertNull(list8);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(methodArray15);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(methodArray20);
        org.junit.Assert.assertNotNull(methodArray21);
        org.junit.Assert.assertNotNull(methodArray22);
        org.junit.Assert.assertNotNull(methodArray23);
        org.junit.Assert.assertNotNull(classArray24);
        org.junit.Assert.assertNotNull(constructor25);
        org.junit.Assert.assertNotNull(classArray26);
        org.junit.Assert.assertNotNull(constructor27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNull(list30);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(methodArray33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(methodArray42);
        org.junit.Assert.assertNotNull(methodArray43);
        org.junit.Assert.assertNotNull(methodArray44);
        org.junit.Assert.assertNotNull(methodArray45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(classInfo47);
        org.junit.Assert.assertNotNull(propertyDescriptorArray48);
        org.junit.Assert.assertNotNull(propertyDescriptorArray49);
        org.junit.Assert.assertNotNull(propertyDescriptorArray50);
        org.junit.Assert.assertNotNull(classArray51);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(methodArray54);
        org.junit.Assert.assertNotNull(methodArray55);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(methodArray57);
        org.junit.Assert.assertNotNull(methodArray58);
        org.junit.Assert.assertNotNull(methodArray59);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(methodArray61);
        org.junit.Assert.assertNotNull(methodArray62);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(methodArray64);
        org.junit.Assert.assertNotNull(methodArray65);
        org.junit.Assert.assertNotNull(methodArray66);
        org.junit.Assert.assertNotNull(methodArray67);
        org.junit.Assert.assertNotNull(classArray68);
        org.junit.Assert.assertNotNull(classArray69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(propertyDescriptorArray74);
        org.junit.Assert.assertNotNull(methodArray77);
        org.junit.Assert.assertNotNull(classArray78);
        org.junit.Assert.assertNotNull(classArray79);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertNotNull(methodArray82);
        org.junit.Assert.assertNotNull(methodArray83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(propertyDescriptorArray86);
        org.junit.Assert.assertNotNull(methodArray89);
        org.junit.Assert.assertNotNull(classArray90);
        org.junit.Assert.assertNotNull(classArray91);
        org.junit.Assert.assertNotNull(strArray92);
        org.junit.Assert.assertNotNull(constructor93);
        org.junit.Assert.assertNotNull(constructor94);
        org.junit.Assert.assertNotNull(typeArray95);
    }

    @Test
    public void test1260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1260");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.beans.PropertyDescriptor[] propertyDescriptorArray23 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray23, false, true);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray23, false, false);
        java.lang.Object obj30 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) methodArray29);
        java.beans.PropertyDescriptor[] propertyDescriptorArray31 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray31, true, true);
        java.lang.Object obj35 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) propertyDescriptorArray31);
        java.lang.String[] strArray36 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray37 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray38 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray37);
        java.lang.String[] strArray39 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray40 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray39, methodArray40);
        java.lang.reflect.Method[] methodArray42 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray41);
        java.lang.String[] strArray43 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray44 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray45 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray43, methodArray44);
        java.lang.String[] strArray46 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray47 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray48 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray46, methodArray47);
        java.lang.reflect.Method[] methodArray49 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray43, methodArray48);
        java.lang.reflect.Method[] methodArray50 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray49);
        java.lang.String[] strArray51 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray52 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray53 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray51, methodArray52);
        java.lang.String[] strArray54 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray55 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray56 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray54, methodArray55);
        java.lang.String[] strArray57 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray58 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray59 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray57, methodArray58);
        java.lang.String[] strArray60 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray61 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray62 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray60, methodArray61);
        java.lang.reflect.Method[] methodArray63 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray57, methodArray62);
        java.lang.reflect.Method[] methodArray64 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray54, methodArray63);
        java.lang.reflect.Method[] methodArray65 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray51, methodArray64);
        java.lang.reflect.Method[] methodArray66 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray64);
        java.lang.Object obj67 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) methodArray66);
        org.mockito.asm.Type[] typeArray68 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        org.mockito.cglib.core.Signature signature69 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor21);
        java.lang.Class<?> wildcardClass70 = signature69.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray71 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(propertyDescriptorArray23);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(propertyDescriptorArray31);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(methodArray38);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(methodArray42);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(methodArray44);
        org.junit.Assert.assertNotNull(methodArray45);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(methodArray47);
        org.junit.Assert.assertNotNull(methodArray48);
        org.junit.Assert.assertNotNull(methodArray49);
        org.junit.Assert.assertNotNull(methodArray50);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(methodArray52);
        org.junit.Assert.assertNotNull(methodArray53);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(methodArray55);
        org.junit.Assert.assertNotNull(methodArray56);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(methodArray58);
        org.junit.Assert.assertNotNull(methodArray59);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(methodArray61);
        org.junit.Assert.assertNotNull(methodArray62);
        org.junit.Assert.assertNotNull(methodArray63);
        org.junit.Assert.assertNotNull(methodArray64);
        org.junit.Assert.assertNotNull(methodArray65);
        org.junit.Assert.assertNotNull(methodArray66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(typeArray68);
        org.junit.Assert.assertNotNull(signature69);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(propertyDescriptorArray71);
    }

    @Test
    public void test1261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1261");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!", "hi!" };
        java.beans.PropertyDescriptor[] propertyDescriptorArray3 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray3, false, true);
        java.lang.Class[] classArray7 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray3);
        java.lang.Class[] classArray8 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray7);
        java.lang.String[] strArray9 = org.mockito.cglib.core.ReflectUtils.getNames(classArray7);
        java.lang.Class<?> wildcardClass10 = classArray7.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray11 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass10);
        java.beans.PropertyDescriptor[] propertyDescriptorArray12 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass10);
        java.lang.reflect.Method[] methodArray15 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray12, false, false);
        java.lang.reflect.Method[] methodArray16 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray2, methodArray15);
        java.lang.Class<?> wildcardClass17 = methodArray16.getClass();
        java.util.List list18 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List list19 = org.mockito.cglib.core.ReflectUtils.addAllMethods((java.lang.Class) wildcardClass17, list18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(propertyDescriptorArray3);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(classArray7);
        org.junit.Assert.assertNotNull(classArray8);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(propertyDescriptorArray11);
        org.junit.Assert.assertNotNull(propertyDescriptorArray12);
        org.junit.Assert.assertNotNull(methodArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1262");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.lang.Object obj3 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        org.mockito.cglib.core.ClassInfo classInfo4 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list5 = null;
        java.util.List list6 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray9 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray9, false, true);
        java.lang.Class[] classArray13 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray12);
        java.lang.Object[] objArray14 = null;
        java.lang.Object obj15 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass8, classArray13, objArray14);
        java.lang.Class[] classArray16 = null;
        java.lang.reflect.Constructor constructor17 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass8, classArray16);
        java.lang.Class[] classArray18 = null;
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        org.mockito.cglib.core.ClassInfo classInfo21 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass20);
        java.util.List list22 = null;
        java.util.List list23 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass20, list22);
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        org.mockito.cglib.core.ClassInfo classInfo26 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass25);
        java.util.List list27 = null;
        java.util.List list28 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass25, list27);
        java.lang.String[] strArray29 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray30 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray31 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray29, methodArray30);
        java.lang.String[] strArray32 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray33 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray32, methodArray33);
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray29, methodArray34);
        java.lang.String[] strArray36 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray37 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray38 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray37);
        java.lang.String[] strArray39 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray40 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray39, methodArray40);
        java.lang.reflect.Method[] methodArray42 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray41);
        java.lang.reflect.Method[] methodArray43 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray29, methodArray42);
        java.lang.Class[] classArray44 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray42);
        java.lang.reflect.Constructor constructor45 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass25, classArray44);
        java.lang.Class[] classArray46 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray44);
        java.lang.String[] strArray47 = org.mockito.cglib.core.ReflectUtils.getNames(classArray46);
        java.lang.reflect.Constructor constructor48 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass20, classArray46);
        int int49 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray46);
        java.lang.Object obj50 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass8, classArray18, (java.lang.Object[]) classArray46);
        java.beans.PropertyDescriptor[] propertyDescriptorArray51 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray54 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray51, false, true);
        java.lang.Class[] classArray55 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray51);
        java.lang.Object obj56 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray46, (java.lang.Object[]) classArray55);
        org.mockito.cglib.core.ClassInfo classInfo57 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.lang.Object obj58 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.lang.Object obj59 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(classInfo4);
        org.junit.Assert.assertNull(list6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(propertyDescriptorArray9);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(classArray13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(constructor17);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(classInfo21);
        org.junit.Assert.assertNull(list23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(classInfo26);
        org.junit.Assert.assertNull(list28);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(methodArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(methodArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(methodArray38);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(methodArray42);
        org.junit.Assert.assertNotNull(methodArray43);
        org.junit.Assert.assertNotNull(classArray44);
        org.junit.Assert.assertNotNull(constructor45);
        org.junit.Assert.assertNotNull(classArray46);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(constructor48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(propertyDescriptorArray51);
        org.junit.Assert.assertNotNull(methodArray54);
        org.junit.Assert.assertNotNull(classArray55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(classInfo57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj59);
    }

    @Test
    public void test1263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1263");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.lang.Object obj3 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.beans.PropertyDescriptor[] propertyDescriptorArray4 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray4, false, true);
        java.lang.Class[] classArray8 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray4);
        java.lang.Class[] classArray9 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray8);
        java.lang.String[] strArray10 = org.mockito.cglib.core.ReflectUtils.getNames(classArray9);
        java.lang.reflect.Constructor constructor11 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray9);
        java.util.List list12 = null;
        java.util.List list13 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list12);
        java.util.List list14 = null;
        java.util.List list15 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list14);
        // The following exception was thrown during execution in test generation
        try {
            java.beans.PropertyDescriptor[] propertyDescriptorArray16 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass1);
            org.junit.Assert.fail("Expected exception of type org.mockito.cglib.core.CodeGenerationException; message: java.beans.IntrospectionException-->java.lang.Object not superclass of java.lang.Object");
        } catch (org.mockito.cglib.core.CodeGenerationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(propertyDescriptorArray4);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(classArray8);
        org.junit.Assert.assertNotNull(classArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(constructor11);
        org.junit.Assert.assertNull(list13);
        org.junit.Assert.assertNull(list15);
    }

    @Test
    public void test1264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1264");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray1 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray2 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray1);
        java.lang.String[] strArray3 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray4 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray3, methodArray4);
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray5);
        java.lang.String[] strArray7 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray8 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray9 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.reflect.Method[] methodArray13 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray12);
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray13);
        java.lang.Class<?> wildcardClass15 = methodArray13.getClass();
        org.mockito.cglib.core.ClassInfo classInfo16 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass15);
        java.beans.PropertyDescriptor[] propertyDescriptorArray17 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass15);
        java.beans.PropertyDescriptor[] propertyDescriptorArray18 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass15);
        java.beans.PropertyDescriptor[] propertyDescriptorArray19 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass15);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray19);
        int int21 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray20);
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(methodArray1);
        org.junit.Assert.assertNotNull(methodArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(methodArray4);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(methodArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(classInfo16);
        org.junit.Assert.assertNotNull(propertyDescriptorArray17);
        org.junit.Assert.assertNotNull(propertyDescriptorArray18);
        org.junit.Assert.assertNotNull(propertyDescriptorArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
    }

    @Test
    public void test1265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1265");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo23 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21, (int) ' ');
        org.mockito.cglib.core.MethodInfo methodInfo25 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21, 10);
        java.beans.PropertyDescriptor[] propertyDescriptorArray26 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray26, false, true);
        java.lang.Class[] classArray30 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray26);
        java.lang.Class[] classArray31 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray30);
        java.lang.Object obj32 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) classArray30);
        org.mockito.cglib.core.MethodInfo methodInfo34 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21, (-1));
        org.mockito.asm.Type[] typeArray35 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo23);
        org.junit.Assert.assertNotNull(methodInfo25);
        org.junit.Assert.assertNotNull(propertyDescriptorArray26);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(classArray30);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(methodInfo34);
        org.junit.Assert.assertNotNull(typeArray35);
    }

    @Test
    public void test1266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1266");
        byte[] byteArray4 = new byte[] { (byte) 1, (byte) 1, (byte) -1 };
        java.lang.ClassLoader classLoader5 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class6 = org.mockito.cglib.core.ReflectUtils.defineClass("", byteArray4, classLoader5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[1, 1, -1]");
    }

    @Test
    public void test1267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1267");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        org.mockito.cglib.core.ClassInfo classInfo24 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass23);
        java.lang.Object obj25 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass23);
        java.beans.PropertyDescriptor[] propertyDescriptorArray26 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray26, false, true);
        java.lang.Class[] classArray30 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray26);
        java.lang.Class[] classArray31 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray30);
        java.lang.String[] strArray32 = org.mockito.cglib.core.ReflectUtils.getNames(classArray31);
        java.lang.reflect.Constructor constructor33 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass23, classArray31);
        int int34 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray31);
        java.lang.Object obj35 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) classArray31);
        int int36 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray31);
        java.lang.Class[] classArray37 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray31);
        int int38 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray37);
        java.lang.String[] strArray39 = org.mockito.cglib.core.ReflectUtils.getNames(classArray37);
        java.lang.Class[] classArray40 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray37);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(classInfo24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(propertyDescriptorArray26);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(classArray30);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(constructor33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(classArray37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(classArray40);
    }

    @Test
    public void test1268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1268");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.beans.PropertyDescriptor[] propertyDescriptorArray23 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray23, false, true);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray23, false, false);
        java.lang.Object obj30 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) methodArray29);
        java.beans.PropertyDescriptor[] propertyDescriptorArray31 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray31, true, true);
        java.lang.Object obj35 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) propertyDescriptorArray31);
        java.lang.String[] strArray36 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray37 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray38 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray37);
        java.lang.String[] strArray39 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray40 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray39, methodArray40);
        java.lang.reflect.Method[] methodArray42 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray41);
        java.lang.String[] strArray43 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray44 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray45 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray43, methodArray44);
        java.lang.String[] strArray46 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray47 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray48 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray46, methodArray47);
        java.lang.reflect.Method[] methodArray49 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray43, methodArray48);
        java.lang.reflect.Method[] methodArray50 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray49);
        java.lang.String[] strArray51 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray52 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray53 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray51, methodArray52);
        java.lang.String[] strArray54 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray55 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray56 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray54, methodArray55);
        java.lang.String[] strArray57 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray58 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray59 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray57, methodArray58);
        java.lang.String[] strArray60 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray61 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray62 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray60, methodArray61);
        java.lang.reflect.Method[] methodArray63 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray57, methodArray62);
        java.lang.reflect.Method[] methodArray64 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray54, methodArray63);
        java.lang.reflect.Method[] methodArray65 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray51, methodArray64);
        java.lang.reflect.Method[] methodArray66 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray64);
        java.lang.Object obj67 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) methodArray66);
        org.mockito.asm.Type[] typeArray68 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        org.mockito.cglib.core.Signature signature69 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor21);
        java.lang.Class<?> wildcardClass70 = signature69.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method71 = org.mockito.cglib.core.ReflectUtils.findNewInstance((java.lang.Class) wildcardClass70);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: class org.mockito.cglib.core.Signature is not an interface");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(propertyDescriptorArray23);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(propertyDescriptorArray31);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(methodArray38);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(methodArray42);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(methodArray44);
        org.junit.Assert.assertNotNull(methodArray45);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(methodArray47);
        org.junit.Assert.assertNotNull(methodArray48);
        org.junit.Assert.assertNotNull(methodArray49);
        org.junit.Assert.assertNotNull(methodArray50);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(methodArray52);
        org.junit.Assert.assertNotNull(methodArray53);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(methodArray55);
        org.junit.Assert.assertNotNull(methodArray56);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(methodArray58);
        org.junit.Assert.assertNotNull(methodArray59);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(methodArray61);
        org.junit.Assert.assertNotNull(methodArray62);
        org.junit.Assert.assertNotNull(methodArray63);
        org.junit.Assert.assertNotNull(methodArray64);
        org.junit.Assert.assertNotNull(methodArray65);
        org.junit.Assert.assertNotNull(methodArray66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(typeArray68);
        org.junit.Assert.assertNotNull(signature69);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test1269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1269");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.lang.Object obj3 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        org.mockito.cglib.core.ClassInfo classInfo6 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass5);
        java.util.List list7 = null;
        java.util.List list8 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass5, list7);
        java.lang.String[] strArray9 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray10 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray9, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.reflect.Method[] methodArray15 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray9, methodArray14);
        java.lang.String[] strArray16 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray17 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray16, methodArray17);
        java.lang.String[] strArray19 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray20 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray21 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray19, methodArray20);
        java.lang.reflect.Method[] methodArray22 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray16, methodArray21);
        java.lang.reflect.Method[] methodArray23 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray9, methodArray22);
        java.lang.Class[] classArray24 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray22);
        java.lang.reflect.Constructor constructor25 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass5, classArray24);
        java.lang.Class[] classArray26 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray24);
        java.lang.reflect.Constructor constructor27 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray26);
        java.beans.PropertyDescriptor[] propertyDescriptorArray28 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray31 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray28, true, true);
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray28, false, true);
        java.lang.Class[] classArray35 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray28);
        java.lang.String[] strArray36 = org.mockito.cglib.core.ReflectUtils.getNames(classArray35);
        int int37 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray35);
        java.lang.String[] strArray38 = org.mockito.cglib.core.ReflectUtils.getNames(classArray35);
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray41 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray44 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray41, false, true);
        java.lang.Class[] classArray45 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray44);
        java.lang.Object[] objArray46 = null;
        java.lang.Object obj47 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass40, classArray45, objArray46);
        java.lang.String[] strArray48 = org.mockito.cglib.core.ReflectUtils.getNames(classArray45);
        java.lang.String[] strArray49 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray50 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray51 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray49, methodArray50);
        java.lang.String[] strArray52 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray53 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray54 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray52, methodArray53);
        java.lang.reflect.Method[] methodArray55 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray49, methodArray54);
        java.lang.String[] strArray56 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray57 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray58 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray56, methodArray57);
        java.lang.String[] strArray59 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray60 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray61 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray59, methodArray60);
        java.lang.reflect.Method[] methodArray62 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray56, methodArray61);
        java.lang.reflect.Method[] methodArray63 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray49, methodArray62);
        java.lang.Class[] classArray64 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray62);
        java.lang.Class[] classArray65 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray62);
        java.lang.reflect.Method[] methodArray66 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray48, methodArray62);
        java.lang.reflect.Method[] methodArray67 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray38, methodArray62);
        java.lang.String[] strArray68 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray69 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray70 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray68, methodArray69);
        java.lang.String[] strArray71 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray72 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray73 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray71, methodArray72);
        java.lang.reflect.Method[] methodArray74 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray68, methodArray73);
        java.lang.String[] strArray75 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray76 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray77 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray75, methodArray76);
        java.lang.String[] strArray78 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray79 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray80 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray78, methodArray79);
        java.lang.reflect.Method[] methodArray81 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray75, methodArray80);
        java.lang.reflect.Method[] methodArray82 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray68, methodArray81);
        java.lang.Class<?> wildcardClass83 = methodArray81.getClass();
        org.mockito.cglib.core.ClassInfo classInfo84 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass83);
        java.beans.PropertyDescriptor[] propertyDescriptorArray85 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass83);
        java.lang.reflect.Method[] methodArray88 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray85, false, false);
        java.lang.reflect.Method[] methodArray89 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray38, methodArray88);
        java.lang.Object obj90 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor27, (java.lang.Object[]) strArray38);
        java.lang.Class<?> wildcardClass91 = obj90.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method92 = org.mockito.cglib.core.ReflectUtils.findNewInstance((java.lang.Class) wildcardClass91);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: class java.lang.Object is not an interface");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(classInfo6);
        org.junit.Assert.assertNull(list8);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(methodArray15);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(methodArray20);
        org.junit.Assert.assertNotNull(methodArray21);
        org.junit.Assert.assertNotNull(methodArray22);
        org.junit.Assert.assertNotNull(methodArray23);
        org.junit.Assert.assertNotNull(classArray24);
        org.junit.Assert.assertNotNull(constructor25);
        org.junit.Assert.assertNotNull(classArray26);
        org.junit.Assert.assertNotNull(constructor27);
        org.junit.Assert.assertNotNull(propertyDescriptorArray28);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(classArray35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(propertyDescriptorArray41);
        org.junit.Assert.assertNotNull(methodArray44);
        org.junit.Assert.assertNotNull(classArray45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(methodArray50);
        org.junit.Assert.assertNotNull(methodArray51);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(methodArray53);
        org.junit.Assert.assertNotNull(methodArray54);
        org.junit.Assert.assertNotNull(methodArray55);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(methodArray57);
        org.junit.Assert.assertNotNull(methodArray58);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(methodArray60);
        org.junit.Assert.assertNotNull(methodArray61);
        org.junit.Assert.assertNotNull(methodArray62);
        org.junit.Assert.assertNotNull(methodArray63);
        org.junit.Assert.assertNotNull(classArray64);
        org.junit.Assert.assertNotNull(classArray65);
        org.junit.Assert.assertNotNull(methodArray66);
        org.junit.Assert.assertNotNull(methodArray67);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(methodArray69);
        org.junit.Assert.assertNotNull(methodArray70);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertNotNull(methodArray72);
        org.junit.Assert.assertNotNull(methodArray73);
        org.junit.Assert.assertNotNull(methodArray74);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(methodArray76);
        org.junit.Assert.assertNotNull(methodArray77);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertNotNull(methodArray79);
        org.junit.Assert.assertNotNull(methodArray80);
        org.junit.Assert.assertNotNull(methodArray81);
        org.junit.Assert.assertNotNull(methodArray82);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(classInfo84);
        org.junit.Assert.assertNotNull(propertyDescriptorArray85);
        org.junit.Assert.assertNotNull(methodArray88);
        org.junit.Assert.assertNotNull(methodArray89);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1270");
        java.beans.PropertyDescriptor[] propertyDescriptorArray0 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray3 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray0, false, true);
        java.lang.Class[] classArray4 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray0);
        java.lang.Class[] classArray5 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray4);
        java.lang.Class<?> wildcardClass6 = classArray5.getClass();
        java.util.List list7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List list8 = org.mockito.cglib.core.ReflectUtils.addAllMethods((java.lang.Class) wildcardClass6, list7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(propertyDescriptorArray0);
        org.junit.Assert.assertNotNull(methodArray3);
        org.junit.Assert.assertNotNull(classArray4);
        org.junit.Assert.assertNotNull(classArray5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test1271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1271");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.lang.Class<?> wildcardClass23 = constructor21.getClass();
        org.mockito.cglib.core.ClassInfo classInfo24 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass23);
        java.beans.PropertyDescriptor[] propertyDescriptorArray25 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass23);
        org.mockito.cglib.core.ClassInfo classInfo26 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass23);
        java.lang.Class[] classArray27 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Constructor constructor28 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass23, classArray27);
            org.junit.Assert.fail("Expected exception of type org.mockito.cglib.core.CodeGenerationException; message: java.lang.NoSuchMethodException-->java.lang.reflect.Constructor.<init>()");
        } catch (org.mockito.cglib.core.CodeGenerationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(classInfo24);
        org.junit.Assert.assertNotNull(propertyDescriptorArray25);
        org.junit.Assert.assertNotNull(classInfo26);
    }

    @Test
    public void test1272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1272");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        java.lang.Object obj2 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.beans.PropertyDescriptor[] propertyDescriptorArray3 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray3, false, true);
        java.lang.Class[] classArray7 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray3);
        java.lang.Class[] classArray8 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray7);
        java.lang.String[] strArray9 = org.mockito.cglib.core.ReflectUtils.getNames(classArray8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.Object obj13 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray8, (java.lang.Object[]) strArray10);
        java.beans.PropertyDescriptor[] propertyDescriptorArray14 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray14, false, true);
        java.lang.reflect.Method[] methodArray20 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray14, false, false);
        java.lang.reflect.Method[] methodArray23 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray14, true, false);
        java.lang.Class[] classArray24 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray23);
        java.beans.PropertyDescriptor[] propertyDescriptorArray25 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray25, false, true);
        java.lang.Class[] classArray29 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray25);
        java.lang.Class[] classArray30 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray29);
        java.lang.String[] strArray31 = org.mockito.cglib.core.ReflectUtils.getNames(classArray29);
        java.lang.Class[] classArray32 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray29);
        int int33 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray29);
        java.lang.Object obj34 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray24, (java.lang.Object[]) classArray29);
        java.lang.Class<?> wildcardClass35 = classArray24.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray36 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(propertyDescriptorArray3);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(classArray7);
        org.junit.Assert.assertNotNull(classArray8);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(propertyDescriptorArray14);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray20);
        org.junit.Assert.assertNotNull(methodArray23);
        org.junit.Assert.assertNotNull(classArray24);
        org.junit.Assert.assertNotNull(propertyDescriptorArray25);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(classArray29);
        org.junit.Assert.assertNotNull(classArray30);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(propertyDescriptorArray36);
    }

    @Test
    public void test1273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1273");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.beans.PropertyDescriptor[] propertyDescriptorArray23 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray23, false, true);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray23, false, false);
        java.lang.Object obj30 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) methodArray29);
        java.beans.PropertyDescriptor[] propertyDescriptorArray31 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray31, true, true);
        java.lang.Object obj35 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) propertyDescriptorArray31);
        org.mockito.asm.Type[] typeArray36 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        org.mockito.cglib.core.MethodInfo methodInfo38 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21, (int) '#');
        java.beans.PropertyDescriptor[] propertyDescriptorArray39 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray42 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray39, true, true);
        java.lang.Class[] classArray43 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray42);
        java.lang.Object obj44 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) classArray43);
        java.lang.Object[] objArray45 = null;
        java.lang.Object obj46 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, objArray45);
        org.mockito.cglib.core.Signature signature47 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor21);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(propertyDescriptorArray23);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(propertyDescriptorArray31);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertNotNull(methodInfo38);
        org.junit.Assert.assertNotNull(propertyDescriptorArray39);
        org.junit.Assert.assertNotNull(methodArray42);
        org.junit.Assert.assertNotNull(classArray43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(signature47);
    }

    @Test
    public void test1274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1274");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray1 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray2 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray1);
        java.lang.String[] strArray3 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray4 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray3, methodArray4);
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray5);
        java.lang.String[] strArray7 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray8 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray9 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.reflect.Method[] methodArray13 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray12);
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray13);
        java.lang.Class<?> wildcardClass15 = methodArray13.getClass();
        org.mockito.cglib.core.ClassInfo classInfo16 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass15);
        java.beans.PropertyDescriptor[] propertyDescriptorArray17 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass15);
        java.beans.PropertyDescriptor[] propertyDescriptorArray18 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass15);
        java.beans.PropertyDescriptor[] propertyDescriptorArray19 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass15);
        java.beans.PropertyDescriptor[] propertyDescriptorArray20 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass15);
        java.beans.PropertyDescriptor[] propertyDescriptorArray21 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass15);
        org.mockito.cglib.core.ClassInfo classInfo22 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass15);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method23 = org.mockito.cglib.core.ReflectUtils.findNewInstance((java.lang.Class) wildcardClass15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: class [Ljava.lang.reflect.Method; is not an interface");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(methodArray1);
        org.junit.Assert.assertNotNull(methodArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(methodArray4);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(methodArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(classInfo16);
        org.junit.Assert.assertNotNull(propertyDescriptorArray17);
        org.junit.Assert.assertNotNull(propertyDescriptorArray18);
        org.junit.Assert.assertNotNull(propertyDescriptorArray19);
        org.junit.Assert.assertNotNull(propertyDescriptorArray20);
        org.junit.Assert.assertNotNull(propertyDescriptorArray21);
        org.junit.Assert.assertNotNull(classInfo22);
    }

    @Test
    public void test1275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1275");
        byte[] byteArray6 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1 };
        java.lang.ClassLoader classLoader7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class8 = org.mockito.cglib.core.ReflectUtils.defineClass("hi!", byteArray6, classLoader7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[0, 0, 100, -1, -1]");
    }

    @Test
    public void test1276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1276");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.lang.Object obj3 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        org.mockito.cglib.core.ClassInfo classInfo6 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass5);
        java.util.List list7 = null;
        java.util.List list8 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass5, list7);
        java.lang.String[] strArray9 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray10 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray9, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.reflect.Method[] methodArray15 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray9, methodArray14);
        java.lang.String[] strArray16 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray17 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray16, methodArray17);
        java.lang.String[] strArray19 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray20 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray21 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray19, methodArray20);
        java.lang.reflect.Method[] methodArray22 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray16, methodArray21);
        java.lang.reflect.Method[] methodArray23 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray9, methodArray22);
        java.lang.Class[] classArray24 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray22);
        java.lang.reflect.Constructor constructor25 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass5, classArray24);
        java.lang.Class[] classArray26 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray24);
        java.lang.reflect.Constructor constructor27 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray26);
        java.beans.PropertyDescriptor[] propertyDescriptorArray28 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray31 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray28, true, true);
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray28, false, true);
        java.lang.Class[] classArray35 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray28);
        java.lang.String[] strArray36 = org.mockito.cglib.core.ReflectUtils.getNames(classArray35);
        int int37 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray35);
        java.lang.String[] strArray38 = org.mockito.cglib.core.ReflectUtils.getNames(classArray35);
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray41 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray44 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray41, false, true);
        java.lang.Class[] classArray45 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray44);
        java.lang.Object[] objArray46 = null;
        java.lang.Object obj47 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass40, classArray45, objArray46);
        java.lang.String[] strArray48 = org.mockito.cglib.core.ReflectUtils.getNames(classArray45);
        java.lang.String[] strArray49 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray50 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray51 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray49, methodArray50);
        java.lang.String[] strArray52 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray53 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray54 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray52, methodArray53);
        java.lang.reflect.Method[] methodArray55 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray49, methodArray54);
        java.lang.String[] strArray56 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray57 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray58 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray56, methodArray57);
        java.lang.String[] strArray59 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray60 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray61 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray59, methodArray60);
        java.lang.reflect.Method[] methodArray62 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray56, methodArray61);
        java.lang.reflect.Method[] methodArray63 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray49, methodArray62);
        java.lang.Class[] classArray64 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray62);
        java.lang.Class[] classArray65 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray62);
        java.lang.reflect.Method[] methodArray66 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray48, methodArray62);
        java.lang.reflect.Method[] methodArray67 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray38, methodArray62);
        java.lang.String[] strArray68 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray69 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray70 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray68, methodArray69);
        java.lang.String[] strArray71 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray72 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray73 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray71, methodArray72);
        java.lang.reflect.Method[] methodArray74 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray68, methodArray73);
        java.lang.String[] strArray75 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray76 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray77 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray75, methodArray76);
        java.lang.String[] strArray78 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray79 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray80 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray78, methodArray79);
        java.lang.reflect.Method[] methodArray81 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray75, methodArray80);
        java.lang.reflect.Method[] methodArray82 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray68, methodArray81);
        java.lang.Class<?> wildcardClass83 = methodArray81.getClass();
        org.mockito.cglib.core.ClassInfo classInfo84 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass83);
        java.beans.PropertyDescriptor[] propertyDescriptorArray85 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass83);
        java.lang.reflect.Method[] methodArray88 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray85, false, false);
        java.lang.reflect.Method[] methodArray89 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray38, methodArray88);
        java.lang.Object obj90 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor27, (java.lang.Object[]) strArray38);
        org.mockito.asm.Type[] typeArray91 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor27);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(classInfo6);
        org.junit.Assert.assertNull(list8);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(methodArray15);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(methodArray20);
        org.junit.Assert.assertNotNull(methodArray21);
        org.junit.Assert.assertNotNull(methodArray22);
        org.junit.Assert.assertNotNull(methodArray23);
        org.junit.Assert.assertNotNull(classArray24);
        org.junit.Assert.assertNotNull(constructor25);
        org.junit.Assert.assertNotNull(classArray26);
        org.junit.Assert.assertNotNull(constructor27);
        org.junit.Assert.assertNotNull(propertyDescriptorArray28);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(classArray35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(propertyDescriptorArray41);
        org.junit.Assert.assertNotNull(methodArray44);
        org.junit.Assert.assertNotNull(classArray45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(methodArray50);
        org.junit.Assert.assertNotNull(methodArray51);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(methodArray53);
        org.junit.Assert.assertNotNull(methodArray54);
        org.junit.Assert.assertNotNull(methodArray55);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(methodArray57);
        org.junit.Assert.assertNotNull(methodArray58);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(methodArray60);
        org.junit.Assert.assertNotNull(methodArray61);
        org.junit.Assert.assertNotNull(methodArray62);
        org.junit.Assert.assertNotNull(methodArray63);
        org.junit.Assert.assertNotNull(classArray64);
        org.junit.Assert.assertNotNull(classArray65);
        org.junit.Assert.assertNotNull(methodArray66);
        org.junit.Assert.assertNotNull(methodArray67);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(methodArray69);
        org.junit.Assert.assertNotNull(methodArray70);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertNotNull(methodArray72);
        org.junit.Assert.assertNotNull(methodArray73);
        org.junit.Assert.assertNotNull(methodArray74);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(methodArray76);
        org.junit.Assert.assertNotNull(methodArray77);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertNotNull(methodArray79);
        org.junit.Assert.assertNotNull(methodArray80);
        org.junit.Assert.assertNotNull(methodArray81);
        org.junit.Assert.assertNotNull(methodArray82);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(classInfo84);
        org.junit.Assert.assertNotNull(propertyDescriptorArray85);
        org.junit.Assert.assertNotNull(methodArray88);
        org.junit.Assert.assertNotNull(methodArray89);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(typeArray91);
    }

    @Test
    public void test1277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1277");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray1 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray2 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray1);
        java.lang.String[] strArray3 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray4 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray3, methodArray4);
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray5);
        java.lang.String[] strArray7 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray8 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray9 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.reflect.Method[] methodArray13 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray12);
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray13);
        java.lang.Class<?> wildcardClass15 = methodArray13.getClass();
        org.mockito.cglib.core.ClassInfo classInfo16 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass15);
        java.beans.PropertyDescriptor[] propertyDescriptorArray17 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass15);
        org.mockito.cglib.core.ClassInfo classInfo18 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass15);
        org.mockito.cglib.core.ClassInfo classInfo19 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass15);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj20 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass15);
            org.junit.Assert.fail("Expected exception of type org.mockito.cglib.core.CodeGenerationException; message: java.lang.NoSuchMethodException-->[Ljava.lang.reflect.Method;.<init>()");
        } catch (org.mockito.cglib.core.CodeGenerationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(methodArray1);
        org.junit.Assert.assertNotNull(methodArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(methodArray4);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(methodArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(classInfo16);
        org.junit.Assert.assertNotNull(propertyDescriptorArray17);
        org.junit.Assert.assertNotNull(classInfo18);
        org.junit.Assert.assertNotNull(classInfo19);
    }

    @Test
    public void test1278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1278");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray1 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray2 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray1);
        java.lang.String[] strArray3 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray4 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray3, methodArray4);
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray5);
        java.lang.String[] strArray7 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray8 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray9 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.reflect.Method[] methodArray13 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray12);
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray17);
        java.lang.Class<?> wildcardClass19 = methodArray17.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method20 = org.mockito.cglib.core.ReflectUtils.findInterfaceMethod((java.lang.Class) wildcardClass19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: class [Ljava.lang.reflect.Method; is not an interface");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(methodArray1);
        org.junit.Assert.assertNotNull(methodArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(methodArray4);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(methodArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test1279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1279");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        org.mockito.cglib.core.ClassInfo classInfo4 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass3);
        java.lang.Object obj5 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass3);
        java.beans.PropertyDescriptor[] propertyDescriptorArray6 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray9 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray6, false, true);
        java.lang.Class[] classArray10 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray6);
        java.lang.Class[] classArray11 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray10);
        java.lang.String[] strArray12 = org.mockito.cglib.core.ReflectUtils.getNames(classArray11);
        java.lang.reflect.Constructor constructor13 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass3, classArray11);
        java.lang.Object obj14 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass3);
        org.mockito.cglib.core.ClassInfo classInfo15 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass3);
        java.util.List list16 = null;
        java.util.List list17 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass3, list16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Object obj20 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass19);
        java.lang.Object obj21 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass19);
        java.lang.String[] strArray22 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray23 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray24 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray22, methodArray23);
        java.lang.Class[] classArray25 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) strArray22);
        java.lang.String[] strArray26 = org.mockito.cglib.core.ReflectUtils.getNames(classArray25);
        java.beans.PropertyDescriptor[] propertyDescriptorArray27 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray30 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray27, false, true);
        java.lang.Class[] classArray31 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray27);
        int int32 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray31);
        int int33 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray31);
        java.lang.Object obj34 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass19, classArray25, (java.lang.Object[]) classArray31);
        java.lang.reflect.Constructor constructor35 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass3, classArray31);
        java.lang.reflect.Constructor constructor36 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray31);
        int int37 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray31);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(classInfo4);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(propertyDescriptorArray6);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(constructor13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(classInfo15);
        org.junit.Assert.assertNull(list17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(methodArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(classArray25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(propertyDescriptorArray27);
        org.junit.Assert.assertNotNull(methodArray30);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(constructor35);
        org.junit.Assert.assertNotNull(constructor36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
    }

    @Test
    public void test1280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1280");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        java.lang.Class[] classArray22 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray20);
        java.lang.String[] strArray23 = org.mockito.cglib.core.ReflectUtils.getNames(classArray22);
        java.beans.PropertyDescriptor[] propertyDescriptorArray24 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray27 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray24, false, true);
        java.lang.reflect.Method[] methodArray30 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray24, false, false);
        java.lang.reflect.Method[] methodArray31 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray30);
        java.lang.String[] strArray32 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray33 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray32, methodArray33);
        java.lang.String[] strArray35 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray36 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray37 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray35, methodArray36);
        java.lang.reflect.Method[] methodArray38 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray32, methodArray37);
        java.lang.String[] strArray39 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray40 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray39, methodArray40);
        java.lang.String[] strArray42 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray43 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray44 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray42, methodArray43);
        java.lang.reflect.Method[] methodArray45 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray39, methodArray44);
        java.lang.reflect.Method[] methodArray46 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray32, methodArray45);
        java.lang.Class<?> wildcardClass47 = methodArray45.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray48 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass47);
        java.beans.PropertyDescriptor[] propertyDescriptorArray49 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass47);
        java.beans.PropertyDescriptor[] propertyDescriptorArray50 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass47);
        java.lang.reflect.Method[] methodArray53 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray50, true, true);
        java.lang.reflect.Method[] methodArray54 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray53);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(classArray22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(propertyDescriptorArray24);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(methodArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(methodArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(methodArray38);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(methodArray43);
        org.junit.Assert.assertNotNull(methodArray44);
        org.junit.Assert.assertNotNull(methodArray45);
        org.junit.Assert.assertNotNull(methodArray46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(propertyDescriptorArray48);
        org.junit.Assert.assertNotNull(propertyDescriptorArray49);
        org.junit.Assert.assertNotNull(propertyDescriptorArray50);
        org.junit.Assert.assertNotNull(methodArray53);
        org.junit.Assert.assertNotNull(methodArray54);
    }

    @Test
    public void test1281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1281");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.beans.PropertyDescriptor[] propertyDescriptorArray23 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray23, false, true);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray23, false, false);
        java.lang.Object obj30 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) methodArray29);
        java.beans.PropertyDescriptor[] propertyDescriptorArray31 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray31, true, true);
        java.lang.Object obj35 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) propertyDescriptorArray31);
        java.lang.String[] strArray36 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray37 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray38 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray37);
        java.lang.String[] strArray39 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray40 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray39, methodArray40);
        java.lang.reflect.Method[] methodArray42 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray41);
        java.lang.String[] strArray43 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray44 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray45 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray43, methodArray44);
        java.lang.String[] strArray46 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray47 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray48 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray46, methodArray47);
        java.lang.reflect.Method[] methodArray49 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray43, methodArray48);
        java.lang.reflect.Method[] methodArray50 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray49);
        java.lang.String[] strArray51 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray52 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray53 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray51, methodArray52);
        java.lang.String[] strArray54 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray55 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray56 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray54, methodArray55);
        java.lang.String[] strArray57 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray58 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray59 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray57, methodArray58);
        java.lang.String[] strArray60 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray61 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray62 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray60, methodArray61);
        java.lang.reflect.Method[] methodArray63 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray57, methodArray62);
        java.lang.reflect.Method[] methodArray64 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray54, methodArray63);
        java.lang.reflect.Method[] methodArray65 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray51, methodArray64);
        java.lang.reflect.Method[] methodArray66 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray64);
        java.lang.Object obj67 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) methodArray66);
        org.mockito.cglib.core.MethodInfo methodInfo68 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.lang.Class<?> wildcardClass69 = constructor21.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray70 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass69);
        java.beans.PropertyDescriptor[] propertyDescriptorArray71 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass69);
        java.beans.PropertyDescriptor[] propertyDescriptorArray72 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass69);
        java.lang.reflect.Method[] methodArray75 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray72, false, true);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(propertyDescriptorArray23);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(propertyDescriptorArray31);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(methodArray38);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(methodArray42);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(methodArray44);
        org.junit.Assert.assertNotNull(methodArray45);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(methodArray47);
        org.junit.Assert.assertNotNull(methodArray48);
        org.junit.Assert.assertNotNull(methodArray49);
        org.junit.Assert.assertNotNull(methodArray50);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(methodArray52);
        org.junit.Assert.assertNotNull(methodArray53);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(methodArray55);
        org.junit.Assert.assertNotNull(methodArray56);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(methodArray58);
        org.junit.Assert.assertNotNull(methodArray59);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(methodArray61);
        org.junit.Assert.assertNotNull(methodArray62);
        org.junit.Assert.assertNotNull(methodArray63);
        org.junit.Assert.assertNotNull(methodArray64);
        org.junit.Assert.assertNotNull(methodArray65);
        org.junit.Assert.assertNotNull(methodArray66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(methodInfo68);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(propertyDescriptorArray70);
        org.junit.Assert.assertNotNull(propertyDescriptorArray71);
        org.junit.Assert.assertNotNull(propertyDescriptorArray72);
        org.junit.Assert.assertNotNull(methodArray75);
    }

    @Test
    public void test1282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1282");
        java.lang.Class class0 = null;
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass3);
        java.beans.PropertyDescriptor[] propertyDescriptorArray5 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray8 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray5, false, true);
        java.lang.Class[] classArray9 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray5);
        java.lang.Class[] classArray10 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray9);
        java.lang.String[] strArray11 = org.mockito.cglib.core.ReflectUtils.getNames(classArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.Object obj15 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass3, classArray10, (java.lang.Object[]) strArray12);
        java.lang.Object obj16 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass3);
        java.beans.PropertyDescriptor[] propertyDescriptorArray17 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray20 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray17, false, true);
        java.lang.Class[] classArray21 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray17);
        java.lang.Class[] classArray22 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray21);
        java.lang.String[] strArray23 = org.mockito.cglib.core.ReflectUtils.getNames(classArray21);
        java.lang.reflect.Constructor constructor24 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass3, classArray21);
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        org.mockito.cglib.core.ClassInfo classInfo27 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass26);
        java.util.List list28 = null;
        java.util.List list29 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass26, list28);
        java.lang.String[] strArray30 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray31 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray32 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray31);
        java.lang.String[] strArray33 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray34 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray33, methodArray34);
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray35);
        java.lang.String[] strArray37 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray38 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray39 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray37, methodArray38);
        java.lang.String[] strArray40 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray41 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray42 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray40, methodArray41);
        java.lang.reflect.Method[] methodArray43 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray37, methodArray42);
        java.lang.reflect.Method[] methodArray44 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray43);
        java.lang.Class[] classArray45 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray43);
        java.lang.reflect.Constructor constructor46 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass26, classArray45);
        java.lang.Class[] classArray47 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray45);
        java.beans.PropertyDescriptor[] propertyDescriptorArray48 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray51 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray48, false, true);
        java.lang.Class[] classArray52 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray48);
        int int53 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray52);
        java.lang.String[] strArray54 = org.mockito.cglib.core.ReflectUtils.getNames(classArray52);
        int int55 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray52);
        java.lang.Object obj56 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass3, classArray47, (java.lang.Object[]) classArray52);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method57 = org.mockito.cglib.core.ReflectUtils.findDeclaredMethod(class0, "", classArray52);
            org.junit.Assert.fail("Expected exception of type java.lang.NoSuchMethodException; message: ");
        } catch (java.lang.NoSuchMethodException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(propertyDescriptorArray5);
        org.junit.Assert.assertNotNull(methodArray8);
        org.junit.Assert.assertNotNull(classArray9);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(propertyDescriptorArray17);
        org.junit.Assert.assertNotNull(methodArray20);
        org.junit.Assert.assertNotNull(classArray21);
        org.junit.Assert.assertNotNull(classArray22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(constructor24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(classInfo27);
        org.junit.Assert.assertNull(list29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(methodArray38);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(methodArray42);
        org.junit.Assert.assertNotNull(methodArray43);
        org.junit.Assert.assertNotNull(methodArray44);
        org.junit.Assert.assertNotNull(classArray45);
        org.junit.Assert.assertNotNull(constructor46);
        org.junit.Assert.assertNotNull(classArray47);
        org.junit.Assert.assertNotNull(propertyDescriptorArray48);
        org.junit.Assert.assertNotNull(methodArray51);
        org.junit.Assert.assertNotNull(classArray52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(obj56);
    }

    @Test
    public void test1283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1283");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.beans.PropertyDescriptor[] propertyDescriptorArray23 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray23, false, true);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray23, false, false);
        java.lang.Object obj30 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) methodArray29);
        java.beans.PropertyDescriptor[] propertyDescriptorArray31 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray31, true, true);
        java.lang.Object obj35 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) propertyDescriptorArray31);
        java.lang.String[] strArray36 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray37 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray38 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray37);
        java.lang.String[] strArray39 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray40 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray39, methodArray40);
        java.lang.reflect.Method[] methodArray42 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray41);
        java.lang.String[] strArray43 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray44 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray45 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray43, methodArray44);
        java.lang.String[] strArray46 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray47 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray48 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray46, methodArray47);
        java.lang.reflect.Method[] methodArray49 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray43, methodArray48);
        java.lang.reflect.Method[] methodArray50 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray49);
        java.lang.String[] strArray51 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray52 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray53 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray51, methodArray52);
        java.lang.String[] strArray54 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray55 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray56 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray54, methodArray55);
        java.lang.String[] strArray57 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray58 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray59 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray57, methodArray58);
        java.lang.String[] strArray60 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray61 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray62 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray60, methodArray61);
        java.lang.reflect.Method[] methodArray63 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray57, methodArray62);
        java.lang.reflect.Method[] methodArray64 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray54, methodArray63);
        java.lang.reflect.Method[] methodArray65 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray51, methodArray64);
        java.lang.reflect.Method[] methodArray66 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray64);
        java.lang.Object obj67 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) methodArray66);
        org.mockito.asm.Type[] typeArray68 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        org.mockito.asm.Type[] typeArray69 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(propertyDescriptorArray23);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(propertyDescriptorArray31);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(methodArray38);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(methodArray42);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(methodArray44);
        org.junit.Assert.assertNotNull(methodArray45);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(methodArray47);
        org.junit.Assert.assertNotNull(methodArray48);
        org.junit.Assert.assertNotNull(methodArray49);
        org.junit.Assert.assertNotNull(methodArray50);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(methodArray52);
        org.junit.Assert.assertNotNull(methodArray53);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(methodArray55);
        org.junit.Assert.assertNotNull(methodArray56);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(methodArray58);
        org.junit.Assert.assertNotNull(methodArray59);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(methodArray61);
        org.junit.Assert.assertNotNull(methodArray62);
        org.junit.Assert.assertNotNull(methodArray63);
        org.junit.Assert.assertNotNull(methodArray64);
        org.junit.Assert.assertNotNull(methodArray65);
        org.junit.Assert.assertNotNull(methodArray66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(typeArray68);
        org.junit.Assert.assertNotNull(typeArray69);
    }

    @Test
    public void test1284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1284");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.lang.Object obj3 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        org.mockito.cglib.core.ClassInfo classInfo4 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.beans.PropertyDescriptor[] propertyDescriptorArray5 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray8 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray5, false, true);
        java.lang.Class[] classArray9 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray5);
        java.lang.Class[] classArray10 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray9);
        java.lang.String[] strArray11 = org.mockito.cglib.core.ReflectUtils.getNames(classArray9);
        java.lang.Class<?> wildcardClass12 = classArray9.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray13 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass12);
        java.beans.PropertyDescriptor[] propertyDescriptorArray14 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass12);
        java.lang.Class[] classArray15 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray14);
        java.lang.String[] strArray16 = org.mockito.cglib.core.ReflectUtils.getNames(classArray15);
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        org.mockito.cglib.core.ClassInfo classInfo19 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass18);
        java.util.List list20 = null;
        java.util.List list21 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass18, list20);
        java.lang.String[] strArray22 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray23 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray24 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray22, methodArray23);
        java.lang.String[] strArray25 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray26 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray27 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray25, methodArray26);
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray22, methodArray27);
        java.lang.String[] strArray29 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray30 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray31 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray29, methodArray30);
        java.lang.String[] strArray32 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray33 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray32, methodArray33);
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray29, methodArray34);
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray22, methodArray35);
        java.lang.Class[] classArray37 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray35);
        java.lang.reflect.Constructor constructor38 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass18, classArray37);
        org.mockito.cglib.core.MethodInfo methodInfo39 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor38);
        java.lang.String[] strArray40 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray41 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray42 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray40, methodArray41);
        java.lang.String[] strArray43 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray44 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray45 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray43, methodArray44);
        java.lang.reflect.Method[] methodArray46 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray40, methodArray45);
        java.lang.String[] strArray47 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray48 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray49 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray47, methodArray48);
        java.lang.String[] strArray50 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray51 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray52 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray50, methodArray51);
        java.lang.reflect.Method[] methodArray53 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray47, methodArray52);
        java.lang.reflect.Method[] methodArray54 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray40, methodArray53);
        java.lang.String[] strArray55 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray56 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray57 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray55, methodArray56);
        java.lang.reflect.Method[] methodArray58 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray40, methodArray57);
        java.lang.Object obj59 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor38, (java.lang.Object[]) strArray40);
        org.mockito.cglib.core.MethodInfo methodInfo61 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor38, (int) (byte) 0);
        java.beans.PropertyDescriptor[] propertyDescriptorArray62 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray65 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray62, true, true);
        java.lang.reflect.Method[] methodArray68 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray62, false, true);
        java.lang.Class[] classArray69 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray62);
        java.lang.Object obj70 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor38, (java.lang.Object[]) classArray69);
        java.lang.Object obj71 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray15, (java.lang.Object[]) classArray69);
        java.beans.PropertyDescriptor[] propertyDescriptorArray72 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray75 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray72, false, true);
        java.lang.reflect.Method[] methodArray78 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray72, true, true);
        java.lang.reflect.Method[] methodArray81 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray72, false, true);
        java.lang.Class[] classArray82 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray72);
        java.lang.reflect.Constructor constructor83 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray82);
        // The following exception was thrown during execution in test generation
        try {
            java.beans.PropertyDescriptor[] propertyDescriptorArray84 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass1);
            org.junit.Assert.fail("Expected exception of type org.mockito.cglib.core.CodeGenerationException; message: java.beans.IntrospectionException-->java.lang.Object not superclass of java.lang.Object");
        } catch (org.mockito.cglib.core.CodeGenerationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(classInfo4);
        org.junit.Assert.assertNotNull(propertyDescriptorArray5);
        org.junit.Assert.assertNotNull(methodArray8);
        org.junit.Assert.assertNotNull(classArray9);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(propertyDescriptorArray13);
        org.junit.Assert.assertNotNull(propertyDescriptorArray14);
        org.junit.Assert.assertNotNull(classArray15);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(classInfo19);
        org.junit.Assert.assertNull(list21);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(methodArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(methodArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(methodArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(classArray37);
        org.junit.Assert.assertNotNull(constructor38);
        org.junit.Assert.assertNotNull(methodInfo39);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(methodArray42);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(methodArray44);
        org.junit.Assert.assertNotNull(methodArray45);
        org.junit.Assert.assertNotNull(methodArray46);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(methodArray48);
        org.junit.Assert.assertNotNull(methodArray49);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(methodArray51);
        org.junit.Assert.assertNotNull(methodArray52);
        org.junit.Assert.assertNotNull(methodArray53);
        org.junit.Assert.assertNotNull(methodArray54);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(methodArray56);
        org.junit.Assert.assertNotNull(methodArray57);
        org.junit.Assert.assertNotNull(methodArray58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(methodInfo61);
        org.junit.Assert.assertNotNull(propertyDescriptorArray62);
        org.junit.Assert.assertNotNull(methodArray65);
        org.junit.Assert.assertNotNull(methodArray68);
        org.junit.Assert.assertNotNull(classArray69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(propertyDescriptorArray72);
        org.junit.Assert.assertNotNull(methodArray75);
        org.junit.Assert.assertNotNull(methodArray78);
        org.junit.Assert.assertNotNull(methodArray81);
        org.junit.Assert.assertNotNull(classArray82);
        org.junit.Assert.assertNotNull(constructor83);
    }

    @Test
    public void test1285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1285");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray1 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray2 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray1);
        java.lang.String[] strArray3 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray4 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray3, methodArray4);
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray5);
        java.lang.String[] strArray7 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray8 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray9 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.reflect.Method[] methodArray13 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray12);
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray17);
        java.lang.Class<?> wildcardClass19 = methodArray18.getClass();
        org.mockito.cglib.core.ClassInfo classInfo20 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass19);
        java.beans.PropertyDescriptor[] propertyDescriptorArray21 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass19);
        java.beans.PropertyDescriptor[] propertyDescriptorArray22 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass19);
        org.mockito.cglib.core.ClassInfo classInfo23 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass19);
        java.beans.PropertyDescriptor[] propertyDescriptorArray24 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass19);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method25 = org.mockito.cglib.core.ReflectUtils.findNewInstance((java.lang.Class) wildcardClass19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: class [Ljava.lang.reflect.Method; is not an interface");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(methodArray1);
        org.junit.Assert.assertNotNull(methodArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(methodArray4);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(methodArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(classInfo20);
        org.junit.Assert.assertNotNull(propertyDescriptorArray21);
        org.junit.Assert.assertNotNull(propertyDescriptorArray22);
        org.junit.Assert.assertNotNull(classInfo23);
        org.junit.Assert.assertNotNull(propertyDescriptorArray24);
    }

    @Test
    public void test1286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1286");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo23 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21, (int) ' ');
        org.mockito.cglib.core.MethodInfo methodInfo25 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21, 10);
        org.mockito.asm.Type[] typeArray26 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo23);
        org.junit.Assert.assertNotNull(methodInfo25);
        org.junit.Assert.assertNotNull(typeArray26);
    }

    @Test
    public void test1287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1287");
        java.beans.PropertyDescriptor[] propertyDescriptorArray0 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray3 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray0, false, true);
        java.lang.Class[] classArray4 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray0);
        java.lang.Class[] classArray5 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray4);
        java.lang.Class<?> wildcardClass6 = classArray4.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray7 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass6);
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray7, false, true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray0);
        org.junit.Assert.assertNotNull(methodArray3);
        org.junit.Assert.assertNotNull(classArray4);
        org.junit.Assert.assertNotNull(classArray5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(propertyDescriptorArray7);
        org.junit.Assert.assertNotNull(methodArray10);
    }

    @Test
    public void test1288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1288");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        java.lang.Object obj2 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.lang.Object obj3 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.lang.Object obj4 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        org.mockito.cglib.core.ClassInfo classInfo5 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.beans.PropertyDescriptor[] propertyDescriptorArray6 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray9 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray6, false, true);
        java.lang.Class[] classArray10 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray6);
        java.lang.reflect.Constructor constructor11 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray10);
        org.mockito.cglib.core.ClassInfo classInfo12 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        // The following exception was thrown during execution in test generation
        try {
            java.beans.PropertyDescriptor[] propertyDescriptorArray13 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass1);
            org.junit.Assert.fail("Expected exception of type org.mockito.cglib.core.CodeGenerationException; message: java.beans.IntrospectionException-->java.lang.Object not superclass of java.lang.Object");
        } catch (org.mockito.cglib.core.CodeGenerationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(classInfo5);
        org.junit.Assert.assertNotNull(propertyDescriptorArray6);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(constructor11);
        org.junit.Assert.assertNotNull(classInfo12);
    }

    @Test
    public void test1289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1289");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray1 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray2 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray1);
        java.lang.String[] strArray3 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray4 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray3, methodArray4);
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray5);
        java.lang.String[] strArray7 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray8 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray9 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.reflect.Method[] methodArray13 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray12);
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray13);
        java.lang.Class<?> wildcardClass15 = methodArray13.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray16 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass15);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray16, false, true);
        java.lang.reflect.Method[] methodArray22 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray16, false, false);
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(methodArray1);
        org.junit.Assert.assertNotNull(methodArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(methodArray4);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(methodArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(propertyDescriptorArray16);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(methodArray22);
    }

    @Test
    public void test1290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1290");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.lang.String[] strArray23 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray24 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray25 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray24);
        java.lang.String[] strArray26 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray27 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray26, methodArray27);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray28);
        java.lang.String[] strArray30 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray31 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray32 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray31);
        java.lang.String[] strArray33 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray34 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray33, methodArray34);
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray35);
        java.lang.reflect.Method[] methodArray37 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray36);
        java.lang.String[] strArray38 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray39 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray40 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray38, methodArray39);
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray40);
        java.lang.Object obj42 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) strArray23);
        org.mockito.asm.Type[] typeArray43 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        java.lang.Object[] objArray44 = null;
        java.lang.Object obj45 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, objArray44);
        org.mockito.cglib.core.MethodInfo methodInfo47 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21, (int) '4');
        org.mockito.cglib.core.Signature signature48 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor21);
        org.mockito.cglib.core.Signature signature49 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor21);
        org.mockito.asm.Type[] typeArray50 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        java.lang.Class<?> wildcardClass51 = typeArray50.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray52 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass51);
        java.lang.reflect.Method[] methodArray55 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray52, false, false);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(methodInfo47);
        org.junit.Assert.assertNotNull(signature48);
        org.junit.Assert.assertNotNull(signature49);
        org.junit.Assert.assertNotNull(typeArray50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(propertyDescriptorArray52);
        org.junit.Assert.assertNotNull(methodArray55);
    }

    @Test
    public void test1291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1291");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.lang.Object obj3 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.beans.PropertyDescriptor[] propertyDescriptorArray4 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray4, false, true);
        java.lang.Class[] classArray8 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray4);
        java.lang.Class[] classArray9 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray8);
        java.lang.String[] strArray10 = org.mockito.cglib.core.ReflectUtils.getNames(classArray9);
        java.lang.reflect.Constructor constructor11 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray9);
        org.mockito.cglib.core.MethodInfo methodInfo12 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor11);
        org.mockito.cglib.core.Signature signature13 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor11);
        org.mockito.cglib.core.MethodInfo methodInfo14 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor11);
        org.mockito.cglib.core.MethodInfo methodInfo16 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor11, (-1));
        org.mockito.cglib.core.MethodInfo methodInfo18 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor11, (int) (short) -1);
        java.lang.Class<?> wildcardClass19 = constructor11.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj20 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass19);
            org.junit.Assert.fail("Expected exception of type org.mockito.cglib.core.CodeGenerationException; message: java.lang.NoSuchMethodException-->java.lang.reflect.Constructor.<init>()");
        } catch (org.mockito.cglib.core.CodeGenerationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(propertyDescriptorArray4);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(classArray8);
        org.junit.Assert.assertNotNull(classArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(constructor11);
        org.junit.Assert.assertNotNull(methodInfo12);
        org.junit.Assert.assertNotNull(signature13);
        org.junit.Assert.assertNotNull(methodInfo14);
        org.junit.Assert.assertNotNull(methodInfo16);
        org.junit.Assert.assertNotNull(methodInfo18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test1292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1292");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.lang.Object obj3 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.beans.PropertyDescriptor[] propertyDescriptorArray4 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray4, false, true);
        java.lang.Class[] classArray8 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray4);
        java.lang.Class[] classArray9 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray8);
        java.lang.String[] strArray10 = org.mockito.cglib.core.ReflectUtils.getNames(classArray9);
        java.lang.reflect.Constructor constructor11 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray9);
        org.mockito.cglib.core.MethodInfo methodInfo12 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray15 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray15, false, true);
        java.lang.Class[] classArray19 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.Object[] objArray20 = null;
        java.lang.Object obj21 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass14, classArray19, objArray20);
        java.lang.Object obj22 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor11, (java.lang.Object[]) classArray19);
        java.beans.PropertyDescriptor[] propertyDescriptorArray23 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray23, false, true);
        java.lang.Class[] classArray27 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray23);
        java.lang.Class[] classArray28 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray27);
        java.lang.String[] strArray29 = org.mockito.cglib.core.ReflectUtils.getNames(classArray27);
        java.lang.Class[] classArray30 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray27);
        java.lang.Object obj31 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor11, (java.lang.Object[]) classArray27);
        org.mockito.cglib.core.MethodInfo methodInfo33 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor11, 100);
        org.mockito.cglib.core.MethodInfo methodInfo34 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor11);
        java.lang.Class<?> wildcardClass35 = methodInfo34.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray36 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass35);
        java.beans.PropertyDescriptor[] propertyDescriptorArray37 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(propertyDescriptorArray4);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(classArray8);
        org.junit.Assert.assertNotNull(classArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(constructor11);
        org.junit.Assert.assertNotNull(methodInfo12);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(propertyDescriptorArray15);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(classArray19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(propertyDescriptorArray23);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(classArray27);
        org.junit.Assert.assertNotNull(classArray28);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(classArray30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(methodInfo33);
        org.junit.Assert.assertNotNull(methodInfo34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(propertyDescriptorArray36);
        org.junit.Assert.assertNotNull(propertyDescriptorArray37);
    }

    @Test
    public void test1293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1293");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray1 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray2 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray1);
        java.lang.String[] strArray3 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray4 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray3, methodArray4);
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray5);
        java.lang.String[] strArray7 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray8 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray9 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.reflect.Method[] methodArray13 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray12);
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray13);
        java.lang.Class<?> wildcardClass15 = methodArray13.getClass();
        org.mockito.cglib.core.ClassInfo classInfo16 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass15);
        java.beans.PropertyDescriptor[] propertyDescriptorArray17 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass15);
        java.beans.PropertyDescriptor[] propertyDescriptorArray18 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass15);
        java.beans.PropertyDescriptor[] propertyDescriptorArray19 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass15);
        java.beans.PropertyDescriptor[] propertyDescriptorArray20 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass15);
        java.beans.PropertyDescriptor[] propertyDescriptorArray21 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass15);
        java.beans.PropertyDescriptor[] propertyDescriptorArray22 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass15);
        java.lang.reflect.Method[] methodArray25 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray22, true, false);
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(methodArray1);
        org.junit.Assert.assertNotNull(methodArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(methodArray4);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(methodArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(classInfo16);
        org.junit.Assert.assertNotNull(propertyDescriptorArray17);
        org.junit.Assert.assertNotNull(propertyDescriptorArray18);
        org.junit.Assert.assertNotNull(propertyDescriptorArray19);
        org.junit.Assert.assertNotNull(propertyDescriptorArray20);
        org.junit.Assert.assertNotNull(propertyDescriptorArray21);
        org.junit.Assert.assertNotNull(propertyDescriptorArray22);
        org.junit.Assert.assertNotNull(methodArray25);
    }

    @Test
    public void test1294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1294");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray2 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray2, false, true);
        java.lang.Class[] classArray6 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray5);
        java.lang.Object[] objArray7 = null;
        java.lang.Object obj8 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray6, objArray7);
        java.lang.String[] strArray9 = org.mockito.cglib.core.ReflectUtils.getNames(classArray6);
        int int10 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray6);
        int int11 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray6);
        java.lang.String[] strArray12 = org.mockito.cglib.core.ReflectUtils.getNames(classArray6);
        java.lang.Class<?> wildcardClass13 = classArray6.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Object obj17 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass16);
        java.lang.String[] strArray18 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray19 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray20 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray18, methodArray19);
        java.lang.Class[] classArray21 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) strArray18);
        int int22 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray21);
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        org.mockito.cglib.core.ClassInfo classInfo25 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass24);
        java.util.List list26 = null;
        java.util.List list27 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass24, list26);
        java.lang.String[] strArray28 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray29 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray30 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray28, methodArray29);
        java.lang.String[] strArray31 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray32 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray33 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray31, methodArray32);
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray28, methodArray33);
        java.lang.String[] strArray35 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray36 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray37 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray35, methodArray36);
        java.lang.String[] strArray38 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray39 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray40 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray38, methodArray39);
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray35, methodArray40);
        java.lang.reflect.Method[] methodArray42 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray28, methodArray41);
        java.lang.Class[] classArray43 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray41);
        java.lang.reflect.Constructor constructor44 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass24, classArray43);
        org.mockito.cglib.core.MethodInfo methodInfo45 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor44);
        java.lang.String[] strArray46 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray47 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray48 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray46, methodArray47);
        java.lang.String[] strArray49 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray50 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray51 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray49, methodArray50);
        java.lang.reflect.Method[] methodArray52 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray46, methodArray51);
        java.lang.String[] strArray53 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray54 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray55 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray53, methodArray54);
        java.lang.String[] strArray56 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray57 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray58 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray56, methodArray57);
        java.lang.reflect.Method[] methodArray59 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray53, methodArray58);
        java.lang.reflect.Method[] methodArray60 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray46, methodArray59);
        java.lang.String[] strArray61 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray62 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray63 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray61, methodArray62);
        java.lang.reflect.Method[] methodArray64 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray46, methodArray63);
        java.lang.Object obj65 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor44, (java.lang.Object[]) strArray46);
        java.beans.PropertyDescriptor[] propertyDescriptorArray66 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray69 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray66, false, true);
        java.lang.Class[] classArray70 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray69);
        java.lang.reflect.Method[] methodArray71 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray46, methodArray69);
        java.lang.Object obj72 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass16, classArray21, (java.lang.Object[]) methodArray69);
        java.lang.Class[] classArray73 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray21);
        int int74 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray21);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method75 = org.mockito.cglib.core.ReflectUtils.findDeclaredMethod((java.lang.Class) wildcardClass13, "", classArray21);
            org.junit.Assert.fail("Expected exception of type java.lang.NoSuchMethodException; message: ");
        } catch (java.lang.NoSuchMethodException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(propertyDescriptorArray2);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(classArray6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(methodArray20);
        org.junit.Assert.assertNotNull(classArray21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(classInfo25);
        org.junit.Assert.assertNull(list27);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(methodArray30);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(methodArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(methodArray42);
        org.junit.Assert.assertNotNull(classArray43);
        org.junit.Assert.assertNotNull(constructor44);
        org.junit.Assert.assertNotNull(methodInfo45);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(methodArray47);
        org.junit.Assert.assertNotNull(methodArray48);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(methodArray50);
        org.junit.Assert.assertNotNull(methodArray51);
        org.junit.Assert.assertNotNull(methodArray52);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(methodArray54);
        org.junit.Assert.assertNotNull(methodArray55);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(methodArray57);
        org.junit.Assert.assertNotNull(methodArray58);
        org.junit.Assert.assertNotNull(methodArray59);
        org.junit.Assert.assertNotNull(methodArray60);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(methodArray62);
        org.junit.Assert.assertNotNull(methodArray63);
        org.junit.Assert.assertNotNull(methodArray64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(propertyDescriptorArray66);
        org.junit.Assert.assertNotNull(methodArray69);
        org.junit.Assert.assertNotNull(classArray70);
        org.junit.Assert.assertNotNull(methodArray71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(classArray73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
    }

    @Test
    public void test1295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1295");
        java.beans.PropertyDescriptor[] propertyDescriptorArray0 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray3 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray0, false, true);
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray0, true, true);
        java.lang.reflect.Method[] methodArray9 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray0, false, true);
        java.lang.Class<?> wildcardClass10 = propertyDescriptorArray0.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray11 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass10);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method12 = org.mockito.cglib.core.ReflectUtils.findNewInstance((java.lang.Class) wildcardClass10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: class [Ljava.beans.PropertyDescriptor; is not an interface");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(propertyDescriptorArray0);
        org.junit.Assert.assertNotNull(methodArray3);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(propertyDescriptorArray11);
    }

    @Test
    public void test1296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1296");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray1 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray2 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray1);
        java.lang.String[] strArray3 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray4 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray3, methodArray4);
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray5);
        java.lang.String[] strArray7 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray8 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray9 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.reflect.Method[] methodArray13 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray12);
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray13);
        java.lang.Class[] classArray15 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray13);
        java.lang.Class<?> wildcardClass16 = classArray15.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray17 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass16);
        java.lang.reflect.Method[] methodArray20 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray17, true, false);
        java.lang.Class<?> wildcardClass21 = propertyDescriptorArray17.getClass();
        org.mockito.cglib.core.ClassInfo classInfo22 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass21);
        java.beans.PropertyDescriptor[] propertyDescriptorArray23 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass21);
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(methodArray1);
        org.junit.Assert.assertNotNull(methodArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(methodArray4);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(methodArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(classArray15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(propertyDescriptorArray17);
        org.junit.Assert.assertNotNull(methodArray20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(classInfo22);
        org.junit.Assert.assertNotNull(propertyDescriptorArray23);
    }

    @Test
    public void test1297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1297");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        org.mockito.cglib.core.ClassInfo classInfo4 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass3);
        java.lang.Object obj5 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass3);
        java.beans.PropertyDescriptor[] propertyDescriptorArray6 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray9 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray6, false, true);
        java.lang.Class[] classArray10 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray6);
        java.lang.Class[] classArray11 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray10);
        java.lang.String[] strArray12 = org.mockito.cglib.core.ReflectUtils.getNames(classArray11);
        java.lang.reflect.Constructor constructor13 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass3, classArray11);
        java.lang.Object obj14 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass3);
        org.mockito.cglib.core.ClassInfo classInfo15 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass3);
        java.util.List list16 = null;
        java.util.List list17 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass3, list16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Object obj20 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass19);
        java.lang.Object obj21 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass19);
        java.lang.String[] strArray22 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray23 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray24 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray22, methodArray23);
        java.lang.Class[] classArray25 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) strArray22);
        java.lang.String[] strArray26 = org.mockito.cglib.core.ReflectUtils.getNames(classArray25);
        java.beans.PropertyDescriptor[] propertyDescriptorArray27 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray30 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray27, false, true);
        java.lang.Class[] classArray31 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray27);
        int int32 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray31);
        int int33 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray31);
        java.lang.Object obj34 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass19, classArray25, (java.lang.Object[]) classArray31);
        java.lang.reflect.Constructor constructor35 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass3, classArray31);
        java.lang.reflect.Constructor constructor36 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray31);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method37 = org.mockito.cglib.core.ReflectUtils.findInterfaceMethod((java.lang.Class) wildcardClass1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: class java.lang.Object is not an interface");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(classInfo4);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(propertyDescriptorArray6);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(constructor13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(classInfo15);
        org.junit.Assert.assertNull(list17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(methodArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(classArray25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(propertyDescriptorArray27);
        org.junit.Assert.assertNotNull(methodArray30);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(constructor35);
        org.junit.Assert.assertNotNull(constructor36);
    }

    @Test
    public void test1298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1298");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray1 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray2 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray1);
        java.lang.String[] strArray3 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray4 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray3, methodArray4);
        java.lang.String[] strArray6 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray7 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray8 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray6, methodArray7);
        java.lang.String[] strArray9 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray10 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray9, methodArray10);
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray6, methodArray11);
        java.lang.reflect.Method[] methodArray13 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray3, methodArray12);
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray13);
        java.lang.Class[] classArray15 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray14);
        java.lang.Class<?> wildcardClass16 = methodArray14.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray17 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass16);
        java.util.List list18 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List list19 = org.mockito.cglib.core.ReflectUtils.addAllMethods((java.lang.Class) wildcardClass16, list18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(methodArray1);
        org.junit.Assert.assertNotNull(methodArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(methodArray4);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(methodArray8);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(classArray15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(propertyDescriptorArray17);
    }

    @Test
    public void test1299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1299");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray1 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray2 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray1);
        java.lang.String[] strArray3 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray4 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray3, methodArray4);
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray5);
        java.lang.String[] strArray7 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray8 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray9 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.reflect.Method[] methodArray13 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray12);
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray13);
        java.lang.Class<?> wildcardClass15 = methodArray13.getClass();
        org.mockito.cglib.core.ClassInfo classInfo16 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass15);
        java.beans.PropertyDescriptor[] propertyDescriptorArray17 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass15);
        java.beans.PropertyDescriptor[] propertyDescriptorArray18 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass15);
        java.lang.reflect.Method[] methodArray21 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray18, true, false);
        java.lang.reflect.Method[] methodArray24 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray18, true, false);
        java.lang.reflect.Method[] methodArray27 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray18, false, false);
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(methodArray1);
        org.junit.Assert.assertNotNull(methodArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(methodArray4);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(methodArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(classInfo16);
        org.junit.Assert.assertNotNull(propertyDescriptorArray17);
        org.junit.Assert.assertNotNull(propertyDescriptorArray18);
        org.junit.Assert.assertNotNull(methodArray21);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(methodArray27);
    }

    @Test
    public void test1300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1300");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.lang.String[] strArray23 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray24 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray25 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray24);
        java.lang.String[] strArray26 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray27 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray26, methodArray27);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray28);
        java.lang.String[] strArray30 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray31 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray32 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray31);
        java.lang.String[] strArray33 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray34 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray33, methodArray34);
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray35);
        java.lang.reflect.Method[] methodArray37 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray36);
        java.lang.String[] strArray38 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray39 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray40 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray38, methodArray39);
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray40);
        java.lang.Object obj42 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) strArray23);
        org.mockito.asm.Type[] typeArray43 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        java.lang.Class<?> wildcardClass44 = typeArray43.getClass();
        org.mockito.cglib.core.ClassInfo classInfo45 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass44);
        java.beans.PropertyDescriptor[] propertyDescriptorArray46 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass44);
        java.beans.PropertyDescriptor[] propertyDescriptorArray47 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass44);
        java.lang.String[] strArray49 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray50 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray51 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray49, methodArray50);
        java.lang.String[] strArray52 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray53 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray54 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray52, methodArray53);
        java.lang.reflect.Method[] methodArray55 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray49, methodArray54);
        java.lang.String[] strArray56 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray57 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray58 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray56, methodArray57);
        java.lang.String[] strArray59 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray60 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray61 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray59, methodArray60);
        java.lang.reflect.Method[] methodArray62 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray56, methodArray61);
        java.lang.reflect.Method[] methodArray63 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray49, methodArray62);
        java.lang.Class[] classArray64 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray62);
        java.lang.String[] strArray65 = org.mockito.cglib.core.ReflectUtils.getNames(classArray64);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method66 = org.mockito.cglib.core.ReflectUtils.findDeclaredMethod((java.lang.Class) wildcardClass44, "hi!", classArray64);
            org.junit.Assert.fail("Expected exception of type java.lang.NoSuchMethodException; message: hi!");
        } catch (java.lang.NoSuchMethodException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(classInfo45);
        org.junit.Assert.assertNotNull(propertyDescriptorArray46);
        org.junit.Assert.assertNotNull(propertyDescriptorArray47);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(methodArray50);
        org.junit.Assert.assertNotNull(methodArray51);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(methodArray53);
        org.junit.Assert.assertNotNull(methodArray54);
        org.junit.Assert.assertNotNull(methodArray55);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(methodArray57);
        org.junit.Assert.assertNotNull(methodArray58);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(methodArray60);
        org.junit.Assert.assertNotNull(methodArray61);
        org.junit.Assert.assertNotNull(methodArray62);
        org.junit.Assert.assertNotNull(methodArray63);
        org.junit.Assert.assertNotNull(classArray64);
        org.junit.Assert.assertNotNull(strArray65);
    }

    @Test
    public void test1301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1301");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.Object obj5 = new java.lang.Object();
        java.lang.Class<?> wildcardClass6 = obj5.getClass();
        org.mockito.cglib.core.ClassInfo classInfo7 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass6);
        java.util.List list8 = null;
        java.util.List list9 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass6, list8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.String[] strArray13 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray14 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray15 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray13, methodArray14);
        java.lang.reflect.Method[] methodArray16 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray15);
        java.lang.String[] strArray17 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray18 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray17, methodArray18);
        java.lang.String[] strArray20 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray21 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray22 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray20, methodArray21);
        java.lang.reflect.Method[] methodArray23 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray17, methodArray22);
        java.lang.reflect.Method[] methodArray24 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray23);
        java.lang.Class[] classArray25 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray23);
        java.lang.reflect.Constructor constructor26 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass6, classArray25);
        java.lang.Class[] classArray27 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray25);
        java.lang.String[] strArray28 = org.mockito.cglib.core.ReflectUtils.getNames(classArray27);
        java.lang.reflect.Constructor constructor29 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray27);
        org.mockito.cglib.core.MethodInfo methodInfo30 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor29);
        org.mockito.cglib.core.MethodInfo methodInfo32 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor29, (int) (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(classInfo7);
        org.junit.Assert.assertNull(list9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(methodArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(methodArray21);
        org.junit.Assert.assertNotNull(methodArray22);
        org.junit.Assert.assertNotNull(methodArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(classArray25);
        org.junit.Assert.assertNotNull(constructor26);
        org.junit.Assert.assertNotNull(classArray27);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(constructor29);
        org.junit.Assert.assertNotNull(methodInfo30);
        org.junit.Assert.assertNotNull(methodInfo32);
    }

    @Test
    public void test1302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1302");
        java.beans.PropertyDescriptor[] propertyDescriptorArray0 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray3 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray0, false, true);
        java.lang.Class[] classArray4 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray0);
        java.lang.Class[] classArray5 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray4);
        java.lang.String[] strArray6 = org.mockito.cglib.core.ReflectUtils.getNames(classArray4);
        java.lang.String[] strArray7 = org.mockito.cglib.core.ReflectUtils.getNames(classArray4);
        java.lang.Class[] classArray8 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray4);
        int int9 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray4);
        int int10 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray4);
        int int11 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray4);
        org.junit.Assert.assertNotNull(propertyDescriptorArray0);
        org.junit.Assert.assertNotNull(methodArray3);
        org.junit.Assert.assertNotNull(classArray4);
        org.junit.Assert.assertNotNull(classArray5);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(classArray8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    public void test1303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1303");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo23 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21, (int) ' ');
        org.mockito.cglib.core.MethodInfo methodInfo25 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21, 10);
        org.mockito.cglib.core.Signature signature26 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor21);
        org.mockito.cglib.core.MethodInfo methodInfo27 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo23);
        org.junit.Assert.assertNotNull(methodInfo25);
        org.junit.Assert.assertNotNull(signature26);
        org.junit.Assert.assertNotNull(methodInfo27);
    }

    @Test
    public void test1304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1304");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        java.util.List list2 = null;
        java.util.List list3 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list2);
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        org.mockito.cglib.core.ClassInfo classInfo6 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass5);
        java.beans.PropertyDescriptor[] propertyDescriptorArray8 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray8, false, true);
        java.lang.Class[] classArray12 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray8);
        java.lang.Class[] classArray13 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray12);
        java.lang.String[] strArray14 = org.mockito.cglib.core.ReflectUtils.getNames(classArray13);
        java.lang.reflect.Constructor constructor15 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass5, classArray13);
        org.mockito.cglib.core.MethodInfo methodInfo16 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor15);
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray19 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray22 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray19, false, true);
        java.lang.Class[] classArray23 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray22);
        java.lang.Object[] objArray24 = null;
        java.lang.Object obj25 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass18, classArray23, objArray24);
        java.lang.Object obj26 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor15, (java.lang.Object[]) classArray23);
        java.lang.String[] strArray27 = org.mockito.cglib.core.ReflectUtils.getNames(classArray23);
        java.lang.reflect.Constructor constructor28 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray23);
        java.lang.Object obj29 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Object obj33 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass32);
        java.beans.PropertyDescriptor[] propertyDescriptorArray34 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray37 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray34, false, true);
        java.lang.Class[] classArray38 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray34);
        java.lang.Class[] classArray39 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray38);
        java.lang.String[] strArray40 = org.mockito.cglib.core.ReflectUtils.getNames(classArray39);
        java.lang.String[] strArray41 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray42 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray43 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray41, methodArray42);
        java.lang.Object obj44 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass32, classArray39, (java.lang.Object[]) strArray41);
        java.beans.PropertyDescriptor[] propertyDescriptorArray45 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray48 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray45, false, true);
        java.lang.reflect.Method[] methodArray51 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray45, false, false);
        java.lang.reflect.Method[] methodArray54 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray45, true, false);
        java.lang.Class[] classArray55 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray54);
        java.beans.PropertyDescriptor[] propertyDescriptorArray56 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray59 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray56, false, true);
        java.lang.Class[] classArray60 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray56);
        java.lang.Class[] classArray61 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray60);
        java.lang.String[] strArray62 = org.mockito.cglib.core.ReflectUtils.getNames(classArray60);
        java.lang.Class[] classArray63 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray60);
        int int64 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray60);
        java.lang.Object obj65 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass32, classArray55, (java.lang.Object[]) classArray60);
        int int66 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray60);
        java.lang.String[] strArray67 = org.mockito.cglib.core.ReflectUtils.getNames(classArray60);
        java.lang.Class[] classArray68 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray60);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method69 = org.mockito.cglib.core.ReflectUtils.findDeclaredMethod((java.lang.Class) wildcardClass1, "", classArray60);
            org.junit.Assert.fail("Expected exception of type java.lang.NoSuchMethodException; message: ");
        } catch (java.lang.NoSuchMethodException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNull(list3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(classInfo6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(propertyDescriptorArray8);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(classArray13);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(constructor15);
        org.junit.Assert.assertNotNull(methodInfo16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(propertyDescriptorArray19);
        org.junit.Assert.assertNotNull(methodArray22);
        org.junit.Assert.assertNotNull(classArray23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(constructor28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(propertyDescriptorArray34);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(classArray38);
        org.junit.Assert.assertNotNull(classArray39);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(methodArray42);
        org.junit.Assert.assertNotNull(methodArray43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(propertyDescriptorArray45);
        org.junit.Assert.assertNotNull(methodArray48);
        org.junit.Assert.assertNotNull(methodArray51);
        org.junit.Assert.assertNotNull(methodArray54);
        org.junit.Assert.assertNotNull(classArray55);
        org.junit.Assert.assertNotNull(propertyDescriptorArray56);
        org.junit.Assert.assertNotNull(methodArray59);
        org.junit.Assert.assertNotNull(classArray60);
        org.junit.Assert.assertNotNull(classArray61);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(classArray63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(classArray68);
    }

    @Test
    public void test1305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1305");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.lang.Object obj3 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.beans.PropertyDescriptor[] propertyDescriptorArray4 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray4, false, true);
        java.lang.Class[] classArray8 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray4);
        java.lang.Class[] classArray9 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray8);
        java.lang.String[] strArray10 = org.mockito.cglib.core.ReflectUtils.getNames(classArray9);
        java.lang.reflect.Constructor constructor11 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray9);
        java.lang.Object obj12 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        org.mockito.cglib.core.ClassInfo classInfo13 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list14 = null;
        java.util.List list15 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list14);
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        java.lang.Object obj18 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass17);
        java.lang.Object obj19 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass17);
        java.lang.String[] strArray20 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray21 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray22 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray20, methodArray21);
        java.lang.Class[] classArray23 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) strArray20);
        java.lang.String[] strArray24 = org.mockito.cglib.core.ReflectUtils.getNames(classArray23);
        java.beans.PropertyDescriptor[] propertyDescriptorArray25 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray25, false, true);
        java.lang.Class[] classArray29 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray25);
        int int30 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray29);
        int int31 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray29);
        java.lang.Object obj32 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass17, classArray23, (java.lang.Object[]) classArray29);
        java.lang.reflect.Constructor constructor33 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray29);
        java.lang.Object obj34 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.lang.String[] strArray36 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray37 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray38 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray37);
        java.lang.String[] strArray39 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray40 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray39, methodArray40);
        java.lang.reflect.Method[] methodArray42 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray41);
        java.lang.String[] strArray43 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray44 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray45 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray43, methodArray44);
        java.lang.String[] strArray46 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray47 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray48 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray46, methodArray47);
        java.lang.reflect.Method[] methodArray49 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray43, methodArray48);
        java.lang.reflect.Method[] methodArray50 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray49);
        java.lang.Class<?> wildcardClass51 = methodArray49.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray52 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass51);
        java.lang.reflect.Method[] methodArray55 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray52, false, true);
        java.lang.Class[] classArray56 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray52);
        int int57 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray56);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method58 = org.mockito.cglib.core.ReflectUtils.findDeclaredMethod((java.lang.Class) wildcardClass1, "", classArray56);
            org.junit.Assert.fail("Expected exception of type java.lang.NoSuchMethodException; message: ");
        } catch (java.lang.NoSuchMethodException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(propertyDescriptorArray4);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(classArray8);
        org.junit.Assert.assertNotNull(classArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(constructor11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(classInfo13);
        org.junit.Assert.assertNull(list15);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(methodArray21);
        org.junit.Assert.assertNotNull(methodArray22);
        org.junit.Assert.assertNotNull(classArray23);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(propertyDescriptorArray25);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(classArray29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(constructor33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(methodArray38);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(methodArray42);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(methodArray44);
        org.junit.Assert.assertNotNull(methodArray45);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(methodArray47);
        org.junit.Assert.assertNotNull(methodArray48);
        org.junit.Assert.assertNotNull(methodArray49);
        org.junit.Assert.assertNotNull(methodArray50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(propertyDescriptorArray52);
        org.junit.Assert.assertNotNull(methodArray55);
        org.junit.Assert.assertNotNull(classArray56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
    }

    @Test
    public void test1306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1306");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        java.util.List list2 = null;
        java.util.List list3 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list2);
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        org.mockito.cglib.core.ClassInfo classInfo6 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass5);
        java.beans.PropertyDescriptor[] propertyDescriptorArray8 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray8, false, true);
        java.lang.Class[] classArray12 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray8);
        java.lang.Class[] classArray13 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray12);
        java.lang.String[] strArray14 = org.mockito.cglib.core.ReflectUtils.getNames(classArray13);
        java.lang.reflect.Constructor constructor15 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass5, classArray13);
        org.mockito.cglib.core.MethodInfo methodInfo16 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor15);
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray19 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray22 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray19, false, true);
        java.lang.Class[] classArray23 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray22);
        java.lang.Object[] objArray24 = null;
        java.lang.Object obj25 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass18, classArray23, objArray24);
        java.lang.Object obj26 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor15, (java.lang.Object[]) classArray23);
        java.lang.String[] strArray27 = org.mockito.cglib.core.ReflectUtils.getNames(classArray23);
        java.lang.reflect.Constructor constructor28 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray23);
        java.lang.String[] strArray29 = org.mockito.cglib.core.ReflectUtils.getNames(classArray23);
        int int30 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray23);
        int int31 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray23);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNull(list3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(classInfo6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(propertyDescriptorArray8);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(classArray13);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(constructor15);
        org.junit.Assert.assertNotNull(methodInfo16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(propertyDescriptorArray19);
        org.junit.Assert.assertNotNull(methodArray22);
        org.junit.Assert.assertNotNull(classArray23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(constructor28);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
    }

    @Test
    public void test1307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1307");
        java.beans.PropertyDescriptor[] propertyDescriptorArray0 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray3 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray0, false, true);
        java.lang.Class[] classArray4 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray0);
        int int5 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray4);
        java.lang.String[] strArray6 = org.mockito.cglib.core.ReflectUtils.getNames(classArray4);
        java.lang.String[] strArray7 = org.mockito.cglib.core.ReflectUtils.getNames(classArray4);
        java.lang.Class[] classArray8 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) strArray7);
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        org.mockito.cglib.core.ClassInfo classInfo11 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass10);
        java.util.List list12 = null;
        java.util.List list13 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass10, list12);
        java.beans.PropertyDescriptor[] propertyDescriptorArray14 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray14, false, true);
        java.lang.Class[] classArray18 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray14);
        int int19 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray18);
        java.lang.String[] strArray20 = org.mockito.cglib.core.ReflectUtils.getNames(classArray18);
        java.lang.String[] strArray21 = org.mockito.cglib.core.ReflectUtils.getNames(classArray18);
        java.lang.String[] strArray22 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray23 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray24 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray22, methodArray23);
        java.lang.String[] strArray25 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray26 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray27 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray25, methodArray26);
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray22, methodArray27);
        java.lang.String[] strArray29 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray30 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray31 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray29, methodArray30);
        java.lang.String[] strArray32 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray33 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray32, methodArray33);
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray29, methodArray34);
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray22, methodArray35);
        java.lang.Object obj37 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass10, classArray18, (java.lang.Object[]) methodArray36);
        java.lang.reflect.Method[] methodArray38 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray36);
        java.lang.String[] strArray39 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray40 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray39, methodArray40);
        java.lang.String[] strArray42 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray43 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray44 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray42, methodArray43);
        java.lang.String[] strArray45 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray46 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray47 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray45, methodArray46);
        java.lang.String[] strArray48 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray49 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray50 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray48, methodArray49);
        java.lang.reflect.Method[] methodArray51 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray45, methodArray50);
        java.lang.reflect.Method[] methodArray52 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray42, methodArray51);
        java.lang.reflect.Method[] methodArray53 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray39, methodArray52);
        java.lang.reflect.Method[] methodArray54 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray52);
        java.lang.Class[] classArray55 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray52);
        java.lang.String[] strArray56 = org.mockito.cglib.core.ReflectUtils.getNames(classArray55);
        int int57 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray55);
        org.junit.Assert.assertNotNull(propertyDescriptorArray0);
        org.junit.Assert.assertNotNull(methodArray3);
        org.junit.Assert.assertNotNull(classArray4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(classArray8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(classInfo11);
        org.junit.Assert.assertNull(list13);
        org.junit.Assert.assertNotNull(propertyDescriptorArray14);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(methodArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(methodArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(methodArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(methodArray38);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(methodArray43);
        org.junit.Assert.assertNotNull(methodArray44);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(methodArray46);
        org.junit.Assert.assertNotNull(methodArray47);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(methodArray49);
        org.junit.Assert.assertNotNull(methodArray50);
        org.junit.Assert.assertNotNull(methodArray51);
        org.junit.Assert.assertNotNull(methodArray52);
        org.junit.Assert.assertNotNull(methodArray53);
        org.junit.Assert.assertNotNull(methodArray54);
        org.junit.Assert.assertNotNull(classArray55);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
    }

    @Test
    public void test1308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1308");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        java.lang.Object obj2 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.lang.Object obj3 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.lang.Object obj4 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.lang.Object obj5 = new java.lang.Object();
        java.lang.Class<?> wildcardClass6 = obj5.getClass();
        org.mockito.cglib.core.ClassInfo classInfo7 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass6);
        java.lang.Object obj8 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass6);
        java.beans.PropertyDescriptor[] propertyDescriptorArray9 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray9, false, true);
        java.lang.Class[] classArray13 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray9);
        java.lang.Class[] classArray14 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray13);
        java.lang.String[] strArray15 = org.mockito.cglib.core.ReflectUtils.getNames(classArray14);
        java.lang.reflect.Constructor constructor16 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass6, classArray14);
        java.lang.Object obj17 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass6);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.mockito.cglib.core.ClassInfo classInfo20 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass19);
        java.util.List list21 = null;
        java.util.List list22 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass19, list21);
        java.beans.PropertyDescriptor[] propertyDescriptorArray23 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray23, false, true);
        java.lang.Class[] classArray27 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray23);
        int int28 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray27);
        java.lang.String[] strArray29 = org.mockito.cglib.core.ReflectUtils.getNames(classArray27);
        java.lang.String[] strArray30 = org.mockito.cglib.core.ReflectUtils.getNames(classArray27);
        java.lang.String[] strArray31 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray32 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray33 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray31, methodArray32);
        java.lang.String[] strArray34 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray35 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray34, methodArray35);
        java.lang.reflect.Method[] methodArray37 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray31, methodArray36);
        java.lang.String[] strArray38 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray39 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray40 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray38, methodArray39);
        java.lang.String[] strArray41 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray42 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray43 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray41, methodArray42);
        java.lang.reflect.Method[] methodArray44 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray38, methodArray43);
        java.lang.reflect.Method[] methodArray45 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray31, methodArray44);
        java.lang.Object obj46 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass19, classArray27, (java.lang.Object[]) methodArray45);
        java.lang.Class[] classArray47 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray27);
        java.lang.String[] strArray48 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray49 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray50 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray48, methodArray49);
        java.lang.String[] strArray51 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray52 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray53 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray51, methodArray52);
        java.lang.reflect.Method[] methodArray54 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray48, methodArray53);
        java.lang.String[] strArray55 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray56 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray57 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray55, methodArray56);
        java.lang.String[] strArray58 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray59 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray60 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray58, methodArray59);
        java.lang.reflect.Method[] methodArray61 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray55, methodArray60);
        java.lang.reflect.Method[] methodArray62 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray48, methodArray61);
        java.lang.String[] strArray63 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray64 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray65 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray63, methodArray64);
        java.lang.String[] strArray66 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray67 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray68 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray66, methodArray67);
        java.lang.String[] strArray69 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray70 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray71 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray69, methodArray70);
        java.lang.String[] strArray72 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray73 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray74 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray72, methodArray73);
        java.lang.reflect.Method[] methodArray75 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray69, methodArray74);
        java.lang.reflect.Method[] methodArray76 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray66, methodArray75);
        java.lang.reflect.Method[] methodArray77 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray63, methodArray76);
        java.lang.reflect.Method[] methodArray78 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray48, methodArray76);
        java.lang.Object obj79 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass6, classArray47, (java.lang.Object[]) strArray48);
        java.beans.PropertyDescriptor[] propertyDescriptorArray80 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray83 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray80, false, true);
        java.lang.Class[] classArray84 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray80);
        int int85 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray84);
        java.lang.String[] strArray86 = org.mockito.cglib.core.ReflectUtils.getNames(classArray84);
        java.lang.Object obj87 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray47, (java.lang.Object[]) strArray86);
        java.lang.Class<?> wildcardClass88 = classArray47.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method89 = org.mockito.cglib.core.ReflectUtils.findNewInstance((java.lang.Class) wildcardClass88);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: class [Ljava.lang.Class; is not an interface");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(classInfo7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(propertyDescriptorArray9);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(classArray13);
        org.junit.Assert.assertNotNull(classArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(constructor16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(classInfo20);
        org.junit.Assert.assertNull(list22);
        org.junit.Assert.assertNotNull(propertyDescriptorArray23);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(classArray27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(methodArray33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(methodArray42);
        org.junit.Assert.assertNotNull(methodArray43);
        org.junit.Assert.assertNotNull(methodArray44);
        org.junit.Assert.assertNotNull(methodArray45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(classArray47);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(methodArray49);
        org.junit.Assert.assertNotNull(methodArray50);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(methodArray52);
        org.junit.Assert.assertNotNull(methodArray53);
        org.junit.Assert.assertNotNull(methodArray54);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(methodArray56);
        org.junit.Assert.assertNotNull(methodArray57);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(methodArray59);
        org.junit.Assert.assertNotNull(methodArray60);
        org.junit.Assert.assertNotNull(methodArray61);
        org.junit.Assert.assertNotNull(methodArray62);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(methodArray64);
        org.junit.Assert.assertNotNull(methodArray65);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(methodArray67);
        org.junit.Assert.assertNotNull(methodArray68);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(methodArray70);
        org.junit.Assert.assertNotNull(methodArray71);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(methodArray73);
        org.junit.Assert.assertNotNull(methodArray74);
        org.junit.Assert.assertNotNull(methodArray75);
        org.junit.Assert.assertNotNull(methodArray76);
        org.junit.Assert.assertNotNull(methodArray77);
        org.junit.Assert.assertNotNull(methodArray78);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(propertyDescriptorArray80);
        org.junit.Assert.assertNotNull(methodArray83);
        org.junit.Assert.assertNotNull(classArray84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test1309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1309");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.Object obj5 = new java.lang.Object();
        java.lang.Class<?> wildcardClass6 = obj5.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray7 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray7, false, true);
        java.lang.Class[] classArray11 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray10);
        java.lang.Object[] objArray12 = null;
        java.lang.Object obj13 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass6, classArray11, objArray12);
        java.lang.reflect.Constructor constructor14 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray11);
        org.mockito.cglib.core.ClassInfo classInfo15 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.beans.PropertyDescriptor[] propertyDescriptorArray16 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray16, false, true);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray19);
        int int21 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray20);
        java.lang.String[] strArray22 = org.mockito.cglib.core.ReflectUtils.getNames(classArray20);
        java.lang.String[] strArray23 = org.mockito.cglib.core.ReflectUtils.getNames(classArray20);
        java.lang.String[] strArray24 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray25 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray24, methodArray25);
        java.lang.Object obj27 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray20, (java.lang.Object[]) methodArray25);
        java.util.List list28 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List list29 = org.mockito.cglib.core.ReflectUtils.addAllMethods((java.lang.Class) wildcardClass1, list28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(propertyDescriptorArray7);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(constructor14);
        org.junit.Assert.assertNotNull(classInfo15);
        org.junit.Assert.assertNotNull(propertyDescriptorArray16);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(obj27);
    }

    @Test
    public void test1310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1310");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray1 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray2 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray1);
        java.lang.String[] strArray3 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray4 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray3, methodArray4);
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray5);
        java.lang.String[] strArray7 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray8 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray9 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.reflect.Method[] methodArray13 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray12);
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray13);
        java.lang.Class<?> wildcardClass15 = strArray0.getClass();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        java.lang.Object obj18 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass17);
        java.lang.Object obj19 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass17);
        java.lang.Object obj20 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass17);
        org.mockito.cglib.core.ClassInfo classInfo21 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass17);
        java.lang.String[] strArray22 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray23 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray24 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray22, methodArray23);
        java.lang.String[] strArray25 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray26 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray27 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray25, methodArray26);
        java.lang.String[] strArray28 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray29 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray30 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray28, methodArray29);
        java.lang.reflect.Method[] methodArray31 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray25, methodArray30);
        java.lang.reflect.Method[] methodArray32 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray22, methodArray31);
        java.lang.Class[] classArray33 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) strArray22);
        java.beans.PropertyDescriptor[] propertyDescriptorArray34 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray37 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray34, false, true);
        java.lang.reflect.Method[] methodArray40 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray34, false, false);
        java.lang.reflect.Method[] methodArray43 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray34, true, false);
        java.lang.Object obj44 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass17, classArray33, (java.lang.Object[]) propertyDescriptorArray34);
        java.lang.String[] strArray45 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray46 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray47 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray45, methodArray46);
        java.lang.String[] strArray48 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray49 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray50 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray48, methodArray49);
        java.lang.reflect.Method[] methodArray51 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray45, methodArray50);
        java.lang.String[] strArray52 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray53 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray54 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray52, methodArray53);
        java.lang.String[] strArray55 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray56 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray57 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray55, methodArray56);
        java.lang.reflect.Method[] methodArray58 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray52, methodArray57);
        java.lang.reflect.Method[] methodArray59 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray45, methodArray58);
        java.lang.Class<?> wildcardClass60 = methodArray58.getClass();
        org.mockito.cglib.core.ClassInfo classInfo61 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass60);
        java.beans.PropertyDescriptor[] propertyDescriptorArray62 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass60);
        java.beans.PropertyDescriptor[] propertyDescriptorArray63 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass60);
        java.beans.PropertyDescriptor[] propertyDescriptorArray64 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass60);
        java.beans.PropertyDescriptor[] propertyDescriptorArray65 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass60);
        java.lang.Class[] classArray66 = new java.lang.Class[] { wildcardClass15, wildcardClass17, wildcardClass60 };
        java.lang.String[] strArray67 = org.mockito.cglib.core.ReflectUtils.getNames(classArray66);
        int int68 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray66);
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(methodArray1);
        org.junit.Assert.assertNotNull(methodArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(methodArray4);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(methodArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(classInfo21);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(methodArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(methodArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(propertyDescriptorArray34);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(methodArray46);
        org.junit.Assert.assertNotNull(methodArray47);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(methodArray49);
        org.junit.Assert.assertNotNull(methodArray50);
        org.junit.Assert.assertNotNull(methodArray51);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(methodArray53);
        org.junit.Assert.assertNotNull(methodArray54);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(methodArray56);
        org.junit.Assert.assertNotNull(methodArray57);
        org.junit.Assert.assertNotNull(methodArray58);
        org.junit.Assert.assertNotNull(methodArray59);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(classInfo61);
        org.junit.Assert.assertNotNull(propertyDescriptorArray62);
        org.junit.Assert.assertNotNull(propertyDescriptorArray63);
        org.junit.Assert.assertNotNull(propertyDescriptorArray64);
        org.junit.Assert.assertNotNull(propertyDescriptorArray65);
        org.junit.Assert.assertNotNull(classArray66);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
    }

    @Test
    public void test1311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1311");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        java.util.List list2 = null;
        java.util.List list3 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list2);
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        org.mockito.cglib.core.ClassInfo classInfo6 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass5);
        java.beans.PropertyDescriptor[] propertyDescriptorArray8 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray8, false, true);
        java.lang.Class[] classArray12 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray8);
        java.lang.Class[] classArray13 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray12);
        java.lang.String[] strArray14 = org.mockito.cglib.core.ReflectUtils.getNames(classArray13);
        java.lang.reflect.Constructor constructor15 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass5, classArray13);
        org.mockito.cglib.core.MethodInfo methodInfo16 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor15);
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray19 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray22 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray19, false, true);
        java.lang.Class[] classArray23 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray22);
        java.lang.Object[] objArray24 = null;
        java.lang.Object obj25 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass18, classArray23, objArray24);
        java.lang.Object obj26 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor15, (java.lang.Object[]) classArray23);
        java.lang.String[] strArray27 = org.mockito.cglib.core.ReflectUtils.getNames(classArray23);
        java.lang.reflect.Constructor constructor28 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray23);
        java.lang.Class<?> wildcardClass29 = classArray23.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray30 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass29);
        java.beans.PropertyDescriptor[] propertyDescriptorArray31 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNull(list3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(classInfo6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(propertyDescriptorArray8);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(classArray13);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(constructor15);
        org.junit.Assert.assertNotNull(methodInfo16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(propertyDescriptorArray19);
        org.junit.Assert.assertNotNull(methodArray22);
        org.junit.Assert.assertNotNull(classArray23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(constructor28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(propertyDescriptorArray30);
        org.junit.Assert.assertNotNull(propertyDescriptorArray31);
    }

    @Test
    public void test1312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1312");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.lang.Object obj3 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.beans.PropertyDescriptor[] propertyDescriptorArray4 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray4, false, true);
        java.lang.Class[] classArray8 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray4);
        java.lang.Class[] classArray9 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray8);
        java.lang.String[] strArray10 = org.mockito.cglib.core.ReflectUtils.getNames(classArray9);
        java.lang.reflect.Constructor constructor11 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray9);
        java.lang.Object obj12 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.util.List list13 = null;
        java.util.List list14 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list13);
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        org.mockito.cglib.core.ClassInfo classInfo17 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass16);
        java.util.List list18 = null;
        java.util.List list19 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass16, list18);
        java.lang.String[] strArray20 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray21 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray22 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray20, methodArray21);
        java.lang.String[] strArray23 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray24 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray25 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray24);
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray20, methodArray25);
        java.lang.String[] strArray27 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray28 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray27, methodArray28);
        java.lang.String[] strArray30 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray31 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray32 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray31);
        java.lang.reflect.Method[] methodArray33 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray27, methodArray32);
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray20, methodArray33);
        java.lang.Class[] classArray35 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray33);
        java.lang.reflect.Constructor constructor36 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass16, classArray35);
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        org.mockito.cglib.core.ClassInfo classInfo39 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass38);
        java.lang.Object obj40 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass38);
        java.beans.PropertyDescriptor[] propertyDescriptorArray41 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray44 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray41, false, true);
        java.lang.Class[] classArray45 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray41);
        java.lang.Class[] classArray46 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray45);
        java.lang.String[] strArray47 = org.mockito.cglib.core.ReflectUtils.getNames(classArray46);
        java.lang.reflect.Constructor constructor48 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass38, classArray46);
        int int49 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray46);
        java.lang.Object obj50 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor36, (java.lang.Object[]) classArray46);
        int int51 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray46);
        java.lang.Class[] classArray52 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray46);
        int int53 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray52);
        java.lang.reflect.Constructor constructor54 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray52);
        java.lang.Class<?> wildcardClass55 = classArray52.getClass();
        org.mockito.cglib.core.ClassInfo classInfo56 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(propertyDescriptorArray4);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(classArray8);
        org.junit.Assert.assertNotNull(classArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(constructor11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNull(list14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(classInfo17);
        org.junit.Assert.assertNull(list19);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(methodArray21);
        org.junit.Assert.assertNotNull(methodArray22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(methodArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(classArray35);
        org.junit.Assert.assertNotNull(constructor36);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(classInfo39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(propertyDescriptorArray41);
        org.junit.Assert.assertNotNull(methodArray44);
        org.junit.Assert.assertNotNull(classArray45);
        org.junit.Assert.assertNotNull(classArray46);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(constructor48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(classArray52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(constructor54);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(classInfo56);
    }

    @Test
    public void test1313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1313");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray1 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray2 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray1);
        java.lang.String[] strArray3 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray4 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray3, methodArray4);
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray5);
        java.lang.String[] strArray7 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray8 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray9 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.reflect.Method[] methodArray13 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray12);
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray13);
        java.lang.Class<?> wildcardClass15 = methodArray13.getClass();
        org.mockito.cglib.core.ClassInfo classInfo16 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass15);
        java.beans.PropertyDescriptor[] propertyDescriptorArray17 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass15);
        java.beans.PropertyDescriptor[] propertyDescriptorArray18 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass15);
        java.beans.PropertyDescriptor[] propertyDescriptorArray19 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass15);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray19);
        java.lang.String[] strArray21 = org.mockito.cglib.core.ReflectUtils.getNames(classArray20);
        int int22 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray20);
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(methodArray1);
        org.junit.Assert.assertNotNull(methodArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(methodArray4);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(methodArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(classInfo16);
        org.junit.Assert.assertNotNull(propertyDescriptorArray17);
        org.junit.Assert.assertNotNull(propertyDescriptorArray18);
        org.junit.Assert.assertNotNull(propertyDescriptorArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
    }

    @Test
    public void test1314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1314");
        java.beans.PropertyDescriptor[] propertyDescriptorArray0 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray3 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray0, false, true);
        java.lang.Class[] classArray4 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray0);
        java.lang.Class[] classArray5 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray4);
        java.lang.Class<?> wildcardClass6 = classArray4.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray7 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass6);
        java.beans.PropertyDescriptor[] propertyDescriptorArray8 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass6);
        java.beans.PropertyDescriptor[] propertyDescriptorArray9 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass6);
        org.mockito.cglib.core.ClassInfo classInfo10 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass6);
        org.junit.Assert.assertNotNull(propertyDescriptorArray0);
        org.junit.Assert.assertNotNull(methodArray3);
        org.junit.Assert.assertNotNull(classArray4);
        org.junit.Assert.assertNotNull(classArray5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(propertyDescriptorArray7);
        org.junit.Assert.assertNotNull(propertyDescriptorArray8);
        org.junit.Assert.assertNotNull(propertyDescriptorArray9);
        org.junit.Assert.assertNotNull(classInfo10);
    }

    @Test
    public void test1315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1315");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.lang.Object obj3 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.beans.PropertyDescriptor[] propertyDescriptorArray4 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray4, false, true);
        java.lang.Class[] classArray8 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray4);
        java.lang.Class[] classArray9 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray8);
        java.lang.String[] strArray10 = org.mockito.cglib.core.ReflectUtils.getNames(classArray9);
        java.lang.reflect.Constructor constructor11 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray9);
        org.mockito.cglib.core.ClassInfo classInfo12 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        org.mockito.cglib.core.ClassInfo classInfo15 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass14);
        java.lang.Object obj16 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass14);
        java.beans.PropertyDescriptor[] propertyDescriptorArray17 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray20 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray17, false, true);
        java.lang.Class[] classArray21 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray17);
        java.lang.Class[] classArray22 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray21);
        java.lang.String[] strArray23 = org.mockito.cglib.core.ReflectUtils.getNames(classArray22);
        java.lang.reflect.Constructor constructor24 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass14, classArray22);
        org.mockito.cglib.core.MethodInfo methodInfo25 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor24);
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass27);
        java.lang.Object obj29 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass27);
        java.lang.String[] strArray30 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray31 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray32 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray31);
        java.lang.Class[] classArray33 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) strArray30);
        java.lang.String[] strArray34 = org.mockito.cglib.core.ReflectUtils.getNames(classArray33);
        java.beans.PropertyDescriptor[] propertyDescriptorArray35 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray38 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray35, false, true);
        java.lang.Class[] classArray39 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray35);
        int int40 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray39);
        int int41 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray39);
        java.lang.Object obj42 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass27, classArray33, (java.lang.Object[]) classArray39);
        java.lang.Object obj43 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor24, (java.lang.Object[]) classArray33);
        int int44 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray33);
        java.lang.String[] strArray45 = org.mockito.cglib.core.ReflectUtils.getNames(classArray33);
        java.lang.Class[] classArray46 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) strArray45);
        java.beans.PropertyDescriptor[] propertyDescriptorArray47 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray50 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray47, false, true);
        java.lang.Class[] classArray51 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray47);
        java.lang.Class[] classArray52 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray51);
        java.lang.String[] strArray53 = org.mockito.cglib.core.ReflectUtils.getNames(classArray51);
        java.lang.Class[] classArray54 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray51);
        java.lang.String[] strArray55 = org.mockito.cglib.core.ReflectUtils.getNames(classArray51);
        java.lang.Object obj56 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray46, (java.lang.Object[]) strArray55);
        int int57 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray46);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(propertyDescriptorArray4);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(classArray8);
        org.junit.Assert.assertNotNull(classArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(constructor11);
        org.junit.Assert.assertNotNull(classInfo12);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(classInfo15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(propertyDescriptorArray17);
        org.junit.Assert.assertNotNull(methodArray20);
        org.junit.Assert.assertNotNull(classArray21);
        org.junit.Assert.assertNotNull(classArray22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(constructor24);
        org.junit.Assert.assertNotNull(methodInfo25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(propertyDescriptorArray35);
        org.junit.Assert.assertNotNull(methodArray38);
        org.junit.Assert.assertNotNull(classArray39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(classArray46);
        org.junit.Assert.assertNotNull(propertyDescriptorArray47);
        org.junit.Assert.assertNotNull(methodArray50);
        org.junit.Assert.assertNotNull(classArray51);
        org.junit.Assert.assertNotNull(classArray52);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(classArray54);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
    }

    @Test
    public void test1316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1316");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method2 = org.mockito.cglib.core.ReflectUtils.findInterfaceMethod((java.lang.Class) wildcardClass1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: class java.lang.Object is not an interface");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test1317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1317");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        java.lang.Object obj2 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.beans.PropertyDescriptor[] propertyDescriptorArray3 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray3, false, true);
        java.lang.Class[] classArray7 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray3);
        java.lang.Class[] classArray8 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray7);
        java.lang.String[] strArray9 = org.mockito.cglib.core.ReflectUtils.getNames(classArray8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.Object obj13 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray8, (java.lang.Object[]) strArray10);
        java.lang.String[] strArray14 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray15 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray16 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray14, methodArray15);
        java.lang.String[] strArray17 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray18 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray17, methodArray18);
        java.lang.reflect.Method[] methodArray20 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray14, methodArray19);
        java.lang.String[] strArray21 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray22 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray23 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray21, methodArray22);
        java.lang.String[] strArray24 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray25 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray24, methodArray25);
        java.lang.reflect.Method[] methodArray27 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray21, methodArray26);
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray14, methodArray27);
        java.lang.Class[] classArray29 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray27);
        java.beans.PropertyDescriptor[] propertyDescriptorArray30 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray33 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray30, false, true);
        java.lang.Class[] classArray34 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray33);
        java.lang.Object obj35 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray29, (java.lang.Object[]) methodArray33);
        java.lang.Object obj36 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.lang.Object obj37 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        // The following exception was thrown during execution in test generation
        try {
            java.beans.PropertyDescriptor[] propertyDescriptorArray38 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass1);
            org.junit.Assert.fail("Expected exception of type org.mockito.cglib.core.CodeGenerationException; message: java.beans.IntrospectionException-->java.lang.Object not superclass of java.lang.Object");
        } catch (org.mockito.cglib.core.CodeGenerationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(propertyDescriptorArray3);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(classArray7);
        org.junit.Assert.assertNotNull(classArray8);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(methodArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(methodArray20);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(methodArray22);
        org.junit.Assert.assertNotNull(methodArray23);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(classArray29);
        org.junit.Assert.assertNotNull(propertyDescriptorArray30);
        org.junit.Assert.assertNotNull(methodArray33);
        org.junit.Assert.assertNotNull(classArray34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj37);
    }

    @Test
    public void test1318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1318");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.beans.PropertyDescriptor[] propertyDescriptorArray23 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray23, false, true);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray23, false, false);
        java.lang.Object obj30 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) methodArray29);
        java.beans.PropertyDescriptor[] propertyDescriptorArray31 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray31, true, true);
        java.lang.Object obj35 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) propertyDescriptorArray31);
        org.mockito.asm.Type[] typeArray36 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        java.beans.PropertyDescriptor[] propertyDescriptorArray37 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray40 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray37, false, true);
        java.lang.Class[] classArray41 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray37);
        java.lang.reflect.Method[] methodArray44 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray37, true, false);
        java.lang.Object obj45 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) propertyDescriptorArray37);
        java.lang.reflect.Method[] methodArray48 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray37, true, false);
        java.lang.reflect.Method[] methodArray51 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray37, true, false);
        java.lang.reflect.Method[] methodArray54 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray37, true, false);
        java.lang.reflect.Method[] methodArray57 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray37, false, false);
        java.lang.reflect.Method[] methodArray60 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray37, true, false);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(propertyDescriptorArray23);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(propertyDescriptorArray31);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertNotNull(propertyDescriptorArray37);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(classArray41);
        org.junit.Assert.assertNotNull(methodArray44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(methodArray48);
        org.junit.Assert.assertNotNull(methodArray51);
        org.junit.Assert.assertNotNull(methodArray54);
        org.junit.Assert.assertNotNull(methodArray57);
        org.junit.Assert.assertNotNull(methodArray60);
    }

    @Test
    public void test1319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1319");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.lang.Object obj3 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.beans.PropertyDescriptor[] propertyDescriptorArray4 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray4, false, true);
        java.lang.Class[] classArray8 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray4);
        java.lang.Class[] classArray9 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray8);
        java.lang.String[] strArray10 = org.mockito.cglib.core.ReflectUtils.getNames(classArray9);
        java.lang.reflect.Constructor constructor11 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray9);
        org.mockito.cglib.core.MethodInfo methodInfo12 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray15 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray15, false, true);
        java.lang.Class[] classArray19 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.Object[] objArray20 = null;
        java.lang.Object obj21 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass14, classArray19, objArray20);
        java.lang.Object obj22 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor11, (java.lang.Object[]) classArray19);
        java.lang.String[] strArray23 = org.mockito.cglib.core.ReflectUtils.getNames(classArray19);
        java.lang.String[] strArray27 = new java.lang.String[] { "", "hi!", "" };
        java.lang.String[] strArray28 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray29 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray30 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray28, methodArray29);
        java.lang.String[] strArray31 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray32 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray33 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray31, methodArray32);
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray28, methodArray33);
        java.lang.String[] strArray35 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray36 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray37 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray35, methodArray36);
        java.lang.String[] strArray38 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray39 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray40 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray38, methodArray39);
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray35, methodArray40);
        java.lang.reflect.Method[] methodArray42 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray28, methodArray41);
        java.lang.reflect.Method[] methodArray43 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray27, methodArray42);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method[] methodArray44 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(propertyDescriptorArray4);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(classArray8);
        org.junit.Assert.assertNotNull(classArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(constructor11);
        org.junit.Assert.assertNotNull(methodInfo12);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(propertyDescriptorArray15);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(classArray19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(methodArray30);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(methodArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(methodArray42);
        org.junit.Assert.assertNotNull(methodArray43);
    }

    @Test
    public void test1320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1320");
        java.lang.Class class0 = null;
        java.lang.Object obj1 = new java.lang.Object();
        java.lang.Class<?> wildcardClass2 = obj1.getClass();
        java.lang.Object obj3 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass2);
        java.beans.PropertyDescriptor[] propertyDescriptorArray4 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray4, false, true);
        java.lang.Class[] classArray8 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray4);
        java.lang.Class[] classArray9 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray8);
        java.lang.String[] strArray10 = org.mockito.cglib.core.ReflectUtils.getNames(classArray9);
        java.lang.String[] strArray11 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray12 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray13 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray11, methodArray12);
        java.lang.Object obj14 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass2, classArray9, (java.lang.Object[]) strArray11);
        java.lang.String[] strArray15 = org.mockito.cglib.core.ReflectUtils.getNames(classArray9);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Constructor constructor16 = org.mockito.cglib.core.ReflectUtils.getConstructor(class0, classArray9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(propertyDescriptorArray4);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(classArray8);
        org.junit.Assert.assertNotNull(classArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(strArray15);
    }

    @Test
    public void test1321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1321");
        java.beans.PropertyDescriptor[] propertyDescriptorArray0 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray3 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray0, false, true);
        java.lang.Class[] classArray4 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray0);
        java.lang.Class[] classArray5 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray4);
        java.lang.String[] strArray6 = org.mockito.cglib.core.ReflectUtils.getNames(classArray4);
        java.lang.Class<?> wildcardClass7 = classArray4.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray8 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass7);
        java.beans.PropertyDescriptor[] propertyDescriptorArray9 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass7);
        java.beans.PropertyDescriptor[] propertyDescriptorArray10 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass7);
        java.beans.PropertyDescriptor[] propertyDescriptorArray11 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass7);
        java.lang.Class[] classArray12 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray11);
        org.junit.Assert.assertNotNull(propertyDescriptorArray0);
        org.junit.Assert.assertNotNull(methodArray3);
        org.junit.Assert.assertNotNull(classArray4);
        org.junit.Assert.assertNotNull(classArray5);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(propertyDescriptorArray8);
        org.junit.Assert.assertNotNull(propertyDescriptorArray9);
        org.junit.Assert.assertNotNull(propertyDescriptorArray10);
        org.junit.Assert.assertNotNull(propertyDescriptorArray11);
        org.junit.Assert.assertNotNull(classArray12);
    }

    @Test
    public void test1322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1322");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray1 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray2 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray1);
        java.lang.String[] strArray3 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray4 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray3, methodArray4);
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray5);
        java.lang.String[] strArray7 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray8 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray9 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.reflect.Method[] methodArray13 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray12);
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray17);
        java.lang.Class<?> wildcardClass19 = methodArray17.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray20 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass19);
        java.beans.PropertyDescriptor[] propertyDescriptorArray21 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass19);
        java.beans.PropertyDescriptor[] propertyDescriptorArray22 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass19);
        java.beans.PropertyDescriptor[] propertyDescriptorArray23 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass19);
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray27 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray30 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray27, false, true);
        java.lang.Class[] classArray31 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray27);
        java.beans.PropertyDescriptor[] propertyDescriptorArray32 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray32, false, true);
        java.lang.Class[] classArray36 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray32);
        int int37 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray36);
        java.lang.String[] strArray38 = org.mockito.cglib.core.ReflectUtils.getNames(classArray36);
        java.lang.String[] strArray39 = org.mockito.cglib.core.ReflectUtils.getNames(classArray36);
        java.lang.Class[] classArray40 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) strArray39);
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        org.mockito.cglib.core.ClassInfo classInfo43 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass42);
        java.util.List list44 = null;
        java.util.List list45 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass42, list44);
        java.beans.PropertyDescriptor[] propertyDescriptorArray46 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray49 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray46, false, true);
        java.lang.Class[] classArray50 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray46);
        int int51 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray50);
        java.lang.String[] strArray52 = org.mockito.cglib.core.ReflectUtils.getNames(classArray50);
        java.lang.String[] strArray53 = org.mockito.cglib.core.ReflectUtils.getNames(classArray50);
        java.lang.String[] strArray54 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray55 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray56 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray54, methodArray55);
        java.lang.String[] strArray57 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray58 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray59 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray57, methodArray58);
        java.lang.reflect.Method[] methodArray60 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray54, methodArray59);
        java.lang.String[] strArray61 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray62 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray63 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray61, methodArray62);
        java.lang.String[] strArray64 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray65 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray66 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray64, methodArray65);
        java.lang.reflect.Method[] methodArray67 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray61, methodArray66);
        java.lang.reflect.Method[] methodArray68 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray54, methodArray67);
        java.lang.Object obj69 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass42, classArray50, (java.lang.Object[]) methodArray68);
        java.lang.reflect.Method[] methodArray70 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray39, methodArray68);
        java.lang.Object obj71 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass26, classArray31, (java.lang.Object[]) strArray39);
        java.lang.String[] strArray72 = org.mockito.cglib.core.ReflectUtils.getNames(classArray31);
        int int73 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray31);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method74 = org.mockito.cglib.core.ReflectUtils.findDeclaredMethod((java.lang.Class) wildcardClass19, "", classArray31);
            org.junit.Assert.fail("Expected exception of type java.lang.NoSuchMethodException; message: ");
        } catch (java.lang.NoSuchMethodException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(methodArray1);
        org.junit.Assert.assertNotNull(methodArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(methodArray4);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(methodArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(propertyDescriptorArray20);
        org.junit.Assert.assertNotNull(propertyDescriptorArray21);
        org.junit.Assert.assertNotNull(propertyDescriptorArray22);
        org.junit.Assert.assertNotNull(propertyDescriptorArray23);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(propertyDescriptorArray27);
        org.junit.Assert.assertNotNull(methodArray30);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(propertyDescriptorArray32);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(classArray36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(classArray40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(classInfo43);
        org.junit.Assert.assertNull(list45);
        org.junit.Assert.assertNotNull(propertyDescriptorArray46);
        org.junit.Assert.assertNotNull(methodArray49);
        org.junit.Assert.assertNotNull(classArray50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(methodArray55);
        org.junit.Assert.assertNotNull(methodArray56);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(methodArray58);
        org.junit.Assert.assertNotNull(methodArray59);
        org.junit.Assert.assertNotNull(methodArray60);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(methodArray62);
        org.junit.Assert.assertNotNull(methodArray63);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(methodArray65);
        org.junit.Assert.assertNotNull(methodArray66);
        org.junit.Assert.assertNotNull(methodArray67);
        org.junit.Assert.assertNotNull(methodArray68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(methodArray70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
    }

    @Test
    public void test1323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1323");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.lang.String[] strArray23 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray24 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray25 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray24);
        java.lang.String[] strArray26 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray27 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray26, methodArray27);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray28);
        java.lang.String[] strArray30 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray31 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray32 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray31);
        java.lang.String[] strArray33 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray34 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray33, methodArray34);
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray35);
        java.lang.reflect.Method[] methodArray37 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray36);
        java.lang.String[] strArray38 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray39 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray40 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray38, methodArray39);
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray40);
        java.lang.Object obj42 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) strArray23);
        org.mockito.cglib.core.MethodInfo methodInfo44 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21, (int) (short) -1);
        org.mockito.cglib.core.Signature signature45 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor21);
        org.mockito.asm.Type[] typeArray46 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(methodInfo44);
        org.junit.Assert.assertNotNull(signature45);
        org.junit.Assert.assertNotNull(typeArray46);
    }

    @Test
    public void test1324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1324");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        java.lang.Object obj2 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.lang.Object obj3 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.lang.String[] strArray4 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray5 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray4, methodArray5);
        java.lang.Class[] classArray7 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) strArray4);
        java.lang.String[] strArray8 = org.mockito.cglib.core.ReflectUtils.getNames(classArray7);
        java.beans.PropertyDescriptor[] propertyDescriptorArray9 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray9, false, true);
        java.lang.Class[] classArray13 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray9);
        int int14 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray13);
        int int15 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray13);
        java.lang.Object obj16 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray7, (java.lang.Object[]) classArray13);
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.util.List list19 = null;
        java.util.List list20 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass18, list19);
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        org.mockito.cglib.core.ClassInfo classInfo23 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass22);
        java.lang.Object obj24 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass22);
        java.beans.PropertyDescriptor[] propertyDescriptorArray25 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray25, false, true);
        java.lang.Class[] classArray29 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray25);
        java.lang.Class[] classArray30 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray29);
        java.lang.String[] strArray31 = org.mockito.cglib.core.ReflectUtils.getNames(classArray30);
        java.lang.reflect.Constructor constructor32 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass22, classArray30);
        org.mockito.cglib.core.MethodInfo methodInfo33 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor32);
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray36 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray39 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray36, false, true);
        java.lang.Class[] classArray40 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray39);
        java.lang.Object[] objArray41 = null;
        java.lang.Object obj42 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass35, classArray40, objArray41);
        java.lang.Object obj43 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor32, (java.lang.Object[]) classArray40);
        java.lang.String[] strArray44 = org.mockito.cglib.core.ReflectUtils.getNames(classArray40);
        java.lang.reflect.Constructor constructor45 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass18, classArray40);
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray48 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray51 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray48, false, true);
        java.lang.Class[] classArray52 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray51);
        java.lang.Object[] objArray53 = null;
        java.lang.Object obj54 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass47, classArray52, objArray53);
        int int55 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray52);
        java.lang.reflect.Constructor constructor56 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass18, classArray52);
        java.lang.Object[] objArray57 = null;
        java.lang.Object obj58 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray52, objArray57);
        java.lang.String[] strArray59 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray60 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray61 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray59, methodArray60);
        java.lang.String[] strArray62 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray63 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray64 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray62, methodArray63);
        java.lang.reflect.Method[] methodArray65 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray59, methodArray64);
        java.lang.String[] strArray66 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray67 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray68 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray66, methodArray67);
        java.lang.String[] strArray69 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray70 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray71 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray69, methodArray70);
        java.lang.reflect.Method[] methodArray72 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray66, methodArray71);
        java.lang.reflect.Method[] methodArray73 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray59, methodArray72);
        java.lang.Class[] classArray74 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray72);
        java.lang.String[] strArray75 = org.mockito.cglib.core.ReflectUtils.getNames(classArray74);
        int int76 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray74);
        java.lang.String[] strArray77 = org.mockito.cglib.core.ReflectUtils.getNames(classArray74);
        java.lang.String[] strArray78 = org.mockito.cglib.core.ReflectUtils.getNames(classArray74);
        int int79 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray74);
        java.lang.reflect.Constructor constructor80 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray74);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method81 = org.mockito.cglib.core.ReflectUtils.findNewInstance((java.lang.Class) wildcardClass1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: class java.lang.Object is not an interface");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(classArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(propertyDescriptorArray9);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(classArray13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNull(list20);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(classInfo23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(propertyDescriptorArray25);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(classArray29);
        org.junit.Assert.assertNotNull(classArray30);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(constructor32);
        org.junit.Assert.assertNotNull(methodInfo33);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(propertyDescriptorArray36);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(classArray40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(constructor45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(propertyDescriptorArray48);
        org.junit.Assert.assertNotNull(methodArray51);
        org.junit.Assert.assertNotNull(classArray52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(constructor56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(methodArray60);
        org.junit.Assert.assertNotNull(methodArray61);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(methodArray63);
        org.junit.Assert.assertNotNull(methodArray64);
        org.junit.Assert.assertNotNull(methodArray65);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(methodArray67);
        org.junit.Assert.assertNotNull(methodArray68);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(methodArray70);
        org.junit.Assert.assertNotNull(methodArray71);
        org.junit.Assert.assertNotNull(methodArray72);
        org.junit.Assert.assertNotNull(methodArray73);
        org.junit.Assert.assertNotNull(classArray74);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertNotNull(constructor80);
    }

    @Test
    public void test1325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1325");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.lang.String[] strArray23 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray24 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray25 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray24);
        java.lang.String[] strArray26 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray27 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray26, methodArray27);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray28);
        java.lang.String[] strArray30 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray31 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray32 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray31);
        java.lang.String[] strArray33 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray34 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray33, methodArray34);
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray35);
        java.lang.reflect.Method[] methodArray37 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray36);
        java.lang.String[] strArray38 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray39 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray40 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray38, methodArray39);
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray40);
        java.lang.Object obj42 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) strArray23);
        java.beans.PropertyDescriptor[] propertyDescriptorArray43 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray46 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray43, false, true);
        java.lang.Class[] classArray47 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray46);
        java.lang.reflect.Method[] methodArray48 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray46);
        java.lang.Class<?> wildcardClass49 = strArray23.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray50 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass49);
        org.mockito.cglib.core.ClassInfo classInfo51 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(propertyDescriptorArray43);
        org.junit.Assert.assertNotNull(methodArray46);
        org.junit.Assert.assertNotNull(classArray47);
        org.junit.Assert.assertNotNull(methodArray48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(propertyDescriptorArray50);
        org.junit.Assert.assertNotNull(classInfo51);
    }

    @Test
    public void test1326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1326");
        java.beans.PropertyDescriptor[] propertyDescriptorArray0 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray3 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray0, false, true);
        java.lang.Class[] classArray4 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray0);
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray0, false, true);
        java.lang.Class<?> wildcardClass8 = propertyDescriptorArray0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo9 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass8);
        org.junit.Assert.assertNotNull(propertyDescriptorArray0);
        org.junit.Assert.assertNotNull(methodArray3);
        org.junit.Assert.assertNotNull(classArray4);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classInfo9);
    }

    @Test
    public void test1327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1327");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.lang.String[] strArray23 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray24 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray25 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray24);
        java.lang.String[] strArray26 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray27 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray26, methodArray27);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray28);
        java.lang.String[] strArray30 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray31 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray32 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray31);
        java.lang.String[] strArray33 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray34 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray33, methodArray34);
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray35);
        java.lang.reflect.Method[] methodArray37 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray36);
        java.lang.String[] strArray38 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray39 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray40 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray38, methodArray39);
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray40);
        java.lang.Object obj42 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) strArray23);
        org.mockito.asm.Type[] typeArray43 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        java.lang.Object[] objArray44 = null;
        java.lang.Object obj45 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, objArray44);
        org.mockito.cglib.core.MethodInfo methodInfo47 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21, (int) '4');
        org.mockito.cglib.core.Signature signature48 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor21);
        org.mockito.cglib.core.Signature signature49 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor21);
        org.mockito.asm.Type[] typeArray50 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        java.lang.Class<?> wildcardClass51 = typeArray50.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray52 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass51);
        org.mockito.cglib.core.ClassInfo classInfo53 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(methodInfo47);
        org.junit.Assert.assertNotNull(signature48);
        org.junit.Assert.assertNotNull(signature49);
        org.junit.Assert.assertNotNull(typeArray50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(propertyDescriptorArray52);
        org.junit.Assert.assertNotNull(classInfo53);
    }

    @Test
    public void test1328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1328");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        java.lang.Object obj2 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.beans.PropertyDescriptor[] propertyDescriptorArray3 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray3, false, true);
        java.lang.Class[] classArray7 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray3);
        java.lang.Class[] classArray8 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray7);
        java.lang.String[] strArray9 = org.mockito.cglib.core.ReflectUtils.getNames(classArray8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.Object obj13 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray8, (java.lang.Object[]) strArray10);
        java.lang.Object obj14 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.beans.PropertyDescriptor[] propertyDescriptorArray15 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray15, false, true);
        java.lang.Class[] classArray19 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray15);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray19);
        java.lang.String[] strArray21 = org.mockito.cglib.core.ReflectUtils.getNames(classArray19);
        java.lang.reflect.Constructor constructor22 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray19);
        java.lang.String[] strArray23 = org.mockito.cglib.core.ReflectUtils.getNames(classArray19);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(propertyDescriptorArray3);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(classArray7);
        org.junit.Assert.assertNotNull(classArray8);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(propertyDescriptorArray15);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(classArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(constructor22);
        org.junit.Assert.assertNotNull(strArray23);
    }

    @Test
    public void test1329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1329");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.beans.PropertyDescriptor[] propertyDescriptorArray5 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray8 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray5, false, true);
        java.lang.Class[] classArray9 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray5);
        int int10 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray9);
        java.lang.String[] strArray11 = org.mockito.cglib.core.ReflectUtils.getNames(classArray9);
        java.lang.String[] strArray12 = org.mockito.cglib.core.ReflectUtils.getNames(classArray9);
        java.lang.String[] strArray13 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray14 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray15 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray13, methodArray14);
        java.lang.String[] strArray16 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray17 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray16, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray13, methodArray18);
        java.lang.String[] strArray20 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray21 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray22 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray20, methodArray21);
        java.lang.String[] strArray23 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray24 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray25 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray24);
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray20, methodArray25);
        java.lang.reflect.Method[] methodArray27 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray13, methodArray26);
        java.lang.Object obj28 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray9, (java.lang.Object[]) methodArray27);
        java.lang.Class[] classArray29 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray9);
        int int30 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray29);
        java.lang.Class[] classArray31 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray29);
        java.lang.String[] strArray32 = org.mockito.cglib.core.ReflectUtils.getNames(classArray31);
        java.beans.PropertyDescriptor[] propertyDescriptorArray33 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray33, true, true);
        java.lang.reflect.Method[] methodArray39 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray33, false, true);
        java.lang.Class[] classArray40 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray33);
        java.lang.String[] strArray41 = org.mockito.cglib.core.ReflectUtils.getNames(classArray40);
        int int42 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray40);
        java.lang.String[] strArray43 = org.mockito.cglib.core.ReflectUtils.getNames(classArray40);
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray46 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray49 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray46, false, true);
        java.lang.Class[] classArray50 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray49);
        java.lang.Object[] objArray51 = null;
        java.lang.Object obj52 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass45, classArray50, objArray51);
        java.lang.String[] strArray53 = org.mockito.cglib.core.ReflectUtils.getNames(classArray50);
        java.lang.String[] strArray54 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray55 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray56 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray54, methodArray55);
        java.lang.String[] strArray57 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray58 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray59 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray57, methodArray58);
        java.lang.reflect.Method[] methodArray60 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray54, methodArray59);
        java.lang.String[] strArray61 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray62 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray63 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray61, methodArray62);
        java.lang.String[] strArray64 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray65 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray66 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray64, methodArray65);
        java.lang.reflect.Method[] methodArray67 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray61, methodArray66);
        java.lang.reflect.Method[] methodArray68 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray54, methodArray67);
        java.lang.Class[] classArray69 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray67);
        java.lang.Class[] classArray70 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray67);
        java.lang.reflect.Method[] methodArray71 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray53, methodArray67);
        java.lang.reflect.Method[] methodArray72 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray43, methodArray67);
        java.beans.PropertyDescriptor[] propertyDescriptorArray73 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray76 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray73, false, true);
        java.lang.Class[] classArray77 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray76);
        java.lang.String[] strArray78 = org.mockito.cglib.core.ReflectUtils.getNames(classArray77);
        java.beans.PropertyDescriptor[] propertyDescriptorArray79 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray82 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray79, false, true);
        java.lang.Class[] classArray83 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray79);
        java.lang.Class[] classArray84 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray83);
        java.lang.String[] strArray85 = org.mockito.cglib.core.ReflectUtils.getNames(classArray83);
        java.lang.Class<?> wildcardClass86 = classArray83.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray87 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass86);
        java.beans.PropertyDescriptor[] propertyDescriptorArray88 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass86);
        java.lang.reflect.Method[] methodArray91 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray88, false, false);
        java.lang.reflect.Method[] methodArray92 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray78, methodArray91);
        java.lang.reflect.Method[] methodArray93 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray43, methodArray92);
        java.lang.reflect.Method[] methodArray94 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray32, methodArray93);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(propertyDescriptorArray5);
        org.junit.Assert.assertNotNull(methodArray8);
        org.junit.Assert.assertNotNull(classArray9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(methodArray15);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(methodArray21);
        org.junit.Assert.assertNotNull(methodArray22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(classArray29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(propertyDescriptorArray33);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(classArray40);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(propertyDescriptorArray46);
        org.junit.Assert.assertNotNull(methodArray49);
        org.junit.Assert.assertNotNull(classArray50);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(methodArray55);
        org.junit.Assert.assertNotNull(methodArray56);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(methodArray58);
        org.junit.Assert.assertNotNull(methodArray59);
        org.junit.Assert.assertNotNull(methodArray60);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(methodArray62);
        org.junit.Assert.assertNotNull(methodArray63);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(methodArray65);
        org.junit.Assert.assertNotNull(methodArray66);
        org.junit.Assert.assertNotNull(methodArray67);
        org.junit.Assert.assertNotNull(methodArray68);
        org.junit.Assert.assertNotNull(classArray69);
        org.junit.Assert.assertNotNull(classArray70);
        org.junit.Assert.assertNotNull(methodArray71);
        org.junit.Assert.assertNotNull(methodArray72);
        org.junit.Assert.assertNotNull(propertyDescriptorArray73);
        org.junit.Assert.assertNotNull(methodArray76);
        org.junit.Assert.assertNotNull(classArray77);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertNotNull(propertyDescriptorArray79);
        org.junit.Assert.assertNotNull(methodArray82);
        org.junit.Assert.assertNotNull(classArray83);
        org.junit.Assert.assertNotNull(classArray84);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(propertyDescriptorArray87);
        org.junit.Assert.assertNotNull(propertyDescriptorArray88);
        org.junit.Assert.assertNotNull(methodArray91);
        org.junit.Assert.assertNotNull(methodArray92);
        org.junit.Assert.assertNotNull(methodArray93);
        org.junit.Assert.assertNotNull(methodArray94);
    }

    @Test
    public void test1330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1330");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.lang.Object obj3 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        org.mockito.cglib.core.ClassInfo classInfo4 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list5 = null;
        java.util.List list6 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray9 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray9, false, true);
        java.lang.Class[] classArray13 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray12);
        java.lang.Object[] objArray14 = null;
        java.lang.Object obj15 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass8, classArray13, objArray14);
        java.lang.Class[] classArray16 = null;
        java.lang.reflect.Constructor constructor17 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass8, classArray16);
        java.lang.Class[] classArray18 = null;
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        org.mockito.cglib.core.ClassInfo classInfo21 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass20);
        java.util.List list22 = null;
        java.util.List list23 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass20, list22);
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        org.mockito.cglib.core.ClassInfo classInfo26 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass25);
        java.util.List list27 = null;
        java.util.List list28 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass25, list27);
        java.lang.String[] strArray29 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray30 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray31 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray29, methodArray30);
        java.lang.String[] strArray32 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray33 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray32, methodArray33);
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray29, methodArray34);
        java.lang.String[] strArray36 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray37 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray38 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray37);
        java.lang.String[] strArray39 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray40 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray39, methodArray40);
        java.lang.reflect.Method[] methodArray42 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray41);
        java.lang.reflect.Method[] methodArray43 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray29, methodArray42);
        java.lang.Class[] classArray44 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray42);
        java.lang.reflect.Constructor constructor45 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass25, classArray44);
        java.lang.Class[] classArray46 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray44);
        java.lang.String[] strArray47 = org.mockito.cglib.core.ReflectUtils.getNames(classArray46);
        java.lang.reflect.Constructor constructor48 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass20, classArray46);
        int int49 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray46);
        java.lang.Object obj50 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass8, classArray18, (java.lang.Object[]) classArray46);
        java.beans.PropertyDescriptor[] propertyDescriptorArray51 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray54 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray51, false, true);
        java.lang.Class[] classArray55 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray51);
        java.lang.Object obj56 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray46, (java.lang.Object[]) classArray55);
        java.util.List list57 = null;
        java.util.List list58 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list57);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(classInfo4);
        org.junit.Assert.assertNull(list6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(propertyDescriptorArray9);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(classArray13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(constructor17);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(classInfo21);
        org.junit.Assert.assertNull(list23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(classInfo26);
        org.junit.Assert.assertNull(list28);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(methodArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(methodArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(methodArray38);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(methodArray42);
        org.junit.Assert.assertNotNull(methodArray43);
        org.junit.Assert.assertNotNull(classArray44);
        org.junit.Assert.assertNotNull(constructor45);
        org.junit.Assert.assertNotNull(classArray46);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(constructor48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(propertyDescriptorArray51);
        org.junit.Assert.assertNotNull(methodArray54);
        org.junit.Assert.assertNotNull(classArray55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNull(list58);
    }

    @Test
    public void test1331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1331");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray1 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray2 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray1);
        java.lang.String[] strArray3 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray4 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray3, methodArray4);
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray5);
        java.lang.String[] strArray7 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray8 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray9 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.reflect.Method[] methodArray13 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray12);
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray17);
        java.lang.Class<?> wildcardClass19 = methodArray17.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray20 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass19);
        java.beans.PropertyDescriptor[] propertyDescriptorArray21 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass19);
        java.beans.PropertyDescriptor[] propertyDescriptorArray22 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass19);
        java.beans.PropertyDescriptor[] propertyDescriptorArray23 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass19);
        java.util.List list24 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List list25 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass19, list24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(methodArray1);
        org.junit.Assert.assertNotNull(methodArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(methodArray4);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(methodArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(propertyDescriptorArray20);
        org.junit.Assert.assertNotNull(propertyDescriptorArray21);
        org.junit.Assert.assertNotNull(propertyDescriptorArray22);
        org.junit.Assert.assertNotNull(propertyDescriptorArray23);
    }

    @Test
    public void test1332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1332");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray1 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray2 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray1);
        java.lang.String[] strArray3 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray4 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray3, methodArray4);
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray5);
        java.lang.String[] strArray7 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray8 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray9 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.reflect.Method[] methodArray13 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray12);
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray13);
        java.lang.Class[] classArray15 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray13);
        java.lang.Class<?> wildcardClass16 = methodArray13.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method17 = org.mockito.cglib.core.ReflectUtils.findInterfaceMethod((java.lang.Class) wildcardClass16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: class [Ljava.lang.reflect.Method; is not an interface");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(methodArray1);
        org.junit.Assert.assertNotNull(methodArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(methodArray4);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(methodArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(classArray15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1333");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.beans.PropertyDescriptor[] propertyDescriptorArray23 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray23, false, true);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray23, false, false);
        java.lang.Object obj30 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) methodArray29);
        java.beans.PropertyDescriptor[] propertyDescriptorArray31 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray31, true, true);
        java.lang.Object obj35 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) propertyDescriptorArray31);
        org.mockito.asm.Type[] typeArray36 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        java.lang.String[] strArray37 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray38 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray39 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray37, methodArray38);
        java.lang.String[] strArray40 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray41 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray42 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray40, methodArray41);
        java.lang.reflect.Method[] methodArray43 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray37, methodArray42);
        java.lang.String[] strArray44 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray45 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray46 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray44, methodArray45);
        java.lang.String[] strArray47 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray48 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray49 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray47, methodArray48);
        java.lang.reflect.Method[] methodArray50 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray44, methodArray49);
        java.lang.reflect.Method[] methodArray51 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray37, methodArray50);
        java.lang.String[] strArray52 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray53 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray54 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray52, methodArray53);
        java.lang.String[] strArray55 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray56 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray57 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray55, methodArray56);
        java.lang.String[] strArray58 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray59 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray60 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray58, methodArray59);
        java.lang.String[] strArray61 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray62 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray63 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray61, methodArray62);
        java.lang.reflect.Method[] methodArray64 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray58, methodArray63);
        java.lang.reflect.Method[] methodArray65 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray55, methodArray64);
        java.lang.reflect.Method[] methodArray66 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray52, methodArray65);
        java.lang.reflect.Method[] methodArray67 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray37, methodArray65);
        java.lang.Object obj68 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) methodArray65);
        org.mockito.asm.Type[] typeArray69 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        org.mockito.cglib.core.MethodInfo methodInfo71 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21, (int) ' ');
        java.beans.PropertyDescriptor[] propertyDescriptorArray72 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray75 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray72, false, true);
        java.lang.Class[] classArray76 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray72);
        java.lang.Class[] classArray77 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray76);
        java.lang.String[] strArray78 = org.mockito.cglib.core.ReflectUtils.getNames(classArray76);
        java.lang.Class<?> wildcardClass79 = classArray76.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray80 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass79);
        java.beans.PropertyDescriptor[] propertyDescriptorArray81 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass79);
        java.beans.PropertyDescriptor[] propertyDescriptorArray82 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass79);
        java.lang.Object obj83 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) propertyDescriptorArray82);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(propertyDescriptorArray23);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(propertyDescriptorArray31);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(methodArray38);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(methodArray42);
        org.junit.Assert.assertNotNull(methodArray43);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(methodArray45);
        org.junit.Assert.assertNotNull(methodArray46);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(methodArray48);
        org.junit.Assert.assertNotNull(methodArray49);
        org.junit.Assert.assertNotNull(methodArray50);
        org.junit.Assert.assertNotNull(methodArray51);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(methodArray53);
        org.junit.Assert.assertNotNull(methodArray54);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(methodArray56);
        org.junit.Assert.assertNotNull(methodArray57);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(methodArray59);
        org.junit.Assert.assertNotNull(methodArray60);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(methodArray62);
        org.junit.Assert.assertNotNull(methodArray63);
        org.junit.Assert.assertNotNull(methodArray64);
        org.junit.Assert.assertNotNull(methodArray65);
        org.junit.Assert.assertNotNull(methodArray66);
        org.junit.Assert.assertNotNull(methodArray67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(typeArray69);
        org.junit.Assert.assertNotNull(methodInfo71);
        org.junit.Assert.assertNotNull(propertyDescriptorArray72);
        org.junit.Assert.assertNotNull(methodArray75);
        org.junit.Assert.assertNotNull(classArray76);
        org.junit.Assert.assertNotNull(classArray77);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(propertyDescriptorArray80);
        org.junit.Assert.assertNotNull(propertyDescriptorArray81);
        org.junit.Assert.assertNotNull(propertyDescriptorArray82);
        org.junit.Assert.assertNotNull(obj83);
    }

    @Test
    public void test1334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1334");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.lang.Object obj3 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.beans.PropertyDescriptor[] propertyDescriptorArray4 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray4, false, true);
        java.lang.Class[] classArray8 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray4);
        java.lang.Class[] classArray9 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray8);
        java.lang.String[] strArray10 = org.mockito.cglib.core.ReflectUtils.getNames(classArray9);
        java.lang.reflect.Constructor constructor11 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray9);
        java.lang.Object obj12 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        org.mockito.cglib.core.ClassInfo classInfo13 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list14 = null;
        java.util.List list15 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list14);
        org.mockito.cglib.core.ClassInfo classInfo16 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List list18 = org.mockito.cglib.core.ReflectUtils.addAllMethods((java.lang.Class) wildcardClass1, list17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(propertyDescriptorArray4);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(classArray8);
        org.junit.Assert.assertNotNull(classArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(constructor11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(classInfo13);
        org.junit.Assert.assertNull(list15);
        org.junit.Assert.assertNotNull(classInfo16);
    }

    @Test
    public void test1335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1335");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.beans.PropertyDescriptor[] propertyDescriptorArray23 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray23, false, true);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray23, false, false);
        java.lang.Object obj30 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) methodArray29);
        java.beans.PropertyDescriptor[] propertyDescriptorArray31 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray31, true, true);
        java.lang.Object obj35 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) propertyDescriptorArray31);
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray38 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray38, false, true);
        java.lang.Class[] classArray42 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray41);
        java.lang.Object[] objArray43 = null;
        java.lang.Object obj44 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass37, classArray42, objArray43);
        java.lang.String[] strArray45 = org.mockito.cglib.core.ReflectUtils.getNames(classArray42);
        int int46 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray42);
        java.lang.Class[] classArray47 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray42);
        java.lang.Object obj48 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) classArray42);
        org.mockito.cglib.core.MethodInfo methodInfo50 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21, (-1));
        org.mockito.asm.Type[] typeArray51 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        java.lang.String[] strArray52 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray53 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray54 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray52, methodArray53);
        java.lang.String[] strArray55 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray56 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray57 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray55, methodArray56);
        java.lang.reflect.Method[] methodArray58 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray52, methodArray57);
        java.lang.String[] strArray59 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray60 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray61 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray59, methodArray60);
        java.lang.String[] strArray62 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray63 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray64 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray62, methodArray63);
        java.lang.reflect.Method[] methodArray65 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray59, methodArray64);
        java.lang.reflect.Method[] methodArray66 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray52, methodArray65);
        java.lang.String[] strArray67 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray68 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray69 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray67, methodArray68);
        java.lang.reflect.Method[] methodArray70 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray52, methodArray69);
        java.lang.Class<?> wildcardClass71 = methodArray70.getClass();
        org.mockito.cglib.core.ClassInfo classInfo72 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass71);
        java.beans.PropertyDescriptor[] propertyDescriptorArray73 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass71);
        java.lang.reflect.Method[] methodArray76 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray73, false, true);
        java.lang.reflect.Method[] methodArray79 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray73, true, false);
        java.lang.Object obj80 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) propertyDescriptorArray73);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(propertyDescriptorArray23);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(propertyDescriptorArray31);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(propertyDescriptorArray38);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(classArray42);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(classArray47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(methodInfo50);
        org.junit.Assert.assertNotNull(typeArray51);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(methodArray53);
        org.junit.Assert.assertNotNull(methodArray54);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(methodArray56);
        org.junit.Assert.assertNotNull(methodArray57);
        org.junit.Assert.assertNotNull(methodArray58);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(methodArray60);
        org.junit.Assert.assertNotNull(methodArray61);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(methodArray63);
        org.junit.Assert.assertNotNull(methodArray64);
        org.junit.Assert.assertNotNull(methodArray65);
        org.junit.Assert.assertNotNull(methodArray66);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(methodArray68);
        org.junit.Assert.assertNotNull(methodArray69);
        org.junit.Assert.assertNotNull(methodArray70);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(classInfo72);
        org.junit.Assert.assertNotNull(propertyDescriptorArray73);
        org.junit.Assert.assertNotNull(methodArray76);
        org.junit.Assert.assertNotNull(methodArray79);
        org.junit.Assert.assertNotNull(obj80);
    }

    @Test
    public void test1336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1336");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        org.mockito.asm.Type[] typeArray23 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        org.mockito.cglib.core.Signature signature24 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor21);
        org.mockito.cglib.core.Signature signature25 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor21);
        org.mockito.cglib.core.MethodInfo methodInfo27 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21, (int) (byte) 10);
        org.mockito.cglib.core.Signature signature28 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor21);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(typeArray23);
        org.junit.Assert.assertNotNull(signature24);
        org.junit.Assert.assertNotNull(signature25);
        org.junit.Assert.assertNotNull(methodInfo27);
        org.junit.Assert.assertNotNull(signature28);
    }

    @Test
    public void test1337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1337");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.lang.String[] strArray23 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray24 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray25 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray24);
        java.lang.String[] strArray26 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray27 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray26, methodArray27);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray28);
        java.lang.String[] strArray30 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray31 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray32 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray31);
        java.lang.String[] strArray33 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray34 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray33, methodArray34);
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray35);
        java.lang.reflect.Method[] methodArray37 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray36);
        java.lang.String[] strArray38 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray39 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray40 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray38, methodArray39);
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray40);
        java.lang.Object obj42 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) strArray23);
        org.mockito.asm.Type[] typeArray43 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        java.lang.Object[] objArray44 = null;
        java.lang.Object obj45 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, objArray44);
        org.mockito.cglib.core.MethodInfo methodInfo47 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21, 10);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(methodInfo47);
    }

    @Test
    public void test1338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1338");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.lang.String[] strArray23 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray24 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray25 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray24);
        java.lang.String[] strArray26 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray27 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray26, methodArray27);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray28);
        java.lang.String[] strArray30 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray31 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray32 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray31);
        java.lang.String[] strArray33 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray34 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray33, methodArray34);
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray35);
        java.lang.reflect.Method[] methodArray37 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray36);
        java.lang.String[] strArray38 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray39 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray40 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray38, methodArray39);
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray40);
        java.lang.Object obj42 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) strArray23);
        org.mockito.cglib.core.MethodInfo methodInfo43 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.lang.Object[] objArray44 = new java.lang.Object[] {};
        java.lang.Object obj45 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, objArray44);
        org.mockito.cglib.core.Signature signature46 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor21);
        org.mockito.asm.Type[] typeArray47 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        java.lang.Class[] classArray48 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) typeArray47);
        int int49 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray48);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(methodInfo43);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[]");
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(signature46);
        org.junit.Assert.assertNotNull(typeArray47);
        org.junit.Assert.assertNotNull(classArray48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
    }

    @Test
    public void test1339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1339");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray1 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray2 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray1);
        java.lang.String[] strArray3 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray4 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray3, methodArray4);
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        org.mockito.cglib.core.ClassInfo classInfo9 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass8);
        java.beans.PropertyDescriptor[] propertyDescriptorArray11 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray11, false, true);
        java.lang.Class[] classArray15 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray11);
        java.lang.Class[] classArray16 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray15);
        java.lang.String[] strArray17 = org.mockito.cglib.core.ReflectUtils.getNames(classArray16);
        java.lang.reflect.Constructor constructor18 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass8, classArray16);
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        org.mockito.cglib.core.ClassInfo classInfo21 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass20);
        java.lang.Object obj22 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass20);
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        org.mockito.cglib.core.ClassInfo classInfo25 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass24);
        java.util.List list26 = null;
        java.util.List list27 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass24, list26);
        java.lang.String[] strArray28 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray29 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray30 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray28, methodArray29);
        java.lang.String[] strArray31 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray32 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray33 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray31, methodArray32);
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray28, methodArray33);
        java.lang.String[] strArray35 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray36 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray37 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray35, methodArray36);
        java.lang.String[] strArray38 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray39 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray40 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray38, methodArray39);
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray35, methodArray40);
        java.lang.reflect.Method[] methodArray42 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray28, methodArray41);
        java.lang.Class[] classArray43 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray41);
        java.lang.reflect.Constructor constructor44 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass24, classArray43);
        java.lang.Class[] classArray45 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray43);
        java.lang.reflect.Constructor constructor46 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass20, classArray45);
        int int47 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray45);
        java.lang.String[] strArray48 = org.mockito.cglib.core.ReflectUtils.getNames(classArray45);
        int int49 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray45);
        java.beans.PropertyDescriptor[] propertyDescriptorArray50 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray53 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray50, false, true);
        java.lang.Class[] classArray54 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray50);
        java.lang.Class[] classArray55 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray54);
        java.lang.Class<?> wildcardClass56 = classArray55.getClass();
        org.mockito.cglib.core.ClassInfo classInfo57 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass56);
        java.beans.PropertyDescriptor[] propertyDescriptorArray58 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass56);
        java.beans.PropertyDescriptor[] propertyDescriptorArray59 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass56);
        java.lang.reflect.Method[] methodArray62 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray59, true, true);
        java.lang.Class<?> wildcardClass63 = propertyDescriptorArray59.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray64 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass63);
        java.lang.reflect.Method[] methodArray67 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray64, false, false);
        java.lang.Object obj68 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass8, classArray45, (java.lang.Object[]) methodArray67);
        java.lang.Class[] classArray69 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray67);
        java.lang.reflect.Method[] methodArray70 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray67);
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(methodArray1);
        org.junit.Assert.assertNotNull(methodArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(methodArray4);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classInfo9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(propertyDescriptorArray11);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(classArray15);
        org.junit.Assert.assertNotNull(classArray16);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(constructor18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(classInfo21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(classInfo25);
        org.junit.Assert.assertNull(list27);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(methodArray30);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(methodArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(methodArray42);
        org.junit.Assert.assertNotNull(classArray43);
        org.junit.Assert.assertNotNull(constructor44);
        org.junit.Assert.assertNotNull(classArray45);
        org.junit.Assert.assertNotNull(constructor46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(propertyDescriptorArray50);
        org.junit.Assert.assertNotNull(methodArray53);
        org.junit.Assert.assertNotNull(classArray54);
        org.junit.Assert.assertNotNull(classArray55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(classInfo57);
        org.junit.Assert.assertNotNull(propertyDescriptorArray58);
        org.junit.Assert.assertNotNull(propertyDescriptorArray59);
        org.junit.Assert.assertNotNull(methodArray62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(propertyDescriptorArray64);
        org.junit.Assert.assertNotNull(methodArray67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(classArray69);
        org.junit.Assert.assertNotNull(methodArray70);
    }

    @Test
    public void test1340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1340");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        java.util.List list2 = null;
        java.util.List list3 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list2);
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        org.mockito.cglib.core.ClassInfo classInfo6 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass5);
        java.beans.PropertyDescriptor[] propertyDescriptorArray8 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray8, false, true);
        java.lang.Class[] classArray12 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray8);
        java.lang.Class[] classArray13 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray12);
        java.lang.String[] strArray14 = org.mockito.cglib.core.ReflectUtils.getNames(classArray13);
        java.lang.reflect.Constructor constructor15 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass5, classArray13);
        org.mockito.cglib.core.MethodInfo methodInfo16 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor15);
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray19 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray22 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray19, false, true);
        java.lang.Class[] classArray23 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray22);
        java.lang.Object[] objArray24 = null;
        java.lang.Object obj25 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass18, classArray23, objArray24);
        java.lang.Object obj26 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor15, (java.lang.Object[]) classArray23);
        java.lang.String[] strArray27 = org.mockito.cglib.core.ReflectUtils.getNames(classArray23);
        java.lang.reflect.Constructor constructor28 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray23);
        java.lang.Object obj29 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray32 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray32, false, true);
        java.lang.Class[] classArray36 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray35);
        java.lang.Object[] objArray37 = null;
        java.lang.Object obj38 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass31, classArray36, objArray37);
        java.lang.Class[] classArray39 = null;
        java.lang.reflect.Constructor constructor40 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass31, classArray39);
        java.lang.Object obj41 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass31);
        java.lang.Class[] classArray42 = null;
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        org.mockito.cglib.core.ClassInfo classInfo45 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass44);
        java.util.List list46 = null;
        java.util.List list47 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass44, list46);
        java.lang.String[] strArray48 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray49 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray50 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray48, methodArray49);
        java.lang.String[] strArray51 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray52 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray53 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray51, methodArray52);
        java.lang.reflect.Method[] methodArray54 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray48, methodArray53);
        java.lang.String[] strArray55 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray56 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray57 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray55, methodArray56);
        java.lang.String[] strArray58 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray59 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray60 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray58, methodArray59);
        java.lang.reflect.Method[] methodArray61 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray55, methodArray60);
        java.lang.reflect.Method[] methodArray62 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray48, methodArray61);
        java.lang.Class[] classArray63 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray61);
        java.lang.reflect.Constructor constructor64 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass44, classArray63);
        java.lang.Class[] classArray65 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray63);
        java.lang.Object obj66 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass31, classArray42, (java.lang.Object[]) classArray65);
        java.beans.PropertyDescriptor[] propertyDescriptorArray67 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray70 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray67, false, true);
        java.lang.Class[] classArray71 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray67);
        java.lang.Class[] classArray72 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray71);
        java.lang.String[] strArray73 = org.mockito.cglib.core.ReflectUtils.getNames(classArray71);
        java.lang.String[] strArray74 = org.mockito.cglib.core.ReflectUtils.getNames(classArray71);
        java.lang.Class[] classArray75 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray71);
        java.lang.reflect.Constructor constructor76 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass31, classArray75);
        java.lang.String[] strArray77 = org.mockito.cglib.core.ReflectUtils.getNames(classArray75);
        java.lang.reflect.Constructor constructor78 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray75);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNull(list3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(classInfo6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(propertyDescriptorArray8);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(classArray13);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(constructor15);
        org.junit.Assert.assertNotNull(methodInfo16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(propertyDescriptorArray19);
        org.junit.Assert.assertNotNull(methodArray22);
        org.junit.Assert.assertNotNull(classArray23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(constructor28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(propertyDescriptorArray32);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(classArray36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(constructor40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(classInfo45);
        org.junit.Assert.assertNull(list47);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(methodArray49);
        org.junit.Assert.assertNotNull(methodArray50);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(methodArray52);
        org.junit.Assert.assertNotNull(methodArray53);
        org.junit.Assert.assertNotNull(methodArray54);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(methodArray56);
        org.junit.Assert.assertNotNull(methodArray57);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(methodArray59);
        org.junit.Assert.assertNotNull(methodArray60);
        org.junit.Assert.assertNotNull(methodArray61);
        org.junit.Assert.assertNotNull(methodArray62);
        org.junit.Assert.assertNotNull(classArray63);
        org.junit.Assert.assertNotNull(constructor64);
        org.junit.Assert.assertNotNull(classArray65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(propertyDescriptorArray67);
        org.junit.Assert.assertNotNull(methodArray70);
        org.junit.Assert.assertNotNull(classArray71);
        org.junit.Assert.assertNotNull(classArray72);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertNotNull(classArray75);
        org.junit.Assert.assertNotNull(constructor76);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(constructor78);
    }

    @Test
    public void test1341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1341");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray2 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray2, false, true);
        java.lang.Class[] classArray6 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray5);
        java.lang.Object[] objArray7 = null;
        java.lang.Object obj8 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray6, objArray7);
        java.lang.Class[] classArray9 = null;
        java.lang.reflect.Constructor constructor10 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray9);
        java.lang.Class[] classArray11 = null;
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        org.mockito.cglib.core.ClassInfo classInfo14 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass13);
        java.util.List list15 = null;
        java.util.List list16 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass13, list15);
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        org.mockito.cglib.core.ClassInfo classInfo19 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass18);
        java.util.List list20 = null;
        java.util.List list21 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass18, list20);
        java.lang.String[] strArray22 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray23 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray24 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray22, methodArray23);
        java.lang.String[] strArray25 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray26 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray27 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray25, methodArray26);
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray22, methodArray27);
        java.lang.String[] strArray29 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray30 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray31 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray29, methodArray30);
        java.lang.String[] strArray32 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray33 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray32, methodArray33);
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray29, methodArray34);
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray22, methodArray35);
        java.lang.Class[] classArray37 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray35);
        java.lang.reflect.Constructor constructor38 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass18, classArray37);
        java.lang.Class[] classArray39 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray37);
        java.lang.String[] strArray40 = org.mockito.cglib.core.ReflectUtils.getNames(classArray39);
        java.lang.reflect.Constructor constructor41 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass13, classArray39);
        int int42 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray39);
        java.lang.Object obj43 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray11, (java.lang.Object[]) classArray39);
        // The following exception was thrown during execution in test generation
        try {
            java.beans.PropertyDescriptor[] propertyDescriptorArray44 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass1);
            org.junit.Assert.fail("Expected exception of type org.mockito.cglib.core.CodeGenerationException; message: java.beans.IntrospectionException-->java.lang.Object not superclass of java.lang.Object");
        } catch (org.mockito.cglib.core.CodeGenerationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(propertyDescriptorArray2);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(classArray6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(constructor10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(classInfo14);
        org.junit.Assert.assertNull(list16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(classInfo19);
        org.junit.Assert.assertNull(list21);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(methodArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(methodArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(methodArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(classArray37);
        org.junit.Assert.assertNotNull(constructor38);
        org.junit.Assert.assertNotNull(classArray39);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(constructor41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(obj43);
    }

    @Test
    public void test1342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1342");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.lang.String[] strArray23 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray24 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray25 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray24);
        java.lang.String[] strArray26 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray27 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray26, methodArray27);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray28);
        java.lang.String[] strArray30 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray31 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray32 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray31);
        java.lang.String[] strArray33 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray34 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray33, methodArray34);
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray35);
        java.lang.reflect.Method[] methodArray37 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray36);
        java.lang.String[] strArray38 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray39 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray40 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray38, methodArray39);
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray40);
        java.lang.Object obj42 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) strArray23);
        org.mockito.cglib.core.MethodInfo methodInfo43 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        org.mockito.asm.Type[] typeArray44 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        java.lang.Class<?> wildcardClass45 = typeArray44.getClass();
        org.mockito.cglib.core.ClassInfo classInfo46 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(methodInfo43);
        org.junit.Assert.assertNotNull(typeArray44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(classInfo46);
    }

    @Test
    public void test1343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1343");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.lang.Object obj3 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        org.mockito.cglib.core.ClassInfo classInfo6 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass5);
        java.util.List list7 = null;
        java.util.List list8 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass5, list7);
        java.lang.String[] strArray9 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray10 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray9, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.reflect.Method[] methodArray15 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray9, methodArray14);
        java.lang.String[] strArray16 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray17 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray16, methodArray17);
        java.lang.String[] strArray19 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray20 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray21 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray19, methodArray20);
        java.lang.reflect.Method[] methodArray22 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray16, methodArray21);
        java.lang.reflect.Method[] methodArray23 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray9, methodArray22);
        java.lang.Class[] classArray24 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray22);
        java.lang.reflect.Constructor constructor25 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass5, classArray24);
        java.lang.Class[] classArray26 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray24);
        java.lang.reflect.Constructor constructor27 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray26);
        java.lang.Object obj28 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.lang.Object obj29 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        // The following exception was thrown during execution in test generation
        try {
            java.beans.PropertyDescriptor[] propertyDescriptorArray30 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass1);
            org.junit.Assert.fail("Expected exception of type org.mockito.cglib.core.CodeGenerationException; message: java.beans.IntrospectionException-->java.lang.Object not superclass of java.lang.Object");
        } catch (org.mockito.cglib.core.CodeGenerationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(classInfo6);
        org.junit.Assert.assertNull(list8);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(methodArray15);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(methodArray20);
        org.junit.Assert.assertNotNull(methodArray21);
        org.junit.Assert.assertNotNull(methodArray22);
        org.junit.Assert.assertNotNull(methodArray23);
        org.junit.Assert.assertNotNull(classArray24);
        org.junit.Assert.assertNotNull(constructor25);
        org.junit.Assert.assertNotNull(classArray26);
        org.junit.Assert.assertNotNull(constructor27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj29);
    }

    @Test
    public void test1344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1344");
        java.beans.PropertyDescriptor[] propertyDescriptorArray0 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray3 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray0, true, true);
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray0, false, true);
        java.lang.Class[] classArray7 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray0);
        java.lang.String[] strArray8 = org.mockito.cglib.core.ReflectUtils.getNames(classArray7);
        int int9 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray7);
        java.lang.String[] strArray10 = org.mockito.cglib.core.ReflectUtils.getNames(classArray7);
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray13 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray16 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray13, false, true);
        java.lang.Class[] classArray17 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray16);
        java.lang.Object[] objArray18 = null;
        java.lang.Object obj19 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass12, classArray17, objArray18);
        java.lang.String[] strArray20 = org.mockito.cglib.core.ReflectUtils.getNames(classArray17);
        java.lang.String[] strArray21 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray22 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray23 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray21, methodArray22);
        java.lang.String[] strArray24 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray25 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray24, methodArray25);
        java.lang.reflect.Method[] methodArray27 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray21, methodArray26);
        java.lang.String[] strArray28 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray29 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray30 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray28, methodArray29);
        java.lang.String[] strArray31 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray32 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray33 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray31, methodArray32);
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray28, methodArray33);
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray21, methodArray34);
        java.lang.Class[] classArray36 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray34);
        java.lang.Class[] classArray37 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray34);
        java.lang.reflect.Method[] methodArray38 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray20, methodArray34);
        java.lang.reflect.Method[] methodArray39 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray34);
        java.beans.PropertyDescriptor[] propertyDescriptorArray40 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray43 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray40, false, true);
        java.lang.Class[] classArray44 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray40);
        java.lang.Class[] classArray45 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray44);
        java.lang.String[] strArray46 = org.mockito.cglib.core.ReflectUtils.getNames(classArray45);
        java.lang.String[] strArray47 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray48 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray49 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray47, methodArray48);
        java.lang.String[] strArray50 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray51 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray52 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray50, methodArray51);
        java.lang.String[] strArray53 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray54 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray55 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray53, methodArray54);
        java.lang.String[] strArray56 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray57 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray58 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray56, methodArray57);
        java.lang.reflect.Method[] methodArray59 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray53, methodArray58);
        java.lang.reflect.Method[] methodArray60 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray50, methodArray59);
        java.lang.reflect.Method[] methodArray61 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray47, methodArray60);
        java.lang.reflect.Method[] methodArray62 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray46, methodArray60);
        java.beans.PropertyDescriptor[] propertyDescriptorArray63 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray66 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray63, true, true);
        java.lang.reflect.Method[] methodArray67 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray46, methodArray66);
        java.lang.reflect.Method[] methodArray68 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray66);
        org.junit.Assert.assertNotNull(propertyDescriptorArray0);
        org.junit.Assert.assertNotNull(methodArray3);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(classArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(propertyDescriptorArray13);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(classArray17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(methodArray22);
        org.junit.Assert.assertNotNull(methodArray23);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(methodArray30);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(methodArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(classArray36);
        org.junit.Assert.assertNotNull(classArray37);
        org.junit.Assert.assertNotNull(methodArray38);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(propertyDescriptorArray40);
        org.junit.Assert.assertNotNull(methodArray43);
        org.junit.Assert.assertNotNull(classArray44);
        org.junit.Assert.assertNotNull(classArray45);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(methodArray48);
        org.junit.Assert.assertNotNull(methodArray49);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(methodArray51);
        org.junit.Assert.assertNotNull(methodArray52);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(methodArray54);
        org.junit.Assert.assertNotNull(methodArray55);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(methodArray57);
        org.junit.Assert.assertNotNull(methodArray58);
        org.junit.Assert.assertNotNull(methodArray59);
        org.junit.Assert.assertNotNull(methodArray60);
        org.junit.Assert.assertNotNull(methodArray61);
        org.junit.Assert.assertNotNull(methodArray62);
        org.junit.Assert.assertNotNull(propertyDescriptorArray63);
        org.junit.Assert.assertNotNull(methodArray66);
        org.junit.Assert.assertNotNull(methodArray67);
        org.junit.Assert.assertNotNull(methodArray68);
    }

    @Test
    public void test1345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1345");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray2 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray2, false, true);
        java.lang.Class[] classArray6 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray2);
        java.beans.PropertyDescriptor[] propertyDescriptorArray7 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray7, false, true);
        java.lang.Class[] classArray11 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray7);
        int int12 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray11);
        java.lang.String[] strArray13 = org.mockito.cglib.core.ReflectUtils.getNames(classArray11);
        java.lang.String[] strArray14 = org.mockito.cglib.core.ReflectUtils.getNames(classArray11);
        java.lang.Class[] classArray15 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) strArray14);
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        org.mockito.cglib.core.ClassInfo classInfo18 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass17);
        java.util.List list19 = null;
        java.util.List list20 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass17, list19);
        java.beans.PropertyDescriptor[] propertyDescriptorArray21 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray24 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray21, false, true);
        java.lang.Class[] classArray25 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray21);
        int int26 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray25);
        java.lang.String[] strArray27 = org.mockito.cglib.core.ReflectUtils.getNames(classArray25);
        java.lang.String[] strArray28 = org.mockito.cglib.core.ReflectUtils.getNames(classArray25);
        java.lang.String[] strArray29 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray30 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray31 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray29, methodArray30);
        java.lang.String[] strArray32 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray33 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray32, methodArray33);
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray29, methodArray34);
        java.lang.String[] strArray36 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray37 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray38 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray37);
        java.lang.String[] strArray39 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray40 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray39, methodArray40);
        java.lang.reflect.Method[] methodArray42 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray41);
        java.lang.reflect.Method[] methodArray43 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray29, methodArray42);
        java.lang.Object obj44 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass17, classArray25, (java.lang.Object[]) methodArray43);
        java.lang.reflect.Method[] methodArray45 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray14, methodArray43);
        java.lang.Object obj46 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray6, (java.lang.Object[]) strArray14);
        java.lang.String[] strArray47 = org.mockito.cglib.core.ReflectUtils.getNames(classArray6);
        int int48 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray6);
        java.lang.String[] strArray49 = org.mockito.cglib.core.ReflectUtils.getNames(classArray6);
        java.lang.Class<?> wildcardClass50 = classArray6.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray51 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass50);
        org.mockito.cglib.core.ClassInfo classInfo52 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass50);
        java.beans.PropertyDescriptor[] propertyDescriptorArray53 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass50);
        java.beans.PropertyDescriptor[] propertyDescriptorArray54 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(propertyDescriptorArray2);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(classArray6);
        org.junit.Assert.assertNotNull(propertyDescriptorArray7);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(classArray15);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(classInfo18);
        org.junit.Assert.assertNull(list20);
        org.junit.Assert.assertNotNull(propertyDescriptorArray21);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(classArray25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(methodArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(methodArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(methodArray38);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(methodArray42);
        org.junit.Assert.assertNotNull(methodArray43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(methodArray45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(propertyDescriptorArray51);
        org.junit.Assert.assertNotNull(classInfo52);
        org.junit.Assert.assertNotNull(propertyDescriptorArray53);
        org.junit.Assert.assertNotNull(propertyDescriptorArray54);
    }

    @Test
    public void test1346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1346");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.lang.Object obj3 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.beans.PropertyDescriptor[] propertyDescriptorArray4 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray4, false, true);
        java.lang.Class[] classArray8 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray4);
        java.lang.Class[] classArray9 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray8);
        java.lang.String[] strArray10 = org.mockito.cglib.core.ReflectUtils.getNames(classArray9);
        java.lang.reflect.Constructor constructor11 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray9);
        java.lang.Object obj12 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        org.mockito.cglib.core.ClassInfo classInfo13 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list14 = null;
        java.util.List list15 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list14);
        java.lang.Object obj16 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.beans.PropertyDescriptor[] propertyDescriptorArray18 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray21 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray18, true, true);
        java.lang.reflect.Method[] methodArray24 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray18, false, true);
        java.lang.Class[] classArray25 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray18);
        int int26 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray25);
        java.lang.String[] strArray27 = org.mockito.cglib.core.ReflectUtils.getNames(classArray25);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method28 = org.mockito.cglib.core.ReflectUtils.findDeclaredMethod((java.lang.Class) wildcardClass1, "hi!", classArray25);
            org.junit.Assert.fail("Expected exception of type java.lang.NoSuchMethodException; message: hi!");
        } catch (java.lang.NoSuchMethodException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(propertyDescriptorArray4);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(classArray8);
        org.junit.Assert.assertNotNull(classArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(constructor11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(classInfo13);
        org.junit.Assert.assertNull(list15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(propertyDescriptorArray18);
        org.junit.Assert.assertNotNull(methodArray21);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(classArray25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(strArray27);
    }

    @Test
    public void test1347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1347");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        java.lang.Object obj2 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.lang.Object obj3 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.lang.Object obj4 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        org.mockito.cglib.core.ClassInfo classInfo5 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.lang.String[] strArray6 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray7 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray8 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray6, methodArray7);
        java.lang.String[] strArray9 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray10 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray9, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.reflect.Method[] methodArray15 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray9, methodArray14);
        java.lang.reflect.Method[] methodArray16 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray6, methodArray15);
        java.lang.Class[] classArray17 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) strArray6);
        java.beans.PropertyDescriptor[] propertyDescriptorArray18 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray21 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray18, false, true);
        java.lang.reflect.Method[] methodArray24 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray18, false, false);
        java.lang.reflect.Method[] methodArray27 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray18, true, false);
        java.lang.Object obj28 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray17, (java.lang.Object[]) propertyDescriptorArray18);
        java.lang.Object obj29 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method30 = org.mockito.cglib.core.ReflectUtils.findInterfaceMethod((java.lang.Class) wildcardClass1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: class java.lang.Object is not an interface");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(classInfo5);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(methodArray8);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(methodArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(classArray17);
        org.junit.Assert.assertNotNull(propertyDescriptorArray18);
        org.junit.Assert.assertNotNull(methodArray21);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj29);
    }

    @Test
    public void test1348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1348");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray1 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray2 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray1);
        java.lang.String[] strArray3 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray4 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray3, methodArray4);
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray5);
        java.lang.String[] strArray7 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray8 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray9 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.reflect.Method[] methodArray13 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray12);
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray13);
        java.lang.Class<?> wildcardClass15 = methodArray13.getClass();
        org.mockito.cglib.core.ClassInfo classInfo16 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass15);
        java.beans.PropertyDescriptor[] propertyDescriptorArray17 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass15);
        java.beans.PropertyDescriptor[] propertyDescriptorArray18 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass15);
        org.mockito.cglib.core.ClassInfo classInfo19 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass15);
        java.lang.String[] strArray21 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray22 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray23 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray21, methodArray22);
        java.lang.String[] strArray24 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray25 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray24, methodArray25);
        java.lang.reflect.Method[] methodArray27 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray21, methodArray26);
        java.lang.String[] strArray28 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray29 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray30 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray28, methodArray29);
        java.lang.String[] strArray31 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray32 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray33 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray31, methodArray32);
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray28, methodArray33);
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray21, methodArray34);
        java.lang.Class<?> wildcardClass36 = methodArray34.getClass();
        org.mockito.cglib.core.ClassInfo classInfo37 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass36);
        java.beans.PropertyDescriptor[] propertyDescriptorArray38 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass36);
        java.beans.PropertyDescriptor[] propertyDescriptorArray39 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass36);
        java.beans.PropertyDescriptor[] propertyDescriptorArray40 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass36);
        java.lang.Class[] classArray41 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray40);
        java.lang.String[] strArray42 = org.mockito.cglib.core.ReflectUtils.getNames(classArray41);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method43 = org.mockito.cglib.core.ReflectUtils.findDeclaredMethod((java.lang.Class) wildcardClass15, "", classArray41);
            org.junit.Assert.fail("Expected exception of type java.lang.NoSuchMethodException; message: ");
        } catch (java.lang.NoSuchMethodException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(methodArray1);
        org.junit.Assert.assertNotNull(methodArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(methodArray4);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(methodArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(classInfo16);
        org.junit.Assert.assertNotNull(propertyDescriptorArray17);
        org.junit.Assert.assertNotNull(propertyDescriptorArray18);
        org.junit.Assert.assertNotNull(classInfo19);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(methodArray22);
        org.junit.Assert.assertNotNull(methodArray23);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(methodArray30);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(methodArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(classInfo37);
        org.junit.Assert.assertNotNull(propertyDescriptorArray38);
        org.junit.Assert.assertNotNull(propertyDescriptorArray39);
        org.junit.Assert.assertNotNull(propertyDescriptorArray40);
        org.junit.Assert.assertNotNull(classArray41);
        org.junit.Assert.assertNotNull(strArray42);
    }

    @Test
    public void test1349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1349");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.beans.PropertyDescriptor[] propertyDescriptorArray5 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray8 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray5, false, true);
        java.lang.Class[] classArray9 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray5);
        int int10 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray9);
        java.lang.String[] strArray11 = org.mockito.cglib.core.ReflectUtils.getNames(classArray9);
        java.lang.String[] strArray12 = org.mockito.cglib.core.ReflectUtils.getNames(classArray9);
        java.lang.String[] strArray13 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray14 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray15 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray13, methodArray14);
        java.lang.String[] strArray16 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray17 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray16, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray13, methodArray18);
        java.lang.String[] strArray20 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray21 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray22 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray20, methodArray21);
        java.lang.String[] strArray23 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray24 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray25 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray24);
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray20, methodArray25);
        java.lang.reflect.Method[] methodArray27 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray13, methodArray26);
        java.lang.Object obj28 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray9, (java.lang.Object[]) methodArray27);
        java.lang.Class[] classArray29 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray9);
        java.lang.Class<?> wildcardClass30 = classArray29.getClass();
        org.mockito.cglib.core.ClassInfo classInfo31 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass30);
        java.beans.PropertyDescriptor[] propertyDescriptorArray32 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass30);
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray32, true, true);
        java.lang.reflect.Method[] methodArray38 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray32, true, false);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(propertyDescriptorArray5);
        org.junit.Assert.assertNotNull(methodArray8);
        org.junit.Assert.assertNotNull(classArray9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(methodArray15);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(methodArray21);
        org.junit.Assert.assertNotNull(methodArray22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(classArray29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classInfo31);
        org.junit.Assert.assertNotNull(propertyDescriptorArray32);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray38);
    }

    @Test
    public void test1350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1350");
        byte[] byteArray4 = new byte[] { (byte) 1, (byte) 10, (byte) -1 };
        java.lang.ClassLoader classLoader5 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class6 = org.mockito.cglib.core.ReflectUtils.defineClass("hi!", byteArray4, classLoader5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[1, 10, -1]");
    }

    @Test
    public void test1351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1351");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray2 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray2, false, true);
        java.lang.Class[] classArray6 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray5);
        java.lang.Object[] objArray7 = null;
        java.lang.Object obj8 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray6, objArray7);
        java.lang.Class[] classArray9 = null;
        java.lang.reflect.Constructor constructor10 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray9);
        java.lang.Object obj11 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.lang.Class[] classArray12 = null;
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        org.mockito.cglib.core.ClassInfo classInfo15 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass14);
        java.util.List list16 = null;
        java.util.List list17 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass14, list16);
        java.lang.String[] strArray18 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray19 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray20 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray18, methodArray19);
        java.lang.String[] strArray21 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray22 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray23 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray21, methodArray22);
        java.lang.reflect.Method[] methodArray24 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray18, methodArray23);
        java.lang.String[] strArray25 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray26 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray27 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray25, methodArray26);
        java.lang.String[] strArray28 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray29 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray30 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray28, methodArray29);
        java.lang.reflect.Method[] methodArray31 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray25, methodArray30);
        java.lang.reflect.Method[] methodArray32 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray18, methodArray31);
        java.lang.Class[] classArray33 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray31);
        java.lang.reflect.Constructor constructor34 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass14, classArray33);
        java.lang.Class[] classArray35 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray33);
        java.lang.Object obj36 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray12, (java.lang.Object[]) classArray35);
        java.beans.PropertyDescriptor[] propertyDescriptorArray37 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray40 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray37, false, true);
        java.lang.Class[] classArray41 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray37);
        java.lang.Class[] classArray42 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray41);
        java.lang.String[] strArray43 = org.mockito.cglib.core.ReflectUtils.getNames(classArray41);
        java.lang.String[] strArray44 = org.mockito.cglib.core.ReflectUtils.getNames(classArray41);
        java.lang.Class[] classArray45 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray41);
        java.lang.reflect.Constructor constructor46 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray45);
        org.mockito.cglib.core.Signature signature47 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor46);
        java.lang.String[] strArray48 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray49 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray50 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray48, methodArray49);
        java.lang.Class[] classArray51 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) strArray48);
        java.lang.String[] strArray52 = org.mockito.cglib.core.ReflectUtils.getNames(classArray51);
        java.lang.String[] strArray53 = org.mockito.cglib.core.ReflectUtils.getNames(classArray51);
        java.lang.String[] strArray54 = org.mockito.cglib.core.ReflectUtils.getNames(classArray51);
        java.lang.String[] strArray55 = org.mockito.cglib.core.ReflectUtils.getNames(classArray51);
        java.lang.Object obj56 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor46, (java.lang.Object[]) strArray55);
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        org.mockito.cglib.core.ClassInfo classInfo59 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass58);
        java.util.List list60 = null;
        java.util.List list61 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass58, list60);
        java.beans.PropertyDescriptor[] propertyDescriptorArray62 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray65 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray62, false, true);
        java.lang.Class[] classArray66 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray62);
        int int67 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray66);
        java.lang.String[] strArray68 = org.mockito.cglib.core.ReflectUtils.getNames(classArray66);
        java.lang.String[] strArray69 = org.mockito.cglib.core.ReflectUtils.getNames(classArray66);
        java.lang.String[] strArray70 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray71 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray72 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray70, methodArray71);
        java.lang.String[] strArray73 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray74 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray75 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray73, methodArray74);
        java.lang.reflect.Method[] methodArray76 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray70, methodArray75);
        java.lang.String[] strArray77 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray78 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray79 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray77, methodArray78);
        java.lang.String[] strArray80 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray81 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray82 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray80, methodArray81);
        java.lang.reflect.Method[] methodArray83 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray77, methodArray82);
        java.lang.reflect.Method[] methodArray84 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray70, methodArray83);
        java.lang.Object obj85 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass58, classArray66, (java.lang.Object[]) methodArray84);
        java.lang.Class[] classArray86 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray66);
        int int87 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray86);
        int int88 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray86);
        java.lang.Object obj89 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor46, (java.lang.Object[]) classArray86);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(propertyDescriptorArray2);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(classArray6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(constructor10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(classInfo15);
        org.junit.Assert.assertNull(list17);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(methodArray20);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(methodArray22);
        org.junit.Assert.assertNotNull(methodArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(methodArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(constructor34);
        org.junit.Assert.assertNotNull(classArray35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(propertyDescriptorArray37);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(classArray41);
        org.junit.Assert.assertNotNull(classArray42);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(classArray45);
        org.junit.Assert.assertNotNull(constructor46);
        org.junit.Assert.assertNotNull(signature47);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(methodArray49);
        org.junit.Assert.assertNotNull(methodArray50);
        org.junit.Assert.assertNotNull(classArray51);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(classInfo59);
        org.junit.Assert.assertNull(list61);
        org.junit.Assert.assertNotNull(propertyDescriptorArray62);
        org.junit.Assert.assertNotNull(methodArray65);
        org.junit.Assert.assertNotNull(classArray66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertNotNull(methodArray71);
        org.junit.Assert.assertNotNull(methodArray72);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(methodArray74);
        org.junit.Assert.assertNotNull(methodArray75);
        org.junit.Assert.assertNotNull(methodArray76);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(methodArray78);
        org.junit.Assert.assertNotNull(methodArray79);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertNotNull(methodArray81);
        org.junit.Assert.assertNotNull(methodArray82);
        org.junit.Assert.assertNotNull(methodArray83);
        org.junit.Assert.assertNotNull(methodArray84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(classArray86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
        org.junit.Assert.assertNotNull(obj89);
    }

    @Test
    public void test1352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1352");
        java.beans.PropertyDescriptor[] propertyDescriptorArray0 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray3 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray0, false, true);
        java.lang.Class[] classArray4 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray0);
        java.lang.Class[] classArray5 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray4);
        java.lang.String[] strArray6 = org.mockito.cglib.core.ReflectUtils.getNames(classArray4);
        java.lang.Class<?> wildcardClass7 = classArray4.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray8 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass7);
        java.beans.PropertyDescriptor[] propertyDescriptorArray9 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass7);
        java.beans.PropertyDescriptor[] propertyDescriptorArray10 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass7);
        java.beans.PropertyDescriptor[] propertyDescriptorArray11 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass7);
        org.mockito.cglib.core.ClassInfo classInfo12 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass7);
        org.junit.Assert.assertNotNull(propertyDescriptorArray0);
        org.junit.Assert.assertNotNull(methodArray3);
        org.junit.Assert.assertNotNull(classArray4);
        org.junit.Assert.assertNotNull(classArray5);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(propertyDescriptorArray8);
        org.junit.Assert.assertNotNull(propertyDescriptorArray9);
        org.junit.Assert.assertNotNull(propertyDescriptorArray10);
        org.junit.Assert.assertNotNull(propertyDescriptorArray11);
        org.junit.Assert.assertNotNull(classInfo12);
    }

    @Test
    public void test1353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1353");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.lang.String[] strArray23 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray24 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray25 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray24);
        java.lang.String[] strArray26 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray27 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray26, methodArray27);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray28);
        java.lang.String[] strArray30 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray31 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray32 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray31);
        java.lang.String[] strArray33 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray34 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray33, methodArray34);
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray35);
        java.lang.reflect.Method[] methodArray37 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray36);
        java.lang.String[] strArray38 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray39 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray40 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray38, methodArray39);
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray40);
        java.lang.Object obj42 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) strArray23);
        org.mockito.asm.Type[] typeArray43 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        java.lang.Object[] objArray44 = null;
        java.lang.Object obj45 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, objArray44);
        org.mockito.cglib.core.MethodInfo methodInfo46 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.lang.Class<?> wildcardClass47 = constructor21.getClass();
        java.util.List list48 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List list49 = org.mockito.cglib.core.ReflectUtils.addAllMethods((java.lang.Class) wildcardClass47, list48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(methodInfo46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test1354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1354");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.lang.String[] strArray23 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray24 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray25 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray24);
        java.lang.String[] strArray26 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray27 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray26, methodArray27);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray28);
        java.lang.String[] strArray30 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray31 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray32 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray31);
        java.lang.String[] strArray33 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray34 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray33, methodArray34);
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray35);
        java.lang.reflect.Method[] methodArray37 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray36);
        java.lang.String[] strArray38 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray39 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray40 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray38, methodArray39);
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray40);
        java.lang.Object obj42 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) strArray23);
        org.mockito.asm.Type[] typeArray43 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        java.lang.Object[] objArray44 = null;
        java.lang.Object obj45 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, objArray44);
        org.mockito.cglib.core.MethodInfo methodInfo47 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21, (int) '4');
        org.mockito.cglib.core.Signature signature48 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor21);
        org.mockito.cglib.core.Signature signature49 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor21);
        org.mockito.asm.Type[] typeArray50 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        java.lang.Class<?> wildcardClass51 = typeArray50.getClass();
        org.mockito.cglib.core.ClassInfo classInfo52 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass51);
        org.mockito.cglib.core.ClassInfo classInfo53 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass51);
        java.util.List list54 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List list55 = org.mockito.cglib.core.ReflectUtils.addAllMethods((java.lang.Class) wildcardClass51, list54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(methodInfo47);
        org.junit.Assert.assertNotNull(signature48);
        org.junit.Assert.assertNotNull(signature49);
        org.junit.Assert.assertNotNull(typeArray50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(classInfo52);
        org.junit.Assert.assertNotNull(classInfo53);
    }

    @Test
    public void test1355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1355");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray1 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray2 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray1);
        java.lang.String[] strArray3 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray4 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray3, methodArray4);
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray5);
        java.lang.String[] strArray7 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray8 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray9 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.reflect.Method[] methodArray13 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray12);
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray13);
        java.lang.Class<?> wildcardClass15 = methodArray13.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray16 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass15);
        java.beans.PropertyDescriptor[] propertyDescriptorArray17 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass15);
        java.beans.PropertyDescriptor[] propertyDescriptorArray18 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass15);
        java.beans.PropertyDescriptor[] propertyDescriptorArray19 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass15);
        java.beans.PropertyDescriptor[] propertyDescriptorArray20 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass15);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method21 = org.mockito.cglib.core.ReflectUtils.findInterfaceMethod((java.lang.Class) wildcardClass15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: class [Ljava.lang.reflect.Method; is not an interface");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(methodArray1);
        org.junit.Assert.assertNotNull(methodArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(methodArray4);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(methodArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(propertyDescriptorArray16);
        org.junit.Assert.assertNotNull(propertyDescriptorArray17);
        org.junit.Assert.assertNotNull(propertyDescriptorArray18);
        org.junit.Assert.assertNotNull(propertyDescriptorArray19);
        org.junit.Assert.assertNotNull(propertyDescriptorArray20);
    }

    @Test
    public void test1356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1356");
        java.beans.PropertyDescriptor[] propertyDescriptorArray0 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray3 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray0, false, true);
        java.lang.Class[] classArray4 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray0);
        java.lang.Class[] classArray5 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray4);
        java.lang.Class<?> wildcardClass6 = classArray5.getClass();
        org.mockito.cglib.core.ClassInfo classInfo7 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass6);
        java.beans.PropertyDescriptor[] propertyDescriptorArray8 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass6);
        java.beans.PropertyDescriptor[] propertyDescriptorArray9 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass6);
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray9, true, true);
        java.lang.Class<?> wildcardClass13 = propertyDescriptorArray9.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray14 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass13);
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray14, false, false);
        java.lang.Class[] classArray18 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray17);
        org.junit.Assert.assertNotNull(propertyDescriptorArray0);
        org.junit.Assert.assertNotNull(methodArray3);
        org.junit.Assert.assertNotNull(classArray4);
        org.junit.Assert.assertNotNull(classArray5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(classInfo7);
        org.junit.Assert.assertNotNull(propertyDescriptorArray8);
        org.junit.Assert.assertNotNull(propertyDescriptorArray9);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(propertyDescriptorArray14);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(classArray18);
    }

    @Test
    public void test1357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1357");
        java.beans.PropertyDescriptor[] propertyDescriptorArray0 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray3 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray0, false, true);
        java.lang.Class[] classArray4 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray0);
        java.lang.Class[] classArray5 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray4);
        java.lang.Class<?> wildcardClass6 = classArray5.getClass();
        org.mockito.cglib.core.ClassInfo classInfo7 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass6);
        java.beans.PropertyDescriptor[] propertyDescriptorArray8 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass6);
        java.beans.PropertyDescriptor[] propertyDescriptorArray9 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass6);
        java.beans.PropertyDescriptor[] propertyDescriptorArray10 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass6);
        org.mockito.cglib.core.ClassInfo classInfo11 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass6);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj12 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass6);
            org.junit.Assert.fail("Expected exception of type org.mockito.cglib.core.CodeGenerationException; message: java.lang.NoSuchMethodException-->[Ljava.lang.Class;.<init>()");
        } catch (org.mockito.cglib.core.CodeGenerationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(propertyDescriptorArray0);
        org.junit.Assert.assertNotNull(methodArray3);
        org.junit.Assert.assertNotNull(classArray4);
        org.junit.Assert.assertNotNull(classArray5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(classInfo7);
        org.junit.Assert.assertNotNull(propertyDescriptorArray8);
        org.junit.Assert.assertNotNull(propertyDescriptorArray9);
        org.junit.Assert.assertNotNull(propertyDescriptorArray10);
        org.junit.Assert.assertNotNull(classInfo11);
    }

    @Test
    public void test1358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1358");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray2 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray2, false, true);
        java.lang.Class[] classArray6 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray5);
        java.lang.Object[] objArray7 = null;
        java.lang.Object obj8 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray6, objArray7);
        java.lang.Class[] classArray9 = null;
        java.lang.reflect.Constructor constructor10 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray9);
        java.beans.PropertyDescriptor[] propertyDescriptorArray11 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray11, false, true);
        java.lang.Class[] classArray15 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray11);
        java.lang.Class[] classArray16 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray15);
        java.lang.reflect.Constructor constructor17 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray16);
        java.lang.String[] strArray18 = org.mockito.cglib.core.ReflectUtils.getNames(classArray16);
        int int19 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray16);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(propertyDescriptorArray2);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(classArray6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(constructor10);
        org.junit.Assert.assertNotNull(propertyDescriptorArray11);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(classArray15);
        org.junit.Assert.assertNotNull(classArray16);
        org.junit.Assert.assertNotNull(constructor17);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
    }

    @Test
    public void test1359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1359");
        byte[] byteArray7 = new byte[] { (byte) 0, (byte) 10, (byte) 1, (byte) -1, (byte) -1, (byte) 100 };
        java.lang.ClassLoader classLoader8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class9 = org.mockito.cglib.core.ReflectUtils.defineClass("hi!", byteArray7, classLoader8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[0, 10, 1, -1, -1, 100]");
    }

    @Test
    public void test1360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1360");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        java.lang.Object obj2 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.lang.String[] strArray3 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray4 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray3, methodArray4);
        java.lang.Class[] classArray6 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) strArray3);
        int int7 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray6);
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        org.mockito.cglib.core.ClassInfo classInfo10 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass9);
        java.util.List list11 = null;
        java.util.List list12 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass9, list11);
        java.lang.String[] strArray13 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray14 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray15 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray13, methodArray14);
        java.lang.String[] strArray16 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray17 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray16, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray13, methodArray18);
        java.lang.String[] strArray20 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray21 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray22 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray20, methodArray21);
        java.lang.String[] strArray23 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray24 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray25 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray24);
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray20, methodArray25);
        java.lang.reflect.Method[] methodArray27 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray13, methodArray26);
        java.lang.Class[] classArray28 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray26);
        java.lang.reflect.Constructor constructor29 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass9, classArray28);
        org.mockito.cglib.core.MethodInfo methodInfo30 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor29);
        java.lang.String[] strArray31 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray32 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray33 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray31, methodArray32);
        java.lang.String[] strArray34 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray35 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray34, methodArray35);
        java.lang.reflect.Method[] methodArray37 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray31, methodArray36);
        java.lang.String[] strArray38 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray39 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray40 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray38, methodArray39);
        java.lang.String[] strArray41 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray42 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray43 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray41, methodArray42);
        java.lang.reflect.Method[] methodArray44 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray38, methodArray43);
        java.lang.reflect.Method[] methodArray45 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray31, methodArray44);
        java.lang.String[] strArray46 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray47 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray48 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray46, methodArray47);
        java.lang.reflect.Method[] methodArray49 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray31, methodArray48);
        java.lang.Object obj50 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor29, (java.lang.Object[]) strArray31);
        java.beans.PropertyDescriptor[] propertyDescriptorArray51 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray54 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray51, false, true);
        java.lang.Class[] classArray55 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray54);
        java.lang.reflect.Method[] methodArray56 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray31, methodArray54);
        java.lang.Object obj57 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray6, (java.lang.Object[]) methodArray54);
        int int58 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray6);
        java.lang.Class<?> wildcardClass59 = classArray6.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray60 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass59);
        java.beans.PropertyDescriptor[] propertyDescriptorArray61 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass59);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj62 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass59);
            org.junit.Assert.fail("Expected exception of type org.mockito.cglib.core.CodeGenerationException; message: java.lang.NoSuchMethodException-->[Ljava.lang.Class;.<init>()");
        } catch (org.mockito.cglib.core.CodeGenerationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(methodArray4);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(classArray6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classInfo10);
        org.junit.Assert.assertNull(list12);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(methodArray15);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(methodArray21);
        org.junit.Assert.assertNotNull(methodArray22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(classArray28);
        org.junit.Assert.assertNotNull(constructor29);
        org.junit.Assert.assertNotNull(methodInfo30);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(methodArray33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(methodArray42);
        org.junit.Assert.assertNotNull(methodArray43);
        org.junit.Assert.assertNotNull(methodArray44);
        org.junit.Assert.assertNotNull(methodArray45);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(methodArray47);
        org.junit.Assert.assertNotNull(methodArray48);
        org.junit.Assert.assertNotNull(methodArray49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(propertyDescriptorArray51);
        org.junit.Assert.assertNotNull(methodArray54);
        org.junit.Assert.assertNotNull(classArray55);
        org.junit.Assert.assertNotNull(methodArray56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(propertyDescriptorArray60);
        org.junit.Assert.assertNotNull(propertyDescriptorArray61);
    }

    @Test
    public void test1361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1361");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.lang.Object obj3 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.beans.PropertyDescriptor[] propertyDescriptorArray4 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray4, false, true);
        java.lang.Class[] classArray8 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray4);
        java.lang.Class[] classArray9 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray8);
        java.lang.String[] strArray10 = org.mockito.cglib.core.ReflectUtils.getNames(classArray9);
        java.lang.reflect.Constructor constructor11 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray9);
        org.mockito.cglib.core.MethodInfo methodInfo12 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray15 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray15, false, true);
        java.lang.Class[] classArray19 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.Object[] objArray20 = null;
        java.lang.Object obj21 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass14, classArray19, objArray20);
        java.lang.Object obj22 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor11, (java.lang.Object[]) classArray19);
        org.mockito.cglib.core.MethodInfo methodInfo24 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor11, (int) (byte) 0);
        org.mockito.cglib.core.MethodInfo methodInfo25 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor11);
        org.mockito.asm.Type[] typeArray26 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor11);
        org.mockito.asm.Type[] typeArray27 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor11);
        org.mockito.asm.Type[] typeArray28 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor11);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(propertyDescriptorArray4);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(classArray8);
        org.junit.Assert.assertNotNull(classArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(constructor11);
        org.junit.Assert.assertNotNull(methodInfo12);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(propertyDescriptorArray15);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(classArray19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(methodInfo24);
        org.junit.Assert.assertNotNull(methodInfo25);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertNotNull(typeArray28);
    }

    @Test
    public void test1362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1362");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray1 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray2 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray1);
        java.lang.String[] strArray3 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray4 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray3, methodArray4);
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray5);
        java.lang.String[] strArray7 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray8 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray9 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.reflect.Method[] methodArray13 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray12);
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray13);
        java.lang.Class<?> wildcardClass15 = methodArray13.getClass();
        org.mockito.cglib.core.ClassInfo classInfo16 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass15);
        java.beans.PropertyDescriptor[] propertyDescriptorArray17 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass15);
        java.beans.PropertyDescriptor[] propertyDescriptorArray18 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass15);
        java.beans.PropertyDescriptor[] propertyDescriptorArray19 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass15);
        java.lang.reflect.Method[] methodArray22 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray19, false, false);
        java.lang.Class<?> wildcardClass23 = propertyDescriptorArray19.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray24 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass23);
        java.beans.PropertyDescriptor[] propertyDescriptorArray25 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass23);
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(methodArray1);
        org.junit.Assert.assertNotNull(methodArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(methodArray4);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(methodArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(classInfo16);
        org.junit.Assert.assertNotNull(propertyDescriptorArray17);
        org.junit.Assert.assertNotNull(propertyDescriptorArray18);
        org.junit.Assert.assertNotNull(propertyDescriptorArray19);
        org.junit.Assert.assertNotNull(methodArray22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(propertyDescriptorArray24);
        org.junit.Assert.assertNotNull(propertyDescriptorArray25);
    }

    @Test
    public void test1363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1363");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.lang.Object obj3 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.beans.PropertyDescriptor[] propertyDescriptorArray4 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray4, false, true);
        java.lang.Class[] classArray8 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray4);
        java.lang.Class[] classArray9 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray8);
        java.lang.String[] strArray10 = org.mockito.cglib.core.ReflectUtils.getNames(classArray9);
        java.lang.reflect.Constructor constructor11 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray9);
        org.mockito.cglib.core.MethodInfo methodInfo12 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray15 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray15, false, true);
        java.lang.Class[] classArray19 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.Object[] objArray20 = null;
        java.lang.Object obj21 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass14, classArray19, objArray20);
        java.lang.Object obj22 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor11, (java.lang.Object[]) classArray19);
        org.mockito.cglib.core.MethodInfo methodInfo24 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor11, (int) (byte) 0);
        org.mockito.asm.Type[] typeArray25 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor11);
        org.mockito.asm.Type[] typeArray26 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor11);
        org.mockito.cglib.core.Signature signature27 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor11);
        org.mockito.cglib.core.Signature signature28 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor11);
        org.mockito.cglib.core.MethodInfo methodInfo29 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor11);
        org.mockito.cglib.core.Signature signature30 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor11);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(propertyDescriptorArray4);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(classArray8);
        org.junit.Assert.assertNotNull(classArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(constructor11);
        org.junit.Assert.assertNotNull(methodInfo12);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(propertyDescriptorArray15);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(classArray19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(methodInfo24);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertNotNull(signature27);
        org.junit.Assert.assertNotNull(signature28);
        org.junit.Assert.assertNotNull(methodInfo29);
        org.junit.Assert.assertNotNull(signature30);
    }

    @Test
    public void test1364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1364");
        java.beans.PropertyDescriptor[] propertyDescriptorArray0 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray3 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray0, false, true);
        java.lang.Class[] classArray4 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray0);
        java.lang.Class[] classArray5 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray4);
        java.lang.String[] strArray6 = org.mockito.cglib.core.ReflectUtils.getNames(classArray4);
        java.lang.Class<?> wildcardClass7 = classArray4.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray8 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass7);
        java.beans.PropertyDescriptor[] propertyDescriptorArray9 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass7);
        java.beans.PropertyDescriptor[] propertyDescriptorArray10 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass7);
        org.junit.Assert.assertNotNull(propertyDescriptorArray0);
        org.junit.Assert.assertNotNull(methodArray3);
        org.junit.Assert.assertNotNull(classArray4);
        org.junit.Assert.assertNotNull(classArray5);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(propertyDescriptorArray8);
        org.junit.Assert.assertNotNull(propertyDescriptorArray9);
        org.junit.Assert.assertNotNull(propertyDescriptorArray10);
    }

    @Test
    public void test1365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1365");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.beans.PropertyDescriptor[] propertyDescriptorArray5 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray8 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray5, false, true);
        java.lang.Class[] classArray9 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray5);
        int int10 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray9);
        java.lang.String[] strArray11 = org.mockito.cglib.core.ReflectUtils.getNames(classArray9);
        java.lang.String[] strArray12 = org.mockito.cglib.core.ReflectUtils.getNames(classArray9);
        java.lang.String[] strArray13 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray14 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray15 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray13, methodArray14);
        java.lang.String[] strArray16 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray17 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray16, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray13, methodArray18);
        java.lang.String[] strArray20 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray21 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray22 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray20, methodArray21);
        java.lang.String[] strArray23 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray24 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray25 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray24);
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray20, methodArray25);
        java.lang.reflect.Method[] methodArray27 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray13, methodArray26);
        java.lang.Object obj28 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray9, (java.lang.Object[]) methodArray27);
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        java.util.List list31 = null;
        java.util.List list32 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass30, list31);
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        org.mockito.cglib.core.ClassInfo classInfo35 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass34);
        java.lang.Object obj36 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass34);
        java.beans.PropertyDescriptor[] propertyDescriptorArray37 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray40 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray37, false, true);
        java.lang.Class[] classArray41 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray37);
        java.lang.Class[] classArray42 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray41);
        java.lang.String[] strArray43 = org.mockito.cglib.core.ReflectUtils.getNames(classArray42);
        java.lang.reflect.Constructor constructor44 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass34, classArray42);
        org.mockito.cglib.core.MethodInfo methodInfo45 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor44);
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray48 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray51 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray48, false, true);
        java.lang.Class[] classArray52 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray51);
        java.lang.Object[] objArray53 = null;
        java.lang.Object obj54 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass47, classArray52, objArray53);
        java.lang.Object obj55 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor44, (java.lang.Object[]) classArray52);
        java.lang.String[] strArray56 = org.mockito.cglib.core.ReflectUtils.getNames(classArray52);
        java.lang.reflect.Constructor constructor57 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass30, classArray52);
        java.lang.reflect.Constructor constructor58 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray52);
        org.mockito.cglib.core.Signature signature59 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor58);
        org.mockito.cglib.core.Signature signature60 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor58);
        org.mockito.cglib.core.MethodInfo methodInfo62 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor58, (int) (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(propertyDescriptorArray5);
        org.junit.Assert.assertNotNull(methodArray8);
        org.junit.Assert.assertNotNull(classArray9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(methodArray15);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(methodArray21);
        org.junit.Assert.assertNotNull(methodArray22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNull(list32);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(classInfo35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(propertyDescriptorArray37);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(classArray41);
        org.junit.Assert.assertNotNull(classArray42);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(constructor44);
        org.junit.Assert.assertNotNull(methodInfo45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(propertyDescriptorArray48);
        org.junit.Assert.assertNotNull(methodArray51);
        org.junit.Assert.assertNotNull(classArray52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(constructor57);
        org.junit.Assert.assertNotNull(constructor58);
        org.junit.Assert.assertNotNull(signature59);
        org.junit.Assert.assertNotNull(signature60);
        org.junit.Assert.assertNotNull(methodInfo62);
    }

    @Test
    public void test1366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1366");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.Object obj5 = new java.lang.Object();
        java.lang.Class<?> wildcardClass6 = obj5.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray7 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray7, false, true);
        java.lang.Class[] classArray11 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray10);
        java.lang.Object[] objArray12 = null;
        java.lang.Object obj13 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass6, classArray11, objArray12);
        java.lang.reflect.Constructor constructor14 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray11);
        org.mockito.cglib.core.MethodInfo methodInfo15 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor14);
        org.mockito.cglib.core.Signature signature16 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor14);
        org.mockito.cglib.core.MethodInfo methodInfo18 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor14, 10);
        org.mockito.cglib.core.MethodInfo methodInfo19 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor14);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(propertyDescriptorArray7);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(constructor14);
        org.junit.Assert.assertNotNull(methodInfo15);
        org.junit.Assert.assertNotNull(signature16);
        org.junit.Assert.assertNotNull(methodInfo18);
        org.junit.Assert.assertNotNull(methodInfo19);
    }

    @Test
    public void test1367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1367");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        java.util.List list2 = null;
        java.util.List list3 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list2);
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        org.mockito.cglib.core.ClassInfo classInfo6 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass5);
        java.beans.PropertyDescriptor[] propertyDescriptorArray8 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray8, false, true);
        java.lang.Class[] classArray12 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray8);
        java.lang.Class[] classArray13 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray12);
        java.lang.String[] strArray14 = org.mockito.cglib.core.ReflectUtils.getNames(classArray13);
        java.lang.reflect.Constructor constructor15 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass5, classArray13);
        org.mockito.cglib.core.MethodInfo methodInfo16 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor15);
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray19 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray22 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray19, false, true);
        java.lang.Class[] classArray23 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray22);
        java.lang.Object[] objArray24 = null;
        java.lang.Object obj25 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass18, classArray23, objArray24);
        java.lang.Object obj26 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor15, (java.lang.Object[]) classArray23);
        java.lang.String[] strArray27 = org.mockito.cglib.core.ReflectUtils.getNames(classArray23);
        java.lang.reflect.Constructor constructor28 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray23);
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray31 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray31, false, true);
        java.lang.Class[] classArray35 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray34);
        java.lang.Object[] objArray36 = null;
        java.lang.Object obj37 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass30, classArray35, objArray36);
        int int38 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray35);
        java.lang.reflect.Constructor constructor39 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray35);
        org.mockito.cglib.core.ClassInfo classInfo40 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.beans.PropertyDescriptor[] propertyDescriptorArray42 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray45 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray42, false, true);
        java.lang.Class[] classArray46 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray42);
        java.lang.Class[] classArray47 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray46);
        java.lang.String[] strArray48 = org.mockito.cglib.core.ReflectUtils.getNames(classArray46);
        java.lang.Class[] classArray49 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray46);
        int int50 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray46);
        int int51 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray46);
        java.lang.Class[] classArray52 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray46);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method53 = org.mockito.cglib.core.ReflectUtils.findDeclaredMethod((java.lang.Class) wildcardClass1, "", classArray52);
            org.junit.Assert.fail("Expected exception of type java.lang.NoSuchMethodException; message: ");
        } catch (java.lang.NoSuchMethodException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNull(list3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(classInfo6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(propertyDescriptorArray8);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(classArray13);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(constructor15);
        org.junit.Assert.assertNotNull(methodInfo16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(propertyDescriptorArray19);
        org.junit.Assert.assertNotNull(methodArray22);
        org.junit.Assert.assertNotNull(classArray23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(constructor28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(propertyDescriptorArray31);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(classArray35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(constructor39);
        org.junit.Assert.assertNotNull(classInfo40);
        org.junit.Assert.assertNotNull(propertyDescriptorArray42);
        org.junit.Assert.assertNotNull(methodArray45);
        org.junit.Assert.assertNotNull(classArray46);
        org.junit.Assert.assertNotNull(classArray47);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(classArray49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(classArray52);
    }

    @Test
    public void test1368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1368");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.lang.Object obj3 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.beans.PropertyDescriptor[] propertyDescriptorArray4 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray4, false, true);
        java.lang.Class[] classArray8 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray4);
        java.lang.Class[] classArray9 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray8);
        java.lang.String[] strArray10 = org.mockito.cglib.core.ReflectUtils.getNames(classArray9);
        java.lang.reflect.Constructor constructor11 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray9);
        org.mockito.cglib.core.MethodInfo methodInfo12 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor11);
        org.mockito.cglib.core.MethodInfo methodInfo13 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor11);
        org.mockito.asm.Type[] typeArray14 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor11);
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        org.mockito.cglib.core.ClassInfo classInfo17 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass16);
        java.util.List list18 = null;
        java.util.List list19 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass16, list18);
        java.lang.String[] strArray20 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray21 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray22 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray20, methodArray21);
        java.lang.String[] strArray23 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray24 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray25 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray24);
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray20, methodArray25);
        java.lang.String[] strArray27 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray28 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray27, methodArray28);
        java.lang.String[] strArray30 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray31 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray32 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray31);
        java.lang.reflect.Method[] methodArray33 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray27, methodArray32);
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray20, methodArray33);
        java.lang.Class[] classArray35 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray33);
        java.lang.reflect.Constructor constructor36 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass16, classArray35);
        org.mockito.cglib.core.MethodInfo methodInfo37 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor36);
        java.lang.String[] strArray38 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray39 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray40 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray38, methodArray39);
        java.lang.String[] strArray41 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray42 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray43 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray41, methodArray42);
        java.lang.reflect.Method[] methodArray44 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray38, methodArray43);
        java.lang.String[] strArray45 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray46 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray47 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray45, methodArray46);
        java.lang.String[] strArray48 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray49 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray50 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray48, methodArray49);
        java.lang.reflect.Method[] methodArray51 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray45, methodArray50);
        java.lang.reflect.Method[] methodArray52 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray38, methodArray51);
        java.lang.String[] strArray53 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray54 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray55 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray53, methodArray54);
        java.lang.reflect.Method[] methodArray56 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray38, methodArray55);
        java.lang.Object obj57 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor36, (java.lang.Object[]) strArray38);
        org.mockito.cglib.core.MethodInfo methodInfo58 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor36);
        java.lang.Object[] objArray59 = new java.lang.Object[] {};
        java.lang.Object obj60 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor36, objArray59);
        org.mockito.asm.Type[] typeArray61 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor36);
        org.mockito.asm.Type[] typeArray62 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor36);
        java.lang.String[] strArray63 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray64 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray65 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray63, methodArray64);
        java.lang.String[] strArray66 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray67 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray68 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray66, methodArray67);
        java.lang.reflect.Method[] methodArray69 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray63, methodArray68);
        java.lang.String[] strArray70 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray71 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray72 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray70, methodArray71);
        java.lang.String[] strArray73 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray74 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray75 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray73, methodArray74);
        java.lang.reflect.Method[] methodArray76 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray70, methodArray75);
        java.lang.reflect.Method[] methodArray77 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray63, methodArray76);
        java.lang.Class<?> wildcardClass78 = strArray63.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray79 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass78);
        java.lang.Object obj80 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor36, (java.lang.Object[]) propertyDescriptorArray79);
        java.lang.reflect.Method[] methodArray83 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray79, false, false);
        java.lang.reflect.Method[] methodArray86 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray79, true, false);
        java.lang.Object obj87 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor11, (java.lang.Object[]) propertyDescriptorArray79);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(propertyDescriptorArray4);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(classArray8);
        org.junit.Assert.assertNotNull(classArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(constructor11);
        org.junit.Assert.assertNotNull(methodInfo12);
        org.junit.Assert.assertNotNull(methodInfo13);
        org.junit.Assert.assertNotNull(typeArray14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(classInfo17);
        org.junit.Assert.assertNull(list19);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(methodArray21);
        org.junit.Assert.assertNotNull(methodArray22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(methodArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(classArray35);
        org.junit.Assert.assertNotNull(constructor36);
        org.junit.Assert.assertNotNull(methodInfo37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(methodArray42);
        org.junit.Assert.assertNotNull(methodArray43);
        org.junit.Assert.assertNotNull(methodArray44);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(methodArray46);
        org.junit.Assert.assertNotNull(methodArray47);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(methodArray49);
        org.junit.Assert.assertNotNull(methodArray50);
        org.junit.Assert.assertNotNull(methodArray51);
        org.junit.Assert.assertNotNull(methodArray52);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(methodArray54);
        org.junit.Assert.assertNotNull(methodArray55);
        org.junit.Assert.assertNotNull(methodArray56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(methodInfo58);
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[]");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(typeArray61);
        org.junit.Assert.assertNotNull(typeArray62);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(methodArray64);
        org.junit.Assert.assertNotNull(methodArray65);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(methodArray67);
        org.junit.Assert.assertNotNull(methodArray68);
        org.junit.Assert.assertNotNull(methodArray69);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertNotNull(methodArray71);
        org.junit.Assert.assertNotNull(methodArray72);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(methodArray74);
        org.junit.Assert.assertNotNull(methodArray75);
        org.junit.Assert.assertNotNull(methodArray76);
        org.junit.Assert.assertNotNull(methodArray77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(propertyDescriptorArray79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(methodArray83);
        org.junit.Assert.assertNotNull(methodArray86);
        org.junit.Assert.assertNotNull(obj87);
    }

    @Test
    public void test1369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1369");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.beans.PropertyDescriptor[] propertyDescriptorArray23 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray23, false, true);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray23, false, false);
        java.lang.Object obj30 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) methodArray29);
        java.beans.PropertyDescriptor[] propertyDescriptorArray31 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray31, true, true);
        java.lang.Object obj35 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) propertyDescriptorArray31);
        java.lang.String[] strArray36 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray37 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray38 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray37);
        java.lang.String[] strArray39 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray40 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray39, methodArray40);
        java.lang.reflect.Method[] methodArray42 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray41);
        java.lang.String[] strArray43 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray44 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray45 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray43, methodArray44);
        java.lang.String[] strArray46 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray47 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray48 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray46, methodArray47);
        java.lang.reflect.Method[] methodArray49 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray43, methodArray48);
        java.lang.reflect.Method[] methodArray50 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray49);
        java.lang.String[] strArray51 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray52 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray53 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray51, methodArray52);
        java.lang.String[] strArray54 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray55 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray56 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray54, methodArray55);
        java.lang.String[] strArray57 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray58 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray59 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray57, methodArray58);
        java.lang.String[] strArray60 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray61 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray62 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray60, methodArray61);
        java.lang.reflect.Method[] methodArray63 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray57, methodArray62);
        java.lang.reflect.Method[] methodArray64 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray54, methodArray63);
        java.lang.reflect.Method[] methodArray65 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray51, methodArray64);
        java.lang.reflect.Method[] methodArray66 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray64);
        java.lang.Object obj67 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) methodArray66);
        org.mockito.asm.Type[] typeArray68 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        org.mockito.cglib.core.Signature signature69 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor21);
        java.lang.Class<?> wildcardClass70 = signature69.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray71 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass70);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj72 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass70);
            org.junit.Assert.fail("Expected exception of type org.mockito.cglib.core.CodeGenerationException; message: java.lang.NoSuchMethodException-->org.mockito.cglib.core.Signature.<init>()");
        } catch (org.mockito.cglib.core.CodeGenerationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(propertyDescriptorArray23);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(propertyDescriptorArray31);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(methodArray38);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(methodArray42);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(methodArray44);
        org.junit.Assert.assertNotNull(methodArray45);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(methodArray47);
        org.junit.Assert.assertNotNull(methodArray48);
        org.junit.Assert.assertNotNull(methodArray49);
        org.junit.Assert.assertNotNull(methodArray50);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(methodArray52);
        org.junit.Assert.assertNotNull(methodArray53);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(methodArray55);
        org.junit.Assert.assertNotNull(methodArray56);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(methodArray58);
        org.junit.Assert.assertNotNull(methodArray59);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(methodArray61);
        org.junit.Assert.assertNotNull(methodArray62);
        org.junit.Assert.assertNotNull(methodArray63);
        org.junit.Assert.assertNotNull(methodArray64);
        org.junit.Assert.assertNotNull(methodArray65);
        org.junit.Assert.assertNotNull(methodArray66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(typeArray68);
        org.junit.Assert.assertNotNull(signature69);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(propertyDescriptorArray71);
    }

    @Test
    public void test1370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1370");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.beans.PropertyDescriptor[] propertyDescriptorArray23 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray23, false, true);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray23, false, false);
        java.lang.Object obj30 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) methodArray29);
        java.beans.PropertyDescriptor[] propertyDescriptorArray31 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray31, true, true);
        java.lang.Object obj35 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) propertyDescriptorArray31);
        java.lang.String[] strArray36 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray37 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray38 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray37);
        java.lang.String[] strArray39 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray40 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray39, methodArray40);
        java.lang.reflect.Method[] methodArray42 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray41);
        java.lang.String[] strArray43 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray44 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray45 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray43, methodArray44);
        java.lang.String[] strArray46 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray47 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray48 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray46, methodArray47);
        java.lang.reflect.Method[] methodArray49 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray43, methodArray48);
        java.lang.reflect.Method[] methodArray50 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray49);
        java.lang.String[] strArray51 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray52 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray53 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray51, methodArray52);
        java.lang.String[] strArray54 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray55 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray56 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray54, methodArray55);
        java.lang.String[] strArray57 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray58 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray59 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray57, methodArray58);
        java.lang.String[] strArray60 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray61 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray62 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray60, methodArray61);
        java.lang.reflect.Method[] methodArray63 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray57, methodArray62);
        java.lang.reflect.Method[] methodArray64 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray54, methodArray63);
        java.lang.reflect.Method[] methodArray65 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray51, methodArray64);
        java.lang.reflect.Method[] methodArray66 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray64);
        java.lang.Object obj67 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) methodArray66);
        org.mockito.cglib.core.MethodInfo methodInfo68 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        org.mockito.cglib.core.Signature signature69 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor21);
        org.mockito.cglib.core.Signature signature70 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor21);
        org.mockito.cglib.core.MethodInfo methodInfo72 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21, (int) (byte) 10);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(propertyDescriptorArray23);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(propertyDescriptorArray31);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(methodArray38);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(methodArray42);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(methodArray44);
        org.junit.Assert.assertNotNull(methodArray45);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(methodArray47);
        org.junit.Assert.assertNotNull(methodArray48);
        org.junit.Assert.assertNotNull(methodArray49);
        org.junit.Assert.assertNotNull(methodArray50);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(methodArray52);
        org.junit.Assert.assertNotNull(methodArray53);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(methodArray55);
        org.junit.Assert.assertNotNull(methodArray56);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(methodArray58);
        org.junit.Assert.assertNotNull(methodArray59);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(methodArray61);
        org.junit.Assert.assertNotNull(methodArray62);
        org.junit.Assert.assertNotNull(methodArray63);
        org.junit.Assert.assertNotNull(methodArray64);
        org.junit.Assert.assertNotNull(methodArray65);
        org.junit.Assert.assertNotNull(methodArray66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(methodInfo68);
        org.junit.Assert.assertNotNull(signature69);
        org.junit.Assert.assertNotNull(signature70);
        org.junit.Assert.assertNotNull(methodInfo72);
    }

    @Test
    public void test1371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1371");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray2 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray2, false, true);
        java.lang.Class[] classArray6 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray2);
        java.beans.PropertyDescriptor[] propertyDescriptorArray7 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray7, false, true);
        java.lang.Class[] classArray11 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray7);
        int int12 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray11);
        java.lang.String[] strArray13 = org.mockito.cglib.core.ReflectUtils.getNames(classArray11);
        java.lang.String[] strArray14 = org.mockito.cglib.core.ReflectUtils.getNames(classArray11);
        java.lang.Class[] classArray15 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) strArray14);
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        org.mockito.cglib.core.ClassInfo classInfo18 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass17);
        java.util.List list19 = null;
        java.util.List list20 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass17, list19);
        java.beans.PropertyDescriptor[] propertyDescriptorArray21 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray24 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray21, false, true);
        java.lang.Class[] classArray25 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray21);
        int int26 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray25);
        java.lang.String[] strArray27 = org.mockito.cglib.core.ReflectUtils.getNames(classArray25);
        java.lang.String[] strArray28 = org.mockito.cglib.core.ReflectUtils.getNames(classArray25);
        java.lang.String[] strArray29 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray30 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray31 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray29, methodArray30);
        java.lang.String[] strArray32 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray33 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray32, methodArray33);
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray29, methodArray34);
        java.lang.String[] strArray36 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray37 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray38 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray37);
        java.lang.String[] strArray39 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray40 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray39, methodArray40);
        java.lang.reflect.Method[] methodArray42 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray41);
        java.lang.reflect.Method[] methodArray43 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray29, methodArray42);
        java.lang.Object obj44 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass17, classArray25, (java.lang.Object[]) methodArray43);
        java.lang.reflect.Method[] methodArray45 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray14, methodArray43);
        java.lang.Object obj46 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray6, (java.lang.Object[]) strArray14);
        int int47 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray6);
        java.lang.String[] strArray48 = org.mockito.cglib.core.ReflectUtils.getNames(classArray6);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(propertyDescriptorArray2);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(classArray6);
        org.junit.Assert.assertNotNull(propertyDescriptorArray7);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(classArray15);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(classInfo18);
        org.junit.Assert.assertNull(list20);
        org.junit.Assert.assertNotNull(propertyDescriptorArray21);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(classArray25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(methodArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(methodArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(methodArray38);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(methodArray42);
        org.junit.Assert.assertNotNull(methodArray43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(methodArray45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(strArray48);
    }

    @Test
    public void test1372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1372");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.lang.Class<?> wildcardClass23 = constructor21.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray24 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass23);
        java.lang.reflect.Method[] methodArray27 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray24, false, true);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(propertyDescriptorArray24);
        org.junit.Assert.assertNotNull(methodArray27);
    }

    @Test
    public void test1373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1373");
        java.beans.PropertyDescriptor[] propertyDescriptorArray0 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray3 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray0, false, true);
        java.lang.Class[] classArray4 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray0);
        java.lang.Class[] classArray5 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray4);
        java.lang.Class<?> wildcardClass6 = classArray4.getClass();
        org.mockito.cglib.core.ClassInfo classInfo7 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass6);
        java.beans.PropertyDescriptor[] propertyDescriptorArray8 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass6);
        java.beans.PropertyDescriptor[] propertyDescriptorArray9 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass6);
        org.mockito.cglib.core.ClassInfo classInfo10 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass6);
        org.junit.Assert.assertNotNull(propertyDescriptorArray0);
        org.junit.Assert.assertNotNull(methodArray3);
        org.junit.Assert.assertNotNull(classArray4);
        org.junit.Assert.assertNotNull(classArray5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(classInfo7);
        org.junit.Assert.assertNotNull(propertyDescriptorArray8);
        org.junit.Assert.assertNotNull(propertyDescriptorArray9);
        org.junit.Assert.assertNotNull(classInfo10);
    }

    @Test
    public void test1374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1374");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray1 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray2 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray1);
        java.lang.String[] strArray3 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray4 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray3, methodArray4);
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray5);
        java.lang.String[] strArray7 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray8 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray9 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.reflect.Method[] methodArray13 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray12);
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray13);
        java.lang.Class<?> wildcardClass15 = methodArray13.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray16 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass15);
        java.beans.PropertyDescriptor[] propertyDescriptorArray17 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass15);
        java.beans.PropertyDescriptor[] propertyDescriptorArray18 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass15);
        java.lang.Class[] classArray19 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray18);
        int int20 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray19);
        java.lang.String[] strArray21 = org.mockito.cglib.core.ReflectUtils.getNames(classArray19);
        java.lang.String[] strArray22 = org.mockito.cglib.core.ReflectUtils.getNames(classArray19);
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(methodArray1);
        org.junit.Assert.assertNotNull(methodArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(methodArray4);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(methodArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(propertyDescriptorArray16);
        org.junit.Assert.assertNotNull(propertyDescriptorArray17);
        org.junit.Assert.assertNotNull(propertyDescriptorArray18);
        org.junit.Assert.assertNotNull(classArray19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strArray22);
    }

    @Test
    public void test1375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1375");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.beans.PropertyDescriptor[] propertyDescriptorArray23 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray23, false, true);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray23, false, false);
        java.lang.Object obj30 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) methodArray29);
        java.beans.PropertyDescriptor[] propertyDescriptorArray31 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray31, true, true);
        java.lang.Object obj35 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) propertyDescriptorArray31);
        org.mockito.asm.Type[] typeArray36 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        java.lang.String[] strArray37 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray38 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray39 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray37, methodArray38);
        java.lang.String[] strArray40 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray41 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray42 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray40, methodArray41);
        java.lang.reflect.Method[] methodArray43 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray37, methodArray42);
        java.lang.String[] strArray44 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray45 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray46 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray44, methodArray45);
        java.lang.String[] strArray47 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray48 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray49 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray47, methodArray48);
        java.lang.reflect.Method[] methodArray50 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray44, methodArray49);
        java.lang.reflect.Method[] methodArray51 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray37, methodArray50);
        java.lang.String[] strArray52 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray53 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray54 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray52, methodArray53);
        java.lang.String[] strArray55 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray56 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray57 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray55, methodArray56);
        java.lang.String[] strArray58 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray59 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray60 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray58, methodArray59);
        java.lang.String[] strArray61 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray62 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray63 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray61, methodArray62);
        java.lang.reflect.Method[] methodArray64 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray58, methodArray63);
        java.lang.reflect.Method[] methodArray65 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray55, methodArray64);
        java.lang.reflect.Method[] methodArray66 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray52, methodArray65);
        java.lang.reflect.Method[] methodArray67 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray37, methodArray65);
        java.lang.Object obj68 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) methodArray65);
        org.mockito.asm.Type[] typeArray69 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        org.mockito.cglib.core.Signature signature70 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor21);
        org.mockito.cglib.core.MethodInfo methodInfo72 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21, (int) (short) -1);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(propertyDescriptorArray23);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(propertyDescriptorArray31);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(methodArray38);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(methodArray42);
        org.junit.Assert.assertNotNull(methodArray43);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(methodArray45);
        org.junit.Assert.assertNotNull(methodArray46);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(methodArray48);
        org.junit.Assert.assertNotNull(methodArray49);
        org.junit.Assert.assertNotNull(methodArray50);
        org.junit.Assert.assertNotNull(methodArray51);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(methodArray53);
        org.junit.Assert.assertNotNull(methodArray54);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(methodArray56);
        org.junit.Assert.assertNotNull(methodArray57);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(methodArray59);
        org.junit.Assert.assertNotNull(methodArray60);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(methodArray62);
        org.junit.Assert.assertNotNull(methodArray63);
        org.junit.Assert.assertNotNull(methodArray64);
        org.junit.Assert.assertNotNull(methodArray65);
        org.junit.Assert.assertNotNull(methodArray66);
        org.junit.Assert.assertNotNull(methodArray67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(typeArray69);
        org.junit.Assert.assertNotNull(signature70);
        org.junit.Assert.assertNotNull(methodInfo72);
    }

    @Test
    public void test1376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1376");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.lang.String[] strArray23 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray24 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray25 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray24);
        java.lang.String[] strArray26 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray27 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray26, methodArray27);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray28);
        java.lang.String[] strArray30 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray31 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray32 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray31);
        java.lang.String[] strArray33 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray34 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray33, methodArray34);
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray35);
        java.lang.reflect.Method[] methodArray37 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray36);
        java.lang.String[] strArray38 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray39 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray40 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray38, methodArray39);
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray40);
        java.lang.Object obj42 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) strArray23);
        java.beans.PropertyDescriptor[] propertyDescriptorArray43 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray46 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray43, false, true);
        java.lang.Class[] classArray47 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray46);
        java.lang.reflect.Method[] methodArray48 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray46);
        java.lang.Class<?> wildcardClass49 = strArray23.getClass();
        org.mockito.cglib.core.ClassInfo classInfo50 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass49);
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        java.util.List list54 = null;
        java.util.List list55 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass53, list54);
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        org.mockito.cglib.core.ClassInfo classInfo58 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass57);
        java.lang.Object obj59 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass57);
        java.beans.PropertyDescriptor[] propertyDescriptorArray60 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray63 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray60, false, true);
        java.lang.Class[] classArray64 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray60);
        java.lang.Class[] classArray65 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray64);
        java.lang.String[] strArray66 = org.mockito.cglib.core.ReflectUtils.getNames(classArray65);
        java.lang.reflect.Constructor constructor67 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass57, classArray65);
        org.mockito.cglib.core.MethodInfo methodInfo68 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor67);
        java.lang.Object obj69 = new java.lang.Object();
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray71 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray74 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray71, false, true);
        java.lang.Class[] classArray75 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray74);
        java.lang.Object[] objArray76 = null;
        java.lang.Object obj77 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass70, classArray75, objArray76);
        java.lang.Object obj78 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor67, (java.lang.Object[]) classArray75);
        java.lang.String[] strArray79 = org.mockito.cglib.core.ReflectUtils.getNames(classArray75);
        java.lang.reflect.Constructor constructor80 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass53, classArray75);
        int int81 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray75);
        java.lang.Class[] classArray82 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray75);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method83 = org.mockito.cglib.core.ReflectUtils.findDeclaredMethod((java.lang.Class) wildcardClass49, "", classArray75);
            org.junit.Assert.fail("Expected exception of type java.lang.NoSuchMethodException; message: ");
        } catch (java.lang.NoSuchMethodException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(propertyDescriptorArray43);
        org.junit.Assert.assertNotNull(methodArray46);
        org.junit.Assert.assertNotNull(classArray47);
        org.junit.Assert.assertNotNull(methodArray48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(classInfo50);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNull(list55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(classInfo58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(propertyDescriptorArray60);
        org.junit.Assert.assertNotNull(methodArray63);
        org.junit.Assert.assertNotNull(classArray64);
        org.junit.Assert.assertNotNull(classArray65);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(constructor67);
        org.junit.Assert.assertNotNull(methodInfo68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(propertyDescriptorArray71);
        org.junit.Assert.assertNotNull(methodArray74);
        org.junit.Assert.assertNotNull(classArray75);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertNotNull(constructor80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertNotNull(classArray82);
    }

    @Test
    public void test1377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1377");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.lang.String[] strArray23 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray24 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray25 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray24);
        java.lang.String[] strArray26 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray27 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray26, methodArray27);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray28);
        java.lang.String[] strArray30 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray31 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray32 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray31);
        java.lang.String[] strArray33 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray34 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray33, methodArray34);
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray35);
        java.lang.reflect.Method[] methodArray37 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray36);
        java.lang.String[] strArray38 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray39 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray40 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray38, methodArray39);
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray40);
        java.lang.Object obj42 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) strArray23);
        org.mockito.cglib.core.MethodInfo methodInfo43 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.lang.Object[] objArray44 = new java.lang.Object[] {};
        java.lang.Object obj45 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, objArray44);
        org.mockito.asm.Type[] typeArray46 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        org.mockito.asm.Type[] typeArray47 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        java.lang.String[] strArray48 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray49 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray50 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray48, methodArray49);
        java.lang.String[] strArray51 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray52 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray53 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray51, methodArray52);
        java.lang.reflect.Method[] methodArray54 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray48, methodArray53);
        java.lang.String[] strArray55 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray56 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray57 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray55, methodArray56);
        java.lang.String[] strArray58 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray59 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray60 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray58, methodArray59);
        java.lang.reflect.Method[] methodArray61 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray55, methodArray60);
        java.lang.reflect.Method[] methodArray62 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray48, methodArray61);
        java.lang.Class<?> wildcardClass63 = strArray48.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray64 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass63);
        java.lang.Object obj65 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) propertyDescriptorArray64);
        java.lang.reflect.Method[] methodArray68 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray64, true, true);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(methodInfo43);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[]");
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(typeArray46);
        org.junit.Assert.assertNotNull(typeArray47);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(methodArray49);
        org.junit.Assert.assertNotNull(methodArray50);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(methodArray52);
        org.junit.Assert.assertNotNull(methodArray53);
        org.junit.Assert.assertNotNull(methodArray54);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(methodArray56);
        org.junit.Assert.assertNotNull(methodArray57);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(methodArray59);
        org.junit.Assert.assertNotNull(methodArray60);
        org.junit.Assert.assertNotNull(methodArray61);
        org.junit.Assert.assertNotNull(methodArray62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(propertyDescriptorArray64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(methodArray68);
    }

    @Test
    public void test1378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1378");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.lang.String[] strArray23 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray24 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray25 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray24);
        java.lang.String[] strArray26 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray27 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray26, methodArray27);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray28);
        java.lang.String[] strArray30 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray31 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray32 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray31);
        java.lang.String[] strArray33 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray34 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray33, methodArray34);
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray35);
        java.lang.reflect.Method[] methodArray37 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray36);
        java.lang.String[] strArray38 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray39 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray40 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray38, methodArray39);
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray40);
        java.lang.Object obj42 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) strArray23);
        org.mockito.asm.Type[] typeArray43 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        java.lang.Object[] objArray44 = null;
        java.lang.Object obj45 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, objArray44);
        org.mockito.cglib.core.MethodInfo methodInfo46 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.lang.Class<?> wildcardClass47 = constructor21.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method48 = org.mockito.cglib.core.ReflectUtils.findInterfaceMethod((java.lang.Class) wildcardClass47);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: class java.lang.reflect.Constructor is not an interface");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(methodInfo46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test1379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1379");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo23 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21, (int) ' ');
        org.mockito.cglib.core.Signature signature24 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor21);
        java.lang.Class<?> wildcardClass25 = signature24.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray26 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass25);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray26, true, false);
        java.lang.reflect.Method[] methodArray32 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray26, true, false);
        java.lang.Class<?> wildcardClass33 = propertyDescriptorArray26.getClass();
        org.mockito.cglib.core.ClassInfo classInfo34 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo23);
        org.junit.Assert.assertNotNull(signature24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(propertyDescriptorArray26);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(classInfo34);
    }

    @Test
    public void test1380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1380");
        java.beans.PropertyDescriptor[] propertyDescriptorArray0 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray3 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray0, false, true);
        java.lang.Class[] classArray4 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray0);
        java.lang.Class[] classArray5 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray4);
        java.lang.String[] strArray6 = org.mockito.cglib.core.ReflectUtils.getNames(classArray4);
        java.lang.Class<?> wildcardClass7 = classArray4.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray8 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass7);
        java.beans.PropertyDescriptor[] propertyDescriptorArray9 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass7);
        java.lang.Class[] classArray10 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray9);
        java.lang.reflect.Method[] methodArray13 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray9, true, true);
        java.lang.Class<?> wildcardClass14 = methodArray13.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray15 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass14);
        java.util.List list16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List list17 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass14, list16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(propertyDescriptorArray0);
        org.junit.Assert.assertNotNull(methodArray3);
        org.junit.Assert.assertNotNull(classArray4);
        org.junit.Assert.assertNotNull(classArray5);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(propertyDescriptorArray8);
        org.junit.Assert.assertNotNull(propertyDescriptorArray9);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(propertyDescriptorArray15);
    }

    @Test
    public void test1381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1381");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo23 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21, (int) ' ');
        org.mockito.cglib.core.MethodInfo methodInfo25 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21, 10);
        org.mockito.cglib.core.MethodInfo methodInfo27 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21, 100);
        org.mockito.cglib.core.MethodInfo methodInfo28 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        org.mockito.asm.Type[] typeArray29 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        org.mockito.cglib.core.MethodInfo methodInfo30 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!" };
        java.lang.String[] strArray33 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray34 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray33, methodArray34);
        java.lang.String[] strArray36 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray37 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray38 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray37);
        java.lang.String[] strArray39 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray40 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray39, methodArray40);
        java.lang.reflect.Method[] methodArray42 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray41);
        java.lang.reflect.Method[] methodArray43 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray33, methodArray42);
        java.lang.reflect.Method[] methodArray44 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray32, methodArray43);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj45 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) strArray32);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo23);
        org.junit.Assert.assertNotNull(methodInfo25);
        org.junit.Assert.assertNotNull(methodInfo27);
        org.junit.Assert.assertNotNull(methodInfo28);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertNotNull(methodInfo30);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(methodArray38);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(methodArray42);
        org.junit.Assert.assertNotNull(methodArray43);
        org.junit.Assert.assertNotNull(methodArray44);
    }

    @Test
    public void test1382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1382");
        java.beans.PropertyDescriptor[] propertyDescriptorArray0 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray3 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray0, false, true);
        java.lang.Class[] classArray4 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray0);
        java.lang.Class[] classArray5 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray4);
        java.lang.Class<?> wildcardClass6 = classArray4.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray7 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass6);
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        org.mockito.cglib.core.ClassInfo classInfo10 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass9);
        java.util.List list11 = null;
        java.util.List list12 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass9, list11);
        java.lang.String[] strArray13 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray14 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray15 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray13, methodArray14);
        java.lang.String[] strArray16 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray17 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray16, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray13, methodArray18);
        java.lang.String[] strArray20 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray21 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray22 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray20, methodArray21);
        java.lang.String[] strArray23 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray24 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray25 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray24);
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray20, methodArray25);
        java.lang.reflect.Method[] methodArray27 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray13, methodArray26);
        java.lang.Class[] classArray28 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray26);
        java.lang.reflect.Constructor constructor29 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass9, classArray28);
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        org.mockito.cglib.core.ClassInfo classInfo32 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass31);
        java.lang.Object obj33 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass31);
        java.beans.PropertyDescriptor[] propertyDescriptorArray34 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray37 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray34, false, true);
        java.lang.Class[] classArray38 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray34);
        java.lang.Class[] classArray39 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray38);
        java.lang.String[] strArray40 = org.mockito.cglib.core.ReflectUtils.getNames(classArray39);
        java.lang.reflect.Constructor constructor41 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass31, classArray39);
        int int42 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray39);
        java.lang.Object obj43 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor29, (java.lang.Object[]) classArray39);
        int int44 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray39);
        java.lang.Class[] classArray45 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray39);
        java.lang.Class[] classArray46 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray45);
        java.lang.String[] strArray47 = org.mockito.cglib.core.ReflectUtils.getNames(classArray45);
        java.lang.Class[] classArray48 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray45);
        int int49 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray48);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Constructor constructor50 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass6, classArray48);
            org.junit.Assert.fail("Expected exception of type org.mockito.cglib.core.CodeGenerationException; message: java.lang.NoSuchMethodException-->[Ljava.lang.Class;.<init>()");
        } catch (org.mockito.cglib.core.CodeGenerationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(propertyDescriptorArray0);
        org.junit.Assert.assertNotNull(methodArray3);
        org.junit.Assert.assertNotNull(classArray4);
        org.junit.Assert.assertNotNull(classArray5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(propertyDescriptorArray7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classInfo10);
        org.junit.Assert.assertNull(list12);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(methodArray15);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(methodArray21);
        org.junit.Assert.assertNotNull(methodArray22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(classArray28);
        org.junit.Assert.assertNotNull(constructor29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classInfo32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(propertyDescriptorArray34);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(classArray38);
        org.junit.Assert.assertNotNull(classArray39);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(constructor41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(classArray45);
        org.junit.Assert.assertNotNull(classArray46);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(classArray48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
    }

    @Test
    public void test1383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1383");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.lang.Object obj3 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        org.mockito.cglib.core.ClassInfo classInfo6 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass5);
        java.util.List list7 = null;
        java.util.List list8 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass5, list7);
        java.lang.String[] strArray9 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray10 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray9, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.reflect.Method[] methodArray15 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray9, methodArray14);
        java.lang.String[] strArray16 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray17 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray16, methodArray17);
        java.lang.String[] strArray19 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray20 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray21 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray19, methodArray20);
        java.lang.reflect.Method[] methodArray22 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray16, methodArray21);
        java.lang.reflect.Method[] methodArray23 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray9, methodArray22);
        java.lang.Class[] classArray24 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray22);
        java.lang.reflect.Constructor constructor25 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass5, classArray24);
        java.lang.Class[] classArray26 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray24);
        java.lang.reflect.Constructor constructor27 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray26);
        org.mockito.asm.Type[] typeArray28 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor27);
        org.mockito.cglib.core.Signature signature29 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor27);
        org.mockito.cglib.core.Signature signature30 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor27);
        org.mockito.cglib.core.MethodInfo methodInfo32 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor27, (int) (byte) 1);
        org.mockito.cglib.core.Signature signature33 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor27);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(classInfo6);
        org.junit.Assert.assertNull(list8);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(methodArray15);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(methodArray20);
        org.junit.Assert.assertNotNull(methodArray21);
        org.junit.Assert.assertNotNull(methodArray22);
        org.junit.Assert.assertNotNull(methodArray23);
        org.junit.Assert.assertNotNull(classArray24);
        org.junit.Assert.assertNotNull(constructor25);
        org.junit.Assert.assertNotNull(classArray26);
        org.junit.Assert.assertNotNull(constructor27);
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertNotNull(signature29);
        org.junit.Assert.assertNotNull(signature30);
        org.junit.Assert.assertNotNull(methodInfo32);
        org.junit.Assert.assertNotNull(signature33);
    }

    @Test
    public void test1384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1384");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.lang.Object obj3 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.beans.PropertyDescriptor[] propertyDescriptorArray4 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray4, false, true);
        java.lang.Class[] classArray8 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray4);
        java.lang.Class[] classArray9 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray8);
        java.lang.String[] strArray10 = org.mockito.cglib.core.ReflectUtils.getNames(classArray9);
        java.lang.reflect.Constructor constructor11 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray9);
        java.util.List list12 = null;
        java.util.List list13 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list12);
        java.beans.PropertyDescriptor[] propertyDescriptorArray14 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray14, false, true);
        java.lang.Class[] classArray18 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray14);
        int int19 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray18);
        java.lang.String[] strArray20 = org.mockito.cglib.core.ReflectUtils.getNames(classArray18);
        java.lang.String[] strArray21 = org.mockito.cglib.core.ReflectUtils.getNames(classArray18);
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        org.mockito.cglib.core.ClassInfo classInfo24 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass23);
        java.util.List list25 = null;
        java.util.List list26 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass23, list25);
        java.lang.String[] strArray27 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray28 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray27, methodArray28);
        java.lang.String[] strArray30 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray31 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray32 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray31);
        java.lang.reflect.Method[] methodArray33 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray27, methodArray32);
        java.lang.String[] strArray34 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray35 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray34, methodArray35);
        java.lang.String[] strArray37 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray38 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray39 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray37, methodArray38);
        java.lang.reflect.Method[] methodArray40 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray34, methodArray39);
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray27, methodArray40);
        java.lang.Class[] classArray42 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray40);
        java.lang.reflect.Constructor constructor43 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass23, classArray42);
        org.mockito.cglib.core.MethodInfo methodInfo44 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor43);
        java.beans.PropertyDescriptor[] propertyDescriptorArray45 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray48 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray45, false, true);
        java.lang.reflect.Method[] methodArray51 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray45, false, false);
        java.lang.Object obj52 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor43, (java.lang.Object[]) methodArray51);
        java.beans.PropertyDescriptor[] propertyDescriptorArray53 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray56 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray53, true, true);
        java.lang.Object obj57 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor43, (java.lang.Object[]) propertyDescriptorArray53);
        org.mockito.asm.Type[] typeArray58 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor43);
        java.lang.String[] strArray59 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray60 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray61 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray59, methodArray60);
        java.lang.String[] strArray62 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray63 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray64 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray62, methodArray63);
        java.lang.reflect.Method[] methodArray65 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray59, methodArray64);
        java.lang.String[] strArray66 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray67 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray68 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray66, methodArray67);
        java.lang.String[] strArray69 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray70 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray71 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray69, methodArray70);
        java.lang.reflect.Method[] methodArray72 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray66, methodArray71);
        java.lang.reflect.Method[] methodArray73 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray59, methodArray72);
        java.lang.String[] strArray74 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray75 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray76 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray74, methodArray75);
        java.lang.String[] strArray77 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray78 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray79 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray77, methodArray78);
        java.lang.String[] strArray80 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray81 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray82 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray80, methodArray81);
        java.lang.String[] strArray83 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray84 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray85 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray83, methodArray84);
        java.lang.reflect.Method[] methodArray86 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray80, methodArray85);
        java.lang.reflect.Method[] methodArray87 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray77, methodArray86);
        java.lang.reflect.Method[] methodArray88 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray74, methodArray87);
        java.lang.reflect.Method[] methodArray89 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray59, methodArray87);
        java.lang.Object obj90 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor43, (java.lang.Object[]) methodArray87);
        java.lang.Class[] classArray91 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray87);
        java.lang.Object obj92 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray18, (java.lang.Object[]) methodArray87);
        int int93 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray18);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(propertyDescriptorArray4);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(classArray8);
        org.junit.Assert.assertNotNull(classArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(constructor11);
        org.junit.Assert.assertNull(list13);
        org.junit.Assert.assertNotNull(propertyDescriptorArray14);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(classInfo24);
        org.junit.Assert.assertNull(list26);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(methodArray33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(methodArray38);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(classArray42);
        org.junit.Assert.assertNotNull(constructor43);
        org.junit.Assert.assertNotNull(methodInfo44);
        org.junit.Assert.assertNotNull(propertyDescriptorArray45);
        org.junit.Assert.assertNotNull(methodArray48);
        org.junit.Assert.assertNotNull(methodArray51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(propertyDescriptorArray53);
        org.junit.Assert.assertNotNull(methodArray56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(typeArray58);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(methodArray60);
        org.junit.Assert.assertNotNull(methodArray61);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(methodArray63);
        org.junit.Assert.assertNotNull(methodArray64);
        org.junit.Assert.assertNotNull(methodArray65);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(methodArray67);
        org.junit.Assert.assertNotNull(methodArray68);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(methodArray70);
        org.junit.Assert.assertNotNull(methodArray71);
        org.junit.Assert.assertNotNull(methodArray72);
        org.junit.Assert.assertNotNull(methodArray73);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertNotNull(methodArray75);
        org.junit.Assert.assertNotNull(methodArray76);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(methodArray78);
        org.junit.Assert.assertNotNull(methodArray79);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertNotNull(methodArray81);
        org.junit.Assert.assertNotNull(methodArray82);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertNotNull(methodArray84);
        org.junit.Assert.assertNotNull(methodArray85);
        org.junit.Assert.assertNotNull(methodArray86);
        org.junit.Assert.assertNotNull(methodArray87);
        org.junit.Assert.assertNotNull(methodArray88);
        org.junit.Assert.assertNotNull(methodArray89);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(classArray91);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 0 + "'", int93 == 0);
    }

    @Test
    public void test1385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1385");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.lang.Object obj3 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.beans.PropertyDescriptor[] propertyDescriptorArray4 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray4, false, true);
        java.lang.Class[] classArray8 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray4);
        java.lang.Class[] classArray9 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray8);
        java.lang.String[] strArray10 = org.mockito.cglib.core.ReflectUtils.getNames(classArray9);
        java.lang.reflect.Constructor constructor11 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray9);
        org.mockito.cglib.core.MethodInfo methodInfo12 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor11);
        org.mockito.cglib.core.MethodInfo methodInfo13 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor11);
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        org.mockito.cglib.core.ClassInfo classInfo16 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass15);
        java.util.List list17 = null;
        java.util.List list18 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass15, list17);
        java.lang.String[] strArray19 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray20 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray21 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray19, methodArray20);
        java.lang.String[] strArray22 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray23 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray24 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray22, methodArray23);
        java.lang.reflect.Method[] methodArray25 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray19, methodArray24);
        java.lang.String[] strArray26 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray27 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray26, methodArray27);
        java.lang.String[] strArray29 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray30 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray31 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray29, methodArray30);
        java.lang.reflect.Method[] methodArray32 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray26, methodArray31);
        java.lang.reflect.Method[] methodArray33 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray19, methodArray32);
        java.lang.Class[] classArray34 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray32);
        java.lang.reflect.Constructor constructor35 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass15, classArray34);
        org.mockito.cglib.core.MethodInfo methodInfo36 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor35);
        org.mockito.asm.Type[] typeArray37 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor35);
        java.lang.Object obj38 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor11, (java.lang.Object[]) typeArray37);
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        org.mockito.cglib.core.ClassInfo classInfo41 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass40);
        java.lang.Object obj42 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass40);
        java.beans.PropertyDescriptor[] propertyDescriptorArray43 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray46 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray43, false, true);
        java.lang.Class[] classArray47 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray43);
        java.lang.Class[] classArray48 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray47);
        java.lang.String[] strArray49 = org.mockito.cglib.core.ReflectUtils.getNames(classArray48);
        java.lang.reflect.Constructor constructor50 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass40, classArray48);
        org.mockito.cglib.core.MethodInfo methodInfo51 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor50);
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray54 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray57 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray54, false, true);
        java.lang.Class[] classArray58 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray57);
        java.lang.Object[] objArray59 = null;
        java.lang.Object obj60 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass53, classArray58, objArray59);
        java.lang.Object obj61 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor50, (java.lang.Object[]) classArray58);
        java.lang.String[] strArray62 = org.mockito.cglib.core.ReflectUtils.getNames(classArray58);
        java.lang.Object obj63 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor11, (java.lang.Object[]) classArray58);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(propertyDescriptorArray4);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(classArray8);
        org.junit.Assert.assertNotNull(classArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(constructor11);
        org.junit.Assert.assertNotNull(methodInfo12);
        org.junit.Assert.assertNotNull(methodInfo13);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(classInfo16);
        org.junit.Assert.assertNull(list18);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(methodArray20);
        org.junit.Assert.assertNotNull(methodArray21);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(methodArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(methodArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(methodArray33);
        org.junit.Assert.assertNotNull(classArray34);
        org.junit.Assert.assertNotNull(constructor35);
        org.junit.Assert.assertNotNull(methodInfo36);
        org.junit.Assert.assertNotNull(typeArray37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(classInfo41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(propertyDescriptorArray43);
        org.junit.Assert.assertNotNull(methodArray46);
        org.junit.Assert.assertNotNull(classArray47);
        org.junit.Assert.assertNotNull(classArray48);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(constructor50);
        org.junit.Assert.assertNotNull(methodInfo51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(propertyDescriptorArray54);
        org.junit.Assert.assertNotNull(methodArray57);
        org.junit.Assert.assertNotNull(classArray58);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(obj63);
    }

    @Test
    public void test1386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1386");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray1 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray2 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray1);
        java.lang.String[] strArray3 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray4 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray3, methodArray4);
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray5);
        java.lang.String[] strArray7 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray8 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray9 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.reflect.Method[] methodArray13 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray12);
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray13);
        java.lang.Class<?> wildcardClass15 = strArray0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo16 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass15);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method17 = org.mockito.cglib.core.ReflectUtils.findInterfaceMethod((java.lang.Class) wildcardClass15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: class [Ljava.lang.String; is not an interface");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(methodArray1);
        org.junit.Assert.assertNotNull(methodArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(methodArray4);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(methodArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(classInfo16);
    }

    @Test
    public void test1387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1387");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.beans.PropertyDescriptor[] propertyDescriptorArray23 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray23, false, true);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray23, false, false);
        java.lang.Object obj30 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) methodArray29);
        java.beans.PropertyDescriptor[] propertyDescriptorArray31 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray31, true, true);
        java.lang.Object obj35 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) propertyDescriptorArray31);
        java.lang.String[] strArray36 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray37 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray38 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray37);
        java.lang.String[] strArray39 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray40 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray39, methodArray40);
        java.lang.String[] strArray42 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray43 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray44 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray42, methodArray43);
        java.lang.reflect.Method[] methodArray45 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray39, methodArray44);
        java.lang.reflect.Method[] methodArray46 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray45);
        java.lang.Object obj47 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) methodArray46);
        java.lang.Class<?> wildcardClass48 = methodArray46.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray49 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass48);
        java.beans.PropertyDescriptor[] propertyDescriptorArray50 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass48);
        java.util.List list51 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List list52 = org.mockito.cglib.core.ReflectUtils.addAllMethods((java.lang.Class) wildcardClass48, list51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(propertyDescriptorArray23);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(propertyDescriptorArray31);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(methodArray38);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(methodArray43);
        org.junit.Assert.assertNotNull(methodArray44);
        org.junit.Assert.assertNotNull(methodArray45);
        org.junit.Assert.assertNotNull(methodArray46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(propertyDescriptorArray49);
        org.junit.Assert.assertNotNull(propertyDescriptorArray50);
    }

    @Test
    public void test1388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1388");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.lang.Class<?> wildcardClass23 = constructor21.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray24 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass23);
        java.lang.reflect.Method[] methodArray27 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray24, true, true);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(propertyDescriptorArray24);
        org.junit.Assert.assertNotNull(methodArray27);
    }

    @Test
    public void test1389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1389");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.lang.String[] strArray23 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray24 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray25 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray24);
        java.lang.String[] strArray26 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray27 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray26, methodArray27);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray28);
        java.lang.String[] strArray30 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray31 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray32 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray31);
        java.lang.String[] strArray33 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray34 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray33, methodArray34);
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray35);
        java.lang.reflect.Method[] methodArray37 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray36);
        java.lang.String[] strArray38 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray39 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray40 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray38, methodArray39);
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray40);
        java.lang.Object obj42 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) strArray23);
        org.mockito.asm.Type[] typeArray43 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        java.lang.Object[] objArray44 = null;
        java.lang.Object obj45 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, objArray44);
        org.mockito.cglib.core.MethodInfo methodInfo47 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21, (int) '4');
        org.mockito.cglib.core.Signature signature48 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor21);
        org.mockito.cglib.core.MethodInfo methodInfo50 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21, (-1));
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(methodInfo47);
        org.junit.Assert.assertNotNull(signature48);
        org.junit.Assert.assertNotNull(methodInfo50);
    }

    @Test
    public void test1390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1390");
        java.beans.PropertyDescriptor[] propertyDescriptorArray0 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray3 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray0, false, true);
        java.lang.Class[] classArray4 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray0);
        java.lang.Class[] classArray5 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray4);
        java.lang.String[] strArray6 = org.mockito.cglib.core.ReflectUtils.getNames(classArray4);
        java.lang.Class<?> wildcardClass7 = strArray6.getClass();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        org.mockito.cglib.core.ClassInfo classInfo10 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass9);
        java.util.List list11 = null;
        java.util.List list12 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass9, list11);
        java.beans.PropertyDescriptor[] propertyDescriptorArray13 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray16 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray13, false, true);
        java.lang.Class[] classArray17 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray13);
        int int18 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray17);
        java.lang.String[] strArray19 = org.mockito.cglib.core.ReflectUtils.getNames(classArray17);
        java.lang.String[] strArray20 = org.mockito.cglib.core.ReflectUtils.getNames(classArray17);
        java.lang.String[] strArray21 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray22 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray23 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray21, methodArray22);
        java.lang.String[] strArray24 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray25 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray24, methodArray25);
        java.lang.reflect.Method[] methodArray27 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray21, methodArray26);
        java.lang.String[] strArray28 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray29 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray30 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray28, methodArray29);
        java.lang.String[] strArray31 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray32 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray33 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray31, methodArray32);
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray28, methodArray33);
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray21, methodArray34);
        java.lang.Object obj36 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass9, classArray17, (java.lang.Object[]) methodArray35);
        java.lang.Class[] classArray37 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray17);
        int int38 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray17);
        java.lang.Class[] classArray39 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray17);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Constructor constructor40 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass7, classArray39);
            org.junit.Assert.fail("Expected exception of type org.mockito.cglib.core.CodeGenerationException; message: java.lang.NoSuchMethodException-->[Ljava.lang.String;.<init>()");
        } catch (org.mockito.cglib.core.CodeGenerationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(propertyDescriptorArray0);
        org.junit.Assert.assertNotNull(methodArray3);
        org.junit.Assert.assertNotNull(classArray4);
        org.junit.Assert.assertNotNull(classArray5);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classInfo10);
        org.junit.Assert.assertNull(list12);
        org.junit.Assert.assertNotNull(propertyDescriptorArray13);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(classArray17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(methodArray22);
        org.junit.Assert.assertNotNull(methodArray23);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(methodArray30);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(methodArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(classArray37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(classArray39);
    }

    @Test
    public void test1391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1391");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray1 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray2 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray1);
        java.lang.String[] strArray3 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray4 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray3, methodArray4);
        java.lang.String[] strArray6 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray7 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray8 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray6, methodArray7);
        java.lang.reflect.Method[] methodArray9 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray3, methodArray8);
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray9);
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        org.mockito.cglib.core.ClassInfo classInfo13 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass12);
        java.lang.Object obj14 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass12);
        java.beans.PropertyDescriptor[] propertyDescriptorArray15 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray15, false, true);
        java.lang.Class[] classArray19 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray15);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray19);
        java.lang.String[] strArray21 = org.mockito.cglib.core.ReflectUtils.getNames(classArray20);
        java.lang.reflect.Constructor constructor22 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass12, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo23 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor22);
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray26 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray26, false, true);
        java.lang.Class[] classArray30 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray29);
        java.lang.Object[] objArray31 = null;
        java.lang.Object obj32 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass25, classArray30, objArray31);
        java.lang.Object obj33 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor22, (java.lang.Object[]) classArray30);
        java.lang.String[] strArray34 = org.mockito.cglib.core.ReflectUtils.getNames(classArray30);
        java.beans.PropertyDescriptor[] propertyDescriptorArray35 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray38 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray35, false, true);
        java.lang.reflect.Method[] methodArray39 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray34, methodArray38);
        java.lang.reflect.Method[] methodArray40 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray39);
        java.lang.Class<?> wildcardClass41 = methodArray39.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method42 = org.mockito.cglib.core.ReflectUtils.findInterfaceMethod((java.lang.Class) wildcardClass41);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: class [Ljava.lang.reflect.Method; is not an interface");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(methodArray1);
        org.junit.Assert.assertNotNull(methodArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(methodArray4);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(methodArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(classInfo13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(propertyDescriptorArray15);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(classArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(constructor22);
        org.junit.Assert.assertNotNull(methodInfo23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(propertyDescriptorArray26);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(classArray30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(propertyDescriptorArray35);
        org.junit.Assert.assertNotNull(methodArray38);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test1392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1392");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.util.List list5 = null;
        java.util.List list6 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list5);
        java.lang.Object obj7 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        org.mockito.cglib.core.ClassInfo classInfo8 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method9 = org.mockito.cglib.core.ReflectUtils.findNewInstance((java.lang.Class) wildcardClass1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: class java.lang.Object is not an interface");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNull(list6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(classInfo8);
    }

    @Test
    public void test1393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1393");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        java.util.List list2 = null;
        java.util.List list3 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list2);
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        org.mockito.cglib.core.ClassInfo classInfo6 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass5);
        java.beans.PropertyDescriptor[] propertyDescriptorArray8 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray8, false, true);
        java.lang.Class[] classArray12 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray8);
        java.lang.Class[] classArray13 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray12);
        java.lang.String[] strArray14 = org.mockito.cglib.core.ReflectUtils.getNames(classArray13);
        java.lang.reflect.Constructor constructor15 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass5, classArray13);
        org.mockito.cglib.core.MethodInfo methodInfo16 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor15);
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray19 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray22 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray19, false, true);
        java.lang.Class[] classArray23 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray22);
        java.lang.Object[] objArray24 = null;
        java.lang.Object obj25 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass18, classArray23, objArray24);
        java.lang.Object obj26 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor15, (java.lang.Object[]) classArray23);
        java.lang.String[] strArray27 = org.mockito.cglib.core.ReflectUtils.getNames(classArray23);
        java.lang.reflect.Constructor constructor28 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray23);
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray31 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray31, false, true);
        java.lang.Class[] classArray35 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray34);
        java.lang.Object[] objArray36 = null;
        java.lang.Object obj37 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass30, classArray35, objArray36);
        int int38 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray35);
        java.lang.reflect.Constructor constructor39 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray35);
        java.lang.Class[] classArray40 = null;
        java.lang.reflect.Constructor constructor41 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray40);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNull(list3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(classInfo6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(propertyDescriptorArray8);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(classArray13);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(constructor15);
        org.junit.Assert.assertNotNull(methodInfo16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(propertyDescriptorArray19);
        org.junit.Assert.assertNotNull(methodArray22);
        org.junit.Assert.assertNotNull(classArray23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(constructor28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(propertyDescriptorArray31);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(classArray35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(constructor39);
        org.junit.Assert.assertNotNull(constructor41);
    }

    @Test
    public void test1394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1394");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        java.util.List list2 = null;
        java.util.List list3 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list2);
        java.lang.Object obj4 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.lang.Object obj5 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass7);
        java.lang.Object obj9 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass7);
        java.lang.Object obj10 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass7);
        org.mockito.cglib.core.ClassInfo classInfo11 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass7);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.String[] strArray18 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray19 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray20 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray18, methodArray19);
        java.lang.reflect.Method[] methodArray21 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray20);
        java.lang.reflect.Method[] methodArray22 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray21);
        java.lang.Class[] classArray23 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) strArray12);
        java.beans.PropertyDescriptor[] propertyDescriptorArray24 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray27 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray24, false, true);
        java.lang.reflect.Method[] methodArray30 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray24, false, false);
        java.lang.reflect.Method[] methodArray33 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray24, true, false);
        java.lang.Object obj34 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass7, classArray23, (java.lang.Object[]) propertyDescriptorArray24);
        java.lang.Object obj35 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass7);
        org.mockito.cglib.core.ClassInfo classInfo36 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass7);
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Object obj39 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass38);
        java.beans.PropertyDescriptor[] propertyDescriptorArray40 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray43 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray40, false, true);
        java.lang.Class[] classArray44 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray40);
        java.lang.Class[] classArray45 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray44);
        java.lang.String[] strArray46 = org.mockito.cglib.core.ReflectUtils.getNames(classArray45);
        java.lang.String[] strArray47 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray48 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray49 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray47, methodArray48);
        java.lang.Object obj50 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass38, classArray45, (java.lang.Object[]) strArray47);
        java.lang.Object obj51 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass38);
        java.beans.PropertyDescriptor[] propertyDescriptorArray52 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray55 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray52, false, true);
        java.lang.Class[] classArray56 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray52);
        java.lang.Class[] classArray57 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray56);
        java.lang.String[] strArray58 = org.mockito.cglib.core.ReflectUtils.getNames(classArray56);
        java.lang.reflect.Constructor constructor59 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass38, classArray56);
        java.lang.reflect.Constructor constructor60 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass7, classArray56);
        java.lang.String[] strArray61 = org.mockito.cglib.core.ReflectUtils.getNames(classArray56);
        java.lang.reflect.Constructor constructor62 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray56);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method63 = org.mockito.cglib.core.ReflectUtils.findInterfaceMethod((java.lang.Class) wildcardClass1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: class java.lang.Object is not an interface");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNull(list3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(classInfo11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(methodArray20);
        org.junit.Assert.assertNotNull(methodArray21);
        org.junit.Assert.assertNotNull(methodArray22);
        org.junit.Assert.assertNotNull(classArray23);
        org.junit.Assert.assertNotNull(propertyDescriptorArray24);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(methodArray30);
        org.junit.Assert.assertNotNull(methodArray33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(classInfo36);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(propertyDescriptorArray40);
        org.junit.Assert.assertNotNull(methodArray43);
        org.junit.Assert.assertNotNull(classArray44);
        org.junit.Assert.assertNotNull(classArray45);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(methodArray48);
        org.junit.Assert.assertNotNull(methodArray49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(propertyDescriptorArray52);
        org.junit.Assert.assertNotNull(methodArray55);
        org.junit.Assert.assertNotNull(classArray56);
        org.junit.Assert.assertNotNull(classArray57);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(constructor59);
        org.junit.Assert.assertNotNull(constructor60);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(constructor62);
    }

    @Test
    public void test1395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1395");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.lang.String[] strArray23 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray24 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray25 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray24);
        java.lang.String[] strArray26 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray27 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray26, methodArray27);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray28);
        java.lang.String[] strArray30 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray31 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray32 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray31);
        java.lang.String[] strArray33 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray34 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray33, methodArray34);
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray35);
        java.lang.reflect.Method[] methodArray37 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray36);
        java.lang.String[] strArray38 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray39 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray40 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray38, methodArray39);
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray40);
        java.lang.Object obj42 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) strArray23);
        org.mockito.asm.Type[] typeArray43 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        java.lang.Object[] objArray44 = null;
        java.lang.Object obj45 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, objArray44);
        org.mockito.cglib.core.Signature signature46 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor21);
        java.beans.PropertyDescriptor[] propertyDescriptorArray47 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray50 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray47, false, true);
        java.lang.Class[] classArray51 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray47);
        java.lang.reflect.Method[] methodArray54 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray47, false, true);
        java.lang.Object obj55 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) methodArray54);
        java.lang.Class<?> wildcardClass56 = methodArray54.getClass();
        org.mockito.cglib.core.ClassInfo classInfo57 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(signature46);
        org.junit.Assert.assertNotNull(propertyDescriptorArray47);
        org.junit.Assert.assertNotNull(methodArray50);
        org.junit.Assert.assertNotNull(classArray51);
        org.junit.Assert.assertNotNull(methodArray54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(classInfo57);
    }

    @Test
    public void test1396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1396");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.lang.Object obj3 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.beans.PropertyDescriptor[] propertyDescriptorArray4 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray4, false, true);
        java.lang.Class[] classArray8 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray4);
        java.lang.Class[] classArray9 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray8);
        java.lang.String[] strArray10 = org.mockito.cglib.core.ReflectUtils.getNames(classArray9);
        java.lang.reflect.Constructor constructor11 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray9);
        org.mockito.cglib.core.MethodInfo methodInfo12 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass14);
        java.lang.Object obj16 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass14);
        java.lang.String[] strArray17 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray18 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray17, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) strArray17);
        java.lang.String[] strArray21 = org.mockito.cglib.core.ReflectUtils.getNames(classArray20);
        java.beans.PropertyDescriptor[] propertyDescriptorArray22 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray25 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray22, false, true);
        java.lang.Class[] classArray26 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray22);
        int int27 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray26);
        int int28 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray26);
        java.lang.Object obj29 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass14, classArray20, (java.lang.Object[]) classArray26);
        java.lang.Object obj30 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor11, (java.lang.Object[]) classArray20);
        org.mockito.cglib.core.Signature signature31 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor11);
        java.beans.PropertyDescriptor[] propertyDescriptorArray32 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray32, false, true);
        java.lang.Class[] classArray36 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray32);
        int int37 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray36);
        java.lang.String[] strArray38 = org.mockito.cglib.core.ReflectUtils.getNames(classArray36);
        java.lang.String[] strArray39 = org.mockito.cglib.core.ReflectUtils.getNames(classArray36);
        java.lang.String[] strArray40 = org.mockito.cglib.core.ReflectUtils.getNames(classArray36);
        java.lang.Class[] classArray41 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) strArray40);
        java.beans.PropertyDescriptor[] propertyDescriptorArray42 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray45 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray42, false, true);
        java.lang.reflect.Method[] methodArray48 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray42, false, false);
        java.lang.reflect.Method[] methodArray51 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray42, true, false);
        java.lang.Class[] classArray52 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray51);
        java.lang.reflect.Method[] methodArray53 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray40, methodArray51);
        java.beans.PropertyDescriptor[] propertyDescriptorArray54 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray57 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray54, false, true);
        java.lang.reflect.Method[] methodArray60 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray54, false, false);
        java.lang.reflect.Method[] methodArray63 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray54, true, false);
        java.lang.reflect.Method[] methodArray64 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray40, methodArray63);
        java.lang.Object obj65 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor11, (java.lang.Object[]) methodArray64);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(propertyDescriptorArray4);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(classArray8);
        org.junit.Assert.assertNotNull(classArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(constructor11);
        org.junit.Assert.assertNotNull(methodInfo12);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(propertyDescriptorArray22);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(classArray26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(signature31);
        org.junit.Assert.assertNotNull(propertyDescriptorArray32);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(classArray36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(classArray41);
        org.junit.Assert.assertNotNull(propertyDescriptorArray42);
        org.junit.Assert.assertNotNull(methodArray45);
        org.junit.Assert.assertNotNull(methodArray48);
        org.junit.Assert.assertNotNull(methodArray51);
        org.junit.Assert.assertNotNull(classArray52);
        org.junit.Assert.assertNotNull(methodArray53);
        org.junit.Assert.assertNotNull(propertyDescriptorArray54);
        org.junit.Assert.assertNotNull(methodArray57);
        org.junit.Assert.assertNotNull(methodArray60);
        org.junit.Assert.assertNotNull(methodArray63);
        org.junit.Assert.assertNotNull(methodArray64);
        org.junit.Assert.assertNotNull(obj65);
    }

    @Test
    public void test1397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1397");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        org.mockito.cglib.core.MethodInfo methodInfo24 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21, (int) '#');
        org.mockito.asm.Type[] typeArray25 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        org.mockito.cglib.core.MethodInfo methodInfo27 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21, 0);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(methodInfo24);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertNotNull(methodInfo27);
    }

    @Test
    public void test1398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1398");
        byte[] byteArray5 = new byte[] { (byte) 100, (byte) 1, (byte) 0, (byte) 10 };
        java.lang.ClassLoader classLoader6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class7 = org.mockito.cglib.core.ReflectUtils.defineClass("", byteArray5, classLoader6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[100, 1, 0, 10]");
    }

    @Test
    public void test1399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1399");
        byte[] byteArray2 = new byte[] { (byte) 10 };
        java.lang.ClassLoader classLoader3 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class4 = org.mockito.cglib.core.ReflectUtils.defineClass("hi!", byteArray2, classLoader3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[10]");
    }

    @Test
    public void test1400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1400");
        byte[] byteArray4 = new byte[] { (byte) 0, (byte) -1, (byte) 1 };
        java.lang.ClassLoader classLoader5 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class6 = org.mockito.cglib.core.ReflectUtils.defineClass("hi!", byteArray4, classLoader5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[0, -1, 1]");
    }

    @Test
    public void test1401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1401");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo23 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21, (int) ' ');
        org.mockito.cglib.core.MethodInfo methodInfo25 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21, 10);
        org.mockito.cglib.core.MethodInfo methodInfo27 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21, 100);
        org.mockito.cglib.core.MethodInfo methodInfo28 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray31 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray31, false, true);
        java.lang.Class[] classArray35 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray34);
        java.lang.Object[] objArray36 = null;
        java.lang.Object obj37 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass30, classArray35, objArray36);
        java.lang.Class[] classArray38 = null;
        java.lang.reflect.Constructor constructor39 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass30, classArray38);
        java.lang.Class[] classArray40 = null;
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        org.mockito.cglib.core.ClassInfo classInfo43 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass42);
        java.util.List list44 = null;
        java.util.List list45 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass42, list44);
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        org.mockito.cglib.core.ClassInfo classInfo48 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass47);
        java.util.List list49 = null;
        java.util.List list50 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass47, list49);
        java.lang.String[] strArray51 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray52 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray53 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray51, methodArray52);
        java.lang.String[] strArray54 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray55 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray56 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray54, methodArray55);
        java.lang.reflect.Method[] methodArray57 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray51, methodArray56);
        java.lang.String[] strArray58 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray59 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray60 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray58, methodArray59);
        java.lang.String[] strArray61 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray62 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray63 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray61, methodArray62);
        java.lang.reflect.Method[] methodArray64 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray58, methodArray63);
        java.lang.reflect.Method[] methodArray65 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray51, methodArray64);
        java.lang.Class[] classArray66 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray64);
        java.lang.reflect.Constructor constructor67 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass47, classArray66);
        java.lang.Class[] classArray68 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray66);
        java.lang.String[] strArray69 = org.mockito.cglib.core.ReflectUtils.getNames(classArray68);
        java.lang.reflect.Constructor constructor70 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass42, classArray68);
        int int71 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray68);
        java.lang.Object obj72 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass30, classArray40, (java.lang.Object[]) classArray68);
        java.lang.Object obj73 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) classArray68);
        java.lang.Class<?> wildcardClass74 = constructor21.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray75 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass74);
        java.lang.reflect.Method[] methodArray78 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray75, false, true);
        java.lang.reflect.Method[] methodArray81 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray75, true, true);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo23);
        org.junit.Assert.assertNotNull(methodInfo25);
        org.junit.Assert.assertNotNull(methodInfo27);
        org.junit.Assert.assertNotNull(methodInfo28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(propertyDescriptorArray31);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(classArray35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(constructor39);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(classInfo43);
        org.junit.Assert.assertNull(list45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(classInfo48);
        org.junit.Assert.assertNull(list50);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(methodArray52);
        org.junit.Assert.assertNotNull(methodArray53);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(methodArray55);
        org.junit.Assert.assertNotNull(methodArray56);
        org.junit.Assert.assertNotNull(methodArray57);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(methodArray59);
        org.junit.Assert.assertNotNull(methodArray60);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(methodArray62);
        org.junit.Assert.assertNotNull(methodArray63);
        org.junit.Assert.assertNotNull(methodArray64);
        org.junit.Assert.assertNotNull(methodArray65);
        org.junit.Assert.assertNotNull(classArray66);
        org.junit.Assert.assertNotNull(constructor67);
        org.junit.Assert.assertNotNull(classArray68);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(constructor70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(propertyDescriptorArray75);
        org.junit.Assert.assertNotNull(methodArray78);
        org.junit.Assert.assertNotNull(methodArray81);
    }

    @Test
    public void test1402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1402");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.lang.Object obj3 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        org.mockito.cglib.core.ClassInfo classInfo6 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass5);
        java.util.List list7 = null;
        java.util.List list8 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass5, list7);
        java.lang.String[] strArray9 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray10 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray9, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.reflect.Method[] methodArray15 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray9, methodArray14);
        java.lang.String[] strArray16 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray17 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray16, methodArray17);
        java.lang.String[] strArray19 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray20 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray21 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray19, methodArray20);
        java.lang.reflect.Method[] methodArray22 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray16, methodArray21);
        java.lang.reflect.Method[] methodArray23 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray9, methodArray22);
        java.lang.Class[] classArray24 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray22);
        java.lang.reflect.Constructor constructor25 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass5, classArray24);
        java.lang.Class[] classArray26 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray24);
        java.lang.reflect.Constructor constructor27 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray26);
        java.lang.Object obj28 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.util.List list29 = null;
        java.util.List list30 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list29);
        java.lang.String[] strArray31 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray32 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray33 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray31, methodArray32);
        java.lang.String[] strArray34 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray35 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray34, methodArray35);
        java.lang.reflect.Method[] methodArray37 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray31, methodArray36);
        java.lang.String[] strArray38 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray39 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray40 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray38, methodArray39);
        java.lang.String[] strArray41 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray42 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray43 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray41, methodArray42);
        java.lang.reflect.Method[] methodArray44 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray38, methodArray43);
        java.lang.reflect.Method[] methodArray45 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray31, methodArray44);
        java.lang.Class<?> wildcardClass46 = methodArray44.getClass();
        org.mockito.cglib.core.ClassInfo classInfo47 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass46);
        java.beans.PropertyDescriptor[] propertyDescriptorArray48 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass46);
        java.beans.PropertyDescriptor[] propertyDescriptorArray49 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass46);
        java.beans.PropertyDescriptor[] propertyDescriptorArray50 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass46);
        java.lang.Class[] classArray51 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray50);
        java.lang.String[] strArray52 = org.mockito.cglib.core.ReflectUtils.getNames(classArray51);
        java.lang.String[] strArray53 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray54 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray55 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray53, methodArray54);
        java.lang.String[] strArray56 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray57 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray58 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray56, methodArray57);
        java.lang.reflect.Method[] methodArray59 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray53, methodArray58);
        java.lang.String[] strArray60 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray61 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray62 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray60, methodArray61);
        java.lang.String[] strArray63 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray64 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray65 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray63, methodArray64);
        java.lang.reflect.Method[] methodArray66 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray60, methodArray65);
        java.lang.reflect.Method[] methodArray67 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray53, methodArray66);
        java.lang.Class[] classArray68 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray66);
        java.lang.Class[] classArray69 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray66);
        java.lang.Object obj70 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray51, (java.lang.Object[]) classArray69);
        java.lang.Object obj71 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(classInfo6);
        org.junit.Assert.assertNull(list8);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(methodArray15);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(methodArray20);
        org.junit.Assert.assertNotNull(methodArray21);
        org.junit.Assert.assertNotNull(methodArray22);
        org.junit.Assert.assertNotNull(methodArray23);
        org.junit.Assert.assertNotNull(classArray24);
        org.junit.Assert.assertNotNull(constructor25);
        org.junit.Assert.assertNotNull(classArray26);
        org.junit.Assert.assertNotNull(constructor27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNull(list30);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(methodArray33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(methodArray42);
        org.junit.Assert.assertNotNull(methodArray43);
        org.junit.Assert.assertNotNull(methodArray44);
        org.junit.Assert.assertNotNull(methodArray45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(classInfo47);
        org.junit.Assert.assertNotNull(propertyDescriptorArray48);
        org.junit.Assert.assertNotNull(propertyDescriptorArray49);
        org.junit.Assert.assertNotNull(propertyDescriptorArray50);
        org.junit.Assert.assertNotNull(classArray51);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(methodArray54);
        org.junit.Assert.assertNotNull(methodArray55);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(methodArray57);
        org.junit.Assert.assertNotNull(methodArray58);
        org.junit.Assert.assertNotNull(methodArray59);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(methodArray61);
        org.junit.Assert.assertNotNull(methodArray62);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(methodArray64);
        org.junit.Assert.assertNotNull(methodArray65);
        org.junit.Assert.assertNotNull(methodArray66);
        org.junit.Assert.assertNotNull(methodArray67);
        org.junit.Assert.assertNotNull(classArray68);
        org.junit.Assert.assertNotNull(classArray69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(obj71);
    }

    @Test
    public void test1403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1403");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.lang.Object obj3 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        org.mockito.cglib.core.ClassInfo classInfo4 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list5 = null;
        java.util.List list6 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list5);
        java.lang.Object obj7 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(classInfo4);
        org.junit.Assert.assertNull(list6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test1404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1404");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        java.util.List list2 = null;
        java.util.List list3 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list2);
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        org.mockito.cglib.core.ClassInfo classInfo6 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass5);
        java.beans.PropertyDescriptor[] propertyDescriptorArray8 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray8, false, true);
        java.lang.Class[] classArray12 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray8);
        java.lang.Class[] classArray13 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray12);
        java.lang.String[] strArray14 = org.mockito.cglib.core.ReflectUtils.getNames(classArray13);
        java.lang.reflect.Constructor constructor15 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass5, classArray13);
        org.mockito.cglib.core.MethodInfo methodInfo16 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor15);
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray19 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray22 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray19, false, true);
        java.lang.Class[] classArray23 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray22);
        java.lang.Object[] objArray24 = null;
        java.lang.Object obj25 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass18, classArray23, objArray24);
        java.lang.Object obj26 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor15, (java.lang.Object[]) classArray23);
        java.lang.String[] strArray27 = org.mockito.cglib.core.ReflectUtils.getNames(classArray23);
        java.lang.reflect.Constructor constructor28 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray23);
        java.lang.String[] strArray29 = org.mockito.cglib.core.ReflectUtils.getNames(classArray23);
        java.lang.String[] strArray30 = org.mockito.cglib.core.ReflectUtils.getNames(classArray23);
        java.beans.PropertyDescriptor[] propertyDescriptorArray31 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray31, false, true);
        java.lang.Class[] classArray35 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray31);
        java.lang.Class[] classArray36 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray35);
        java.lang.Class<?> wildcardClass37 = classArray35.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray38 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass37);
        java.lang.Class[] classArray39 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray38);
        java.lang.reflect.Method[] methodArray42 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray38, true, true);
        java.lang.reflect.Method[] methodArray45 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray38, false, false);
        java.lang.reflect.Method[] methodArray46 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray45);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNull(list3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(classInfo6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(propertyDescriptorArray8);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(classArray13);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(constructor15);
        org.junit.Assert.assertNotNull(methodInfo16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(propertyDescriptorArray19);
        org.junit.Assert.assertNotNull(methodArray22);
        org.junit.Assert.assertNotNull(classArray23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(constructor28);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(propertyDescriptorArray31);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(classArray35);
        org.junit.Assert.assertNotNull(classArray36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(propertyDescriptorArray38);
        org.junit.Assert.assertNotNull(classArray39);
        org.junit.Assert.assertNotNull(methodArray42);
        org.junit.Assert.assertNotNull(methodArray45);
        org.junit.Assert.assertNotNull(methodArray46);
    }

    @Test
    public void test1405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1405");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.lang.Object obj3 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        org.mockito.cglib.core.ClassInfo classInfo6 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass5);
        java.util.List list7 = null;
        java.util.List list8 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass5, list7);
        java.lang.String[] strArray9 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray10 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray9, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.reflect.Method[] methodArray15 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray9, methodArray14);
        java.lang.String[] strArray16 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray17 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray16, methodArray17);
        java.lang.String[] strArray19 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray20 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray21 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray19, methodArray20);
        java.lang.reflect.Method[] methodArray22 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray16, methodArray21);
        java.lang.reflect.Method[] methodArray23 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray9, methodArray22);
        java.lang.Class[] classArray24 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray22);
        java.lang.reflect.Constructor constructor25 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass5, classArray24);
        java.lang.Class[] classArray26 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray24);
        java.lang.reflect.Constructor constructor27 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray26);
        int int28 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray26);
        java.lang.String[] strArray29 = org.mockito.cglib.core.ReflectUtils.getNames(classArray26);
        java.lang.String[] strArray30 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray31 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray32 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray31);
        java.lang.String[] strArray33 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray34 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray33, methodArray34);
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray35);
        java.lang.String[] strArray37 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray38 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray39 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray37, methodArray38);
        java.lang.String[] strArray40 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray41 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray42 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray40, methodArray41);
        java.lang.reflect.Method[] methodArray43 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray37, methodArray42);
        java.lang.reflect.Method[] methodArray44 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray43);
        java.lang.Class<?> wildcardClass45 = methodArray43.getClass();
        org.mockito.cglib.core.ClassInfo classInfo46 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass45);
        java.beans.PropertyDescriptor[] propertyDescriptorArray47 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass45);
        java.lang.reflect.Method[] methodArray50 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray47, false, false);
        java.lang.reflect.Method[] methodArray51 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray29, methodArray50);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(classInfo6);
        org.junit.Assert.assertNull(list8);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(methodArray15);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(methodArray20);
        org.junit.Assert.assertNotNull(methodArray21);
        org.junit.Assert.assertNotNull(methodArray22);
        org.junit.Assert.assertNotNull(methodArray23);
        org.junit.Assert.assertNotNull(classArray24);
        org.junit.Assert.assertNotNull(constructor25);
        org.junit.Assert.assertNotNull(classArray26);
        org.junit.Assert.assertNotNull(constructor27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(methodArray38);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(methodArray42);
        org.junit.Assert.assertNotNull(methodArray43);
        org.junit.Assert.assertNotNull(methodArray44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(classInfo46);
        org.junit.Assert.assertNotNull(propertyDescriptorArray47);
        org.junit.Assert.assertNotNull(methodArray50);
        org.junit.Assert.assertNotNull(methodArray51);
    }

    @Test
    public void test1406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1406");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        java.lang.Class[] classArray22 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray20);
        java.lang.String[] strArray23 = org.mockito.cglib.core.ReflectUtils.getNames(classArray22);
        java.beans.PropertyDescriptor[] propertyDescriptorArray24 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray27 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray24, false, true);
        java.lang.reflect.Method[] methodArray30 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray24, false, false);
        java.lang.reflect.Method[] methodArray31 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray30);
        java.lang.Class[] classArray32 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray31);
        int int33 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray32);
        java.lang.String[] strArray34 = org.mockito.cglib.core.ReflectUtils.getNames(classArray32);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(classArray22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(propertyDescriptorArray24);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(methodArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(strArray34);
    }

    @Test
    public void test1407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1407");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.lang.Object obj3 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        org.mockito.cglib.core.ClassInfo classInfo6 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass5);
        java.util.List list7 = null;
        java.util.List list8 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass5, list7);
        java.lang.String[] strArray9 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray10 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray9, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.reflect.Method[] methodArray15 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray9, methodArray14);
        java.lang.String[] strArray16 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray17 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray16, methodArray17);
        java.lang.String[] strArray19 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray20 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray21 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray19, methodArray20);
        java.lang.reflect.Method[] methodArray22 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray16, methodArray21);
        java.lang.reflect.Method[] methodArray23 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray9, methodArray22);
        java.lang.Class[] classArray24 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray22);
        java.lang.reflect.Constructor constructor25 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass5, classArray24);
        java.lang.Class[] classArray26 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray24);
        java.lang.reflect.Constructor constructor27 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray26);
        java.lang.Object obj28 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.beans.PropertyDescriptor[] propertyDescriptorArray29 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray32 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray29, false, true);
        java.lang.Class[] classArray33 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray29);
        java.lang.Class[] classArray34 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray33);
        java.lang.String[] strArray35 = org.mockito.cglib.core.ReflectUtils.getNames(classArray34);
        java.lang.reflect.Constructor constructor36 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray34);
        org.mockito.cglib.core.Signature signature37 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor36);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(classInfo6);
        org.junit.Assert.assertNull(list8);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(methodArray15);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(methodArray20);
        org.junit.Assert.assertNotNull(methodArray21);
        org.junit.Assert.assertNotNull(methodArray22);
        org.junit.Assert.assertNotNull(methodArray23);
        org.junit.Assert.assertNotNull(classArray24);
        org.junit.Assert.assertNotNull(constructor25);
        org.junit.Assert.assertNotNull(classArray26);
        org.junit.Assert.assertNotNull(constructor27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(propertyDescriptorArray29);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(classArray34);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(constructor36);
        org.junit.Assert.assertNotNull(signature37);
    }

    @Test
    public void test1408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1408");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        java.util.List list2 = null;
        java.util.List list3 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list2);
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        org.mockito.cglib.core.ClassInfo classInfo6 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass5);
        java.beans.PropertyDescriptor[] propertyDescriptorArray8 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray8, false, true);
        java.lang.Class[] classArray12 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray8);
        java.lang.Class[] classArray13 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray12);
        java.lang.String[] strArray14 = org.mockito.cglib.core.ReflectUtils.getNames(classArray13);
        java.lang.reflect.Constructor constructor15 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass5, classArray13);
        org.mockito.cglib.core.MethodInfo methodInfo16 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor15);
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray19 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray22 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray19, false, true);
        java.lang.Class[] classArray23 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray22);
        java.lang.Object[] objArray24 = null;
        java.lang.Object obj25 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass18, classArray23, objArray24);
        java.lang.Object obj26 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor15, (java.lang.Object[]) classArray23);
        java.lang.String[] strArray27 = org.mockito.cglib.core.ReflectUtils.getNames(classArray23);
        java.lang.reflect.Constructor constructor28 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray23);
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray31 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray31, false, true);
        java.lang.Class[] classArray35 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray34);
        java.lang.Object[] objArray36 = null;
        java.lang.Object obj37 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass30, classArray35, objArray36);
        int int38 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray35);
        java.lang.reflect.Constructor constructor39 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray35);
        org.mockito.cglib.core.MethodInfo methodInfo41 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor39, (int) (byte) 10);
        org.mockito.cglib.core.MethodInfo methodInfo43 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor39, 0);
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        org.mockito.cglib.core.ClassInfo classInfo46 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass45);
        java.util.List list47 = null;
        java.util.List list48 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass45, list47);
        java.beans.PropertyDescriptor[] propertyDescriptorArray49 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray52 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray49, false, true);
        java.lang.Class[] classArray53 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray49);
        int int54 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray53);
        java.lang.String[] strArray55 = org.mockito.cglib.core.ReflectUtils.getNames(classArray53);
        java.lang.String[] strArray56 = org.mockito.cglib.core.ReflectUtils.getNames(classArray53);
        java.lang.String[] strArray57 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray58 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray59 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray57, methodArray58);
        java.lang.String[] strArray60 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray61 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray62 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray60, methodArray61);
        java.lang.reflect.Method[] methodArray63 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray57, methodArray62);
        java.lang.String[] strArray64 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray65 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray66 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray64, methodArray65);
        java.lang.String[] strArray67 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray68 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray69 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray67, methodArray68);
        java.lang.reflect.Method[] methodArray70 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray64, methodArray69);
        java.lang.reflect.Method[] methodArray71 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray57, methodArray70);
        java.lang.Object obj72 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass45, classArray53, (java.lang.Object[]) methodArray71);
        java.lang.Class[] classArray73 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray53);
        java.lang.Class<?> wildcardClass74 = classArray73.getClass();
        org.mockito.cglib.core.ClassInfo classInfo75 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass74);
        java.beans.PropertyDescriptor[] propertyDescriptorArray76 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass74);
        java.beans.PropertyDescriptor[] propertyDescriptorArray77 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass74);
        java.beans.PropertyDescriptor[] propertyDescriptorArray78 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass74);
        java.beans.PropertyDescriptor[] propertyDescriptorArray79 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass74);
        java.lang.Object obj80 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor39, (java.lang.Object[]) propertyDescriptorArray79);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNull(list3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(classInfo6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(propertyDescriptorArray8);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(classArray13);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(constructor15);
        org.junit.Assert.assertNotNull(methodInfo16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(propertyDescriptorArray19);
        org.junit.Assert.assertNotNull(methodArray22);
        org.junit.Assert.assertNotNull(classArray23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(constructor28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(propertyDescriptorArray31);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(classArray35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(constructor39);
        org.junit.Assert.assertNotNull(methodInfo41);
        org.junit.Assert.assertNotNull(methodInfo43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(classInfo46);
        org.junit.Assert.assertNull(list48);
        org.junit.Assert.assertNotNull(propertyDescriptorArray49);
        org.junit.Assert.assertNotNull(methodArray52);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(methodArray58);
        org.junit.Assert.assertNotNull(methodArray59);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(methodArray61);
        org.junit.Assert.assertNotNull(methodArray62);
        org.junit.Assert.assertNotNull(methodArray63);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(methodArray65);
        org.junit.Assert.assertNotNull(methodArray66);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(methodArray68);
        org.junit.Assert.assertNotNull(methodArray69);
        org.junit.Assert.assertNotNull(methodArray70);
        org.junit.Assert.assertNotNull(methodArray71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(classArray73);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(classInfo75);
        org.junit.Assert.assertNotNull(propertyDescriptorArray76);
        org.junit.Assert.assertNotNull(propertyDescriptorArray77);
        org.junit.Assert.assertNotNull(propertyDescriptorArray78);
        org.junit.Assert.assertNotNull(propertyDescriptorArray79);
        org.junit.Assert.assertNotNull(obj80);
    }

    @Test
    public void test1409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1409");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.beans.PropertyDescriptor[] propertyDescriptorArray23 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray23, false, true);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray23, false, false);
        java.lang.Object obj30 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) methodArray29);
        java.beans.PropertyDescriptor[] propertyDescriptorArray31 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray31, true, true);
        java.lang.Object obj35 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) propertyDescriptorArray31);
        org.mockito.asm.Type[] typeArray36 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        java.beans.PropertyDescriptor[] propertyDescriptorArray37 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray40 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray37, false, true);
        java.lang.Class[] classArray41 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray40);
        java.lang.Object obj42 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) methodArray40);
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method44 = org.mockito.cglib.core.ReflectUtils.findNewInstance((java.lang.Class) wildcardClass43);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: class java.lang.Object is not an interface");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(propertyDescriptorArray23);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(propertyDescriptorArray31);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertNotNull(propertyDescriptorArray37);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(classArray41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test1410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1410");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.lang.String[] strArray23 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray24 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray25 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray24);
        java.lang.String[] strArray26 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray27 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray26, methodArray27);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray28);
        java.lang.String[] strArray30 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray31 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray32 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray31);
        java.lang.String[] strArray33 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray34 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray33, methodArray34);
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray35);
        java.lang.reflect.Method[] methodArray37 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray36);
        java.lang.String[] strArray38 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray39 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray40 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray38, methodArray39);
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray40);
        java.lang.Object obj42 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) strArray23);
        org.mockito.cglib.core.MethodInfo methodInfo43 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.lang.Object[] objArray44 = new java.lang.Object[] {};
        java.lang.Object obj45 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, objArray44);
        org.mockito.cglib.core.Signature signature46 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor21);
        org.mockito.asm.Type[] typeArray47 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        org.mockito.asm.Type[] typeArray48 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.util.List list51 = null;
        java.util.List list52 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass50, list51);
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        org.mockito.cglib.core.ClassInfo classInfo55 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass54);
        java.lang.Object obj56 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass54);
        java.beans.PropertyDescriptor[] propertyDescriptorArray57 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray60 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray57, false, true);
        java.lang.Class[] classArray61 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray57);
        java.lang.Class[] classArray62 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray61);
        java.lang.String[] strArray63 = org.mockito.cglib.core.ReflectUtils.getNames(classArray62);
        java.lang.reflect.Constructor constructor64 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass54, classArray62);
        org.mockito.cglib.core.MethodInfo methodInfo65 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor64);
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray68 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray71 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray68, false, true);
        java.lang.Class[] classArray72 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray71);
        java.lang.Object[] objArray73 = null;
        java.lang.Object obj74 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass67, classArray72, objArray73);
        java.lang.Object obj75 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor64, (java.lang.Object[]) classArray72);
        java.lang.String[] strArray76 = org.mockito.cglib.core.ReflectUtils.getNames(classArray72);
        java.lang.reflect.Constructor constructor77 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass50, classArray72);
        java.lang.String[] strArray78 = org.mockito.cglib.core.ReflectUtils.getNames(classArray72);
        int int79 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray72);
        java.lang.String[] strArray80 = org.mockito.cglib.core.ReflectUtils.getNames(classArray72);
        java.lang.Object obj81 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) classArray72);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(methodInfo43);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[]");
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(signature46);
        org.junit.Assert.assertNotNull(typeArray47);
        org.junit.Assert.assertNotNull(typeArray48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNull(list52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(classInfo55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(propertyDescriptorArray57);
        org.junit.Assert.assertNotNull(methodArray60);
        org.junit.Assert.assertNotNull(classArray61);
        org.junit.Assert.assertNotNull(classArray62);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(constructor64);
        org.junit.Assert.assertNotNull(methodInfo65);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(propertyDescriptorArray68);
        org.junit.Assert.assertNotNull(methodArray71);
        org.junit.Assert.assertNotNull(classArray72);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertNotNull(constructor77);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertNotNull(obj81);
    }

    @Test
    public void test1411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1411");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.beans.PropertyDescriptor[] propertyDescriptorArray23 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray23, false, true);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray23, false, false);
        java.lang.Object obj30 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) methodArray29);
        java.lang.String[] strArray31 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray32 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray33 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray31, methodArray32);
        java.lang.String[] strArray34 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray35 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray34, methodArray35);
        java.lang.reflect.Method[] methodArray37 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray31, methodArray36);
        java.lang.String[] strArray38 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray39 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray40 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray38, methodArray39);
        java.lang.String[] strArray41 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray42 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray43 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray41, methodArray42);
        java.lang.reflect.Method[] methodArray44 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray38, methodArray43);
        java.lang.reflect.Method[] methodArray45 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray31, methodArray44);
        java.lang.Class[] classArray46 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray44);
        java.lang.String[] strArray47 = org.mockito.cglib.core.ReflectUtils.getNames(classArray46);
        java.lang.Object obj48 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) strArray47);
        java.beans.PropertyDescriptor[] propertyDescriptorArray49 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray52 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray49, false, true);
        java.lang.Class[] classArray53 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray49);
        java.lang.Class[] classArray54 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray53);
        java.lang.String[] strArray55 = org.mockito.cglib.core.ReflectUtils.getNames(classArray53);
        java.lang.Class<?> wildcardClass56 = classArray53.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray57 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass56);
        java.beans.PropertyDescriptor[] propertyDescriptorArray58 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass56);
        java.lang.Class[] classArray59 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray58);
        java.lang.reflect.Method[] methodArray62 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray58, false, false);
        java.lang.reflect.Method[] methodArray63 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray47, methodArray62);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(propertyDescriptorArray23);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(methodArray33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(methodArray42);
        org.junit.Assert.assertNotNull(methodArray43);
        org.junit.Assert.assertNotNull(methodArray44);
        org.junit.Assert.assertNotNull(methodArray45);
        org.junit.Assert.assertNotNull(classArray46);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(propertyDescriptorArray49);
        org.junit.Assert.assertNotNull(methodArray52);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(classArray54);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(propertyDescriptorArray57);
        org.junit.Assert.assertNotNull(propertyDescriptorArray58);
        org.junit.Assert.assertNotNull(classArray59);
        org.junit.Assert.assertNotNull(methodArray62);
        org.junit.Assert.assertNotNull(methodArray63);
    }

    @Test
    public void test1412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1412");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.lang.Object obj3 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.beans.PropertyDescriptor[] propertyDescriptorArray4 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray4, false, true);
        java.lang.Class[] classArray8 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray4);
        java.lang.Class[] classArray9 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray8);
        java.lang.String[] strArray10 = org.mockito.cglib.core.ReflectUtils.getNames(classArray9);
        java.lang.reflect.Constructor constructor11 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray9);
        java.lang.Object obj12 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.util.List list13 = null;
        java.util.List list14 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list13);
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        org.mockito.cglib.core.ClassInfo classInfo17 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass16);
        java.util.List list18 = null;
        java.util.List list19 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass16, list18);
        java.lang.String[] strArray20 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray21 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray22 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray20, methodArray21);
        java.lang.String[] strArray23 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray24 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray25 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray24);
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray20, methodArray25);
        java.lang.String[] strArray27 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray28 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray27, methodArray28);
        java.lang.String[] strArray30 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray31 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray32 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray31);
        java.lang.reflect.Method[] methodArray33 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray27, methodArray32);
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray20, methodArray33);
        java.lang.Class[] classArray35 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray33);
        java.lang.reflect.Constructor constructor36 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass16, classArray35);
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        org.mockito.cglib.core.ClassInfo classInfo39 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass38);
        java.lang.Object obj40 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass38);
        java.beans.PropertyDescriptor[] propertyDescriptorArray41 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray44 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray41, false, true);
        java.lang.Class[] classArray45 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray41);
        java.lang.Class[] classArray46 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray45);
        java.lang.String[] strArray47 = org.mockito.cglib.core.ReflectUtils.getNames(classArray46);
        java.lang.reflect.Constructor constructor48 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass38, classArray46);
        int int49 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray46);
        java.lang.Object obj50 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor36, (java.lang.Object[]) classArray46);
        int int51 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray46);
        java.lang.Class[] classArray52 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray46);
        int int53 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray52);
        java.lang.reflect.Constructor constructor54 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray52);
        org.mockito.cglib.core.ClassInfo classInfo55 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list56 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List list57 = org.mockito.cglib.core.ReflectUtils.addAllMethods((java.lang.Class) wildcardClass1, list56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(propertyDescriptorArray4);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(classArray8);
        org.junit.Assert.assertNotNull(classArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(constructor11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNull(list14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(classInfo17);
        org.junit.Assert.assertNull(list19);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(methodArray21);
        org.junit.Assert.assertNotNull(methodArray22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(methodArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(classArray35);
        org.junit.Assert.assertNotNull(constructor36);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(classInfo39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(propertyDescriptorArray41);
        org.junit.Assert.assertNotNull(methodArray44);
        org.junit.Assert.assertNotNull(classArray45);
        org.junit.Assert.assertNotNull(classArray46);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(constructor48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(classArray52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(constructor54);
        org.junit.Assert.assertNotNull(classInfo55);
    }

    @Test
    public void test1413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1413");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.lang.Object obj3 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        org.mockito.cglib.core.ClassInfo classInfo6 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass5);
        java.util.List list7 = null;
        java.util.List list8 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass5, list7);
        java.lang.String[] strArray9 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray10 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray9, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.reflect.Method[] methodArray15 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray9, methodArray14);
        java.lang.String[] strArray16 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray17 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray16, methodArray17);
        java.lang.String[] strArray19 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray20 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray21 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray19, methodArray20);
        java.lang.reflect.Method[] methodArray22 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray16, methodArray21);
        java.lang.reflect.Method[] methodArray23 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray9, methodArray22);
        java.lang.Class[] classArray24 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray22);
        java.lang.reflect.Constructor constructor25 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass5, classArray24);
        java.lang.Class[] classArray26 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray24);
        java.lang.reflect.Constructor constructor27 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray26);
        org.mockito.cglib.core.MethodInfo methodInfo29 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor27, 0);
        org.mockito.cglib.core.Signature signature30 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor27);
        org.mockito.cglib.core.MethodInfo methodInfo31 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor27);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(classInfo6);
        org.junit.Assert.assertNull(list8);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(methodArray15);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(methodArray20);
        org.junit.Assert.assertNotNull(methodArray21);
        org.junit.Assert.assertNotNull(methodArray22);
        org.junit.Assert.assertNotNull(methodArray23);
        org.junit.Assert.assertNotNull(classArray24);
        org.junit.Assert.assertNotNull(constructor25);
        org.junit.Assert.assertNotNull(classArray26);
        org.junit.Assert.assertNotNull(constructor27);
        org.junit.Assert.assertNotNull(methodInfo29);
        org.junit.Assert.assertNotNull(signature30);
        org.junit.Assert.assertNotNull(methodInfo31);
    }

    @Test
    public void test1414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1414");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.lang.Class<?> wildcardClass23 = constructor21.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray24 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass23);
        org.mockito.cglib.core.ClassInfo classInfo25 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass23);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method26 = org.mockito.cglib.core.ReflectUtils.findInterfaceMethod((java.lang.Class) wildcardClass23);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: class java.lang.reflect.Constructor is not an interface");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(propertyDescriptorArray24);
        org.junit.Assert.assertNotNull(classInfo25);
    }

    @Test
    public void test1415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1415");
        java.beans.PropertyDescriptor[] propertyDescriptorArray0 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray3 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray0, false, true);
        java.lang.Class[] classArray4 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray0);
        java.lang.Class[] classArray5 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray4);
        java.lang.Class<?> wildcardClass6 = classArray4.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray7 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass6);
        java.lang.Class[] classArray8 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray7);
        java.lang.Class<?> wildcardClass9 = propertyDescriptorArray7.getClass();
        java.lang.Class[] classArray11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method12 = org.mockito.cglib.core.ReflectUtils.findDeclaredMethod((java.lang.Class) wildcardClass9, "", classArray11);
            org.junit.Assert.fail("Expected exception of type java.lang.NoSuchMethodException; message: ");
        } catch (java.lang.NoSuchMethodException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(propertyDescriptorArray0);
        org.junit.Assert.assertNotNull(methodArray3);
        org.junit.Assert.assertNotNull(classArray4);
        org.junit.Assert.assertNotNull(classArray5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(propertyDescriptorArray7);
        org.junit.Assert.assertNotNull(classArray8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1416");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.lang.Object obj3 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.beans.PropertyDescriptor[] propertyDescriptorArray4 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray4, false, true);
        java.lang.Class[] classArray8 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray4);
        java.lang.Class[] classArray9 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray8);
        java.lang.String[] strArray10 = org.mockito.cglib.core.ReflectUtils.getNames(classArray9);
        java.lang.reflect.Constructor constructor11 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray9);
        org.mockito.cglib.core.MethodInfo methodInfo12 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        org.mockito.cglib.core.ClassInfo classInfo15 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass14);
        java.util.List list16 = null;
        java.util.List list17 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass14, list16);
        java.lang.String[] strArray18 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray19 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray20 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray18, methodArray19);
        java.lang.String[] strArray21 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray22 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray23 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray21, methodArray22);
        java.lang.reflect.Method[] methodArray24 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray18, methodArray23);
        java.lang.String[] strArray25 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray26 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray27 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray25, methodArray26);
        java.lang.String[] strArray28 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray29 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray30 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray28, methodArray29);
        java.lang.reflect.Method[] methodArray31 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray25, methodArray30);
        java.lang.reflect.Method[] methodArray32 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray18, methodArray31);
        java.lang.Class[] classArray33 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray31);
        java.lang.reflect.Constructor constructor34 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass14, classArray33);
        org.mockito.cglib.core.MethodInfo methodInfo35 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor34);
        java.lang.String[] strArray36 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray37 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray38 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray37);
        java.lang.String[] strArray39 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray40 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray39, methodArray40);
        java.lang.reflect.Method[] methodArray42 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray41);
        java.lang.String[] strArray43 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray44 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray45 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray43, methodArray44);
        java.lang.String[] strArray46 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray47 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray48 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray46, methodArray47);
        java.lang.reflect.Method[] methodArray49 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray43, methodArray48);
        java.lang.reflect.Method[] methodArray50 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray49);
        java.lang.String[] strArray51 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray52 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray53 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray51, methodArray52);
        java.lang.reflect.Method[] methodArray54 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray53);
        java.lang.Object obj55 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor34, (java.lang.Object[]) strArray36);
        org.mockito.asm.Type[] typeArray56 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor34);
        java.lang.Object[] objArray57 = null;
        java.lang.Object obj58 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor34, objArray57);
        org.mockito.cglib.core.MethodInfo methodInfo60 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor34, (int) '4');
        org.mockito.asm.Type[] typeArray61 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor34);
        java.lang.Object obj62 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor11, (java.lang.Object[]) typeArray61);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(propertyDescriptorArray4);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(classArray8);
        org.junit.Assert.assertNotNull(classArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(constructor11);
        org.junit.Assert.assertNotNull(methodInfo12);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(classInfo15);
        org.junit.Assert.assertNull(list17);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(methodArray20);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(methodArray22);
        org.junit.Assert.assertNotNull(methodArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(methodArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(constructor34);
        org.junit.Assert.assertNotNull(methodInfo35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(methodArray38);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(methodArray42);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(methodArray44);
        org.junit.Assert.assertNotNull(methodArray45);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(methodArray47);
        org.junit.Assert.assertNotNull(methodArray48);
        org.junit.Assert.assertNotNull(methodArray49);
        org.junit.Assert.assertNotNull(methodArray50);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(methodArray52);
        org.junit.Assert.assertNotNull(methodArray53);
        org.junit.Assert.assertNotNull(methodArray54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(typeArray56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(methodInfo60);
        org.junit.Assert.assertNotNull(typeArray61);
        org.junit.Assert.assertNotNull(obj62);
    }

    @Test
    public void test1417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1417");
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) 1, (byte) 0, (byte) -1, (byte) 0, (byte) 10 };
        java.lang.ClassLoader classLoader8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class9 = org.mockito.cglib.core.ReflectUtils.defineClass("", byteArray7, classLoader8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[100, 1, 0, -1, 0, 10]");
    }

    @Test
    public void test1418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1418");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.lang.Object obj3 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.beans.PropertyDescriptor[] propertyDescriptorArray4 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray4, false, true);
        java.lang.Class[] classArray8 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray4);
        java.lang.Class[] classArray9 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray8);
        java.lang.String[] strArray10 = org.mockito.cglib.core.ReflectUtils.getNames(classArray9);
        java.lang.reflect.Constructor constructor11 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray9);
        java.lang.Object obj12 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        org.mockito.cglib.core.ClassInfo classInfo13 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list14 = null;
        java.util.List list15 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list14);
        java.lang.Object obj16 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.lang.Object obj17 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.mockito.cglib.core.ClassInfo classInfo20 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass19);
        java.lang.Object obj21 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass19);
        org.mockito.cglib.core.ClassInfo classInfo22 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass19);
        java.beans.PropertyDescriptor[] propertyDescriptorArray23 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray23, false, true);
        java.lang.Class[] classArray27 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray23);
        java.lang.Class[] classArray28 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray27);
        java.lang.String[] strArray29 = org.mockito.cglib.core.ReflectUtils.getNames(classArray27);
        java.lang.Class<?> wildcardClass30 = classArray27.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray31 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass30);
        java.beans.PropertyDescriptor[] propertyDescriptorArray32 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass30);
        java.lang.Class[] classArray33 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray32);
        java.lang.String[] strArray34 = org.mockito.cglib.core.ReflectUtils.getNames(classArray33);
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        org.mockito.cglib.core.ClassInfo classInfo37 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass36);
        java.util.List list38 = null;
        java.util.List list39 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass36, list38);
        java.lang.String[] strArray40 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray41 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray42 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray40, methodArray41);
        java.lang.String[] strArray43 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray44 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray45 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray43, methodArray44);
        java.lang.reflect.Method[] methodArray46 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray40, methodArray45);
        java.lang.String[] strArray47 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray48 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray49 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray47, methodArray48);
        java.lang.String[] strArray50 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray51 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray52 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray50, methodArray51);
        java.lang.reflect.Method[] methodArray53 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray47, methodArray52);
        java.lang.reflect.Method[] methodArray54 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray40, methodArray53);
        java.lang.Class[] classArray55 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray53);
        java.lang.reflect.Constructor constructor56 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass36, classArray55);
        org.mockito.cglib.core.MethodInfo methodInfo57 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor56);
        java.lang.String[] strArray58 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray59 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray60 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray58, methodArray59);
        java.lang.String[] strArray61 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray62 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray63 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray61, methodArray62);
        java.lang.reflect.Method[] methodArray64 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray58, methodArray63);
        java.lang.String[] strArray65 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray66 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray67 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray65, methodArray66);
        java.lang.String[] strArray68 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray69 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray70 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray68, methodArray69);
        java.lang.reflect.Method[] methodArray71 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray65, methodArray70);
        java.lang.reflect.Method[] methodArray72 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray58, methodArray71);
        java.lang.String[] strArray73 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray74 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray75 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray73, methodArray74);
        java.lang.reflect.Method[] methodArray76 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray58, methodArray75);
        java.lang.Object obj77 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor56, (java.lang.Object[]) strArray58);
        org.mockito.cglib.core.MethodInfo methodInfo79 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor56, (int) (byte) 0);
        java.beans.PropertyDescriptor[] propertyDescriptorArray80 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray83 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray80, true, true);
        java.lang.reflect.Method[] methodArray86 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray80, false, true);
        java.lang.Class[] classArray87 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray80);
        java.lang.Object obj88 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor56, (java.lang.Object[]) classArray87);
        java.lang.Object obj89 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass19, classArray33, (java.lang.Object[]) classArray87);
        java.lang.reflect.Constructor constructor90 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray33);
        java.util.List list91 = null;
        java.util.List list92 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list91);
        // The following exception was thrown during execution in test generation
        try {
            java.beans.PropertyDescriptor[] propertyDescriptorArray93 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass1);
            org.junit.Assert.fail("Expected exception of type org.mockito.cglib.core.CodeGenerationException; message: java.beans.IntrospectionException-->java.lang.Object not superclass of java.lang.Object");
        } catch (org.mockito.cglib.core.CodeGenerationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(propertyDescriptorArray4);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(classArray8);
        org.junit.Assert.assertNotNull(classArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(constructor11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(classInfo13);
        org.junit.Assert.assertNull(list15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(classInfo20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(classInfo22);
        org.junit.Assert.assertNotNull(propertyDescriptorArray23);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(classArray27);
        org.junit.Assert.assertNotNull(classArray28);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(propertyDescriptorArray31);
        org.junit.Assert.assertNotNull(propertyDescriptorArray32);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(classInfo37);
        org.junit.Assert.assertNull(list39);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(methodArray42);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(methodArray44);
        org.junit.Assert.assertNotNull(methodArray45);
        org.junit.Assert.assertNotNull(methodArray46);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(methodArray48);
        org.junit.Assert.assertNotNull(methodArray49);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(methodArray51);
        org.junit.Assert.assertNotNull(methodArray52);
        org.junit.Assert.assertNotNull(methodArray53);
        org.junit.Assert.assertNotNull(methodArray54);
        org.junit.Assert.assertNotNull(classArray55);
        org.junit.Assert.assertNotNull(constructor56);
        org.junit.Assert.assertNotNull(methodInfo57);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(methodArray59);
        org.junit.Assert.assertNotNull(methodArray60);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(methodArray62);
        org.junit.Assert.assertNotNull(methodArray63);
        org.junit.Assert.assertNotNull(methodArray64);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(methodArray66);
        org.junit.Assert.assertNotNull(methodArray67);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(methodArray69);
        org.junit.Assert.assertNotNull(methodArray70);
        org.junit.Assert.assertNotNull(methodArray71);
        org.junit.Assert.assertNotNull(methodArray72);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(methodArray74);
        org.junit.Assert.assertNotNull(methodArray75);
        org.junit.Assert.assertNotNull(methodArray76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(methodInfo79);
        org.junit.Assert.assertNotNull(propertyDescriptorArray80);
        org.junit.Assert.assertNotNull(methodArray83);
        org.junit.Assert.assertNotNull(methodArray86);
        org.junit.Assert.assertNotNull(classArray87);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(constructor90);
        org.junit.Assert.assertNull(list92);
    }

    @Test
    public void test1419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1419");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.lang.Class<?> wildcardClass23 = constructor21.getClass();
        org.mockito.cglib.core.ClassInfo classInfo24 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass23);
        java.beans.PropertyDescriptor[] propertyDescriptorArray25 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass23);
        java.beans.PropertyDescriptor[] propertyDescriptorArray26 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass23);
        java.beans.PropertyDescriptor[] propertyDescriptorArray27 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass23);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method28 = org.mockito.cglib.core.ReflectUtils.findNewInstance((java.lang.Class) wildcardClass23);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: class java.lang.reflect.Constructor is not an interface");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(classInfo24);
        org.junit.Assert.assertNotNull(propertyDescriptorArray25);
        org.junit.Assert.assertNotNull(propertyDescriptorArray26);
        org.junit.Assert.assertNotNull(propertyDescriptorArray27);
    }

    @Test
    public void test1420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1420");
        java.beans.PropertyDescriptor[] propertyDescriptorArray0 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray3 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray0, false, true);
        java.lang.Class[] classArray4 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray0);
        java.lang.Class[] classArray5 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray4);
        java.lang.String[] strArray6 = org.mockito.cglib.core.ReflectUtils.getNames(classArray4);
        java.lang.Class<?> wildcardClass7 = classArray4.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray8 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass7);
        java.beans.PropertyDescriptor[] propertyDescriptorArray9 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass7);
        java.beans.PropertyDescriptor[] propertyDescriptorArray10 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass7);
        java.beans.PropertyDescriptor[] propertyDescriptorArray11 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass7);
        java.beans.PropertyDescriptor[] propertyDescriptorArray12 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass7);
        java.lang.reflect.Method[] methodArray15 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray12, false, false);
        org.junit.Assert.assertNotNull(propertyDescriptorArray0);
        org.junit.Assert.assertNotNull(methodArray3);
        org.junit.Assert.assertNotNull(classArray4);
        org.junit.Assert.assertNotNull(classArray5);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(propertyDescriptorArray8);
        org.junit.Assert.assertNotNull(propertyDescriptorArray9);
        org.junit.Assert.assertNotNull(propertyDescriptorArray10);
        org.junit.Assert.assertNotNull(propertyDescriptorArray11);
        org.junit.Assert.assertNotNull(propertyDescriptorArray12);
        org.junit.Assert.assertNotNull(methodArray15);
    }

    @Test
    public void test1421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1421");
        byte[] byteArray5 = new byte[] { (byte) 100, (byte) 1, (byte) -1, (byte) 1 };
        java.lang.ClassLoader classLoader6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class7 = org.mockito.cglib.core.ReflectUtils.defineClass("", byteArray5, classLoader6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[100, 1, -1, 1]");
    }

    @Test
    public void test1422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1422");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo23 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21, (int) ' ');
        org.mockito.cglib.core.MethodInfo methodInfo25 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21, 10);
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        org.mockito.cglib.core.ClassInfo classInfo28 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass27);
        java.util.List list29 = null;
        java.util.List list30 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass27, list29);
        java.lang.String[] strArray31 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray32 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray33 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray31, methodArray32);
        java.lang.String[] strArray34 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray35 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray34, methodArray35);
        java.lang.reflect.Method[] methodArray37 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray31, methodArray36);
        java.lang.String[] strArray38 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray39 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray40 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray38, methodArray39);
        java.lang.String[] strArray41 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray42 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray43 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray41, methodArray42);
        java.lang.reflect.Method[] methodArray44 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray38, methodArray43);
        java.lang.reflect.Method[] methodArray45 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray31, methodArray44);
        java.lang.Class[] classArray46 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray44);
        java.lang.reflect.Constructor constructor47 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass27, classArray46);
        org.mockito.cglib.core.MethodInfo methodInfo48 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor47);
        java.lang.String[] strArray49 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray50 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray51 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray49, methodArray50);
        java.lang.String[] strArray52 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray53 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray54 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray52, methodArray53);
        java.lang.reflect.Method[] methodArray55 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray49, methodArray54);
        java.lang.String[] strArray56 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray57 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray58 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray56, methodArray57);
        java.lang.String[] strArray59 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray60 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray61 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray59, methodArray60);
        java.lang.reflect.Method[] methodArray62 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray56, methodArray61);
        java.lang.reflect.Method[] methodArray63 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray49, methodArray62);
        java.lang.String[] strArray64 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray65 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray66 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray64, methodArray65);
        java.lang.reflect.Method[] methodArray67 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray49, methodArray66);
        java.lang.Object obj68 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor47, (java.lang.Object[]) strArray49);
        org.mockito.cglib.core.MethodInfo methodInfo69 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor47);
        org.mockito.asm.Type[] typeArray70 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor47);
        java.beans.PropertyDescriptor[] propertyDescriptorArray71 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray74 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray71, false, true);
        java.lang.Class[] classArray75 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray71);
        java.lang.Class[] classArray76 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray75);
        java.lang.String[] strArray77 = org.mockito.cglib.core.ReflectUtils.getNames(classArray76);
        int int78 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray76);
        java.lang.Object obj79 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor47, (java.lang.Object[]) classArray76);
        java.lang.Object obj80 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) classArray76);
        org.mockito.cglib.core.MethodInfo methodInfo82 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21, (int) (short) 0);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo23);
        org.junit.Assert.assertNotNull(methodInfo25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(classInfo28);
        org.junit.Assert.assertNull(list30);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(methodArray33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(methodArray42);
        org.junit.Assert.assertNotNull(methodArray43);
        org.junit.Assert.assertNotNull(methodArray44);
        org.junit.Assert.assertNotNull(methodArray45);
        org.junit.Assert.assertNotNull(classArray46);
        org.junit.Assert.assertNotNull(constructor47);
        org.junit.Assert.assertNotNull(methodInfo48);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(methodArray50);
        org.junit.Assert.assertNotNull(methodArray51);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(methodArray53);
        org.junit.Assert.assertNotNull(methodArray54);
        org.junit.Assert.assertNotNull(methodArray55);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(methodArray57);
        org.junit.Assert.assertNotNull(methodArray58);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(methodArray60);
        org.junit.Assert.assertNotNull(methodArray61);
        org.junit.Assert.assertNotNull(methodArray62);
        org.junit.Assert.assertNotNull(methodArray63);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(methodArray65);
        org.junit.Assert.assertNotNull(methodArray66);
        org.junit.Assert.assertNotNull(methodArray67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(methodInfo69);
        org.junit.Assert.assertNotNull(typeArray70);
        org.junit.Assert.assertNotNull(propertyDescriptorArray71);
        org.junit.Assert.assertNotNull(methodArray74);
        org.junit.Assert.assertNotNull(classArray75);
        org.junit.Assert.assertNotNull(classArray76);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(methodInfo82);
    }

    @Test
    public void test1423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1423");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray1 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray2 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray1);
        java.lang.String[] strArray3 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray4 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray3, methodArray4);
        java.lang.String[] strArray6 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray7 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray8 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray6, methodArray7);
        java.lang.String[] strArray9 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray10 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray9, methodArray10);
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray6, methodArray11);
        java.lang.reflect.Method[] methodArray13 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray3, methodArray12);
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray13);
        java.lang.Class[] classArray15 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray14);
        java.lang.Class<?> wildcardClass16 = methodArray14.getClass();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray19 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray22 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray19, false, true);
        java.lang.Class[] classArray23 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray22);
        java.lang.Object[] objArray24 = null;
        java.lang.Object obj25 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass18, classArray23, objArray24);
        java.lang.String[] strArray26 = org.mockito.cglib.core.ReflectUtils.getNames(classArray23);
        int int27 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray23);
        int int28 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray23);
        java.lang.String[] strArray29 = org.mockito.cglib.core.ReflectUtils.getNames(classArray23);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Constructor constructor30 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass16, classArray23);
            org.junit.Assert.fail("Expected exception of type org.mockito.cglib.core.CodeGenerationException; message: java.lang.NoSuchMethodException-->[Ljava.lang.reflect.Method;.<init>()");
        } catch (org.mockito.cglib.core.CodeGenerationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(methodArray1);
        org.junit.Assert.assertNotNull(methodArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(methodArray4);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(methodArray8);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(classArray15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(propertyDescriptorArray19);
        org.junit.Assert.assertNotNull(methodArray22);
        org.junit.Assert.assertNotNull(classArray23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(strArray29);
    }

    @Test
    public void test1424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1424");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        java.lang.Object obj2 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.beans.PropertyDescriptor[] propertyDescriptorArray3 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray3, false, true);
        java.lang.Class[] classArray7 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray3);
        java.lang.Class[] classArray8 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray7);
        java.lang.String[] strArray9 = org.mockito.cglib.core.ReflectUtils.getNames(classArray8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.Object obj13 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray8, (java.lang.Object[]) strArray10);
        java.lang.String[] strArray14 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray15 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray16 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray14, methodArray15);
        java.lang.String[] strArray17 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray18 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray17, methodArray18);
        java.lang.reflect.Method[] methodArray20 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray14, methodArray19);
        java.lang.String[] strArray21 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray22 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray23 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray21, methodArray22);
        java.lang.String[] strArray24 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray25 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray24, methodArray25);
        java.lang.reflect.Method[] methodArray27 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray21, methodArray26);
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray14, methodArray27);
        java.lang.Class[] classArray29 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray27);
        java.beans.PropertyDescriptor[] propertyDescriptorArray30 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray33 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray30, false, true);
        java.lang.Class[] classArray34 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray33);
        java.lang.Object obj35 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray29, (java.lang.Object[]) methodArray33);
        java.lang.String[] strArray36 = org.mockito.cglib.core.ReflectUtils.getNames(classArray29);
        java.lang.String[] strArray37 = org.mockito.cglib.core.ReflectUtils.getNames(classArray29);
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        org.mockito.cglib.core.ClassInfo classInfo40 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass39);
        java.util.List list41 = null;
        java.util.List list42 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass39, list41);
        java.lang.String[] strArray43 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray44 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray45 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray43, methodArray44);
        java.lang.String[] strArray46 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray47 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray48 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray46, methodArray47);
        java.lang.reflect.Method[] methodArray49 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray43, methodArray48);
        java.lang.String[] strArray50 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray51 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray52 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray50, methodArray51);
        java.lang.String[] strArray53 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray54 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray55 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray53, methodArray54);
        java.lang.reflect.Method[] methodArray56 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray50, methodArray55);
        java.lang.reflect.Method[] methodArray57 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray43, methodArray56);
        java.lang.Class[] classArray58 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray56);
        java.lang.reflect.Constructor constructor59 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass39, classArray58);
        java.lang.Class[] classArray60 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray58);
        java.lang.String[] strArray61 = org.mockito.cglib.core.ReflectUtils.getNames(classArray60);
        java.beans.PropertyDescriptor[] propertyDescriptorArray62 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray65 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray62, false, true);
        java.lang.reflect.Method[] methodArray68 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray62, false, false);
        java.lang.reflect.Method[] methodArray69 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray61, methodArray68);
        java.lang.reflect.Method[] methodArray70 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray37, methodArray68);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(propertyDescriptorArray3);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(classArray7);
        org.junit.Assert.assertNotNull(classArray8);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(methodArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(methodArray20);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(methodArray22);
        org.junit.Assert.assertNotNull(methodArray23);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(classArray29);
        org.junit.Assert.assertNotNull(propertyDescriptorArray30);
        org.junit.Assert.assertNotNull(methodArray33);
        org.junit.Assert.assertNotNull(classArray34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(classInfo40);
        org.junit.Assert.assertNull(list42);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(methodArray44);
        org.junit.Assert.assertNotNull(methodArray45);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(methodArray47);
        org.junit.Assert.assertNotNull(methodArray48);
        org.junit.Assert.assertNotNull(methodArray49);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(methodArray51);
        org.junit.Assert.assertNotNull(methodArray52);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(methodArray54);
        org.junit.Assert.assertNotNull(methodArray55);
        org.junit.Assert.assertNotNull(methodArray56);
        org.junit.Assert.assertNotNull(methodArray57);
        org.junit.Assert.assertNotNull(classArray58);
        org.junit.Assert.assertNotNull(constructor59);
        org.junit.Assert.assertNotNull(classArray60);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(propertyDescriptorArray62);
        org.junit.Assert.assertNotNull(methodArray65);
        org.junit.Assert.assertNotNull(methodArray68);
        org.junit.Assert.assertNotNull(methodArray69);
        org.junit.Assert.assertNotNull(methodArray70);
    }

    @Test
    public void test1425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1425");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        java.lang.Object obj2 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.beans.PropertyDescriptor[] propertyDescriptorArray3 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray3, false, true);
        java.lang.Class[] classArray7 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray3);
        java.lang.Class[] classArray8 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray7);
        java.lang.String[] strArray9 = org.mockito.cglib.core.ReflectUtils.getNames(classArray8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.Object obj13 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray8, (java.lang.Object[]) strArray10);
        java.beans.PropertyDescriptor[] propertyDescriptorArray14 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray14, false, true);
        java.lang.Class[] classArray18 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray14);
        int int19 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray18);
        int int20 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray18);
        org.mockito.cglib.core.Signature signature22 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor21);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(propertyDescriptorArray3);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(classArray7);
        org.junit.Assert.assertNotNull(classArray8);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(propertyDescriptorArray14);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(signature22);
    }

    @Test
    public void test1426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1426");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray1 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray2 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray1);
        java.lang.String[] strArray3 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray4 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray3, methodArray4);
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray5);
        java.lang.String[] strArray7 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray8 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray9 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.reflect.Method[] methodArray13 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray12);
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray13);
        java.lang.Class<?> wildcardClass15 = methodArray13.getClass();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.util.List list19 = null;
        java.util.List list20 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass18, list19);
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        org.mockito.cglib.core.ClassInfo classInfo23 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass22);
        java.lang.Object obj24 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass22);
        java.beans.PropertyDescriptor[] propertyDescriptorArray25 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray25, false, true);
        java.lang.Class[] classArray29 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray25);
        java.lang.Class[] classArray30 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray29);
        java.lang.String[] strArray31 = org.mockito.cglib.core.ReflectUtils.getNames(classArray30);
        java.lang.reflect.Constructor constructor32 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass22, classArray30);
        org.mockito.cglib.core.MethodInfo methodInfo33 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor32);
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray36 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray39 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray36, false, true);
        java.lang.Class[] classArray40 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray39);
        java.lang.Object[] objArray41 = null;
        java.lang.Object obj42 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass35, classArray40, objArray41);
        java.lang.Object obj43 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor32, (java.lang.Object[]) classArray40);
        java.lang.String[] strArray44 = org.mockito.cglib.core.ReflectUtils.getNames(classArray40);
        java.lang.reflect.Constructor constructor45 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass18, classArray40);
        java.lang.String[] strArray46 = org.mockito.cglib.core.ReflectUtils.getNames(classArray40);
        int int47 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray40);
        java.lang.String[] strArray48 = org.mockito.cglib.core.ReflectUtils.getNames(classArray40);
        java.lang.Class[] classArray49 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) strArray48);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method50 = org.mockito.cglib.core.ReflectUtils.findDeclaredMethod((java.lang.Class) wildcardClass15, "", classArray49);
            org.junit.Assert.fail("Expected exception of type java.lang.NoSuchMethodException; message: ");
        } catch (java.lang.NoSuchMethodException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(methodArray1);
        org.junit.Assert.assertNotNull(methodArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(methodArray4);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(methodArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNull(list20);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(classInfo23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(propertyDescriptorArray25);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(classArray29);
        org.junit.Assert.assertNotNull(classArray30);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(constructor32);
        org.junit.Assert.assertNotNull(methodInfo33);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(propertyDescriptorArray36);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(classArray40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(constructor45);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(classArray49);
    }

    @Test
    public void test1427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1427");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.lang.Object obj3 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        org.mockito.cglib.core.ClassInfo classInfo4 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list5 = null;
        java.util.List list6 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list5);
        java.lang.Object obj7 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.util.List list8 = null;
        java.util.List list9 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list8);
        java.lang.Object obj10 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method11 = org.mockito.cglib.core.ReflectUtils.findNewInstance((java.lang.Class) wildcardClass1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: class java.lang.Object is not an interface");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(classInfo4);
        org.junit.Assert.assertNull(list6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNull(list9);
        org.junit.Assert.assertNotNull(obj10);
    }

    @Test
    public void test1428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1428");
        java.beans.PropertyDescriptor[] propertyDescriptorArray0 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray3 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray0, true, true);
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray0, false, true);
        java.lang.Class[] classArray7 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray0);
        java.lang.String[] strArray8 = org.mockito.cglib.core.ReflectUtils.getNames(classArray7);
        int int9 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray7);
        java.lang.String[] strArray10 = org.mockito.cglib.core.ReflectUtils.getNames(classArray7);
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray13 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray16 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray13, false, true);
        java.lang.Class[] classArray17 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray16);
        java.lang.Object[] objArray18 = null;
        java.lang.Object obj19 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass12, classArray17, objArray18);
        java.lang.String[] strArray20 = org.mockito.cglib.core.ReflectUtils.getNames(classArray17);
        java.lang.String[] strArray21 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray22 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray23 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray21, methodArray22);
        java.lang.String[] strArray24 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray25 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray24, methodArray25);
        java.lang.reflect.Method[] methodArray27 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray21, methodArray26);
        java.lang.String[] strArray28 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray29 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray30 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray28, methodArray29);
        java.lang.String[] strArray31 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray32 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray33 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray31, methodArray32);
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray28, methodArray33);
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray21, methodArray34);
        java.lang.Class[] classArray36 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray34);
        java.lang.Class[] classArray37 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray34);
        java.lang.reflect.Method[] methodArray38 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray20, methodArray34);
        java.lang.reflect.Method[] methodArray39 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray34);
        java.lang.String[] strArray40 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray41 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray42 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray40, methodArray41);
        java.lang.String[] strArray43 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray44 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray45 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray43, methodArray44);
        java.lang.reflect.Method[] methodArray46 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray40, methodArray45);
        java.lang.String[] strArray47 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray48 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray49 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray47, methodArray48);
        java.lang.String[] strArray50 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray51 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray52 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray50, methodArray51);
        java.lang.reflect.Method[] methodArray53 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray47, methodArray52);
        java.lang.reflect.Method[] methodArray54 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray40, methodArray53);
        java.lang.Class<?> wildcardClass55 = methodArray53.getClass();
        org.mockito.cglib.core.ClassInfo classInfo56 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass55);
        java.beans.PropertyDescriptor[] propertyDescriptorArray57 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass55);
        java.lang.reflect.Method[] methodArray60 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray57, false, false);
        java.lang.reflect.Method[] methodArray61 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray60);
        java.lang.String[] strArray62 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray63 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray64 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray62, methodArray63);
        java.lang.String[] strArray65 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray66 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray67 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray65, methodArray66);
        java.lang.reflect.Method[] methodArray68 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray62, methodArray67);
        java.lang.String[] strArray69 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray70 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray71 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray69, methodArray70);
        java.lang.String[] strArray72 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray73 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray74 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray72, methodArray73);
        java.lang.reflect.Method[] methodArray75 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray69, methodArray74);
        java.lang.reflect.Method[] methodArray76 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray62, methodArray75);
        java.lang.String[] strArray77 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray78 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray79 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray77, methodArray78);
        java.lang.reflect.Method[] methodArray80 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray62, methodArray79);
        java.lang.reflect.Method[] methodArray81 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray79);
        java.lang.Class[] classArray82 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray79);
        org.junit.Assert.assertNotNull(propertyDescriptorArray0);
        org.junit.Assert.assertNotNull(methodArray3);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(classArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(propertyDescriptorArray13);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(classArray17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(methodArray22);
        org.junit.Assert.assertNotNull(methodArray23);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(methodArray30);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(methodArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(classArray36);
        org.junit.Assert.assertNotNull(classArray37);
        org.junit.Assert.assertNotNull(methodArray38);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(methodArray42);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(methodArray44);
        org.junit.Assert.assertNotNull(methodArray45);
        org.junit.Assert.assertNotNull(methodArray46);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(methodArray48);
        org.junit.Assert.assertNotNull(methodArray49);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(methodArray51);
        org.junit.Assert.assertNotNull(methodArray52);
        org.junit.Assert.assertNotNull(methodArray53);
        org.junit.Assert.assertNotNull(methodArray54);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(classInfo56);
        org.junit.Assert.assertNotNull(propertyDescriptorArray57);
        org.junit.Assert.assertNotNull(methodArray60);
        org.junit.Assert.assertNotNull(methodArray61);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(methodArray63);
        org.junit.Assert.assertNotNull(methodArray64);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(methodArray66);
        org.junit.Assert.assertNotNull(methodArray67);
        org.junit.Assert.assertNotNull(methodArray68);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(methodArray70);
        org.junit.Assert.assertNotNull(methodArray71);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(methodArray73);
        org.junit.Assert.assertNotNull(methodArray74);
        org.junit.Assert.assertNotNull(methodArray75);
        org.junit.Assert.assertNotNull(methodArray76);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(methodArray78);
        org.junit.Assert.assertNotNull(methodArray79);
        org.junit.Assert.assertNotNull(methodArray80);
        org.junit.Assert.assertNotNull(methodArray81);
        org.junit.Assert.assertNotNull(classArray82);
    }

    @Test
    public void test1429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1429");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.beans.PropertyDescriptor[] propertyDescriptorArray5 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray8 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray5, false, true);
        java.lang.Class[] classArray9 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray5);
        int int10 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray9);
        java.lang.String[] strArray11 = org.mockito.cglib.core.ReflectUtils.getNames(classArray9);
        java.lang.String[] strArray12 = org.mockito.cglib.core.ReflectUtils.getNames(classArray9);
        java.lang.String[] strArray13 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray14 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray15 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray13, methodArray14);
        java.lang.String[] strArray16 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray17 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray16, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray13, methodArray18);
        java.lang.String[] strArray20 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray21 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray22 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray20, methodArray21);
        java.lang.String[] strArray23 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray24 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray25 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray24);
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray20, methodArray25);
        java.lang.reflect.Method[] methodArray27 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray13, methodArray26);
        java.lang.Object obj28 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray9, (java.lang.Object[]) methodArray27);
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        java.util.List list31 = null;
        java.util.List list32 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass30, list31);
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        org.mockito.cglib.core.ClassInfo classInfo35 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass34);
        java.lang.Object obj36 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass34);
        java.beans.PropertyDescriptor[] propertyDescriptorArray37 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray40 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray37, false, true);
        java.lang.Class[] classArray41 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray37);
        java.lang.Class[] classArray42 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray41);
        java.lang.String[] strArray43 = org.mockito.cglib.core.ReflectUtils.getNames(classArray42);
        java.lang.reflect.Constructor constructor44 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass34, classArray42);
        org.mockito.cglib.core.MethodInfo methodInfo45 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor44);
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray48 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray51 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray48, false, true);
        java.lang.Class[] classArray52 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray51);
        java.lang.Object[] objArray53 = null;
        java.lang.Object obj54 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass47, classArray52, objArray53);
        java.lang.Object obj55 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor44, (java.lang.Object[]) classArray52);
        java.lang.String[] strArray56 = org.mockito.cglib.core.ReflectUtils.getNames(classArray52);
        java.lang.reflect.Constructor constructor57 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass30, classArray52);
        java.lang.reflect.Constructor constructor58 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray52);
        org.mockito.cglib.core.MethodInfo methodInfo60 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor58, (int) '4');
        org.mockito.cglib.core.Signature signature61 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor58);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(propertyDescriptorArray5);
        org.junit.Assert.assertNotNull(methodArray8);
        org.junit.Assert.assertNotNull(classArray9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(methodArray15);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(methodArray21);
        org.junit.Assert.assertNotNull(methodArray22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNull(list32);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(classInfo35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(propertyDescriptorArray37);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(classArray41);
        org.junit.Assert.assertNotNull(classArray42);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(constructor44);
        org.junit.Assert.assertNotNull(methodInfo45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(propertyDescriptorArray48);
        org.junit.Assert.assertNotNull(methodArray51);
        org.junit.Assert.assertNotNull(classArray52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(constructor57);
        org.junit.Assert.assertNotNull(constructor58);
        org.junit.Assert.assertNotNull(methodInfo60);
        org.junit.Assert.assertNotNull(signature61);
    }

    @Test
    public void test1430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1430");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray1 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray2 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray1);
        java.lang.String[] strArray3 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray4 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray3, methodArray4);
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray5);
        java.lang.String[] strArray7 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray8 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray9 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.reflect.Method[] methodArray13 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray12);
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray17);
        java.lang.Class<?> wildcardClass19 = methodArray18.getClass();
        org.mockito.cglib.core.ClassInfo classInfo20 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass19);
        java.beans.PropertyDescriptor[] propertyDescriptorArray21 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass19);
        java.beans.PropertyDescriptor[] propertyDescriptorArray22 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass19);
        org.mockito.cglib.core.ClassInfo classInfo23 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass19);
        org.mockito.cglib.core.ClassInfo classInfo24 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass19);
        java.beans.PropertyDescriptor[] propertyDescriptorArray25 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass19);
        java.beans.PropertyDescriptor[] propertyDescriptorArray26 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass19);
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        org.mockito.cglib.core.ClassInfo classInfo29 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass28);
        java.util.List list30 = null;
        java.util.List list31 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass28, list30);
        java.lang.String[] strArray32 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray33 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray32, methodArray33);
        java.lang.String[] strArray35 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray36 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray37 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray35, methodArray36);
        java.lang.reflect.Method[] methodArray38 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray32, methodArray37);
        java.lang.String[] strArray39 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray40 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray39, methodArray40);
        java.lang.String[] strArray42 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray43 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray44 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray42, methodArray43);
        java.lang.reflect.Method[] methodArray45 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray39, methodArray44);
        java.lang.reflect.Method[] methodArray46 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray32, methodArray45);
        java.lang.Class[] classArray47 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray45);
        java.lang.reflect.Constructor constructor48 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass28, classArray47);
        org.mockito.cglib.core.MethodInfo methodInfo49 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor48);
        java.lang.String[] strArray50 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray51 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray52 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray50, methodArray51);
        java.lang.String[] strArray53 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray54 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray55 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray53, methodArray54);
        java.lang.reflect.Method[] methodArray56 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray50, methodArray55);
        java.lang.String[] strArray57 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray58 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray59 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray57, methodArray58);
        java.lang.String[] strArray60 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray61 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray62 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray60, methodArray61);
        java.lang.reflect.Method[] methodArray63 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray57, methodArray62);
        java.lang.reflect.Method[] methodArray64 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray50, methodArray63);
        java.lang.String[] strArray65 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray66 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray67 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray65, methodArray66);
        java.lang.reflect.Method[] methodArray68 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray50, methodArray67);
        java.lang.Object obj69 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor48, (java.lang.Object[]) strArray50);
        org.mockito.asm.Type[] typeArray70 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor48);
        java.lang.Object[] objArray71 = null;
        java.lang.Object obj72 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor48, objArray71);
        org.mockito.cglib.core.Signature signature73 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor48);
        java.beans.PropertyDescriptor[] propertyDescriptorArray74 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray77 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray74, false, true);
        java.lang.Class[] classArray78 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray74);
        java.lang.reflect.Method[] methodArray81 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray74, false, true);
        java.lang.Object obj82 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor48, (java.lang.Object[]) methodArray81);
        java.lang.Class<?> wildcardClass83 = obj82.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray84 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray87 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray84, false, true);
        java.lang.Class[] classArray88 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray84);
        int int89 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray88);
        java.lang.String[] strArray90 = org.mockito.cglib.core.ReflectUtils.getNames(classArray88);
        java.lang.String[] strArray91 = org.mockito.cglib.core.ReflectUtils.getNames(classArray88);
        java.lang.Class[] classArray92 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) strArray91);
        java.lang.Class[] classArray93 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray92);
        java.lang.reflect.Constructor constructor94 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass83, classArray93);
        java.lang.String[] strArray95 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray96 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray97 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray95, methodArray96);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj98 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass19, classArray93, (java.lang.Object[]) methodArray97);
            org.junit.Assert.fail("Expected exception of type org.mockito.cglib.core.CodeGenerationException; message: java.lang.NoSuchMethodException-->[Ljava.lang.reflect.Method;.<init>()");
        } catch (org.mockito.cglib.core.CodeGenerationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(methodArray1);
        org.junit.Assert.assertNotNull(methodArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(methodArray4);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(methodArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(classInfo20);
        org.junit.Assert.assertNotNull(propertyDescriptorArray21);
        org.junit.Assert.assertNotNull(propertyDescriptorArray22);
        org.junit.Assert.assertNotNull(classInfo23);
        org.junit.Assert.assertNotNull(classInfo24);
        org.junit.Assert.assertNotNull(propertyDescriptorArray25);
        org.junit.Assert.assertNotNull(propertyDescriptorArray26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(classInfo29);
        org.junit.Assert.assertNull(list31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(methodArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(methodArray38);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(methodArray43);
        org.junit.Assert.assertNotNull(methodArray44);
        org.junit.Assert.assertNotNull(methodArray45);
        org.junit.Assert.assertNotNull(methodArray46);
        org.junit.Assert.assertNotNull(classArray47);
        org.junit.Assert.assertNotNull(constructor48);
        org.junit.Assert.assertNotNull(methodInfo49);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(methodArray51);
        org.junit.Assert.assertNotNull(methodArray52);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(methodArray54);
        org.junit.Assert.assertNotNull(methodArray55);
        org.junit.Assert.assertNotNull(methodArray56);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(methodArray58);
        org.junit.Assert.assertNotNull(methodArray59);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(methodArray61);
        org.junit.Assert.assertNotNull(methodArray62);
        org.junit.Assert.assertNotNull(methodArray63);
        org.junit.Assert.assertNotNull(methodArray64);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(methodArray66);
        org.junit.Assert.assertNotNull(methodArray67);
        org.junit.Assert.assertNotNull(methodArray68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(typeArray70);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(signature73);
        org.junit.Assert.assertNotNull(propertyDescriptorArray74);
        org.junit.Assert.assertNotNull(methodArray77);
        org.junit.Assert.assertNotNull(classArray78);
        org.junit.Assert.assertNotNull(methodArray81);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(propertyDescriptorArray84);
        org.junit.Assert.assertNotNull(methodArray87);
        org.junit.Assert.assertNotNull(classArray88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0);
        org.junit.Assert.assertNotNull(strArray90);
        org.junit.Assert.assertNotNull(strArray91);
        org.junit.Assert.assertNotNull(classArray92);
        org.junit.Assert.assertNotNull(classArray93);
        org.junit.Assert.assertNotNull(constructor94);
        org.junit.Assert.assertNotNull(strArray95);
        org.junit.Assert.assertNotNull(methodArray96);
        org.junit.Assert.assertNotNull(methodArray97);
    }

    @Test
    public void test1431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1431");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.beans.PropertyDescriptor[] propertyDescriptorArray23 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray23, false, true);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray23, false, false);
        java.lang.Object obj30 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) methodArray29);
        java.beans.PropertyDescriptor[] propertyDescriptorArray31 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray31, true, true);
        java.lang.Object obj35 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) propertyDescriptorArray31);
        java.lang.String[] strArray36 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray37 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray38 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray37);
        java.lang.String[] strArray39 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray40 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray39, methodArray40);
        java.lang.String[] strArray42 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray43 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray44 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray42, methodArray43);
        java.lang.reflect.Method[] methodArray45 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray39, methodArray44);
        java.lang.reflect.Method[] methodArray46 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray45);
        java.lang.Object obj47 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) methodArray46);
        org.mockito.cglib.core.MethodInfo methodInfo49 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21, 10);
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        org.mockito.cglib.core.ClassInfo classInfo52 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass51);
        java.util.List list53 = null;
        java.util.List list54 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass51, list53);
        java.lang.String[] strArray55 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray56 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray57 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray55, methodArray56);
        java.lang.String[] strArray58 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray59 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray60 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray58, methodArray59);
        java.lang.reflect.Method[] methodArray61 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray55, methodArray60);
        java.lang.String[] strArray62 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray63 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray64 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray62, methodArray63);
        java.lang.String[] strArray65 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray66 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray67 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray65, methodArray66);
        java.lang.reflect.Method[] methodArray68 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray62, methodArray67);
        java.lang.reflect.Method[] methodArray69 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray55, methodArray68);
        java.lang.Class[] classArray70 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray68);
        java.lang.reflect.Constructor constructor71 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass51, classArray70);
        java.lang.Object obj72 = new java.lang.Object();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        org.mockito.cglib.core.ClassInfo classInfo74 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass73);
        java.lang.Object obj75 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass73);
        java.beans.PropertyDescriptor[] propertyDescriptorArray76 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray79 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray76, false, true);
        java.lang.Class[] classArray80 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray76);
        java.lang.Class[] classArray81 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray80);
        java.lang.String[] strArray82 = org.mockito.cglib.core.ReflectUtils.getNames(classArray81);
        java.lang.reflect.Constructor constructor83 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass73, classArray81);
        int int84 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray81);
        java.lang.Object obj85 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor71, (java.lang.Object[]) classArray81);
        int int86 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray81);
        java.lang.Class[] classArray87 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray81);
        java.lang.Class[] classArray88 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray81);
        java.lang.String[] strArray89 = org.mockito.cglib.core.ReflectUtils.getNames(classArray88);
        java.lang.Object obj90 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) classArray88);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(propertyDescriptorArray23);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(propertyDescriptorArray31);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(methodArray38);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(methodArray43);
        org.junit.Assert.assertNotNull(methodArray44);
        org.junit.Assert.assertNotNull(methodArray45);
        org.junit.Assert.assertNotNull(methodArray46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(methodInfo49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(classInfo52);
        org.junit.Assert.assertNull(list54);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(methodArray56);
        org.junit.Assert.assertNotNull(methodArray57);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(methodArray59);
        org.junit.Assert.assertNotNull(methodArray60);
        org.junit.Assert.assertNotNull(methodArray61);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(methodArray63);
        org.junit.Assert.assertNotNull(methodArray64);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(methodArray66);
        org.junit.Assert.assertNotNull(methodArray67);
        org.junit.Assert.assertNotNull(methodArray68);
        org.junit.Assert.assertNotNull(methodArray69);
        org.junit.Assert.assertNotNull(classArray70);
        org.junit.Assert.assertNotNull(constructor71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(classInfo74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(propertyDescriptorArray76);
        org.junit.Assert.assertNotNull(methodArray79);
        org.junit.Assert.assertNotNull(classArray80);
        org.junit.Assert.assertNotNull(classArray81);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNotNull(constructor83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertNotNull(classArray87);
        org.junit.Assert.assertNotNull(classArray88);
        org.junit.Assert.assertNotNull(strArray89);
        org.junit.Assert.assertNotNull(obj90);
    }

    @Test
    public void test1432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1432");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray1 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray2 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray1);
        java.lang.String[] strArray3 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray4 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray3, methodArray4);
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray5);
        java.lang.String[] strArray7 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray8 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray9 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.reflect.Method[] methodArray13 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray12);
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray13);
        java.lang.Class<?> wildcardClass15 = methodArray13.getClass();
        org.mockito.cglib.core.ClassInfo classInfo16 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass15);
        java.beans.PropertyDescriptor[] propertyDescriptorArray17 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass15);
        java.beans.PropertyDescriptor[] propertyDescriptorArray18 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass15);
        java.beans.PropertyDescriptor[] propertyDescriptorArray19 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass15);
        java.beans.PropertyDescriptor[] propertyDescriptorArray20 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass15);
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        org.mockito.cglib.core.ClassInfo classInfo24 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass23);
        java.lang.Object obj25 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass23);
        java.beans.PropertyDescriptor[] propertyDescriptorArray26 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray26, false, true);
        java.lang.Class[] classArray30 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray26);
        java.lang.Class[] classArray31 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray30);
        java.lang.String[] strArray32 = org.mockito.cglib.core.ReflectUtils.getNames(classArray31);
        java.lang.reflect.Constructor constructor33 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass23, classArray31);
        org.mockito.cglib.core.MethodInfo methodInfo34 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor33);
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray37 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray40 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray37, false, true);
        java.lang.Class[] classArray41 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray40);
        java.lang.Object[] objArray42 = null;
        java.lang.Object obj43 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass36, classArray41, objArray42);
        java.lang.Object obj44 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor33, (java.lang.Object[]) classArray41);
        org.mockito.cglib.core.MethodInfo methodInfo46 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor33, (int) (byte) 0);
        org.mockito.cglib.core.MethodInfo methodInfo47 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor33);
        java.lang.Class<?> wildcardClass48 = methodInfo47.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray49 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass48);
        java.lang.Class[] classArray50 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray49);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method51 = org.mockito.cglib.core.ReflectUtils.findDeclaredMethod((java.lang.Class) wildcardClass15, "hi!", classArray50);
            org.junit.Assert.fail("Expected exception of type java.lang.NoSuchMethodException; message: hi!");
        } catch (java.lang.NoSuchMethodException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(methodArray1);
        org.junit.Assert.assertNotNull(methodArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(methodArray4);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(methodArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(classInfo16);
        org.junit.Assert.assertNotNull(propertyDescriptorArray17);
        org.junit.Assert.assertNotNull(propertyDescriptorArray18);
        org.junit.Assert.assertNotNull(propertyDescriptorArray19);
        org.junit.Assert.assertNotNull(propertyDescriptorArray20);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(classInfo24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(propertyDescriptorArray26);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(classArray30);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(constructor33);
        org.junit.Assert.assertNotNull(methodInfo34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(propertyDescriptorArray37);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(classArray41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(methodInfo46);
        org.junit.Assert.assertNotNull(methodInfo47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(propertyDescriptorArray49);
        org.junit.Assert.assertNotNull(classArray50);
    }

    @Test
    public void test1433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1433");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        org.mockito.cglib.core.MethodInfo methodInfo23 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        org.mockito.cglib.core.Signature signature24 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor21);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(methodInfo23);
        org.junit.Assert.assertNotNull(signature24);
    }

    @Test
    public void test1434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1434");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.lang.Object obj3 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.beans.PropertyDescriptor[] propertyDescriptorArray4 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray4, false, true);
        java.lang.Class[] classArray8 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray4);
        java.lang.Class[] classArray9 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray8);
        java.lang.String[] strArray10 = org.mockito.cglib.core.ReflectUtils.getNames(classArray9);
        java.lang.reflect.Constructor constructor11 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray9);
        org.mockito.cglib.core.MethodInfo methodInfo12 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray15 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray15, false, true);
        java.lang.Class[] classArray19 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.Object[] objArray20 = null;
        java.lang.Object obj21 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass14, classArray19, objArray20);
        java.lang.Object obj22 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor11, (java.lang.Object[]) classArray19);
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray25 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray25, false, true);
        java.lang.Class[] classArray29 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray28);
        java.lang.Object[] objArray30 = null;
        java.lang.Object obj31 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass24, classArray29, objArray30);
        java.lang.String[] strArray32 = org.mockito.cglib.core.ReflectUtils.getNames(classArray29);
        java.lang.Object obj33 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor11, (java.lang.Object[]) strArray32);
        java.beans.PropertyDescriptor[] propertyDescriptorArray34 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray37 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray34, false, true);
        java.lang.Class[] classArray38 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray34);
        int int39 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray38);
        java.lang.String[] strArray40 = org.mockito.cglib.core.ReflectUtils.getNames(classArray38);
        java.lang.String[] strArray41 = org.mockito.cglib.core.ReflectUtils.getNames(classArray38);
        java.lang.Class[] classArray42 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) strArray41);
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        org.mockito.cglib.core.ClassInfo classInfo45 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass44);
        java.util.List list46 = null;
        java.util.List list47 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass44, list46);
        java.beans.PropertyDescriptor[] propertyDescriptorArray48 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray51 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray48, false, true);
        java.lang.Class[] classArray52 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray48);
        int int53 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray52);
        java.lang.String[] strArray54 = org.mockito.cglib.core.ReflectUtils.getNames(classArray52);
        java.lang.String[] strArray55 = org.mockito.cglib.core.ReflectUtils.getNames(classArray52);
        java.lang.String[] strArray56 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray57 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray58 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray56, methodArray57);
        java.lang.String[] strArray59 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray60 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray61 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray59, methodArray60);
        java.lang.reflect.Method[] methodArray62 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray56, methodArray61);
        java.lang.String[] strArray63 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray64 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray65 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray63, methodArray64);
        java.lang.String[] strArray66 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray67 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray68 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray66, methodArray67);
        java.lang.reflect.Method[] methodArray69 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray63, methodArray68);
        java.lang.reflect.Method[] methodArray70 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray56, methodArray69);
        java.lang.Object obj71 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass44, classArray52, (java.lang.Object[]) methodArray70);
        java.lang.reflect.Method[] methodArray72 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray41, methodArray70);
        java.lang.reflect.Method[] methodArray73 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray32, methodArray70);
        java.lang.Class<?> wildcardClass74 = methodArray70.getClass();
        java.util.List list75 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List list76 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass74, list75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(propertyDescriptorArray4);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(classArray8);
        org.junit.Assert.assertNotNull(classArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(constructor11);
        org.junit.Assert.assertNotNull(methodInfo12);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(propertyDescriptorArray15);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(classArray19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(propertyDescriptorArray25);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(classArray29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(propertyDescriptorArray34);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(classArray38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(classArray42);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(classInfo45);
        org.junit.Assert.assertNull(list47);
        org.junit.Assert.assertNotNull(propertyDescriptorArray48);
        org.junit.Assert.assertNotNull(methodArray51);
        org.junit.Assert.assertNotNull(classArray52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(methodArray57);
        org.junit.Assert.assertNotNull(methodArray58);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(methodArray60);
        org.junit.Assert.assertNotNull(methodArray61);
        org.junit.Assert.assertNotNull(methodArray62);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(methodArray64);
        org.junit.Assert.assertNotNull(methodArray65);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(methodArray67);
        org.junit.Assert.assertNotNull(methodArray68);
        org.junit.Assert.assertNotNull(methodArray69);
        org.junit.Assert.assertNotNull(methodArray70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(methodArray72);
        org.junit.Assert.assertNotNull(methodArray73);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test1435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1435");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.lang.Object obj3 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.beans.PropertyDescriptor[] propertyDescriptorArray4 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray4, false, true);
        java.lang.Class[] classArray8 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray4);
        java.lang.Class[] classArray9 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray8);
        java.lang.String[] strArray10 = org.mockito.cglib.core.ReflectUtils.getNames(classArray9);
        java.lang.reflect.Constructor constructor11 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray9);
        org.mockito.cglib.core.MethodInfo methodInfo12 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray15 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray15, false, true);
        java.lang.Class[] classArray19 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.Object[] objArray20 = null;
        java.lang.Object obj21 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass14, classArray19, objArray20);
        java.lang.Object obj22 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor11, (java.lang.Object[]) classArray19);
        org.mockito.cglib.core.MethodInfo methodInfo24 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor11, (int) (byte) 0);
        org.mockito.cglib.core.MethodInfo methodInfo25 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor11);
        java.lang.Class<?> wildcardClass26 = methodInfo25.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray27 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass26);
        java.beans.PropertyDescriptor[] propertyDescriptorArray28 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(propertyDescriptorArray4);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(classArray8);
        org.junit.Assert.assertNotNull(classArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(constructor11);
        org.junit.Assert.assertNotNull(methodInfo12);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(propertyDescriptorArray15);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(classArray19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(methodInfo24);
        org.junit.Assert.assertNotNull(methodInfo25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(propertyDescriptorArray27);
        org.junit.Assert.assertNotNull(propertyDescriptorArray28);
    }

    @Test
    public void test1436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1436");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.lang.Object obj3 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.beans.PropertyDescriptor[] propertyDescriptorArray4 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray4, false, true);
        java.lang.Class[] classArray8 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray4);
        java.lang.Class[] classArray9 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray8);
        java.lang.String[] strArray10 = org.mockito.cglib.core.ReflectUtils.getNames(classArray9);
        java.lang.reflect.Constructor constructor11 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray9);
        java.lang.Object obj12 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        org.mockito.cglib.core.ClassInfo classInfo13 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list14 = null;
        java.util.List list15 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list14);
        java.lang.Object obj16 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.util.List list17 = null;
        java.util.List list18 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list17);
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        org.mockito.cglib.core.ClassInfo classInfo21 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass20);
        java.util.List list22 = null;
        java.util.List list23 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass20, list22);
        java.lang.String[] strArray24 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray25 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray24, methodArray25);
        java.lang.String[] strArray27 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray28 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray27, methodArray28);
        java.lang.reflect.Method[] methodArray30 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray24, methodArray29);
        java.lang.String[] strArray31 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray32 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray33 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray31, methodArray32);
        java.lang.String[] strArray34 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray35 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray34, methodArray35);
        java.lang.reflect.Method[] methodArray37 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray31, methodArray36);
        java.lang.reflect.Method[] methodArray38 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray24, methodArray37);
        java.lang.Class[] classArray39 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray37);
        java.lang.reflect.Constructor constructor40 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass20, classArray39);
        org.mockito.cglib.core.MethodInfo methodInfo41 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor40);
        java.beans.PropertyDescriptor[] propertyDescriptorArray42 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray45 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray42, false, true);
        java.lang.reflect.Method[] methodArray48 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray42, false, false);
        java.lang.Object obj49 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor40, (java.lang.Object[]) methodArray48);
        java.beans.PropertyDescriptor[] propertyDescriptorArray50 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray53 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray50, true, true);
        java.lang.Object obj54 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor40, (java.lang.Object[]) propertyDescriptorArray50);
        java.lang.String[] strArray55 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray56 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray57 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray55, methodArray56);
        java.lang.String[] strArray58 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray59 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray60 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray58, methodArray59);
        java.lang.String[] strArray61 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray62 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray63 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray61, methodArray62);
        java.lang.reflect.Method[] methodArray64 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray58, methodArray63);
        java.lang.reflect.Method[] methodArray65 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray55, methodArray64);
        java.lang.Object obj66 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor40, (java.lang.Object[]) methodArray65);
        java.lang.Class[] classArray67 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray65);
        java.lang.reflect.Constructor constructor68 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray67);
        org.mockito.cglib.core.ClassInfo classInfo69 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(propertyDescriptorArray4);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(classArray8);
        org.junit.Assert.assertNotNull(classArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(constructor11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(classInfo13);
        org.junit.Assert.assertNull(list15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNull(list18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(classInfo21);
        org.junit.Assert.assertNull(list23);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(methodArray30);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(methodArray33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(methodArray38);
        org.junit.Assert.assertNotNull(classArray39);
        org.junit.Assert.assertNotNull(constructor40);
        org.junit.Assert.assertNotNull(methodInfo41);
        org.junit.Assert.assertNotNull(propertyDescriptorArray42);
        org.junit.Assert.assertNotNull(methodArray45);
        org.junit.Assert.assertNotNull(methodArray48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(propertyDescriptorArray50);
        org.junit.Assert.assertNotNull(methodArray53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(methodArray56);
        org.junit.Assert.assertNotNull(methodArray57);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(methodArray59);
        org.junit.Assert.assertNotNull(methodArray60);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(methodArray62);
        org.junit.Assert.assertNotNull(methodArray63);
        org.junit.Assert.assertNotNull(methodArray64);
        org.junit.Assert.assertNotNull(methodArray65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(classArray67);
        org.junit.Assert.assertNotNull(constructor68);
        org.junit.Assert.assertNotNull(classInfo69);
    }

    @Test
    public void test1437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1437");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.lang.Class<?> wildcardClass23 = constructor21.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray24 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass23);
        org.mockito.cglib.core.ClassInfo classInfo25 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass23);
        java.util.List list26 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List list27 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass23, list26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(propertyDescriptorArray24);
        org.junit.Assert.assertNotNull(classInfo25);
    }

    @Test
    public void test1438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1438");
        java.lang.Class class0 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray2 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray2, false, true);
        java.lang.Class[] classArray6 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray2);
        java.lang.Class[] classArray7 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray6);
        java.lang.String[] strArray8 = org.mockito.cglib.core.ReflectUtils.getNames(classArray6);
        int int9 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray6);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method10 = org.mockito.cglib.core.ReflectUtils.findDeclaredMethod(class0, "", classArray6);
            org.junit.Assert.fail("Expected exception of type java.lang.NoSuchMethodException; message: ");
        } catch (java.lang.NoSuchMethodException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(propertyDescriptorArray2);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(classArray6);
        org.junit.Assert.assertNotNull(classArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test1439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1439");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo23 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21, (int) ' ');
        org.mockito.cglib.core.MethodInfo methodInfo25 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21, 10);
        org.mockito.cglib.core.MethodInfo methodInfo27 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21, 100);
        org.mockito.cglib.core.MethodInfo methodInfo28 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray31 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray31, false, true);
        java.lang.Class[] classArray35 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray34);
        java.lang.Object[] objArray36 = null;
        java.lang.Object obj37 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass30, classArray35, objArray36);
        java.lang.Class[] classArray38 = null;
        java.lang.reflect.Constructor constructor39 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass30, classArray38);
        java.lang.Class[] classArray40 = null;
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        org.mockito.cglib.core.ClassInfo classInfo43 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass42);
        java.util.List list44 = null;
        java.util.List list45 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass42, list44);
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        org.mockito.cglib.core.ClassInfo classInfo48 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass47);
        java.util.List list49 = null;
        java.util.List list50 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass47, list49);
        java.lang.String[] strArray51 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray52 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray53 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray51, methodArray52);
        java.lang.String[] strArray54 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray55 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray56 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray54, methodArray55);
        java.lang.reflect.Method[] methodArray57 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray51, methodArray56);
        java.lang.String[] strArray58 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray59 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray60 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray58, methodArray59);
        java.lang.String[] strArray61 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray62 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray63 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray61, methodArray62);
        java.lang.reflect.Method[] methodArray64 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray58, methodArray63);
        java.lang.reflect.Method[] methodArray65 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray51, methodArray64);
        java.lang.Class[] classArray66 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray64);
        java.lang.reflect.Constructor constructor67 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass47, classArray66);
        java.lang.Class[] classArray68 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray66);
        java.lang.String[] strArray69 = org.mockito.cglib.core.ReflectUtils.getNames(classArray68);
        java.lang.reflect.Constructor constructor70 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass42, classArray68);
        int int71 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray68);
        java.lang.Object obj72 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass30, classArray40, (java.lang.Object[]) classArray68);
        java.lang.Object obj73 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) classArray68);
        org.mockito.cglib.core.MethodInfo methodInfo75 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21, (int) (short) 1);
        org.mockito.cglib.core.Signature signature76 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor21);
        org.mockito.asm.Type[] typeArray77 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo23);
        org.junit.Assert.assertNotNull(methodInfo25);
        org.junit.Assert.assertNotNull(methodInfo27);
        org.junit.Assert.assertNotNull(methodInfo28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(propertyDescriptorArray31);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(classArray35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(constructor39);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(classInfo43);
        org.junit.Assert.assertNull(list45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(classInfo48);
        org.junit.Assert.assertNull(list50);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(methodArray52);
        org.junit.Assert.assertNotNull(methodArray53);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(methodArray55);
        org.junit.Assert.assertNotNull(methodArray56);
        org.junit.Assert.assertNotNull(methodArray57);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(methodArray59);
        org.junit.Assert.assertNotNull(methodArray60);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(methodArray62);
        org.junit.Assert.assertNotNull(methodArray63);
        org.junit.Assert.assertNotNull(methodArray64);
        org.junit.Assert.assertNotNull(methodArray65);
        org.junit.Assert.assertNotNull(classArray66);
        org.junit.Assert.assertNotNull(constructor67);
        org.junit.Assert.assertNotNull(classArray68);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(constructor70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(methodInfo75);
        org.junit.Assert.assertNotNull(signature76);
        org.junit.Assert.assertNotNull(typeArray77);
    }

    @Test
    public void test1440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1440");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray1 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray2 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray1);
        java.lang.String[] strArray3 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray4 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray3, methodArray4);
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray5);
        java.lang.String[] strArray7 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray8 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray9 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.reflect.Method[] methodArray13 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray12);
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray13);
        java.lang.Class<?> wildcardClass15 = methodArray13.getClass();
        org.mockito.cglib.core.ClassInfo classInfo16 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass15);
        java.beans.PropertyDescriptor[] propertyDescriptorArray17 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass15);
        org.mockito.cglib.core.ClassInfo classInfo18 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass15);
        org.mockito.cglib.core.ClassInfo classInfo19 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass15);
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        org.mockito.cglib.core.ClassInfo classInfo22 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass21);
        java.util.List list23 = null;
        java.util.List list24 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass21, list23);
        java.lang.String[] strArray25 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray26 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray27 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray25, methodArray26);
        java.lang.String[] strArray28 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray29 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray30 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray28, methodArray29);
        java.lang.reflect.Method[] methodArray31 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray25, methodArray30);
        java.lang.String[] strArray32 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray33 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray32, methodArray33);
        java.lang.String[] strArray35 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray36 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray37 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray35, methodArray36);
        java.lang.reflect.Method[] methodArray38 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray32, methodArray37);
        java.lang.reflect.Method[] methodArray39 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray25, methodArray38);
        java.lang.Class[] classArray40 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray38);
        java.lang.reflect.Constructor constructor41 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass21, classArray40);
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        org.mockito.cglib.core.ClassInfo classInfo44 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass43);
        java.lang.Object obj45 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass43);
        java.beans.PropertyDescriptor[] propertyDescriptorArray46 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray49 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray46, false, true);
        java.lang.Class[] classArray50 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray46);
        java.lang.Class[] classArray51 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray50);
        java.lang.String[] strArray52 = org.mockito.cglib.core.ReflectUtils.getNames(classArray51);
        java.lang.reflect.Constructor constructor53 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass43, classArray51);
        int int54 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray51);
        java.lang.Object obj55 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor41, (java.lang.Object[]) classArray51);
        int int56 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray51);
        java.lang.Class[] classArray57 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray51);
        java.lang.Class[] classArray58 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray51);
        int int59 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray51);
        int int60 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray51);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Constructor constructor61 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass15, classArray51);
            org.junit.Assert.fail("Expected exception of type org.mockito.cglib.core.CodeGenerationException; message: java.lang.NoSuchMethodException-->[Ljava.lang.reflect.Method;.<init>()");
        } catch (org.mockito.cglib.core.CodeGenerationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(methodArray1);
        org.junit.Assert.assertNotNull(methodArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(methodArray4);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(methodArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(classInfo16);
        org.junit.Assert.assertNotNull(propertyDescriptorArray17);
        org.junit.Assert.assertNotNull(classInfo18);
        org.junit.Assert.assertNotNull(classInfo19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(classInfo22);
        org.junit.Assert.assertNull(list24);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(methodArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(methodArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(methodArray38);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(classArray40);
        org.junit.Assert.assertNotNull(constructor41);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(classInfo44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(propertyDescriptorArray46);
        org.junit.Assert.assertNotNull(methodArray49);
        org.junit.Assert.assertNotNull(classArray50);
        org.junit.Assert.assertNotNull(classArray51);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(constructor53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(classArray57);
        org.junit.Assert.assertNotNull(classArray58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
    }

    @Test
    public void test1441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1441");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray1 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray2 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray1);
        java.lang.String[] strArray3 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray4 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray3, methodArray4);
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray5);
        java.lang.String[] strArray7 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray8 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray9 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.reflect.Method[] methodArray13 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray12);
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray13);
        java.lang.Class<?> wildcardClass15 = strArray0.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray16 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass15);
        org.mockito.cglib.core.ClassInfo classInfo17 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass15);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.mockito.cglib.core.ClassInfo classInfo20 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass19);
        java.util.List list21 = null;
        java.util.List list22 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass19, list21);
        java.lang.String[] strArray23 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray24 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray25 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray24);
        java.lang.String[] strArray26 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray27 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray26, methodArray27);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray28);
        java.lang.String[] strArray30 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray31 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray32 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray31);
        java.lang.String[] strArray33 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray34 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray33, methodArray34);
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray35);
        java.lang.reflect.Method[] methodArray37 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray36);
        java.lang.Class[] classArray38 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray36);
        java.lang.reflect.Constructor constructor39 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass19, classArray38);
        org.mockito.cglib.core.MethodInfo methodInfo41 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor39, (int) ' ');
        org.mockito.cglib.core.MethodInfo methodInfo42 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor39);
        java.lang.String[] strArray43 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray44 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray45 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray43, methodArray44);
        java.lang.String[] strArray46 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray47 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray48 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray46, methodArray47);
        java.lang.reflect.Method[] methodArray49 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray43, methodArray48);
        java.lang.String[] strArray50 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray51 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray52 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray50, methodArray51);
        java.lang.String[] strArray53 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray54 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray55 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray53, methodArray54);
        java.lang.reflect.Method[] methodArray56 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray50, methodArray55);
        java.lang.reflect.Method[] methodArray57 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray43, methodArray56);
        java.lang.Class<?> wildcardClass58 = methodArray56.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray59 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass58);
        java.lang.Class[] classArray60 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray59);
        java.lang.Object obj61 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor39, (java.lang.Object[]) classArray60);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Constructor constructor62 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass15, classArray60);
            org.junit.Assert.fail("Expected exception of type org.mockito.cglib.core.CodeGenerationException; message: java.lang.NoSuchMethodException-->[Ljava.lang.String;.<init>()");
        } catch (org.mockito.cglib.core.CodeGenerationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(methodArray1);
        org.junit.Assert.assertNotNull(methodArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(methodArray4);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(methodArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(propertyDescriptorArray16);
        org.junit.Assert.assertNotNull(classInfo17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(classInfo20);
        org.junit.Assert.assertNull(list22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(classArray38);
        org.junit.Assert.assertNotNull(constructor39);
        org.junit.Assert.assertNotNull(methodInfo41);
        org.junit.Assert.assertNotNull(methodInfo42);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(methodArray44);
        org.junit.Assert.assertNotNull(methodArray45);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(methodArray47);
        org.junit.Assert.assertNotNull(methodArray48);
        org.junit.Assert.assertNotNull(methodArray49);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(methodArray51);
        org.junit.Assert.assertNotNull(methodArray52);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(methodArray54);
        org.junit.Assert.assertNotNull(methodArray55);
        org.junit.Assert.assertNotNull(methodArray56);
        org.junit.Assert.assertNotNull(methodArray57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(propertyDescriptorArray59);
        org.junit.Assert.assertNotNull(classArray60);
        org.junit.Assert.assertNotNull(obj61);
    }

    @Test
    public void test1442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1442");
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) 10, (byte) 1, (byte) 100, (byte) 0, (byte) 1 };
        java.lang.ClassLoader classLoader8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class9 = org.mockito.cglib.core.ReflectUtils.defineClass("hi!", byteArray7, classLoader8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[100, 10, 1, 100, 0, 1]");
    }

    @Test
    public void test1443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1443");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo23 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21, (int) ' ');
        org.mockito.cglib.core.Signature signature24 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor21);
        java.lang.Class<?> wildcardClass25 = signature24.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray26 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass25);
        org.mockito.cglib.core.ClassInfo classInfo27 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass25);
        java.beans.PropertyDescriptor[] propertyDescriptorArray28 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray31 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray28, false, true);
        java.lang.Class[] classArray32 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray31);
        int int33 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray32);
        java.lang.String[] strArray34 = org.mockito.cglib.core.ReflectUtils.getNames(classArray32);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Constructor constructor35 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass25, classArray32);
            org.junit.Assert.fail("Expected exception of type org.mockito.cglib.core.CodeGenerationException; message: java.lang.NoSuchMethodException-->org.mockito.cglib.core.Signature.<init>()");
        } catch (org.mockito.cglib.core.CodeGenerationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo23);
        org.junit.Assert.assertNotNull(signature24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(propertyDescriptorArray26);
        org.junit.Assert.assertNotNull(classInfo27);
        org.junit.Assert.assertNotNull(propertyDescriptorArray28);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(strArray34);
    }

    @Test
    public void test1444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1444");
        java.beans.PropertyDescriptor[] propertyDescriptorArray0 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray3 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray0, false, true);
        java.lang.Class[] classArray4 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray0);
        int int5 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray4);
        int int6 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray4);
        int int7 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray4);
        org.junit.Assert.assertNotNull(propertyDescriptorArray0);
        org.junit.Assert.assertNotNull(methodArray3);
        org.junit.Assert.assertNotNull(classArray4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    public void test1445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1445");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.beans.PropertyDescriptor[] propertyDescriptorArray23 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray23, false, true);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray23, false, false);
        java.lang.Object obj30 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) methodArray29);
        java.beans.PropertyDescriptor[] propertyDescriptorArray31 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray31, true, true);
        java.lang.Object obj35 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) propertyDescriptorArray31);
        org.mockito.asm.Type[] typeArray36 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        java.lang.String[] strArray37 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray38 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray39 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray37, methodArray38);
        java.lang.String[] strArray40 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray41 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray42 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray40, methodArray41);
        java.lang.reflect.Method[] methodArray43 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray37, methodArray42);
        java.lang.String[] strArray44 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray45 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray46 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray44, methodArray45);
        java.lang.String[] strArray47 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray48 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray49 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray47, methodArray48);
        java.lang.reflect.Method[] methodArray50 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray44, methodArray49);
        java.lang.reflect.Method[] methodArray51 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray37, methodArray50);
        java.lang.String[] strArray52 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray53 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray54 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray52, methodArray53);
        java.lang.String[] strArray55 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray56 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray57 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray55, methodArray56);
        java.lang.String[] strArray58 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray59 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray60 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray58, methodArray59);
        java.lang.String[] strArray61 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray62 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray63 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray61, methodArray62);
        java.lang.reflect.Method[] methodArray64 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray58, methodArray63);
        java.lang.reflect.Method[] methodArray65 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray55, methodArray64);
        java.lang.reflect.Method[] methodArray66 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray52, methodArray65);
        java.lang.reflect.Method[] methodArray67 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray37, methodArray65);
        java.lang.Object obj68 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) methodArray65);
        org.mockito.asm.Type[] typeArray69 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        org.mockito.cglib.core.MethodInfo methodInfo71 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21, (int) (short) -1);
        org.mockito.cglib.core.Signature signature72 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor21);
        org.mockito.cglib.core.Signature signature73 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor21);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(propertyDescriptorArray23);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(propertyDescriptorArray31);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(methodArray38);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(methodArray42);
        org.junit.Assert.assertNotNull(methodArray43);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(methodArray45);
        org.junit.Assert.assertNotNull(methodArray46);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(methodArray48);
        org.junit.Assert.assertNotNull(methodArray49);
        org.junit.Assert.assertNotNull(methodArray50);
        org.junit.Assert.assertNotNull(methodArray51);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(methodArray53);
        org.junit.Assert.assertNotNull(methodArray54);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(methodArray56);
        org.junit.Assert.assertNotNull(methodArray57);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(methodArray59);
        org.junit.Assert.assertNotNull(methodArray60);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(methodArray62);
        org.junit.Assert.assertNotNull(methodArray63);
        org.junit.Assert.assertNotNull(methodArray64);
        org.junit.Assert.assertNotNull(methodArray65);
        org.junit.Assert.assertNotNull(methodArray66);
        org.junit.Assert.assertNotNull(methodArray67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(typeArray69);
        org.junit.Assert.assertNotNull(methodInfo71);
        org.junit.Assert.assertNotNull(signature72);
        org.junit.Assert.assertNotNull(signature73);
    }

    @Test
    public void test1446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1446");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray1 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray2 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray1);
        java.lang.String[] strArray3 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray4 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray3, methodArray4);
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray5);
        java.lang.String[] strArray7 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray8 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray9 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.reflect.Method[] methodArray13 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray12);
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray17);
        java.lang.Class<?> wildcardClass19 = methodArray17.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray20 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass19);
        java.beans.PropertyDescriptor[] propertyDescriptorArray21 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass19);
        java.beans.PropertyDescriptor[] propertyDescriptorArray22 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray25 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray22, false, true);
        java.lang.Class[] classArray26 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray22);
        java.lang.Class[] classArray27 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray26);
        java.lang.String[] strArray28 = org.mockito.cglib.core.ReflectUtils.getNames(classArray27);
        java.lang.String[] strArray29 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray30 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray31 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray29, methodArray30);
        java.lang.String[] strArray32 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray33 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray32, methodArray33);
        java.lang.String[] strArray35 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray36 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray37 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray35, methodArray36);
        java.lang.String[] strArray38 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray39 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray40 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray38, methodArray39);
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray35, methodArray40);
        java.lang.reflect.Method[] methodArray42 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray32, methodArray41);
        java.lang.reflect.Method[] methodArray43 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray29, methodArray42);
        java.lang.reflect.Method[] methodArray44 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray28, methodArray42);
        java.beans.PropertyDescriptor[] propertyDescriptorArray45 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray48 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray45, true, true);
        java.lang.reflect.Method[] methodArray49 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray28, methodArray48);
        java.lang.Class[] classArray50 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) strArray28);
        int int51 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray50);
        java.lang.String[] strArray52 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray53 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray54 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray52, methodArray53);
        java.lang.String[] strArray55 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray56 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray57 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray55, methodArray56);
        java.lang.reflect.Method[] methodArray58 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray52, methodArray57);
        java.lang.String[] strArray59 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray60 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray61 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray59, methodArray60);
        java.lang.String[] strArray62 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray63 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray64 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray62, methodArray63);
        java.lang.reflect.Method[] methodArray65 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray59, methodArray64);
        java.lang.reflect.Method[] methodArray66 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray52, methodArray65);
        java.lang.Class[] classArray67 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray65);
        java.lang.Class<?> wildcardClass68 = classArray67.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray69 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass68);
        java.lang.Class[] classArray70 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray69);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj71 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass19, classArray50, (java.lang.Object[]) propertyDescriptorArray69);
            org.junit.Assert.fail("Expected exception of type org.mockito.cglib.core.CodeGenerationException; message: java.lang.NoSuchMethodException-->[Ljava.lang.reflect.Method;.<init>()");
        } catch (org.mockito.cglib.core.CodeGenerationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(methodArray1);
        org.junit.Assert.assertNotNull(methodArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(methodArray4);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(methodArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(propertyDescriptorArray20);
        org.junit.Assert.assertNotNull(propertyDescriptorArray21);
        org.junit.Assert.assertNotNull(propertyDescriptorArray22);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(classArray26);
        org.junit.Assert.assertNotNull(classArray27);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(methodArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(methodArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(methodArray42);
        org.junit.Assert.assertNotNull(methodArray43);
        org.junit.Assert.assertNotNull(methodArray44);
        org.junit.Assert.assertNotNull(propertyDescriptorArray45);
        org.junit.Assert.assertNotNull(methodArray48);
        org.junit.Assert.assertNotNull(methodArray49);
        org.junit.Assert.assertNotNull(classArray50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(methodArray53);
        org.junit.Assert.assertNotNull(methodArray54);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(methodArray56);
        org.junit.Assert.assertNotNull(methodArray57);
        org.junit.Assert.assertNotNull(methodArray58);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(methodArray60);
        org.junit.Assert.assertNotNull(methodArray61);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(methodArray63);
        org.junit.Assert.assertNotNull(methodArray64);
        org.junit.Assert.assertNotNull(methodArray65);
        org.junit.Assert.assertNotNull(methodArray66);
        org.junit.Assert.assertNotNull(classArray67);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(propertyDescriptorArray69);
        org.junit.Assert.assertNotNull(classArray70);
    }

    @Test
    public void test1447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1447");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray1 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray2 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray1);
        java.lang.String[] strArray3 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray4 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray3, methodArray4);
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray5);
        java.lang.Class<?> wildcardClass7 = strArray0.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj8 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass7);
            org.junit.Assert.fail("Expected exception of type org.mockito.cglib.core.CodeGenerationException; message: java.lang.NoSuchMethodException-->[Ljava.lang.String;.<init>()");
        } catch (org.mockito.cglib.core.CodeGenerationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(methodArray1);
        org.junit.Assert.assertNotNull(methodArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(methodArray4);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test1448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1448");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray1 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray2 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray1);
        java.lang.String[] strArray3 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray4 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray3, methodArray4);
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray5);
        java.lang.String[] strArray7 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray8 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray9 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.reflect.Method[] methodArray13 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray12);
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray13);
        java.lang.Class<?> wildcardClass15 = methodArray13.getClass();
        org.mockito.cglib.core.ClassInfo classInfo16 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass15);
        java.beans.PropertyDescriptor[] propertyDescriptorArray17 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass15);
        java.beans.PropertyDescriptor[] propertyDescriptorArray18 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass15);
        java.beans.PropertyDescriptor[] propertyDescriptorArray19 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass15);
        org.mockito.cglib.core.ClassInfo classInfo20 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass15);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method21 = org.mockito.cglib.core.ReflectUtils.findNewInstance((java.lang.Class) wildcardClass15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: class [Ljava.lang.reflect.Method; is not an interface");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(methodArray1);
        org.junit.Assert.assertNotNull(methodArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(methodArray4);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(methodArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(classInfo16);
        org.junit.Assert.assertNotNull(propertyDescriptorArray17);
        org.junit.Assert.assertNotNull(propertyDescriptorArray18);
        org.junit.Assert.assertNotNull(propertyDescriptorArray19);
        org.junit.Assert.assertNotNull(classInfo20);
    }

    @Test
    public void test1449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1449");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        java.lang.Object obj2 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.beans.PropertyDescriptor[] propertyDescriptorArray3 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray3, false, true);
        java.lang.Class[] classArray7 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray3);
        java.lang.Class[] classArray8 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray7);
        java.lang.String[] strArray9 = org.mockito.cglib.core.ReflectUtils.getNames(classArray8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.Object obj13 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray8, (java.lang.Object[]) strArray10);
        java.beans.PropertyDescriptor[] propertyDescriptorArray14 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray14, false, true);
        java.lang.Class[] classArray18 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray14);
        int int19 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray18);
        int int20 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray18);
        java.beans.PropertyDescriptor[] propertyDescriptorArray22 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray25 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray22, true, true);
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray22, false, true);
        java.lang.Class[] classArray29 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray22);
        java.lang.String[] strArray30 = org.mockito.cglib.core.ReflectUtils.getNames(classArray29);
        java.lang.reflect.Constructor constructor31 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray29);
        org.mockito.cglib.core.MethodInfo methodInfo32 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor31);
        org.mockito.asm.Type[] typeArray33 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor31);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(propertyDescriptorArray3);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(classArray7);
        org.junit.Assert.assertNotNull(classArray8);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(propertyDescriptorArray14);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(propertyDescriptorArray22);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(classArray29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(constructor31);
        org.junit.Assert.assertNotNull(methodInfo32);
        org.junit.Assert.assertNotNull(typeArray33);
    }

    @Test
    public void test1450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1450");
        java.beans.PropertyDescriptor[] propertyDescriptorArray0 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray3 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray0, false, true);
        java.lang.Class[] classArray4 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray0);
        java.lang.Class[] classArray5 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray4);
        java.lang.Class<?> wildcardClass6 = classArray5.getClass();
        org.mockito.cglib.core.ClassInfo classInfo7 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass6);
        java.beans.PropertyDescriptor[] propertyDescriptorArray8 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass6);
        java.beans.PropertyDescriptor[] propertyDescriptorArray9 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass6);
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        org.mockito.cglib.core.ClassInfo classInfo13 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass12);
        java.util.List list14 = null;
        java.util.List list15 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass12, list14);
        java.lang.String[] strArray16 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray17 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray16, methodArray17);
        java.lang.String[] strArray19 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray20 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray21 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray19, methodArray20);
        java.lang.reflect.Method[] methodArray22 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray16, methodArray21);
        java.lang.String[] strArray23 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray24 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray25 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray24);
        java.lang.String[] strArray26 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray27 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray26, methodArray27);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray28);
        java.lang.reflect.Method[] methodArray30 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray16, methodArray29);
        java.lang.Class[] classArray31 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray29);
        java.lang.reflect.Constructor constructor32 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass12, classArray31);
        org.mockito.cglib.core.MethodInfo methodInfo33 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor32);
        java.beans.PropertyDescriptor[] propertyDescriptorArray34 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray37 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray34, false, true);
        java.lang.reflect.Method[] methodArray40 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray34, false, false);
        java.lang.Object obj41 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor32, (java.lang.Object[]) methodArray40);
        java.beans.PropertyDescriptor[] propertyDescriptorArray42 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray45 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray42, true, true);
        java.lang.Object obj46 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor32, (java.lang.Object[]) propertyDescriptorArray42);
        org.mockito.asm.Type[] typeArray47 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor32);
        java.beans.PropertyDescriptor[] propertyDescriptorArray48 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray51 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray48, false, true);
        java.lang.Class[] classArray52 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray48);
        java.lang.reflect.Method[] methodArray55 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray48, true, false);
        java.lang.Object obj56 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor32, (java.lang.Object[]) propertyDescriptorArray48);
        java.lang.reflect.Method[] methodArray59 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray48, true, false);
        java.lang.reflect.Method[] methodArray62 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray48, true, true);
        java.lang.Class[] classArray63 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray62);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method64 = org.mockito.cglib.core.ReflectUtils.findDeclaredMethod((java.lang.Class) wildcardClass6, "", classArray63);
            org.junit.Assert.fail("Expected exception of type java.lang.NoSuchMethodException; message: ");
        } catch (java.lang.NoSuchMethodException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(propertyDescriptorArray0);
        org.junit.Assert.assertNotNull(methodArray3);
        org.junit.Assert.assertNotNull(classArray4);
        org.junit.Assert.assertNotNull(classArray5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(classInfo7);
        org.junit.Assert.assertNotNull(propertyDescriptorArray8);
        org.junit.Assert.assertNotNull(propertyDescriptorArray9);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(classInfo13);
        org.junit.Assert.assertNull(list15);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(methodArray20);
        org.junit.Assert.assertNotNull(methodArray21);
        org.junit.Assert.assertNotNull(methodArray22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(methodArray30);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(constructor32);
        org.junit.Assert.assertNotNull(methodInfo33);
        org.junit.Assert.assertNotNull(propertyDescriptorArray34);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(propertyDescriptorArray42);
        org.junit.Assert.assertNotNull(methodArray45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(typeArray47);
        org.junit.Assert.assertNotNull(propertyDescriptorArray48);
        org.junit.Assert.assertNotNull(methodArray51);
        org.junit.Assert.assertNotNull(classArray52);
        org.junit.Assert.assertNotNull(methodArray55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(methodArray59);
        org.junit.Assert.assertNotNull(methodArray62);
        org.junit.Assert.assertNotNull(classArray63);
    }

    @Test
    public void test1451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1451");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        java.lang.Object obj2 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.lang.Object obj3 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.lang.String[] strArray4 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray5 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray4, methodArray5);
        java.lang.Class[] classArray7 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) strArray4);
        java.lang.String[] strArray8 = org.mockito.cglib.core.ReflectUtils.getNames(classArray7);
        java.beans.PropertyDescriptor[] propertyDescriptorArray9 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray9, false, true);
        java.lang.Class[] classArray13 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray9);
        int int14 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray13);
        int int15 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray13);
        java.lang.Object obj16 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray7, (java.lang.Object[]) classArray13);
        org.mockito.cglib.core.ClassInfo classInfo17 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method18 = org.mockito.cglib.core.ReflectUtils.findInterfaceMethod((java.lang.Class) wildcardClass1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: class java.lang.Object is not an interface");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(classArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(propertyDescriptorArray9);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(classArray13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(classInfo17);
    }

    @Test
    public void test1452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1452");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray1 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray2 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray1);
        java.lang.String[] strArray3 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray4 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray3, methodArray4);
        java.lang.String[] strArray6 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray7 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray8 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray6, methodArray7);
        java.lang.String[] strArray9 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray10 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray9, methodArray10);
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray6, methodArray11);
        java.lang.reflect.Method[] methodArray13 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray3, methodArray12);
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray13);
        java.lang.Class[] classArray15 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray14);
        java.lang.Class<?> wildcardClass16 = methodArray14.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray17 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass16);
        java.util.List list18 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List list19 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass16, list18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(methodArray1);
        org.junit.Assert.assertNotNull(methodArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(methodArray4);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(methodArray8);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(classArray15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(propertyDescriptorArray17);
    }

    @Test
    public void test1453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1453");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.lang.String[] strArray23 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray24 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray25 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray24);
        java.lang.String[] strArray26 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray27 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray26, methodArray27);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray28);
        java.lang.String[] strArray30 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray31 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray32 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray31);
        java.lang.String[] strArray33 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray34 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray33, methodArray34);
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray35);
        java.lang.reflect.Method[] methodArray37 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray36);
        java.lang.String[] strArray38 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray39 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray40 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray38, methodArray39);
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray40);
        java.lang.Object obj42 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) strArray23);
        org.mockito.cglib.core.MethodInfo methodInfo43 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        org.mockito.asm.Type[] typeArray44 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        java.lang.Class<?> wildcardClass45 = typeArray44.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray46 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass45);
        java.beans.PropertyDescriptor[] propertyDescriptorArray47 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass45);
        java.lang.reflect.Method[] methodArray50 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray47, true, true);
        java.lang.reflect.Method[] methodArray53 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray47, false, false);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(methodInfo43);
        org.junit.Assert.assertNotNull(typeArray44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(propertyDescriptorArray46);
        org.junit.Assert.assertNotNull(propertyDescriptorArray47);
        org.junit.Assert.assertNotNull(methodArray50);
        org.junit.Assert.assertNotNull(methodArray53);
    }

    @Test
    public void test1454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1454");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.beans.PropertyDescriptor[] propertyDescriptorArray23 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray23, false, true);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray23, false, false);
        java.lang.Object obj30 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) methodArray29);
        java.lang.String[] strArray31 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray32 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray33 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray31, methodArray32);
        java.lang.String[] strArray34 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray35 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray34, methodArray35);
        java.lang.reflect.Method[] methodArray37 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray31, methodArray36);
        java.lang.String[] strArray38 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray39 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray40 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray38, methodArray39);
        java.lang.String[] strArray41 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray42 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray43 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray41, methodArray42);
        java.lang.reflect.Method[] methodArray44 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray38, methodArray43);
        java.lang.reflect.Method[] methodArray45 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray31, methodArray44);
        java.lang.Class[] classArray46 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray44);
        java.lang.String[] strArray47 = org.mockito.cglib.core.ReflectUtils.getNames(classArray46);
        java.lang.Object obj48 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) strArray47);
        java.beans.PropertyDescriptor[] propertyDescriptorArray49 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray52 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray49, false, true);
        java.lang.reflect.Method[] methodArray55 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray49, true, true);
        java.lang.reflect.Method[] methodArray58 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray49, false, true);
        java.lang.Object obj59 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) propertyDescriptorArray49);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(propertyDescriptorArray23);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(methodArray33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(methodArray42);
        org.junit.Assert.assertNotNull(methodArray43);
        org.junit.Assert.assertNotNull(methodArray44);
        org.junit.Assert.assertNotNull(methodArray45);
        org.junit.Assert.assertNotNull(classArray46);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(propertyDescriptorArray49);
        org.junit.Assert.assertNotNull(methodArray52);
        org.junit.Assert.assertNotNull(methodArray55);
        org.junit.Assert.assertNotNull(methodArray58);
        org.junit.Assert.assertNotNull(obj59);
    }

    @Test
    public void test1455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1455");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.lang.String[] strArray23 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray24 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray25 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray24);
        java.lang.String[] strArray26 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray27 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray26, methodArray27);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray28);
        java.lang.String[] strArray30 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray31 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray32 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray31);
        java.lang.String[] strArray33 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray34 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray33, methodArray34);
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray35);
        java.lang.reflect.Method[] methodArray37 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray36);
        java.lang.String[] strArray38 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray39 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray40 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray38, methodArray39);
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray40);
        java.lang.Object obj42 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) strArray23);
        org.mockito.cglib.core.MethodInfo methodInfo43 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        org.mockito.asm.Type[] typeArray44 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        java.lang.Class<?> wildcardClass45 = constructor21.getClass();
        org.mockito.cglib.core.ClassInfo classInfo46 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass45);
        java.beans.PropertyDescriptor[] propertyDescriptorArray47 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass45);
        java.lang.reflect.Method[] methodArray50 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray47, false, true);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(methodInfo43);
        org.junit.Assert.assertNotNull(typeArray44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(classInfo46);
        org.junit.Assert.assertNotNull(propertyDescriptorArray47);
        org.junit.Assert.assertNotNull(methodArray50);
    }

    @Test
    public void test1456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1456");
        java.beans.PropertyDescriptor[] propertyDescriptorArray0 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray3 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray0, false, true);
        java.lang.Class[] classArray4 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray0);
        java.lang.Class[] classArray5 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray4);
        java.lang.Class<?> wildcardClass6 = classArray4.getClass();
        org.mockito.cglib.core.ClassInfo classInfo7 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass6);
        java.beans.PropertyDescriptor[] propertyDescriptorArray8 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass6);
        java.beans.PropertyDescriptor[] propertyDescriptorArray9 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass6);
        java.beans.PropertyDescriptor[] propertyDescriptorArray10 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass6);
        java.lang.reflect.Method[] methodArray13 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray10, true, true);
        java.lang.reflect.Method[] methodArray16 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray10, false, false);
        org.junit.Assert.assertNotNull(propertyDescriptorArray0);
        org.junit.Assert.assertNotNull(methodArray3);
        org.junit.Assert.assertNotNull(classArray4);
        org.junit.Assert.assertNotNull(classArray5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(classInfo7);
        org.junit.Assert.assertNotNull(propertyDescriptorArray8);
        org.junit.Assert.assertNotNull(propertyDescriptorArray9);
        org.junit.Assert.assertNotNull(propertyDescriptorArray10);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray16);
    }

    @Test
    public void test1457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1457");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        java.lang.Object obj2 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.beans.PropertyDescriptor[] propertyDescriptorArray3 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray3, false, true);
        java.lang.Class[] classArray7 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray3);
        java.lang.Class[] classArray8 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray7);
        java.lang.String[] strArray9 = org.mockito.cglib.core.ReflectUtils.getNames(classArray8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.Object obj13 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray8, (java.lang.Object[]) strArray10);
        java.beans.PropertyDescriptor[] propertyDescriptorArray14 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray14, false, true);
        java.lang.Class[] classArray18 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray14);
        int int19 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray18);
        int int20 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray18);
        org.mockito.cglib.core.MethodInfo methodInfo23 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21, (int) (byte) 1);
        org.mockito.cglib.core.MethodInfo methodInfo24 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(propertyDescriptorArray3);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(classArray7);
        org.junit.Assert.assertNotNull(classArray8);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(propertyDescriptorArray14);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo23);
        org.junit.Assert.assertNotNull(methodInfo24);
    }

    @Test
    public void test1458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1458");
        byte[] byteArray5 = new byte[] { (byte) 1, (byte) -1, (byte) 100, (byte) 1 };
        java.lang.ClassLoader classLoader6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class7 = org.mockito.cglib.core.ReflectUtils.defineClass("hi!", byteArray5, classLoader6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[1, -1, 100, 1]");
    }

    @Test
    public void test1459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1459");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray1 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray2 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray1);
        java.lang.String[] strArray3 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray4 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray3, methodArray4);
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray5);
        java.lang.String[] strArray7 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray8 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray9 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.reflect.Method[] methodArray13 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray12);
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray17);
        java.lang.Class<?> wildcardClass19 = methodArray18.getClass();
        org.mockito.cglib.core.ClassInfo classInfo20 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass19);
        java.beans.PropertyDescriptor[] propertyDescriptorArray21 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass19);
        java.beans.PropertyDescriptor[] propertyDescriptorArray22 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass19);
        org.mockito.cglib.core.ClassInfo classInfo23 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass19);
        java.beans.PropertyDescriptor[] propertyDescriptorArray24 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass19);
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(methodArray1);
        org.junit.Assert.assertNotNull(methodArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(methodArray4);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(methodArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(classInfo20);
        org.junit.Assert.assertNotNull(propertyDescriptorArray21);
        org.junit.Assert.assertNotNull(propertyDescriptorArray22);
        org.junit.Assert.assertNotNull(classInfo23);
        org.junit.Assert.assertNotNull(propertyDescriptorArray24);
    }

    @Test
    public void test1460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1460");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.beans.PropertyDescriptor[] propertyDescriptorArray23 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray23, false, true);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray23, false, false);
        java.lang.Object obj30 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) methodArray29);
        java.beans.PropertyDescriptor[] propertyDescriptorArray31 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray31, true, true);
        java.lang.Object obj35 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) propertyDescriptorArray31);
        java.lang.String[] strArray36 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray37 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray38 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray37);
        java.lang.String[] strArray39 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray40 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray39, methodArray40);
        java.lang.String[] strArray42 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray43 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray44 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray42, methodArray43);
        java.lang.reflect.Method[] methodArray45 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray39, methodArray44);
        java.lang.reflect.Method[] methodArray46 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray45);
        java.lang.Object obj47 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) methodArray46);
        org.mockito.asm.Type[] typeArray48 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        java.lang.Class<?> wildcardClass49 = typeArray48.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray50 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass49);
        java.beans.PropertyDescriptor[] propertyDescriptorArray51 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(propertyDescriptorArray23);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(propertyDescriptorArray31);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(methodArray38);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(methodArray43);
        org.junit.Assert.assertNotNull(methodArray44);
        org.junit.Assert.assertNotNull(methodArray45);
        org.junit.Assert.assertNotNull(methodArray46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(typeArray48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(propertyDescriptorArray50);
        org.junit.Assert.assertNotNull(propertyDescriptorArray51);
    }

    @Test
    public void test1461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1461");
        java.beans.PropertyDescriptor[] propertyDescriptorArray0 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray3 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray0, false, true);
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray0, true, true);
        java.lang.reflect.Method[] methodArray9 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray0, false, true);
        java.lang.Class<?> wildcardClass10 = propertyDescriptorArray0.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray11 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass10);
        org.mockito.cglib.core.ClassInfo classInfo12 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass10);
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Object obj16 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass15);
        java.lang.Object obj17 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass15);
        java.lang.String[] strArray18 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray19 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray20 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray18, methodArray19);
        java.lang.Class[] classArray21 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) strArray18);
        java.lang.String[] strArray22 = org.mockito.cglib.core.ReflectUtils.getNames(classArray21);
        java.beans.PropertyDescriptor[] propertyDescriptorArray23 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray23, false, true);
        java.lang.Class[] classArray27 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray23);
        int int28 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray27);
        int int29 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray27);
        java.lang.Object obj30 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass15, classArray21, (java.lang.Object[]) classArray27);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method31 = org.mockito.cglib.core.ReflectUtils.findDeclaredMethod((java.lang.Class) wildcardClass10, "", classArray21);
            org.junit.Assert.fail("Expected exception of type java.lang.NoSuchMethodException; message: ");
        } catch (java.lang.NoSuchMethodException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(propertyDescriptorArray0);
        org.junit.Assert.assertNotNull(methodArray3);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(propertyDescriptorArray11);
        org.junit.Assert.assertNotNull(classInfo12);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(methodArray20);
        org.junit.Assert.assertNotNull(classArray21);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(propertyDescriptorArray23);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(classArray27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(obj30);
    }

    @Test
    public void test1462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1462");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        org.mockito.cglib.core.ClassInfo classInfo24 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass23);
        java.lang.Object obj25 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass23);
        java.beans.PropertyDescriptor[] propertyDescriptorArray26 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray26, false, true);
        java.lang.Class[] classArray30 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray26);
        java.lang.Class[] classArray31 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray30);
        java.lang.String[] strArray32 = org.mockito.cglib.core.ReflectUtils.getNames(classArray31);
        java.lang.reflect.Constructor constructor33 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass23, classArray31);
        int int34 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray31);
        java.lang.Object obj35 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) classArray31);
        int int36 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray31);
        java.lang.Class<?> wildcardClass37 = classArray31.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(classInfo24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(propertyDescriptorArray26);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(classArray30);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(constructor33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test1463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1463");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.lang.String[] strArray23 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray24 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray25 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray24);
        java.lang.String[] strArray26 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray27 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray26, methodArray27);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray28);
        java.lang.String[] strArray30 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray31 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray32 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray31);
        java.lang.String[] strArray33 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray34 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray33, methodArray34);
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray35);
        java.lang.reflect.Method[] methodArray37 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray36);
        java.lang.String[] strArray38 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray39 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray40 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray38, methodArray39);
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray40);
        java.lang.Object obj42 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) strArray23);
        java.beans.PropertyDescriptor[] propertyDescriptorArray43 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray46 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray43, false, true);
        java.lang.Class[] classArray47 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray46);
        java.lang.reflect.Method[] methodArray48 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray46);
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!", "hi!" };
        java.beans.PropertyDescriptor[] propertyDescriptorArray52 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray55 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray52, false, true);
        java.lang.Class[] classArray56 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray52);
        java.lang.Class[] classArray57 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray56);
        java.lang.String[] strArray58 = org.mockito.cglib.core.ReflectUtils.getNames(classArray56);
        java.lang.Class<?> wildcardClass59 = classArray56.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray60 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass59);
        java.beans.PropertyDescriptor[] propertyDescriptorArray61 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass59);
        java.lang.reflect.Method[] methodArray64 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray61, false, false);
        java.lang.reflect.Method[] methodArray65 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray51, methodArray64);
        java.lang.reflect.Method[] methodArray66 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray64);
        java.lang.Class[] classArray67 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) strArray23);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(propertyDescriptorArray43);
        org.junit.Assert.assertNotNull(methodArray46);
        org.junit.Assert.assertNotNull(classArray47);
        org.junit.Assert.assertNotNull(methodArray48);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(propertyDescriptorArray52);
        org.junit.Assert.assertNotNull(methodArray55);
        org.junit.Assert.assertNotNull(classArray56);
        org.junit.Assert.assertNotNull(classArray57);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(propertyDescriptorArray60);
        org.junit.Assert.assertNotNull(propertyDescriptorArray61);
        org.junit.Assert.assertNotNull(methodArray64);
        org.junit.Assert.assertNotNull(methodArray65);
        org.junit.Assert.assertNotNull(methodArray66);
        org.junit.Assert.assertNotNull(classArray67);
    }

    @Test
    public void test1464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1464");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray1 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray2 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray1);
        java.lang.String[] strArray3 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray4 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray3, methodArray4);
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray5);
        java.lang.String[] strArray7 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray8 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray9 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.reflect.Method[] methodArray13 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray12);
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray17);
        java.lang.Class<?> wildcardClass19 = methodArray17.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray20 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass19);
        org.mockito.cglib.core.ClassInfo classInfo21 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass19);
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(methodArray1);
        org.junit.Assert.assertNotNull(methodArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(methodArray4);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(methodArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(propertyDescriptorArray20);
        org.junit.Assert.assertNotNull(classInfo21);
    }

    @Test
    public void test1465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1465");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        java.util.List list2 = null;
        java.util.List list3 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list2);
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        org.mockito.cglib.core.ClassInfo classInfo6 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass5);
        java.beans.PropertyDescriptor[] propertyDescriptorArray8 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray8, false, true);
        java.lang.Class[] classArray12 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray8);
        java.lang.Class[] classArray13 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray12);
        java.lang.String[] strArray14 = org.mockito.cglib.core.ReflectUtils.getNames(classArray13);
        java.lang.reflect.Constructor constructor15 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass5, classArray13);
        org.mockito.cglib.core.MethodInfo methodInfo16 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor15);
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray19 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray22 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray19, false, true);
        java.lang.Class[] classArray23 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray22);
        java.lang.Object[] objArray24 = null;
        java.lang.Object obj25 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass18, classArray23, objArray24);
        java.lang.Object obj26 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor15, (java.lang.Object[]) classArray23);
        java.lang.String[] strArray27 = org.mockito.cglib.core.ReflectUtils.getNames(classArray23);
        java.lang.reflect.Constructor constructor28 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray23);
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray31 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray31, false, true);
        java.lang.Class[] classArray35 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray34);
        java.lang.Object[] objArray36 = null;
        java.lang.Object obj37 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass30, classArray35, objArray36);
        int int38 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray35);
        java.lang.reflect.Constructor constructor39 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray35);
        int int40 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray35);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNull(list3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(classInfo6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(propertyDescriptorArray8);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(classArray13);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(constructor15);
        org.junit.Assert.assertNotNull(methodInfo16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(propertyDescriptorArray19);
        org.junit.Assert.assertNotNull(methodArray22);
        org.junit.Assert.assertNotNull(classArray23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(constructor28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(propertyDescriptorArray31);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(classArray35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(constructor39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
    }

    @Test
    public void test1466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1466");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray2 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray2, false, true);
        java.lang.Class[] classArray6 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray5);
        java.lang.Object[] objArray7 = null;
        java.lang.Object obj8 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray6, objArray7);
        java.lang.Class[] classArray9 = null;
        java.lang.reflect.Constructor constructor10 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray9);
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        org.mockito.cglib.core.ClassInfo classInfo13 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass12);
        java.lang.Object obj14 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass12);
        java.beans.PropertyDescriptor[] propertyDescriptorArray15 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray15, false, true);
        java.lang.Class[] classArray19 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray15);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray19);
        java.lang.String[] strArray21 = org.mockito.cglib.core.ReflectUtils.getNames(classArray20);
        java.lang.reflect.Constructor constructor22 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass12, classArray20);
        java.lang.Class[] classArray23 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray20);
        java.lang.reflect.Constructor constructor24 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.Signature signature25 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor24);
        org.mockito.asm.Type[] typeArray26 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor24);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(propertyDescriptorArray2);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(classArray6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(constructor10);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(classInfo13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(propertyDescriptorArray15);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(classArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(constructor22);
        org.junit.Assert.assertNotNull(classArray23);
        org.junit.Assert.assertNotNull(constructor24);
        org.junit.Assert.assertNotNull(signature25);
        org.junit.Assert.assertNotNull(typeArray26);
    }

    @Test
    public void test1467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1467");
        java.beans.PropertyDescriptor[] propertyDescriptorArray0 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray3 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray0, false, true);
        java.lang.Class[] classArray4 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray0);
        java.lang.Class[] classArray5 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray4);
        java.lang.String[] strArray6 = org.mockito.cglib.core.ReflectUtils.getNames(classArray4);
        java.lang.Class<?> wildcardClass7 = classArray4.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray8 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass7);
        java.beans.PropertyDescriptor[] propertyDescriptorArray9 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass7);
        java.beans.PropertyDescriptor[] propertyDescriptorArray10 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass7);
        java.beans.PropertyDescriptor[] propertyDescriptorArray11 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass7);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj12 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass7);
            org.junit.Assert.fail("Expected exception of type org.mockito.cglib.core.CodeGenerationException; message: java.lang.NoSuchMethodException-->[Ljava.lang.Class;.<init>()");
        } catch (org.mockito.cglib.core.CodeGenerationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(propertyDescriptorArray0);
        org.junit.Assert.assertNotNull(methodArray3);
        org.junit.Assert.assertNotNull(classArray4);
        org.junit.Assert.assertNotNull(classArray5);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(propertyDescriptorArray8);
        org.junit.Assert.assertNotNull(propertyDescriptorArray9);
        org.junit.Assert.assertNotNull(propertyDescriptorArray10);
        org.junit.Assert.assertNotNull(propertyDescriptorArray11);
    }

    @Test
    public void test1468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1468");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        java.lang.Object obj2 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.beans.PropertyDescriptor[] propertyDescriptorArray3 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray3, false, true);
        java.lang.Class[] classArray7 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray3);
        java.lang.Class[] classArray8 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray7);
        java.lang.String[] strArray9 = org.mockito.cglib.core.ReflectUtils.getNames(classArray8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.Object obj13 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray8, (java.lang.Object[]) strArray10);
        java.beans.PropertyDescriptor[] propertyDescriptorArray14 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray14, false, true);
        java.lang.reflect.Method[] methodArray20 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray14, false, false);
        java.lang.reflect.Method[] methodArray23 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray14, true, false);
        java.lang.Class[] classArray24 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray23);
        java.beans.PropertyDescriptor[] propertyDescriptorArray25 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray25, false, true);
        java.lang.Class[] classArray29 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray25);
        java.lang.Class[] classArray30 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray29);
        java.lang.String[] strArray31 = org.mockito.cglib.core.ReflectUtils.getNames(classArray29);
        java.lang.Class[] classArray32 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray29);
        int int33 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray29);
        java.lang.Object obj34 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray24, (java.lang.Object[]) classArray29);
        // The following exception was thrown during execution in test generation
        try {
            java.beans.PropertyDescriptor[] propertyDescriptorArray35 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass1);
            org.junit.Assert.fail("Expected exception of type org.mockito.cglib.core.CodeGenerationException; message: java.beans.IntrospectionException-->java.lang.Object not superclass of java.lang.Object");
        } catch (org.mockito.cglib.core.CodeGenerationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(propertyDescriptorArray3);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(classArray7);
        org.junit.Assert.assertNotNull(classArray8);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(propertyDescriptorArray14);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray20);
        org.junit.Assert.assertNotNull(methodArray23);
        org.junit.Assert.assertNotNull(classArray24);
        org.junit.Assert.assertNotNull(propertyDescriptorArray25);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(classArray29);
        org.junit.Assert.assertNotNull(classArray30);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(obj34);
    }

    @Test
    public void test1469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1469");
        java.beans.PropertyDescriptor[] propertyDescriptorArray0 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray3 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray0, false, true);
        java.lang.Class[] classArray4 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray0);
        java.lang.Class[] classArray5 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray4);
        java.lang.String[] strArray6 = org.mockito.cglib.core.ReflectUtils.getNames(classArray4);
        java.lang.Class<?> wildcardClass7 = classArray4.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray8 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass7);
        java.beans.PropertyDescriptor[] propertyDescriptorArray9 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass7);
        java.beans.PropertyDescriptor[] propertyDescriptorArray10 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass7);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method11 = org.mockito.cglib.core.ReflectUtils.findNewInstance((java.lang.Class) wildcardClass7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: class [Ljava.lang.Class; is not an interface");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(propertyDescriptorArray0);
        org.junit.Assert.assertNotNull(methodArray3);
        org.junit.Assert.assertNotNull(classArray4);
        org.junit.Assert.assertNotNull(classArray5);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(propertyDescriptorArray8);
        org.junit.Assert.assertNotNull(propertyDescriptorArray9);
        org.junit.Assert.assertNotNull(propertyDescriptorArray10);
    }

    @Test
    public void test1470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1470");
        java.beans.PropertyDescriptor[] propertyDescriptorArray0 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray3 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray0, false, true);
        java.lang.Class[] classArray4 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray0);
        java.lang.Class[] classArray5 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray4);
        java.lang.String[] strArray6 = org.mockito.cglib.core.ReflectUtils.getNames(classArray4);
        java.lang.Class<?> wildcardClass7 = strArray6.getClass();
        org.mockito.cglib.core.ClassInfo classInfo8 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass7);
        org.junit.Assert.assertNotNull(propertyDescriptorArray0);
        org.junit.Assert.assertNotNull(methodArray3);
        org.junit.Assert.assertNotNull(classArray4);
        org.junit.Assert.assertNotNull(classArray5);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(classInfo8);
    }

    @Test
    public void test1471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1471");
        byte[] byteArray3 = new byte[] { (byte) 1, (byte) 0 };
        java.lang.ClassLoader classLoader4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class5 = org.mockito.cglib.core.ReflectUtils.defineClass("", byteArray3, classLoader4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[1, 0]");
    }

    @Test
    public void test1472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1472");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.Object obj5 = new java.lang.Object();
        java.lang.Class<?> wildcardClass6 = obj5.getClass();
        org.mockito.cglib.core.ClassInfo classInfo7 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass6);
        java.util.List list8 = null;
        java.util.List list9 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass6, list8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.String[] strArray13 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray14 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray15 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray13, methodArray14);
        java.lang.reflect.Method[] methodArray16 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray15);
        java.lang.String[] strArray17 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray18 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray17, methodArray18);
        java.lang.String[] strArray20 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray21 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray22 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray20, methodArray21);
        java.lang.reflect.Method[] methodArray23 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray17, methodArray22);
        java.lang.reflect.Method[] methodArray24 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray23);
        java.lang.Class[] classArray25 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray23);
        java.lang.reflect.Constructor constructor26 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass6, classArray25);
        java.lang.Class[] classArray27 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray25);
        java.lang.String[] strArray28 = org.mockito.cglib.core.ReflectUtils.getNames(classArray27);
        java.lang.reflect.Constructor constructor29 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray27);
        org.mockito.cglib.core.MethodInfo methodInfo31 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor29, (int) (byte) 0);
        org.mockito.cglib.core.MethodInfo methodInfo33 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor29, (int) (byte) 10);
        org.mockito.cglib.core.MethodInfo methodInfo35 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor29, (int) (short) -1);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(classInfo7);
        org.junit.Assert.assertNull(list9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(methodArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(methodArray21);
        org.junit.Assert.assertNotNull(methodArray22);
        org.junit.Assert.assertNotNull(methodArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(classArray25);
        org.junit.Assert.assertNotNull(constructor26);
        org.junit.Assert.assertNotNull(classArray27);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(constructor29);
        org.junit.Assert.assertNotNull(methodInfo31);
        org.junit.Assert.assertNotNull(methodInfo33);
        org.junit.Assert.assertNotNull(methodInfo35);
    }

    @Test
    public void test1473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1473");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.lang.String[] strArray23 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray24 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray25 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray24);
        java.lang.String[] strArray26 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray27 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray26, methodArray27);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray28);
        java.lang.String[] strArray30 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray31 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray32 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray31);
        java.lang.String[] strArray33 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray34 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray33, methodArray34);
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray35);
        java.lang.reflect.Method[] methodArray37 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray36);
        java.lang.String[] strArray38 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray39 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray40 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray38, methodArray39);
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray40);
        java.lang.Object obj42 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) strArray23);
        org.mockito.cglib.core.MethodInfo methodInfo43 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        org.mockito.asm.Type[] typeArray44 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        java.lang.Class<?> wildcardClass45 = typeArray44.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method46 = org.mockito.cglib.core.ReflectUtils.findInterfaceMethod((java.lang.Class) wildcardClass45);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: class [Lorg.mockito.asm.Type; is not an interface");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(methodInfo43);
        org.junit.Assert.assertNotNull(typeArray44);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test1474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1474");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray2 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray2, false, true);
        java.lang.Class[] classArray6 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray2);
        java.beans.PropertyDescriptor[] propertyDescriptorArray7 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray7, false, true);
        java.lang.Class[] classArray11 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray7);
        int int12 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray11);
        java.lang.String[] strArray13 = org.mockito.cglib.core.ReflectUtils.getNames(classArray11);
        java.lang.String[] strArray14 = org.mockito.cglib.core.ReflectUtils.getNames(classArray11);
        java.lang.Class[] classArray15 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) strArray14);
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        org.mockito.cglib.core.ClassInfo classInfo18 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass17);
        java.util.List list19 = null;
        java.util.List list20 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass17, list19);
        java.beans.PropertyDescriptor[] propertyDescriptorArray21 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray24 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray21, false, true);
        java.lang.Class[] classArray25 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray21);
        int int26 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray25);
        java.lang.String[] strArray27 = org.mockito.cglib.core.ReflectUtils.getNames(classArray25);
        java.lang.String[] strArray28 = org.mockito.cglib.core.ReflectUtils.getNames(classArray25);
        java.lang.String[] strArray29 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray30 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray31 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray29, methodArray30);
        java.lang.String[] strArray32 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray33 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray32, methodArray33);
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray29, methodArray34);
        java.lang.String[] strArray36 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray37 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray38 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray37);
        java.lang.String[] strArray39 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray40 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray39, methodArray40);
        java.lang.reflect.Method[] methodArray42 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray36, methodArray41);
        java.lang.reflect.Method[] methodArray43 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray29, methodArray42);
        java.lang.Object obj44 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass17, classArray25, (java.lang.Object[]) methodArray43);
        java.lang.reflect.Method[] methodArray45 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray14, methodArray43);
        java.lang.Object obj46 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray6, (java.lang.Object[]) strArray14);
        java.lang.String[] strArray47 = org.mockito.cglib.core.ReflectUtils.getNames(classArray6);
        int int48 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray6);
        java.lang.String[] strArray49 = org.mockito.cglib.core.ReflectUtils.getNames(classArray6);
        java.lang.Class<?> wildcardClass50 = classArray6.getClass();
        org.mockito.cglib.core.ClassInfo classInfo51 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(propertyDescriptorArray2);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(classArray6);
        org.junit.Assert.assertNotNull(propertyDescriptorArray7);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(classArray15);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(classInfo18);
        org.junit.Assert.assertNull(list20);
        org.junit.Assert.assertNotNull(propertyDescriptorArray21);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(classArray25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(methodArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(methodArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(methodArray38);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(methodArray42);
        org.junit.Assert.assertNotNull(methodArray43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(methodArray45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(classInfo51);
    }

    @Test
    public void test1475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1475");
        java.beans.PropertyDescriptor[] propertyDescriptorArray0 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray3 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray0, false, true);
        java.lang.Class[] classArray4 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray0);
        java.lang.Class[] classArray5 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray4);
        java.lang.String[] strArray6 = org.mockito.cglib.core.ReflectUtils.getNames(classArray5);
        java.lang.String[] strArray7 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray8 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray9 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.String[] strArray13 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray14 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray15 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray13, methodArray14);
        java.lang.String[] strArray16 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray17 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray16, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray13, methodArray18);
        java.lang.reflect.Method[] methodArray20 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray19);
        java.lang.reflect.Method[] methodArray21 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray20);
        java.lang.reflect.Method[] methodArray22 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray6, methodArray20);
        java.lang.Class[] classArray23 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) strArray6);
        int int24 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray23);
        java.lang.Class[] classArray25 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray23);
        int int26 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray23);
        org.junit.Assert.assertNotNull(propertyDescriptorArray0);
        org.junit.Assert.assertNotNull(methodArray3);
        org.junit.Assert.assertNotNull(classArray4);
        org.junit.Assert.assertNotNull(classArray5);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(methodArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(methodArray15);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(methodArray20);
        org.junit.Assert.assertNotNull(methodArray21);
        org.junit.Assert.assertNotNull(methodArray22);
        org.junit.Assert.assertNotNull(classArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(classArray25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
    }

    @Test
    public void test1476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1476");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        java.lang.Object obj2 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.lang.Object obj3 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.lang.String[] strArray4 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray5 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray4, methodArray5);
        java.lang.Class[] classArray7 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) strArray4);
        java.lang.String[] strArray8 = org.mockito.cglib.core.ReflectUtils.getNames(classArray7);
        java.beans.PropertyDescriptor[] propertyDescriptorArray9 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray9, false, true);
        java.lang.Class[] classArray13 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray9);
        int int14 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray13);
        int int15 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray13);
        java.lang.Object obj16 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray7, (java.lang.Object[]) classArray13);
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.util.List list19 = null;
        java.util.List list20 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass18, list19);
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        org.mockito.cglib.core.ClassInfo classInfo23 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass22);
        java.lang.Object obj24 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass22);
        java.beans.PropertyDescriptor[] propertyDescriptorArray25 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray25, false, true);
        java.lang.Class[] classArray29 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray25);
        java.lang.Class[] classArray30 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray29);
        java.lang.String[] strArray31 = org.mockito.cglib.core.ReflectUtils.getNames(classArray30);
        java.lang.reflect.Constructor constructor32 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass22, classArray30);
        org.mockito.cglib.core.MethodInfo methodInfo33 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor32);
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray36 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray39 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray36, false, true);
        java.lang.Class[] classArray40 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray39);
        java.lang.Object[] objArray41 = null;
        java.lang.Object obj42 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass35, classArray40, objArray41);
        java.lang.Object obj43 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor32, (java.lang.Object[]) classArray40);
        java.lang.String[] strArray44 = org.mockito.cglib.core.ReflectUtils.getNames(classArray40);
        java.lang.reflect.Constructor constructor45 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass18, classArray40);
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray48 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray51 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray48, false, true);
        java.lang.Class[] classArray52 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray51);
        java.lang.Object[] objArray53 = null;
        java.lang.Object obj54 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass47, classArray52, objArray53);
        int int55 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray52);
        java.lang.reflect.Constructor constructor56 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass18, classArray52);
        java.lang.Object[] objArray57 = null;
        java.lang.Object obj58 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray52, objArray57);
        java.lang.String[] strArray59 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray60 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray61 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray59, methodArray60);
        java.lang.String[] strArray62 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray63 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray64 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray62, methodArray63);
        java.lang.reflect.Method[] methodArray65 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray59, methodArray64);
        java.lang.String[] strArray66 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray67 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray68 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray66, methodArray67);
        java.lang.String[] strArray69 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray70 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray71 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray69, methodArray70);
        java.lang.reflect.Method[] methodArray72 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray66, methodArray71);
        java.lang.reflect.Method[] methodArray73 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray59, methodArray72);
        java.lang.Class[] classArray74 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray72);
        java.lang.String[] strArray75 = org.mockito.cglib.core.ReflectUtils.getNames(classArray74);
        int int76 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray74);
        java.lang.String[] strArray77 = org.mockito.cglib.core.ReflectUtils.getNames(classArray74);
        java.lang.String[] strArray78 = org.mockito.cglib.core.ReflectUtils.getNames(classArray74);
        int int79 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray74);
        java.lang.reflect.Constructor constructor80 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray74);
        org.mockito.cglib.core.ClassInfo classInfo81 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(classArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(propertyDescriptorArray9);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(classArray13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNull(list20);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(classInfo23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(propertyDescriptorArray25);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(classArray29);
        org.junit.Assert.assertNotNull(classArray30);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(constructor32);
        org.junit.Assert.assertNotNull(methodInfo33);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(propertyDescriptorArray36);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(classArray40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(constructor45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(propertyDescriptorArray48);
        org.junit.Assert.assertNotNull(methodArray51);
        org.junit.Assert.assertNotNull(classArray52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(constructor56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(methodArray60);
        org.junit.Assert.assertNotNull(methodArray61);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(methodArray63);
        org.junit.Assert.assertNotNull(methodArray64);
        org.junit.Assert.assertNotNull(methodArray65);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(methodArray67);
        org.junit.Assert.assertNotNull(methodArray68);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(methodArray70);
        org.junit.Assert.assertNotNull(methodArray71);
        org.junit.Assert.assertNotNull(methodArray72);
        org.junit.Assert.assertNotNull(methodArray73);
        org.junit.Assert.assertNotNull(classArray74);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertNotNull(constructor80);
        org.junit.Assert.assertNotNull(classInfo81);
    }

    @Test
    public void test1477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1477");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        java.lang.Object obj2 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.beans.PropertyDescriptor[] propertyDescriptorArray3 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray3, false, true);
        java.lang.Class[] classArray7 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray3);
        java.lang.Class[] classArray8 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray7);
        java.lang.String[] strArray9 = org.mockito.cglib.core.ReflectUtils.getNames(classArray8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.Object obj13 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray8, (java.lang.Object[]) strArray10);
        java.beans.PropertyDescriptor[] propertyDescriptorArray14 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray14, false, true);
        java.lang.reflect.Method[] methodArray20 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray14, false, false);
        java.lang.reflect.Method[] methodArray23 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray14, true, false);
        java.lang.Class[] classArray24 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray23);
        java.beans.PropertyDescriptor[] propertyDescriptorArray25 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray25, false, true);
        java.lang.Class[] classArray29 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray25);
        java.lang.Class[] classArray30 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray29);
        java.lang.String[] strArray31 = org.mockito.cglib.core.ReflectUtils.getNames(classArray29);
        java.lang.Class[] classArray32 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray29);
        int int33 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray29);
        java.lang.Object obj34 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray24, (java.lang.Object[]) classArray29);
        java.lang.String[] strArray35 = org.mockito.cglib.core.ReflectUtils.getNames(classArray29);
        java.lang.String[] strArray36 = org.mockito.cglib.core.ReflectUtils.getNames(classArray29);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(propertyDescriptorArray3);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(classArray7);
        org.junit.Assert.assertNotNull(classArray8);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(propertyDescriptorArray14);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray20);
        org.junit.Assert.assertNotNull(methodArray23);
        org.junit.Assert.assertNotNull(classArray24);
        org.junit.Assert.assertNotNull(propertyDescriptorArray25);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(classArray29);
        org.junit.Assert.assertNotNull(classArray30);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strArray36);
    }

    @Test
    public void test1478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1478");
        java.beans.PropertyDescriptor[] propertyDescriptorArray0 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray3 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray0, false, true);
        java.lang.Class[] classArray4 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray0);
        java.lang.Class[] classArray5 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray4);
        java.lang.String[] strArray6 = org.mockito.cglib.core.ReflectUtils.getNames(classArray4);
        java.lang.Class<?> wildcardClass7 = classArray4.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray8 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass7);
        java.beans.PropertyDescriptor[] propertyDescriptorArray9 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass7);
        java.beans.PropertyDescriptor[] propertyDescriptorArray10 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass7);
        java.beans.PropertyDescriptor[] propertyDescriptorArray11 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass7);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method12 = org.mockito.cglib.core.ReflectUtils.findInterfaceMethod((java.lang.Class) wildcardClass7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: class [Ljava.lang.Class; is not an interface");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(propertyDescriptorArray0);
        org.junit.Assert.assertNotNull(methodArray3);
        org.junit.Assert.assertNotNull(classArray4);
        org.junit.Assert.assertNotNull(classArray5);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(propertyDescriptorArray8);
        org.junit.Assert.assertNotNull(propertyDescriptorArray9);
        org.junit.Assert.assertNotNull(propertyDescriptorArray10);
        org.junit.Assert.assertNotNull(propertyDescriptorArray11);
    }

    @Test
    public void test1479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1479");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray1 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray2 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray1);
        java.lang.String[] strArray3 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray4 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray3, methodArray4);
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray5);
        java.lang.String[] strArray7 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray8 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray9 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.reflect.Method[] methodArray13 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray12);
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray13);
        java.lang.Class<?> wildcardClass15 = methodArray13.getClass();
        org.mockito.cglib.core.ClassInfo classInfo16 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass15);
        java.beans.PropertyDescriptor[] propertyDescriptorArray17 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass15);
        java.beans.PropertyDescriptor[] propertyDescriptorArray18 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass15);
        java.beans.PropertyDescriptor[] propertyDescriptorArray19 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass15);
        java.lang.reflect.Method[] methodArray22 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray19, true, true);
        java.lang.reflect.Method[] methodArray25 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray19, false, false);
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(methodArray1);
        org.junit.Assert.assertNotNull(methodArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(methodArray4);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(methodArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(classInfo16);
        org.junit.Assert.assertNotNull(propertyDescriptorArray17);
        org.junit.Assert.assertNotNull(propertyDescriptorArray18);
        org.junit.Assert.assertNotNull(propertyDescriptorArray19);
        org.junit.Assert.assertNotNull(methodArray22);
        org.junit.Assert.assertNotNull(methodArray25);
    }

    @Test
    public void test1480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1480");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.lang.Class<?> wildcardClass23 = constructor21.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray24 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass23);
        java.beans.PropertyDescriptor[] propertyDescriptorArray25 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass23);
        java.util.List list26 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List list27 = org.mockito.cglib.core.ReflectUtils.addAllMethods((java.lang.Class) wildcardClass23, list26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(propertyDescriptorArray24);
        org.junit.Assert.assertNotNull(propertyDescriptorArray25);
    }

    @Test
    public void test1481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1481");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray1 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray2 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray1);
        java.lang.String[] strArray3 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray4 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray3, methodArray4);
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray5);
        java.lang.String[] strArray7 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray8 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray9 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.reflect.Method[] methodArray13 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray12);
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray13);
        java.lang.Class[] classArray15 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray13);
        java.lang.String[] strArray16 = org.mockito.cglib.core.ReflectUtils.getNames(classArray15);
        java.lang.Class<?> wildcardClass17 = classArray15.getClass();
        java.util.List list18 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List list19 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass17, list18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(methodArray1);
        org.junit.Assert.assertNotNull(methodArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(methodArray4);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(methodArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(classArray15);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1482");
        java.beans.PropertyDescriptor[] propertyDescriptorArray0 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray3 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray0, false, true);
        java.lang.Class[] classArray4 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray0);
        java.lang.Class[] classArray5 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray4);
        java.lang.Class<?> wildcardClass6 = classArray4.getClass();
        org.mockito.cglib.core.ClassInfo classInfo7 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass6);
        java.beans.PropertyDescriptor[] propertyDescriptorArray8 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass6);
        java.beans.PropertyDescriptor[] propertyDescriptorArray9 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass6);
        java.beans.PropertyDescriptor[] propertyDescriptorArray10 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass6);
        java.beans.PropertyDescriptor[] propertyDescriptorArray11 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass6);
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray11, false, true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray0);
        org.junit.Assert.assertNotNull(methodArray3);
        org.junit.Assert.assertNotNull(classArray4);
        org.junit.Assert.assertNotNull(classArray5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(classInfo7);
        org.junit.Assert.assertNotNull(propertyDescriptorArray8);
        org.junit.Assert.assertNotNull(propertyDescriptorArray9);
        org.junit.Assert.assertNotNull(propertyDescriptorArray10);
        org.junit.Assert.assertNotNull(propertyDescriptorArray11);
        org.junit.Assert.assertNotNull(methodArray14);
    }

    @Test
    public void test1483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1483");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.lang.Object obj3 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.beans.PropertyDescriptor[] propertyDescriptorArray4 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray4, false, true);
        java.lang.Class[] classArray8 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray4);
        java.lang.Class[] classArray9 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray8);
        java.lang.String[] strArray10 = org.mockito.cglib.core.ReflectUtils.getNames(classArray9);
        java.lang.reflect.Constructor constructor11 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray9);
        java.lang.Object obj12 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        org.mockito.cglib.core.ClassInfo classInfo13 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list14 = null;
        java.util.List list15 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list14);
        java.lang.Object obj16 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.beans.PropertyDescriptor[] propertyDescriptorArray17 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray20 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray17, false, true);
        java.lang.Class[] classArray21 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray17);
        java.lang.Class[] classArray22 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray21);
        java.lang.String[] strArray23 = org.mockito.cglib.core.ReflectUtils.getNames(classArray22);
        int int24 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray22);
        int int25 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray22);
        java.lang.reflect.Constructor constructor26 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray22);
        java.lang.String[] strArray27 = org.mockito.cglib.core.ReflectUtils.getNames(classArray22);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(propertyDescriptorArray4);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(classArray8);
        org.junit.Assert.assertNotNull(classArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(constructor11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(classInfo13);
        org.junit.Assert.assertNull(list15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(propertyDescriptorArray17);
        org.junit.Assert.assertNotNull(methodArray20);
        org.junit.Assert.assertNotNull(classArray21);
        org.junit.Assert.assertNotNull(classArray22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(constructor26);
        org.junit.Assert.assertNotNull(strArray27);
    }

    @Test
    public void test1484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1484");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.lang.Object obj3 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.beans.PropertyDescriptor[] propertyDescriptorArray4 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray4, false, true);
        java.lang.Class[] classArray8 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray4);
        java.lang.Class[] classArray9 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray8);
        java.lang.String[] strArray10 = org.mockito.cglib.core.ReflectUtils.getNames(classArray9);
        java.lang.reflect.Constructor constructor11 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray9);
        java.lang.Object obj12 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        org.mockito.cglib.core.ClassInfo classInfo13 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list14 = null;
        java.util.List list15 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list14);
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        java.lang.Object obj18 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass17);
        java.lang.Object obj19 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass17);
        java.lang.String[] strArray20 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray21 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray22 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray20, methodArray21);
        java.lang.Class[] classArray23 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) strArray20);
        java.lang.String[] strArray24 = org.mockito.cglib.core.ReflectUtils.getNames(classArray23);
        java.beans.PropertyDescriptor[] propertyDescriptorArray25 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray25, false, true);
        java.lang.Class[] classArray29 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray25);
        int int30 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray29);
        int int31 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray29);
        java.lang.Object obj32 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass17, classArray23, (java.lang.Object[]) classArray29);
        java.lang.reflect.Constructor constructor33 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray29);
        java.util.List list34 = null;
        java.util.List list35 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list34);
        // The following exception was thrown during execution in test generation
        try {
            java.beans.PropertyDescriptor[] propertyDescriptorArray36 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass1);
            org.junit.Assert.fail("Expected exception of type org.mockito.cglib.core.CodeGenerationException; message: java.beans.IntrospectionException-->java.lang.Object not superclass of java.lang.Object");
        } catch (org.mockito.cglib.core.CodeGenerationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(propertyDescriptorArray4);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(classArray8);
        org.junit.Assert.assertNotNull(classArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(constructor11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(classInfo13);
        org.junit.Assert.assertNull(list15);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(methodArray21);
        org.junit.Assert.assertNotNull(methodArray22);
        org.junit.Assert.assertNotNull(classArray23);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(propertyDescriptorArray25);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(classArray29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(constructor33);
        org.junit.Assert.assertNull(list35);
    }

    @Test
    public void test1485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1485");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        java.lang.Object obj2 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.beans.PropertyDescriptor[] propertyDescriptorArray3 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray3, false, true);
        java.lang.Class[] classArray7 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray3);
        java.lang.Class[] classArray8 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray7);
        java.lang.String[] strArray9 = org.mockito.cglib.core.ReflectUtils.getNames(classArray8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.Object obj13 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray8, (java.lang.Object[]) strArray10);
        java.lang.Object obj14 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.beans.PropertyDescriptor[] propertyDescriptorArray15 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray15, false, true);
        java.lang.Class[] classArray19 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray15);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray19);
        java.lang.String[] strArray21 = org.mockito.cglib.core.ReflectUtils.getNames(classArray19);
        java.lang.reflect.Constructor constructor22 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray19);
        java.util.List list23 = null;
        java.util.List list24 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list23);
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        org.mockito.cglib.core.ClassInfo classInfo27 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass26);
        java.lang.Object obj28 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass26);
        java.beans.PropertyDescriptor[] propertyDescriptorArray29 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray32 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray29, false, true);
        java.lang.Class[] classArray33 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray29);
        java.lang.Class[] classArray34 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray33);
        java.lang.String[] strArray35 = org.mockito.cglib.core.ReflectUtils.getNames(classArray34);
        java.lang.reflect.Constructor constructor36 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass26, classArray34);
        org.mockito.cglib.core.MethodInfo methodInfo37 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor36);
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray40 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray43 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray40, false, true);
        java.lang.Class[] classArray44 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray43);
        java.lang.Object[] objArray45 = null;
        java.lang.Object obj46 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass39, classArray44, objArray45);
        java.lang.Object obj47 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor36, (java.lang.Object[]) classArray44);
        org.mockito.cglib.core.MethodInfo methodInfo49 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor36, (int) (byte) 0);
        org.mockito.cglib.core.MethodInfo methodInfo50 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor36);
        java.lang.Class<?> wildcardClass51 = methodInfo50.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray52 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass51);
        java.lang.Class[] classArray53 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray52);
        java.lang.Class[] classArray54 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray53);
        java.lang.String[] strArray55 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray56 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray57 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray55, methodArray56);
        java.lang.String[] strArray58 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray59 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray60 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray58, methodArray59);
        java.lang.reflect.Method[] methodArray61 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray55, methodArray60);
        java.lang.String[] strArray62 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray63 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray64 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray62, methodArray63);
        java.lang.String[] strArray65 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray66 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray67 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray65, methodArray66);
        java.lang.reflect.Method[] methodArray68 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray62, methodArray67);
        java.lang.reflect.Method[] methodArray69 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray55, methodArray68);
        java.lang.Class<?> wildcardClass70 = methodArray68.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray71 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass70);
        java.beans.PropertyDescriptor[] propertyDescriptorArray72 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass70);
        java.lang.Object obj73 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray53, (java.lang.Object[]) propertyDescriptorArray72);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(propertyDescriptorArray3);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(classArray7);
        org.junit.Assert.assertNotNull(classArray8);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(propertyDescriptorArray15);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(classArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(constructor22);
        org.junit.Assert.assertNull(list24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(classInfo27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(propertyDescriptorArray29);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(classArray34);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(constructor36);
        org.junit.Assert.assertNotNull(methodInfo37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(propertyDescriptorArray40);
        org.junit.Assert.assertNotNull(methodArray43);
        org.junit.Assert.assertNotNull(classArray44);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(methodInfo49);
        org.junit.Assert.assertNotNull(methodInfo50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(propertyDescriptorArray52);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(classArray54);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(methodArray56);
        org.junit.Assert.assertNotNull(methodArray57);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(methodArray59);
        org.junit.Assert.assertNotNull(methodArray60);
        org.junit.Assert.assertNotNull(methodArray61);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(methodArray63);
        org.junit.Assert.assertNotNull(methodArray64);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(methodArray66);
        org.junit.Assert.assertNotNull(methodArray67);
        org.junit.Assert.assertNotNull(methodArray68);
        org.junit.Assert.assertNotNull(methodArray69);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(propertyDescriptorArray71);
        org.junit.Assert.assertNotNull(propertyDescriptorArray72);
        org.junit.Assert.assertNotNull(obj73);
    }

    @Test
    public void test1486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1486");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.lang.Object obj3 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.beans.PropertyDescriptor[] propertyDescriptorArray4 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray4, false, true);
        java.lang.Class[] classArray8 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray4);
        java.lang.Class[] classArray9 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray8);
        java.lang.String[] strArray10 = org.mockito.cglib.core.ReflectUtils.getNames(classArray9);
        java.lang.reflect.Constructor constructor11 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray9);
        org.mockito.cglib.core.MethodInfo methodInfo12 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor11);
        org.mockito.cglib.core.Signature signature13 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor11);
        org.mockito.cglib.core.MethodInfo methodInfo14 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor11);
        org.mockito.cglib.core.MethodInfo methodInfo16 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor11, (-1));
        org.mockito.cglib.core.MethodInfo methodInfo17 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor11);
        org.mockito.cglib.core.MethodInfo methodInfo18 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor11);
        java.lang.Class<?> wildcardClass19 = methodInfo18.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(propertyDescriptorArray4);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(classArray8);
        org.junit.Assert.assertNotNull(classArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(constructor11);
        org.junit.Assert.assertNotNull(methodInfo12);
        org.junit.Assert.assertNotNull(signature13);
        org.junit.Assert.assertNotNull(methodInfo14);
        org.junit.Assert.assertNotNull(methodInfo16);
        org.junit.Assert.assertNotNull(methodInfo17);
        org.junit.Assert.assertNotNull(methodInfo18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test1487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1487");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.lang.Object obj3 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        org.mockito.cglib.core.ClassInfo classInfo4 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list5 = null;
        java.util.List list6 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        org.mockito.cglib.core.ClassInfo classInfo9 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass8);
        java.util.List list10 = null;
        java.util.List list11 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass8, list10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.String[] strArray19 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray20 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray21 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray19, methodArray20);
        java.lang.String[] strArray22 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray23 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray24 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray22, methodArray23);
        java.lang.reflect.Method[] methodArray25 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray19, methodArray24);
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray25);
        java.lang.Class[] classArray27 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray25);
        java.lang.reflect.Constructor constructor28 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass8, classArray27);
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        org.mockito.cglib.core.ClassInfo classInfo31 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass30);
        java.lang.Object obj32 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass30);
        java.beans.PropertyDescriptor[] propertyDescriptorArray33 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray33, false, true);
        java.lang.Class[] classArray37 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray33);
        java.lang.Class[] classArray38 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray37);
        java.lang.String[] strArray39 = org.mockito.cglib.core.ReflectUtils.getNames(classArray38);
        java.lang.reflect.Constructor constructor40 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass30, classArray38);
        int int41 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray38);
        java.lang.Object obj42 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor28, (java.lang.Object[]) classArray38);
        int int43 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray38);
        java.lang.Class[] classArray44 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray38);
        java.lang.Class[] classArray45 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray38);
        int int46 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray38);
        java.lang.reflect.Constructor constructor47 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray38);
        java.lang.String[] strArray48 = org.mockito.cglib.core.ReflectUtils.getNames(classArray38);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(classInfo4);
        org.junit.Assert.assertNull(list6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classInfo9);
        org.junit.Assert.assertNull(list11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(methodArray20);
        org.junit.Assert.assertNotNull(methodArray21);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(methodArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(classArray27);
        org.junit.Assert.assertNotNull(constructor28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classInfo31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(propertyDescriptorArray33);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(classArray37);
        org.junit.Assert.assertNotNull(classArray38);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(constructor40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(classArray44);
        org.junit.Assert.assertNotNull(classArray45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(constructor47);
        org.junit.Assert.assertNotNull(strArray48);
    }

    @Test
    public void test1488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1488");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.lang.Object obj3 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.beans.PropertyDescriptor[] propertyDescriptorArray4 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray4, false, true);
        java.lang.Class[] classArray8 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray4);
        java.lang.Class[] classArray9 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray8);
        java.lang.String[] strArray10 = org.mockito.cglib.core.ReflectUtils.getNames(classArray9);
        java.lang.reflect.Constructor constructor11 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray9);
        java.lang.Object obj12 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        org.mockito.cglib.core.ClassInfo classInfo13 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list14 = null;
        java.util.List list15 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list14);
        java.lang.Object obj16 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.util.List list17 = null;
        java.util.List list18 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list17);
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        org.mockito.cglib.core.ClassInfo classInfo21 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass20);
        java.util.List list22 = null;
        java.util.List list23 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass20, list22);
        java.lang.String[] strArray24 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray25 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray24, methodArray25);
        java.lang.String[] strArray27 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray28 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray27, methodArray28);
        java.lang.reflect.Method[] methodArray30 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray24, methodArray29);
        java.lang.String[] strArray31 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray32 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray33 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray31, methodArray32);
        java.lang.String[] strArray34 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray35 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray34, methodArray35);
        java.lang.reflect.Method[] methodArray37 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray31, methodArray36);
        java.lang.reflect.Method[] methodArray38 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray24, methodArray37);
        java.lang.Class[] classArray39 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray37);
        java.lang.reflect.Constructor constructor40 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass20, classArray39);
        org.mockito.cglib.core.MethodInfo methodInfo41 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor40);
        java.beans.PropertyDescriptor[] propertyDescriptorArray42 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray45 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray42, false, true);
        java.lang.reflect.Method[] methodArray48 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray42, false, false);
        java.lang.Object obj49 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor40, (java.lang.Object[]) methodArray48);
        java.beans.PropertyDescriptor[] propertyDescriptorArray50 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray53 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray50, true, true);
        java.lang.Object obj54 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor40, (java.lang.Object[]) propertyDescriptorArray50);
        java.lang.String[] strArray55 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray56 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray57 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray55, methodArray56);
        java.lang.String[] strArray58 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray59 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray60 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray58, methodArray59);
        java.lang.String[] strArray61 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray62 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray63 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray61, methodArray62);
        java.lang.reflect.Method[] methodArray64 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray58, methodArray63);
        java.lang.reflect.Method[] methodArray65 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray55, methodArray64);
        java.lang.Object obj66 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor40, (java.lang.Object[]) methodArray65);
        java.lang.Class[] classArray67 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray65);
        java.lang.reflect.Constructor constructor68 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray67);
        int int69 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray67);
        java.lang.Class<?> wildcardClass70 = classArray67.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(propertyDescriptorArray4);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(classArray8);
        org.junit.Assert.assertNotNull(classArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(constructor11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(classInfo13);
        org.junit.Assert.assertNull(list15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNull(list18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(classInfo21);
        org.junit.Assert.assertNull(list23);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(methodArray30);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(methodArray33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(methodArray38);
        org.junit.Assert.assertNotNull(classArray39);
        org.junit.Assert.assertNotNull(constructor40);
        org.junit.Assert.assertNotNull(methodInfo41);
        org.junit.Assert.assertNotNull(propertyDescriptorArray42);
        org.junit.Assert.assertNotNull(methodArray45);
        org.junit.Assert.assertNotNull(methodArray48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(propertyDescriptorArray50);
        org.junit.Assert.assertNotNull(methodArray53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(methodArray56);
        org.junit.Assert.assertNotNull(methodArray57);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(methodArray59);
        org.junit.Assert.assertNotNull(methodArray60);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(methodArray62);
        org.junit.Assert.assertNotNull(methodArray63);
        org.junit.Assert.assertNotNull(methodArray64);
        org.junit.Assert.assertNotNull(methodArray65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(classArray67);
        org.junit.Assert.assertNotNull(constructor68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test1489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1489");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.lang.Class<?> wildcardClass23 = constructor21.getClass();
        org.mockito.cglib.core.ClassInfo classInfo24 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass23);
        java.beans.PropertyDescriptor[] propertyDescriptorArray25 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass23);
        java.beans.PropertyDescriptor[] propertyDescriptorArray26 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass23);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method27 = org.mockito.cglib.core.ReflectUtils.findInterfaceMethod((java.lang.Class) wildcardClass23);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: class java.lang.reflect.Constructor is not an interface");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(classInfo24);
        org.junit.Assert.assertNotNull(propertyDescriptorArray25);
        org.junit.Assert.assertNotNull(propertyDescriptorArray26);
    }

    @Test
    public void test1490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1490");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        org.mockito.cglib.core.MethodInfo methodInfo22 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        java.lang.String[] strArray23 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray24 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray25 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray24);
        java.lang.String[] strArray26 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray27 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray26, methodArray27);
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray28);
        java.lang.String[] strArray30 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray31 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray32 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray31);
        java.lang.String[] strArray33 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray34 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray33, methodArray34);
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray35);
        java.lang.reflect.Method[] methodArray37 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray36);
        java.lang.String[] strArray38 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray39 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray40 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray38, methodArray39);
        java.lang.reflect.Method[] methodArray41 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray40);
        java.lang.Object obj42 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) strArray23);
        org.mockito.cglib.core.MethodInfo methodInfo43 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        org.mockito.asm.Type[] typeArray44 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor21);
        org.mockito.cglib.core.MethodInfo methodInfo45 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        org.mockito.cglib.core.MethodInfo methodInfo46 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor21);
        org.mockito.cglib.core.Signature signature47 = org.mockito.cglib.core.ReflectUtils.getSignature((java.lang.reflect.Member) constructor21);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(methodInfo22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(methodArray39);
        org.junit.Assert.assertNotNull(methodArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(methodInfo43);
        org.junit.Assert.assertNotNull(typeArray44);
        org.junit.Assert.assertNotNull(methodInfo45);
        org.junit.Assert.assertNotNull(methodInfo46);
        org.junit.Assert.assertNotNull(signature47);
    }

    @Test
    public void test1491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1491");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.lang.Object obj3 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.beans.PropertyDescriptor[] propertyDescriptorArray4 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray4, false, true);
        java.lang.Class[] classArray8 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray4);
        java.lang.Class[] classArray9 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray8);
        java.lang.String[] strArray10 = org.mockito.cglib.core.ReflectUtils.getNames(classArray9);
        java.lang.reflect.Constructor constructor11 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray9);
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        org.mockito.cglib.core.ClassInfo classInfo14 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass13);
        java.lang.Object obj15 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass13);
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        org.mockito.cglib.core.ClassInfo classInfo18 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass17);
        java.util.List list19 = null;
        java.util.List list20 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass17, list19);
        java.lang.String[] strArray21 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray22 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray23 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray21, methodArray22);
        java.lang.String[] strArray24 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray25 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray24, methodArray25);
        java.lang.reflect.Method[] methodArray27 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray21, methodArray26);
        java.lang.String[] strArray28 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray29 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray30 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray28, methodArray29);
        java.lang.String[] strArray31 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray32 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray33 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray31, methodArray32);
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray28, methodArray33);
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray21, methodArray34);
        java.lang.Class[] classArray36 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray34);
        java.lang.reflect.Constructor constructor37 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass17, classArray36);
        java.lang.Class[] classArray38 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray36);
        java.lang.reflect.Constructor constructor39 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass13, classArray38);
        int int40 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray38);
        java.lang.String[] strArray41 = org.mockito.cglib.core.ReflectUtils.getNames(classArray38);
        int int42 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray38);
        java.beans.PropertyDescriptor[] propertyDescriptorArray43 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray46 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray43, false, true);
        java.lang.Class[] classArray47 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray43);
        java.lang.Class[] classArray48 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray47);
        java.lang.Class<?> wildcardClass49 = classArray48.getClass();
        org.mockito.cglib.core.ClassInfo classInfo50 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass49);
        java.beans.PropertyDescriptor[] propertyDescriptorArray51 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass49);
        java.beans.PropertyDescriptor[] propertyDescriptorArray52 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass49);
        java.lang.reflect.Method[] methodArray55 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray52, true, true);
        java.lang.Class<?> wildcardClass56 = propertyDescriptorArray52.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray57 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass56);
        java.lang.reflect.Method[] methodArray60 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray57, false, false);
        java.lang.Object obj61 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray38, (java.lang.Object[]) methodArray60);
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Method method63 = org.mockito.cglib.core.ReflectUtils.findNewInstance((java.lang.Class) wildcardClass62);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: class java.lang.Object is not an interface");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(propertyDescriptorArray4);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(classArray8);
        org.junit.Assert.assertNotNull(classArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(constructor11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(classInfo14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(classInfo18);
        org.junit.Assert.assertNull(list20);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(methodArray22);
        org.junit.Assert.assertNotNull(methodArray23);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(methodArray30);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(methodArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(classArray36);
        org.junit.Assert.assertNotNull(constructor37);
        org.junit.Assert.assertNotNull(classArray38);
        org.junit.Assert.assertNotNull(constructor39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(propertyDescriptorArray43);
        org.junit.Assert.assertNotNull(methodArray46);
        org.junit.Assert.assertNotNull(classArray47);
        org.junit.Assert.assertNotNull(classArray48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(classInfo50);
        org.junit.Assert.assertNotNull(propertyDescriptorArray51);
        org.junit.Assert.assertNotNull(propertyDescriptorArray52);
        org.junit.Assert.assertNotNull(methodArray55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(propertyDescriptorArray57);
        org.junit.Assert.assertNotNull(methodArray60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test1492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1492");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        java.util.List list2 = null;
        java.util.List list3 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list2);
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        org.mockito.cglib.core.ClassInfo classInfo6 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass5);
        java.beans.PropertyDescriptor[] propertyDescriptorArray8 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray8, false, true);
        java.lang.Class[] classArray12 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray8);
        java.lang.Class[] classArray13 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray12);
        java.lang.String[] strArray14 = org.mockito.cglib.core.ReflectUtils.getNames(classArray13);
        java.lang.reflect.Constructor constructor15 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass5, classArray13);
        org.mockito.cglib.core.MethodInfo methodInfo16 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor15);
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray19 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray22 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray19, false, true);
        java.lang.Class[] classArray23 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray22);
        java.lang.Object[] objArray24 = null;
        java.lang.Object obj25 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass18, classArray23, objArray24);
        java.lang.Object obj26 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor15, (java.lang.Object[]) classArray23);
        java.lang.String[] strArray27 = org.mockito.cglib.core.ReflectUtils.getNames(classArray23);
        java.lang.reflect.Constructor constructor28 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray23);
        org.mockito.cglib.core.MethodInfo methodInfo30 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor28, (int) (byte) 10);
        org.mockito.cglib.core.MethodInfo methodInfo32 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor28, (int) 'a');
        java.lang.Class<?> wildcardClass33 = constructor28.getClass();
        org.mockito.cglib.core.ClassInfo classInfo34 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass33);
        java.beans.PropertyDescriptor[] propertyDescriptorArray35 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass33);
        java.beans.PropertyDescriptor[] propertyDescriptorArray36 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass33);
        java.beans.PropertyDescriptor[] propertyDescriptorArray37 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNull(list3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(classInfo6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(propertyDescriptorArray8);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(classArray13);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(constructor15);
        org.junit.Assert.assertNotNull(methodInfo16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(propertyDescriptorArray19);
        org.junit.Assert.assertNotNull(methodArray22);
        org.junit.Assert.assertNotNull(classArray23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(constructor28);
        org.junit.Assert.assertNotNull(methodInfo30);
        org.junit.Assert.assertNotNull(methodInfo32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(classInfo34);
        org.junit.Assert.assertNotNull(propertyDescriptorArray35);
        org.junit.Assert.assertNotNull(propertyDescriptorArray36);
        org.junit.Assert.assertNotNull(propertyDescriptorArray37);
    }

    @Test
    public void test1493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1493");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.lang.Object obj3 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.beans.PropertyDescriptor[] propertyDescriptorArray4 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray4, false, true);
        java.lang.Class[] classArray8 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray4);
        java.lang.Class[] classArray9 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray8);
        java.lang.String[] strArray10 = org.mockito.cglib.core.ReflectUtils.getNames(classArray9);
        java.lang.reflect.Constructor constructor11 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray9);
        java.lang.Object obj12 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.util.List list13 = null;
        java.util.List list14 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list13);
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        org.mockito.cglib.core.ClassInfo classInfo17 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass16);
        java.util.List list18 = null;
        java.util.List list19 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass16, list18);
        java.lang.String[] strArray20 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray21 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray22 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray20, methodArray21);
        java.lang.String[] strArray23 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray24 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray25 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray23, methodArray24);
        java.lang.reflect.Method[] methodArray26 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray20, methodArray25);
        java.lang.String[] strArray27 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray28 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray27, methodArray28);
        java.lang.String[] strArray30 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray31 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray32 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray30, methodArray31);
        java.lang.reflect.Method[] methodArray33 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray27, methodArray32);
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray20, methodArray33);
        java.lang.Class[] classArray35 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray33);
        java.lang.reflect.Constructor constructor36 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass16, classArray35);
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        org.mockito.cglib.core.ClassInfo classInfo39 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass38);
        java.lang.Object obj40 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass38);
        java.beans.PropertyDescriptor[] propertyDescriptorArray41 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray44 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray41, false, true);
        java.lang.Class[] classArray45 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray41);
        java.lang.Class[] classArray46 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray45);
        java.lang.String[] strArray47 = org.mockito.cglib.core.ReflectUtils.getNames(classArray46);
        java.lang.reflect.Constructor constructor48 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass38, classArray46);
        int int49 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray46);
        java.lang.Object obj50 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor36, (java.lang.Object[]) classArray46);
        int int51 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray46);
        java.lang.Class[] classArray52 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray46);
        int int53 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray52);
        java.lang.reflect.Constructor constructor54 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray52);
        org.mockito.cglib.core.ClassInfo classInfo55 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        org.mockito.cglib.core.ClassInfo classInfo56 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.lang.Object obj57 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        // The following exception was thrown during execution in test generation
        try {
            java.beans.PropertyDescriptor[] propertyDescriptorArray58 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass1);
            org.junit.Assert.fail("Expected exception of type org.mockito.cglib.core.CodeGenerationException; message: java.beans.IntrospectionException-->java.lang.Object not superclass of java.lang.Object");
        } catch (org.mockito.cglib.core.CodeGenerationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(propertyDescriptorArray4);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(classArray8);
        org.junit.Assert.assertNotNull(classArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(constructor11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNull(list14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(classInfo17);
        org.junit.Assert.assertNull(list19);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(methodArray21);
        org.junit.Assert.assertNotNull(methodArray22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(methodArray25);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(methodArray32);
        org.junit.Assert.assertNotNull(methodArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(classArray35);
        org.junit.Assert.assertNotNull(constructor36);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(classInfo39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(propertyDescriptorArray41);
        org.junit.Assert.assertNotNull(methodArray44);
        org.junit.Assert.assertNotNull(classArray45);
        org.junit.Assert.assertNotNull(classArray46);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(constructor48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(classArray52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(constructor54);
        org.junit.Assert.assertNotNull(classInfo55);
        org.junit.Assert.assertNotNull(classInfo56);
        org.junit.Assert.assertNotNull(obj57);
    }

    @Test
    public void test1494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1494");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        java.lang.Object obj2 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.lang.Object obj3 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        java.lang.Object obj4 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        org.mockito.cglib.core.ClassInfo classInfo5 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.lang.String[] strArray6 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray7 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray8 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray6, methodArray7);
        java.lang.String[] strArray9 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray10 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray9, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.reflect.Method[] methodArray15 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray9, methodArray14);
        java.lang.reflect.Method[] methodArray16 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray6, methodArray15);
        java.lang.Class[] classArray17 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) strArray6);
        java.beans.PropertyDescriptor[] propertyDescriptorArray18 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray21 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray18, false, true);
        java.lang.reflect.Method[] methodArray24 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray18, false, false);
        java.lang.reflect.Method[] methodArray27 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray18, true, false);
        java.lang.Object obj28 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray17, (java.lang.Object[]) propertyDescriptorArray18);
        java.lang.Object obj29 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        org.mockito.cglib.core.ClassInfo classInfo30 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Object obj33 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass32);
        java.beans.PropertyDescriptor[] propertyDescriptorArray34 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray37 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray34, false, true);
        java.lang.Class[] classArray38 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray34);
        java.lang.Class[] classArray39 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray38);
        java.lang.String[] strArray40 = org.mockito.cglib.core.ReflectUtils.getNames(classArray39);
        java.lang.String[] strArray41 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray42 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray43 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray41, methodArray42);
        java.lang.Object obj44 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass32, classArray39, (java.lang.Object[]) strArray41);
        java.lang.Object obj45 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass32);
        java.beans.PropertyDescriptor[] propertyDescriptorArray46 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray49 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray46, false, true);
        java.lang.Class[] classArray50 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray46);
        java.lang.Class[] classArray51 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray50);
        java.lang.String[] strArray52 = org.mockito.cglib.core.ReflectUtils.getNames(classArray50);
        java.lang.reflect.Constructor constructor53 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass32, classArray50);
        java.lang.reflect.Constructor constructor54 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray50);
        org.mockito.cglib.core.MethodInfo methodInfo55 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor54);
        java.lang.String[] strArray56 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray57 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray58 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray56, methodArray57);
        java.lang.String[] strArray59 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray60 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray61 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray59, methodArray60);
        java.lang.reflect.Method[] methodArray62 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray56, methodArray61);
        java.lang.String[] strArray63 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray64 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray65 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray63, methodArray64);
        java.lang.String[] strArray66 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray67 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray68 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray66, methodArray67);
        java.lang.reflect.Method[] methodArray69 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray63, methodArray68);
        java.lang.reflect.Method[] methodArray70 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray56, methodArray69);
        java.lang.Class<?> wildcardClass71 = methodArray69.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray72 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass71);
        java.lang.Class[] classArray73 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray72);
        java.lang.reflect.Method[] methodArray76 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray72, true, true);
        java.lang.Object obj77 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor54, (java.lang.Object[]) propertyDescriptorArray72);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(classInfo5);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(methodArray8);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(methodArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(classArray17);
        org.junit.Assert.assertNotNull(propertyDescriptorArray18);
        org.junit.Assert.assertNotNull(methodArray21);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(classInfo30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(propertyDescriptorArray34);
        org.junit.Assert.assertNotNull(methodArray37);
        org.junit.Assert.assertNotNull(classArray38);
        org.junit.Assert.assertNotNull(classArray39);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(methodArray42);
        org.junit.Assert.assertNotNull(methodArray43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(propertyDescriptorArray46);
        org.junit.Assert.assertNotNull(methodArray49);
        org.junit.Assert.assertNotNull(classArray50);
        org.junit.Assert.assertNotNull(classArray51);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(constructor53);
        org.junit.Assert.assertNotNull(constructor54);
        org.junit.Assert.assertNotNull(methodInfo55);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(methodArray57);
        org.junit.Assert.assertNotNull(methodArray58);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(methodArray60);
        org.junit.Assert.assertNotNull(methodArray61);
        org.junit.Assert.assertNotNull(methodArray62);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(methodArray64);
        org.junit.Assert.assertNotNull(methodArray65);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(methodArray67);
        org.junit.Assert.assertNotNull(methodArray68);
        org.junit.Assert.assertNotNull(methodArray69);
        org.junit.Assert.assertNotNull(methodArray70);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(propertyDescriptorArray72);
        org.junit.Assert.assertNotNull(classArray73);
        org.junit.Assert.assertNotNull(methodArray76);
        org.junit.Assert.assertNotNull(obj77);
    }

    @Test
    public void test1495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1495");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray1 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray2 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray1);
        java.lang.String[] strArray3 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray4 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray3, methodArray4);
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray5);
        java.lang.String[] strArray7 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray8 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray9 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.reflect.Method[] methodArray13 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray12);
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray17);
        java.lang.Class<?> wildcardClass19 = methodArray18.getClass();
        org.mockito.cglib.core.ClassInfo classInfo20 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass19);
        java.beans.PropertyDescriptor[] propertyDescriptorArray21 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass19);
        java.beans.PropertyDescriptor[] propertyDescriptorArray22 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass19);
        org.mockito.cglib.core.ClassInfo classInfo23 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass19);
        org.mockito.cglib.core.ClassInfo classInfo24 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass19);
        java.beans.PropertyDescriptor[] propertyDescriptorArray25 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass19);
        java.beans.PropertyDescriptor[] propertyDescriptorArray26 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass19);
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        org.mockito.cglib.core.ClassInfo classInfo29 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass28);
        java.lang.Object obj30 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass28);
        java.beans.PropertyDescriptor[] propertyDescriptorArray31 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray31, false, true);
        java.lang.Class[] classArray35 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray31);
        java.lang.Class[] classArray36 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray35);
        java.lang.String[] strArray37 = org.mockito.cglib.core.ReflectUtils.getNames(classArray36);
        java.lang.reflect.Constructor constructor38 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass28, classArray36);
        org.mockito.cglib.core.MethodInfo methodInfo39 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor38);
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray42 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray45 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray42, false, true);
        java.lang.Class[] classArray46 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray45);
        java.lang.Object[] objArray47 = null;
        java.lang.Object obj48 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass41, classArray46, objArray47);
        java.lang.Object obj49 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor38, (java.lang.Object[]) classArray46);
        org.mockito.cglib.core.MethodInfo methodInfo51 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor38, (int) (byte) 0);
        org.mockito.cglib.core.MethodInfo methodInfo52 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor38);
        org.mockito.asm.Type[] typeArray53 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor38);
        org.mockito.asm.Type[] typeArray54 = org.mockito.cglib.core.ReflectUtils.getExceptionTypes((java.lang.reflect.Member) constructor38);
        java.lang.Class[] classArray55 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) typeArray54);
        java.beans.PropertyDescriptor[] propertyDescriptorArray56 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray59 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray56, false, true);
        java.lang.reflect.Method[] methodArray62 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray56, true, true);
        java.lang.reflect.Method[] methodArray65 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray56, false, true);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj66 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass19, classArray55, (java.lang.Object[]) methodArray65);
            org.junit.Assert.fail("Expected exception of type org.mockito.cglib.core.CodeGenerationException; message: java.lang.NoSuchMethodException-->[Ljava.lang.reflect.Method;.<init>()");
        } catch (org.mockito.cglib.core.CodeGenerationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(methodArray1);
        org.junit.Assert.assertNotNull(methodArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(methodArray4);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(methodArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(classInfo20);
        org.junit.Assert.assertNotNull(propertyDescriptorArray21);
        org.junit.Assert.assertNotNull(propertyDescriptorArray22);
        org.junit.Assert.assertNotNull(classInfo23);
        org.junit.Assert.assertNotNull(classInfo24);
        org.junit.Assert.assertNotNull(propertyDescriptorArray25);
        org.junit.Assert.assertNotNull(propertyDescriptorArray26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(classInfo29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(propertyDescriptorArray31);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(classArray35);
        org.junit.Assert.assertNotNull(classArray36);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(constructor38);
        org.junit.Assert.assertNotNull(methodInfo39);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(propertyDescriptorArray42);
        org.junit.Assert.assertNotNull(methodArray45);
        org.junit.Assert.assertNotNull(classArray46);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(methodInfo51);
        org.junit.Assert.assertNotNull(methodInfo52);
        org.junit.Assert.assertNotNull(typeArray53);
        org.junit.Assert.assertNotNull(typeArray54);
        org.junit.Assert.assertNotNull(classArray55);
        org.junit.Assert.assertNotNull(propertyDescriptorArray56);
        org.junit.Assert.assertNotNull(methodArray59);
        org.junit.Assert.assertNotNull(methodArray62);
        org.junit.Assert.assertNotNull(methodArray65);
    }

    @Test
    public void test1496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1496");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.lang.Object obj3 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1);
        org.mockito.cglib.core.ClassInfo classInfo4 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.beans.PropertyDescriptor[] propertyDescriptorArray5 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray8 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray5, false, true);
        java.lang.Class[] classArray9 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray5);
        java.lang.Class[] classArray10 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray9);
        java.lang.String[] strArray11 = org.mockito.cglib.core.ReflectUtils.getNames(classArray9);
        java.lang.Class<?> wildcardClass12 = classArray9.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray13 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass12);
        java.beans.PropertyDescriptor[] propertyDescriptorArray14 = org.mockito.cglib.core.ReflectUtils.getBeanSetters((java.lang.Class) wildcardClass12);
        java.lang.Class[] classArray15 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray14);
        java.lang.String[] strArray16 = org.mockito.cglib.core.ReflectUtils.getNames(classArray15);
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        org.mockito.cglib.core.ClassInfo classInfo19 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass18);
        java.util.List list20 = null;
        java.util.List list21 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass18, list20);
        java.lang.String[] strArray22 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray23 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray24 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray22, methodArray23);
        java.lang.String[] strArray25 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray26 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray27 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray25, methodArray26);
        java.lang.reflect.Method[] methodArray28 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray22, methodArray27);
        java.lang.String[] strArray29 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray30 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray31 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray29, methodArray30);
        java.lang.String[] strArray32 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray33 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray34 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray32, methodArray33);
        java.lang.reflect.Method[] methodArray35 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray29, methodArray34);
        java.lang.reflect.Method[] methodArray36 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray22, methodArray35);
        java.lang.Class[] classArray37 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray35);
        java.lang.reflect.Constructor constructor38 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass18, classArray37);
        org.mockito.cglib.core.MethodInfo methodInfo39 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor38);
        java.lang.String[] strArray40 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray41 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray42 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray40, methodArray41);
        java.lang.String[] strArray43 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray44 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray45 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray43, methodArray44);
        java.lang.reflect.Method[] methodArray46 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray40, methodArray45);
        java.lang.String[] strArray47 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray48 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray49 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray47, methodArray48);
        java.lang.String[] strArray50 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray51 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray52 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray50, methodArray51);
        java.lang.reflect.Method[] methodArray53 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray47, methodArray52);
        java.lang.reflect.Method[] methodArray54 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray40, methodArray53);
        java.lang.String[] strArray55 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray56 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray57 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray55, methodArray56);
        java.lang.reflect.Method[] methodArray58 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray40, methodArray57);
        java.lang.Object obj59 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor38, (java.lang.Object[]) strArray40);
        org.mockito.cglib.core.MethodInfo methodInfo61 = org.mockito.cglib.core.ReflectUtils.getMethodInfo((java.lang.reflect.Member) constructor38, (int) (byte) 0);
        java.beans.PropertyDescriptor[] propertyDescriptorArray62 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray65 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray62, true, true);
        java.lang.reflect.Method[] methodArray68 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray62, false, true);
        java.lang.Class[] classArray69 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray62);
        java.lang.Object obj70 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor38, (java.lang.Object[]) classArray69);
        java.lang.Object obj71 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass1, classArray15, (java.lang.Object[]) classArray69);
        int int72 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray69);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(classInfo4);
        org.junit.Assert.assertNotNull(propertyDescriptorArray5);
        org.junit.Assert.assertNotNull(methodArray8);
        org.junit.Assert.assertNotNull(classArray9);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(propertyDescriptorArray13);
        org.junit.Assert.assertNotNull(propertyDescriptorArray14);
        org.junit.Assert.assertNotNull(classArray15);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(classInfo19);
        org.junit.Assert.assertNull(list21);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(methodArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(methodArray26);
        org.junit.Assert.assertNotNull(methodArray27);
        org.junit.Assert.assertNotNull(methodArray28);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(methodArray30);
        org.junit.Assert.assertNotNull(methodArray31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(methodArray33);
        org.junit.Assert.assertNotNull(methodArray34);
        org.junit.Assert.assertNotNull(methodArray35);
        org.junit.Assert.assertNotNull(methodArray36);
        org.junit.Assert.assertNotNull(classArray37);
        org.junit.Assert.assertNotNull(constructor38);
        org.junit.Assert.assertNotNull(methodInfo39);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(methodArray41);
        org.junit.Assert.assertNotNull(methodArray42);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(methodArray44);
        org.junit.Assert.assertNotNull(methodArray45);
        org.junit.Assert.assertNotNull(methodArray46);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(methodArray48);
        org.junit.Assert.assertNotNull(methodArray49);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(methodArray51);
        org.junit.Assert.assertNotNull(methodArray52);
        org.junit.Assert.assertNotNull(methodArray53);
        org.junit.Assert.assertNotNull(methodArray54);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(methodArray56);
        org.junit.Assert.assertNotNull(methodArray57);
        org.junit.Assert.assertNotNull(methodArray58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(methodInfo61);
        org.junit.Assert.assertNotNull(propertyDescriptorArray62);
        org.junit.Assert.assertNotNull(methodArray65);
        org.junit.Assert.assertNotNull(methodArray68);
        org.junit.Assert.assertNotNull(classArray69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
    }

    @Test
    public void test1497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1497");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray1 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray2 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray1);
        java.lang.String[] strArray3 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray4 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray5 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray3, methodArray4);
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray5);
        java.lang.String[] strArray7 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray8 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray9 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.reflect.Method[] methodArray13 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray7, methodArray12);
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray0, methodArray13);
        java.lang.Class<?> wildcardClass15 = methodArray13.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray16 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass15);
        java.beans.PropertyDescriptor[] propertyDescriptorArray17 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass15);
        java.beans.PropertyDescriptor[] propertyDescriptorArray18 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass15);
        java.beans.PropertyDescriptor[] propertyDescriptorArray19 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass15);
        java.beans.PropertyDescriptor[] propertyDescriptorArray20 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass15);
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(methodArray1);
        org.junit.Assert.assertNotNull(methodArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(methodArray4);
        org.junit.Assert.assertNotNull(methodArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(methodArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(propertyDescriptorArray16);
        org.junit.Assert.assertNotNull(propertyDescriptorArray17);
        org.junit.Assert.assertNotNull(propertyDescriptorArray18);
        org.junit.Assert.assertNotNull(propertyDescriptorArray19);
        org.junit.Assert.assertNotNull(propertyDescriptorArray20);
    }

    @Test
    public void test1498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1498");
        java.beans.PropertyDescriptor[] propertyDescriptorArray0 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray3 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray0, true, true);
        java.lang.reflect.Method[] methodArray6 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray0, true, true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray0);
        org.junit.Assert.assertNotNull(methodArray3);
        org.junit.Assert.assertNotNull(methodArray6);
    }

    @Test
    public void test1499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1499");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray6 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray7 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray6);
        java.lang.String[] strArray8 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray9 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray10 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray8, methodArray9);
        java.lang.reflect.Method[] methodArray11 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray10);
        java.lang.String[] strArray12 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray13 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray14 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray13);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray16 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray17 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray15, methodArray16);
        java.lang.reflect.Method[] methodArray18 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray12, methodArray17);
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray5, methodArray18);
        java.lang.Class[] classArray20 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray18);
        java.lang.reflect.Constructor constructor21 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray20);
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        org.mockito.cglib.core.ClassInfo classInfo24 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass23);
        java.lang.Object obj25 = org.mockito.cglib.core.ReflectUtils.newInstance((java.lang.Class) wildcardClass23);
        java.beans.PropertyDescriptor[] propertyDescriptorArray26 = new java.beans.PropertyDescriptor[] {};
        java.lang.reflect.Method[] methodArray29 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray26, false, true);
        java.lang.Class[] classArray30 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray26);
        java.lang.Class[] classArray31 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray30);
        java.lang.String[] strArray32 = org.mockito.cglib.core.ReflectUtils.getNames(classArray31);
        java.lang.reflect.Constructor constructor33 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass23, classArray31);
        int int34 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray31);
        java.lang.Object obj35 = org.mockito.cglib.core.ReflectUtils.newInstance(constructor21, (java.lang.Object[]) classArray31);
        int int36 = org.mockito.cglib.core.ReflectUtils.findPackageProtected(classArray31);
        java.lang.Class[] classArray37 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray31);
        java.lang.Class[] classArray38 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray37);
        java.lang.String[] strArray39 = org.mockito.cglib.core.ReflectUtils.getNames(classArray37);
        java.lang.String[] strArray40 = org.mockito.cglib.core.ReflectUtils.getNames(classArray37);
        java.lang.String[] strArray41 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray42 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray43 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray41, methodArray42);
        java.lang.String[] strArray44 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray45 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray46 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray44, methodArray45);
        java.lang.reflect.Method[] methodArray47 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray41, methodArray46);
        java.lang.String[] strArray48 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray49 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray50 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray48, methodArray49);
        java.lang.String[] strArray51 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray52 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray53 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray51, methodArray52);
        java.lang.reflect.Method[] methodArray54 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray48, methodArray53);
        java.lang.reflect.Method[] methodArray55 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray41, methodArray54);
        java.lang.Class[] classArray56 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray54);
        java.lang.Class<?> wildcardClass57 = classArray56.getClass();
        java.beans.PropertyDescriptor[] propertyDescriptorArray58 = org.mockito.cglib.core.ReflectUtils.getBeanProperties((java.lang.Class) wildcardClass57);
        java.lang.Class[] classArray59 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) propertyDescriptorArray58);
        java.lang.reflect.Method[] methodArray62 = org.mockito.cglib.core.ReflectUtils.getPropertyMethods(propertyDescriptorArray58, false, true);
        java.lang.reflect.Method[] methodArray63 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray40, methodArray62);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(methodArray6);
        org.junit.Assert.assertNotNull(methodArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(methodArray9);
        org.junit.Assert.assertNotNull(methodArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(methodArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(methodArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(constructor21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(classInfo24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(propertyDescriptorArray26);
        org.junit.Assert.assertNotNull(methodArray29);
        org.junit.Assert.assertNotNull(classArray30);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(constructor33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(classArray37);
        org.junit.Assert.assertNotNull(classArray38);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(methodArray42);
        org.junit.Assert.assertNotNull(methodArray43);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(methodArray45);
        org.junit.Assert.assertNotNull(methodArray46);
        org.junit.Assert.assertNotNull(methodArray47);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(methodArray49);
        org.junit.Assert.assertNotNull(methodArray50);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(methodArray52);
        org.junit.Assert.assertNotNull(methodArray53);
        org.junit.Assert.assertNotNull(methodArray54);
        org.junit.Assert.assertNotNull(methodArray55);
        org.junit.Assert.assertNotNull(classArray56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(propertyDescriptorArray58);
        org.junit.Assert.assertNotNull(classArray59);
        org.junit.Assert.assertNotNull(methodArray62);
        org.junit.Assert.assertNotNull(methodArray63);
    }

    @Test
    public void test1500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1500");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.cglib.core.ClassInfo classInfo2 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass1);
        java.util.List list3 = null;
        java.util.List list4 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass1, list3);
        java.lang.Object obj5 = new java.lang.Object();
        java.lang.Class<?> wildcardClass6 = obj5.getClass();
        org.mockito.cglib.core.ClassInfo classInfo7 = org.mockito.cglib.core.ReflectUtils.getClassInfo((java.lang.Class) wildcardClass6);
        java.util.List list8 = null;
        java.util.List list9 = org.mockito.cglib.core.ReflectUtils.addAllInterfaces((java.lang.Class) wildcardClass6, list8);
        java.lang.String[] strArray10 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray11 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray12 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray11);
        java.lang.String[] strArray13 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray14 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray15 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray13, methodArray14);
        java.lang.reflect.Method[] methodArray16 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray15);
        java.lang.String[] strArray17 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray18 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray19 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray17, methodArray18);
        java.lang.String[] strArray20 = new java.lang.String[] {};
        java.lang.reflect.Method[] methodArray21 = new java.lang.reflect.Method[] {};
        java.lang.reflect.Method[] methodArray22 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray20, methodArray21);
        java.lang.reflect.Method[] methodArray23 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray17, methodArray22);
        java.lang.reflect.Method[] methodArray24 = org.mockito.cglib.core.ReflectUtils.findMethods(strArray10, methodArray23);
        java.lang.Class[] classArray25 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) methodArray23);
        java.lang.reflect.Constructor constructor26 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass6, classArray25);
        java.lang.Class[] classArray27 = org.mockito.cglib.core.ReflectUtils.getClasses((java.lang.Object[]) classArray25);
        java.lang.String[] strArray28 = org.mockito.cglib.core.ReflectUtils.getNames(classArray27);
        java.lang.reflect.Constructor constructor29 = org.mockito.cglib.core.ReflectUtils.getConstructor((java.lang.Class) wildcardClass1, classArray27);
        // The following exception was thrown during execution in test generation
        try {
            java.beans.PropertyDescriptor[] propertyDescriptorArray30 = org.mockito.cglib.core.ReflectUtils.getBeanGetters((java.lang.Class) wildcardClass1);
            org.junit.Assert.fail("Expected exception of type org.mockito.cglib.core.CodeGenerationException; message: java.beans.IntrospectionException-->java.lang.Object not superclass of java.lang.Object");
        } catch (org.mockito.cglib.core.CodeGenerationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(classInfo2);
        org.junit.Assert.assertNull(list4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(classInfo7);
        org.junit.Assert.assertNull(list9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(methodArray11);
        org.junit.Assert.assertNotNull(methodArray12);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(methodArray14);
        org.junit.Assert.assertNotNull(methodArray15);
        org.junit.Assert.assertNotNull(methodArray16);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(methodArray18);
        org.junit.Assert.assertNotNull(methodArray19);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(methodArray21);
        org.junit.Assert.assertNotNull(methodArray22);
        org.junit.Assert.assertNotNull(methodArray23);
        org.junit.Assert.assertNotNull(methodArray24);
        org.junit.Assert.assertNotNull(classArray25);
        org.junit.Assert.assertNotNull(constructor26);
        org.junit.Assert.assertNotNull(classArray27);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(constructor29);
    }
}

