import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest3 {

    public static boolean debug = false;

    @Test
    public void test1501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1501");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder17.append((java.lang.Object) boolean37, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray52 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray56 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray57 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder53.append(shortArray56, shortArray57);
        byte[] byteArray59 = new byte[] {};
        byte[] byteArray64 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder53.append(byteArray59, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder46.append(byteArray52, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder46.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder39.append((java.lang.Object) equalsBuilder45, (java.lang.Object) equalsBuilder46);
        long[] longArray73 = new long[] { (byte) 100, ' ', (short) 10 };
        long[] longArray79 = new long[] { 'a', 0L, (short) 10, (byte) 0, (byte) -1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder46.append(longArray73, longArray79);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder80.append((short) 0, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder83.append(0, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder83.append(false, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder89.append((float) (short) 10, (float) (-1));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder95 = equalsBuilder89.append('#', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder98 = equalsBuilder89.append((short) 1, (short) 10);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray56), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(longArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray73), "[100, 32, 10]");
        org.junit.Assert.assertNotNull(longArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray79), "[97, 0, 10, 0, -1]");
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertNotNull(equalsBuilder89);
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertNotNull(equalsBuilder95);
        org.junit.Assert.assertNotNull(equalsBuilder98);
    }

    @Test
    public void test1502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1502");
        java.lang.Object obj0 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder1 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray4 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray5 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder1.append(shortArray4, shortArray5);
        byte[] byteArray7 = new byte[] {};
        byte[] byteArray12 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder1.append(byteArray7, byteArray12);
        java.lang.String[] strArray15 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        boolean boolean18 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj0, (java.lang.Object) equalsBuilder13, (java.util.Collection<java.lang.String>) strList16);
        boolean boolean19 = equalsBuilder13.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder13.append((float) (byte) 1, (float) 1L);
        boolean boolean23 = equalsBuilder13.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = equalsBuilder13.append((-1), (int) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder13.append('#', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder32 = equalsBuilder29.append((float) '#', (float) 10);
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(equalsBuilder26);
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(equalsBuilder32);
    }

    @Test
    public void test1503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1503");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder64.append((byte) -1, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder77.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder79.append((double) (byte) 100, (double) 1);
        boolean boolean83 = equalsBuilder79.isEquals();
        boolean boolean84 = equalsBuilder79.isEquals();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test1504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1504");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        java.lang.Boolean boolean4 = equalsBuilder3.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder3.append((byte) 0, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = equalsBuilder3.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder3.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder12.append((float) 10, (float) 1);
        equalsBuilder15.reset();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + true + "'", boolean4, true);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(equalsBuilder9);
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
    }

    @Test
    public void test1505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1505");
        java.lang.Object obj0 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder1 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray4 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray5 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder1.append(shortArray4, shortArray5);
        byte[] byteArray7 = new byte[] {};
        byte[] byteArray12 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder1.append(byteArray7, byteArray12);
        java.lang.String[] strArray15 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        boolean boolean18 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj0, (java.lang.Object) equalsBuilder13, (java.util.Collection<java.lang.String>) strList16);
        boolean boolean19 = equalsBuilder13.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder13.append((float) (byte) 1, (float) 1L);
        boolean boolean23 = equalsBuilder13.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = equalsBuilder13.append((-1), (int) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder13.append('#', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder32 = equalsBuilder29.append((byte) 0, (byte) 1);
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(equalsBuilder26);
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(equalsBuilder32);
    }

    @Test
    public void test1506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1506");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        equalsBuilder74.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder74.append('4', ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder74.append((short) -1, (short) (byte) 1);
        equalsBuilder81.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder81.append(false, true);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder85);
    }

    @Test
    public void test1507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1507");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder12.append((byte) 10, (byte) 0);
        boolean boolean16 = equalsBuilder15.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray20 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray21 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder17.append(shortArray20, shortArray21);
        byte[] byteArray23 = new byte[] {};
        byte[] byteArray28 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder17.append(byteArray23, byteArray28);
        byte[] byteArray30 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder15.append(byteArray28, byteArray30);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append((float) ' ', (float) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder34.append((byte) 10, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder37.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder37.append((long) (-1), (long) (short) 1);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
    }

    @Test
    public void test1508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1508");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder1 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray4 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray5 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder1.append(shortArray4, shortArray5);
        byte[] byteArray7 = new byte[] {};
        byte[] byteArray12 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder1.append(byteArray7, byteArray12);
        char[] charArray18 = new char[] { '#', ' ', '#', '#' };
        char[] charArray21 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder1.append(charArray18, charArray21);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder22.append('a', '#');
        java.util.Collection<java.lang.String> strCollection26 = null;
        boolean boolean27 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) 0L, (java.lang.Object) equalsBuilder25, strCollection26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder25.append(true, false);
        java.lang.Class<?> wildcardClass31 = equalsBuilder30.getClass();
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test1509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1509");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        equalsBuilder0.reset();
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray9 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray10 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder11 = equalsBuilder6.append(shortArray9, shortArray10);
        int[] intArray12 = new int[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray16 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray17 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder13.append(shortArray16, shortArray17);
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean27 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder18, (java.lang.Object) '#', strArray26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray34 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray35 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder31.append(shortArray34, shortArray35);
        byte[] byteArray37 = new byte[] {};
        byte[] byteArray42 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder31.append(byteArray37, byteArray42);
        char[] charArray48 = new char[] { '#', ' ', '#', '#' };
        char[] charArray51 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder31.append(charArray48, charArray51);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray56 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray57 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder53.append(shortArray56, shortArray57);
        byte[] byteArray59 = new byte[] {};
        byte[] byteArray64 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder53.append(byteArray59, byteArray64);
        char[] charArray70 = new char[] { '#', ' ', '#', '#' };
        char[] charArray73 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder53.append(charArray70, charArray73);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder18.append(charArray51, charArray70);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder18.appendSuper(false);
        int[] intArray81 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray86 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder77.append(intArray81, intArray86);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder11.append(intArray12, intArray86);
        int[] intArray90 = new int[] { (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder0.append(intArray12, intArray90);
        java.lang.Boolean boolean92 = equalsBuilder0.build();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder11);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[]");
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray35), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[]");
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray56), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[1]");
        org.junit.Assert.assertNotNull(equalsBuilder91);
        org.junit.Assert.assertEquals("'" + boolean92 + "' != '" + false + "'", boolean92, false);
    }

    @Test
    public void test1510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1510");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        java.lang.Boolean boolean4 = equalsBuilder3.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder3.append((byte) 0, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = equalsBuilder3.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder3.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = equalsBuilder13.append((short) (byte) 10, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder17.append((short) (byte) 10, (short) 0);
        equalsBuilder17.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder22.append((short) (byte) 10, (short) 0);
        long[] longArray31 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray33 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder22.append(longArray31, longArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder35.append((short) (byte) 10, (short) 0);
        long[] longArray44 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray46 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder35.append(longArray44, longArray46);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder17.append(longArray31, longArray46);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder49.append((short) (byte) 10, (short) 0);
        long[] longArray58 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray60 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder49.append(longArray58, longArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray65 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray66 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder62.append(shortArray65, shortArray66);
        java.lang.String[] strArray75 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean76 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder67, (java.lang.Object) '#', strArray75);
        boolean boolean77 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) longArray60, (java.lang.Object) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder16.append(longArray31, longArray60);
        long[] longArray81 = new long[] { (byte) 10, 0L };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder12.append(longArray31, longArray81);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder82.append((byte) -1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder85.append((long) '#', (long) ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder85.append(false, false);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + true + "'", boolean4, true);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(equalsBuilder9);
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder16);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(longArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray31), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray33), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(longArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray44), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray46), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(longArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray58), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray60), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(shortArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray65), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray66), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(longArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray81), "[10, 0]");
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertNotNull(equalsBuilder91);
    }

    @Test
    public void test1511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1511");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        java.lang.Boolean boolean4 = equalsBuilder3.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder3.append((byte) 100, (byte) 100);
        equalsBuilder3.reset();
        int[] intArray13 = new int[] { (short) -1, (-1), (byte) 1, '#' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder14 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray17 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray18 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder14.append(shortArray17, shortArray18);
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean28 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder19, (java.lang.Object) '#', strArray27);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder19.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder32 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray35 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray36 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder32.append(shortArray35, shortArray36);
        byte[] byteArray38 = new byte[] {};
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder32.append(byteArray38, byteArray43);
        char[] charArray49 = new char[] { '#', ' ', '#', '#' };
        char[] charArray52 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder32.append(charArray49, charArray52);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray57 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray58 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder59 = equalsBuilder54.append(shortArray57, shortArray58);
        byte[] byteArray60 = new byte[] {};
        byte[] byteArray65 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder54.append(byteArray60, byteArray65);
        char[] charArray71 = new char[] { '#', ' ', '#', '#' };
        char[] charArray74 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder54.append(charArray71, charArray74);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder19.append(charArray52, charArray71);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder19.appendSuper(false);
        int[] intArray82 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray87 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder78.append(intArray82, intArray87);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder3.append(intArray13, intArray82);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder3.append((short) (byte) 0, (short) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder95 = equalsBuilder92.append((int) (byte) -1, (int) (byte) 0);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + true + "'", boolean4, true);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, -1, 1, 35]");
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(shortArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray35), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray36), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray58), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder59);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[]");
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray74), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray74), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray74), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder76);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertNotNull(equalsBuilder89);
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertNotNull(equalsBuilder95);
    }

    @Test
    public void test1512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1512");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder5.append((short) (byte) 10, (short) 0);
        long[] longArray14 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray16 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append(longArray14, longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder18.append((short) (byte) 10, (short) 0);
        long[] longArray27 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray29 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(longArray27, longArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append(longArray14, longArray29);
        java.lang.Boolean boolean32 = equalsBuilder31.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder31.append((byte) 1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder35.append((int) (byte) 100, (int) (short) 1);
        equalsBuilder35.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder35.append(0.0f, (float) (short) 10);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(equalsBuilder42);
    }

    @Test
    public void test1513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1513");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder1 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray4 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray5 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder1.append(shortArray4, shortArray5);
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean15 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder6, (java.lang.Object) '#', strArray14);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder6.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        byte[] byteArray25 = new byte[] {};
        byte[] byteArray30 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder19.append(byteArray25, byteArray30);
        char[] charArray36 = new char[] { '#', ' ', '#', '#' };
        char[] charArray39 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder19.append(charArray36, charArray39);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray44 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray45 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder41.append(shortArray44, shortArray45);
        byte[] byteArray47 = new byte[] {};
        byte[] byteArray52 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder41.append(byteArray47, byteArray52);
        char[] charArray58 = new char[] { '#', ' ', '#', '#' };
        char[] charArray61 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder41.append(charArray58, charArray61);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder6.append(charArray39, charArray58);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder6.appendSuper(false);
        float[] floatArray66 = null;
        float[] floatArray67 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder65.append(floatArray66, floatArray67);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder68.append((double) 0, (double) (byte) 1);
        equalsBuilder71.reset();
        boolean boolean73 = equalsBuilder71.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder71.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder71.append((int) '4', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder71.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder81.append((short) (byte) 1, (short) 1);
        boolean boolean86 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (-1L), (java.lang.Object) equalsBuilder81, true);
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray45), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test1514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1514");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder64.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder64.append((long) 'a', (long) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder80.append(100.0d, (double) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder80.append((long) '#', 1L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder86.append(100, (int) '#');
        equalsBuilder89.reset();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertNotNull(equalsBuilder89);
    }

    @Test
    public void test1515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1515");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder64.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder64.append((long) 'a', (long) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder80.append(100.0d, (double) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder80.append((byte) -1, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder86.append((double) 1, 10.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder86.append((long) 100, (long) 10);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertNotNull(equalsBuilder89);
        org.junit.Assert.assertNotNull(equalsBuilder92);
    }

    @Test
    public void test1516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1516");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.append((double) 100L, (double) 10L);
        boolean boolean16 = equalsBuilder0.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(0, (int) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder19.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append((float) (-1L), 0.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder19.append(0.0f, (float) 0L);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
    }

    @Test
    public void test1517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1517");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        char[] charArray17 = new char[] { '#', ' ', '#', '#' };
        char[] charArray20 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(charArray17, charArray20);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder21.append('a', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder21.append((int) (byte) 1, (int) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder27.append((int) (byte) 1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder27.append((long) (byte) 10, (long) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder33.append((short) -1, (short) (byte) 0);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(equalsBuilder36);
    }

    @Test
    public void test1518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1518");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.append((double) 100L, (double) 10L);
        boolean boolean16 = equalsBuilder0.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(0, (int) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder19.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append((int) (short) -1, (int) (byte) 1);
        equalsBuilder24.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder24.append((float) (-1), (float) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder28.append(false, true);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
    }

    @Test
    public void test1519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1519");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.append((double) 100L, (double) 10L);
        boolean boolean16 = equalsBuilder0.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(0, (int) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder19.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append((float) (-1L), 0.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder19.append((short) -1, (short) (byte) 0);
        boolean boolean28 = equalsBuilder27.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder27.append('a', 'a');
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(equalsBuilder31);
    }

    @Test
    public void test1520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1520");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder5.append((short) (byte) 10, (short) 0);
        long[] longArray14 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray16 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append(longArray14, longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder18.append((short) (byte) 10, (short) 0);
        long[] longArray27 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray29 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(longArray27, longArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append(longArray14, longArray29);
        java.lang.Boolean boolean32 = equalsBuilder31.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder31.append((double) (short) -1, (double) 10);
        java.lang.Boolean boolean36 = equalsBuilder35.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder35.append((int) (byte) 1, 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder35.append(0L, (long) (-1));
        equalsBuilder35.reset();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertEquals("'" + boolean36 + "' != '" + false + "'", boolean36, false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
    }

    @Test
    public void test1521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1521");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder0.append((float) 10L, (float) (-1));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder10 = equalsBuilder7.append((short) (byte) 10, (short) 0);
        long[] longArray16 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray18 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder7.append(longArray16, longArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder20.append((short) (byte) 10, (short) 0);
        long[] longArray29 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray31 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder32 = equalsBuilder20.append(longArray29, longArray31);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder6.append(longArray16, longArray31);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder33.append((byte) 0, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder37.append((short) (byte) 10, (short) 0);
        equalsBuilder37.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder37.append((short) (byte) 10, (short) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder37.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder37.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder37.append((short) (byte) 10, (short) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder52.append((short) (byte) 10, (short) 0);
        equalsBuilder52.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder57.append((short) (byte) 10, (short) 0);
        long[] longArray66 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray68 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder57.append(longArray66, longArray68);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder70.append((short) (byte) 10, (short) 0);
        long[] longArray79 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray81 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder70.append(longArray79, longArray81);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder52.append(longArray66, longArray81);
        java.lang.Boolean boolean84 = equalsBuilder83.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder83.append((byte) 1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder87.appendSuper(true);
        equalsBuilder87.reset();
        equalsBuilder87.reset();
        boolean boolean92 = equalsBuilder87.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder36.append((java.lang.Object) equalsBuilder37, (java.lang.Object) equalsBuilder87);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder96 = equalsBuilder93.append(100L, (long) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder99 = equalsBuilder93.append((int) ' ', 0);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(equalsBuilder10);
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray18), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray31), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder32);
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(equalsBuilder60);
        org.junit.Assert.assertNotNull(longArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray66), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray68), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(longArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray79), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray81), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertEquals("'" + boolean84 + "' != '" + false + "'", boolean84, false);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(equalsBuilder89);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(equalsBuilder93);
        org.junit.Assert.assertNotNull(equalsBuilder96);
        org.junit.Assert.assertNotNull(equalsBuilder99);
    }

    @Test
    public void test1522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1522");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder0.append((-1), (int) (short) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = equalsBuilder6.append((-1L), 100L);
        equalsBuilder6.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder6.append(1, (int) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder13.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder13.appendSuper(false);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(equalsBuilder9);
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(equalsBuilder17);
    }

    @Test
    public void test1523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1523");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder3.append((long) (byte) 100, 1L);
        boolean boolean7 = equalsBuilder6.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder10 = equalsBuilder6.append((double) (byte) 100, (double) 100);
        java.lang.Boolean boolean11 = equalsBuilder10.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder14 = equalsBuilder10.append(' ', 'a');
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(equalsBuilder10);
        org.junit.Assert.assertEquals("'" + boolean11 + "' != '" + false + "'", boolean11, false);
        org.junit.Assert.assertNotNull(equalsBuilder14);
    }

    @Test
    public void test1524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1524");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        long[] longArray65 = null;
        long[] longArray72 = new long[] { 1, (byte) -1, (-1), (short) 1, 100L, '#' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder64.append(longArray65, longArray72);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder64.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder64.appendSuper(false);
        boolean boolean78 = equalsBuilder64.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder64.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder64.append('a', 'a');
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(longArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray72), "[1, -1, -1, 1, 100, 35]");
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
    }

    @Test
    public void test1525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1525");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder5.append((short) (byte) 10, (short) 0);
        long[] longArray14 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray16 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append(longArray14, longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder18.append((short) (byte) 10, (short) 0);
        long[] longArray27 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray29 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(longArray27, longArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append(longArray14, longArray29);
        java.lang.Boolean boolean32 = equalsBuilder31.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder31.append((byte) 1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder35.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder35.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder39.append('a', '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder39.append('4', '#');
        boolean boolean46 = equalsBuilder45.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = equalsBuilder45.append((double) (byte) -1, (double) (short) 100);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(equalsBuilder49);
    }

    @Test
    public void test1526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1526");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        boolean[] booleanArray68 = new boolean[] { true, true, false };
        boolean[] booleanArray69 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder5.append(booleanArray68, booleanArray69);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder70.append((-1.0f), 0.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder73.append((byte) 0, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder76.append((byte) 1, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder79.append((long) (byte) 10, (long) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder82.append(0.0f, 10.0f);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray68), "[true, true, false]");
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder76);
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(equalsBuilder85);
    }

    @Test
    public void test1527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1527");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        long[] longArray65 = null;
        long[] longArray72 = new long[] { 1, (byte) -1, (-1), (short) 1, 100L, '#' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder64.append(longArray65, longArray72);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder64.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder64.append((short) -1, (short) (byte) 1);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(longArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray72), "[1, -1, -1, 1, 100, 35]");
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder78);
    }

    @Test
    public void test1528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1528");
        java.lang.Object obj0 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder1 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray4 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray5 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder1.append(shortArray4, shortArray5);
        byte[] byteArray7 = new byte[] {};
        byte[] byteArray12 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder1.append(byteArray7, byteArray12);
        java.lang.String[] strArray15 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        boolean boolean18 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj0, (java.lang.Object) equalsBuilder13, (java.util.Collection<java.lang.String>) strList16);
        boolean boolean19 = equalsBuilder13.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder13.append((float) (byte) 1, (float) 1L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder13.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder13.append(1, (int) (short) 1);
        boolean boolean28 = equalsBuilder13.isEquals();
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test1529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1529");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder0.append((short) (byte) 10, (short) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = equalsBuilder0.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder11 = equalsBuilder0.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder14 = equalsBuilder11.append(0.0f, (float) '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray18 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray19 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder15.append(shortArray18, shortArray19);
        byte[] byteArray21 = new byte[] {};
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder15.append(byteArray21, byteArray26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder27.append((byte) 10, (byte) 0);
        equalsBuilder27.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder27.append('#', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder34.append((double) (byte) 100, (double) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder37.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder40.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder40.append((-1), (int) (short) 10);
        java.lang.Object obj47 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray54 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray58 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray59 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder55.append(shortArray58, shortArray59);
        byte[] byteArray61 = new byte[] {};
        byte[] byteArray66 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder55.append(byteArray61, byteArray66);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder48.append(byteArray54, byteArray66);
        boolean boolean70 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj47, (java.lang.Object) byteArray66, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray77 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray81 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray82 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder78.append(shortArray81, shortArray82);
        byte[] byteArray84 = new byte[] {};
        byte[] byteArray89 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder78.append(byteArray84, byteArray89);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder71.append(byteArray77, byteArray89);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder40.append(byteArray66, byteArray77);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder11.append((java.lang.Object) equalsBuilder39, (java.lang.Object) equalsBuilder40);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder96 = equalsBuilder39.append(1, (int) (byte) 1);
        equalsBuilder96.reset();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(equalsBuilder9);
        org.junit.Assert.assertNotNull(equalsBuilder11);
        org.junit.Assert.assertNotNull(equalsBuilder14);
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray58), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray59), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder60);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[]");
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray81), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray82), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[]");
        org.junit.Assert.assertNotNull(byteArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray89), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertNotNull(equalsBuilder91);
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertNotNull(equalsBuilder93);
        org.junit.Assert.assertNotNull(equalsBuilder96);
    }

    @Test
    public void test1530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1530");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.append((double) 100L, (double) 10L);
        boolean boolean16 = equalsBuilder0.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(0, (int) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder19.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append((float) (-1L), 0.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder19.append((short) -1, (short) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder19.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder32 = equalsBuilder29.append((short) 10, (short) (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray36 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray37 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder33.append(shortArray36, shortArray37);
        byte[] byteArray39 = new byte[] {};
        byte[] byteArray44 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder33.append(byteArray39, byteArray44);
        char[] charArray50 = new char[] { '#', ' ', '#', '#' };
        char[] charArray53 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder33.append(charArray50, charArray53);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = equalsBuilder54.append('a', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder54.append((int) (byte) 1, (int) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder60.append((int) (byte) 1, (int) (short) 0);
        boolean boolean65 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (byte) 10, (java.lang.Object) equalsBuilder63, false);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(equalsBuilder32);
        org.junit.Assert.assertNotNull(shortArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray36), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[]");
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder54);
        org.junit.Assert.assertNotNull(equalsBuilder57);
        org.junit.Assert.assertNotNull(equalsBuilder60);
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test1531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1531");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder4 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder4.append((short) (byte) 10, (short) 0);
        equalsBuilder4.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder9.append((short) (byte) 10, (short) 0);
        long[] longArray18 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray20 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder9.append(longArray18, longArray20);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder22.append((short) (byte) 10, (short) 0);
        long[] longArray31 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray33 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder22.append(longArray31, longArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder4.append(longArray18, longArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder36.append((short) (byte) 10, (short) 0);
        long[] longArray45 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray47 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder36.append(longArray45, longArray47);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray52 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray53 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder49.append(shortArray52, shortArray53);
        java.lang.String[] strArray62 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean63 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder54, (java.lang.Object) '#', strArray62);
        boolean boolean64 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) longArray47, (java.lang.Object) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder3.append(longArray18, longArray47);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder3.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder67.append((long) 1, (long) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder67.append(' ', ' ');
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(longArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray18), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(longArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray31), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray33), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(longArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray45), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray47), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(shortArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray52), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray53), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder54);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(equalsBuilder73);
    }

    @Test
    public void test1532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1532");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.append((double) 100L, (double) 10L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray19 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray20 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder16.append(shortArray19, shortArray20);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean30 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder21, (java.lang.Object) '#', strArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder21.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray37 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray38 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder34.append(shortArray37, shortArray38);
        byte[] byteArray40 = new byte[] {};
        byte[] byteArray45 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder34.append(byteArray40, byteArray45);
        char[] charArray51 = new char[] { '#', ' ', '#', '#' };
        char[] charArray54 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder34.append(charArray51, charArray54);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray59 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray60 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder56.append(shortArray59, shortArray60);
        byte[] byteArray62 = new byte[] {};
        byte[] byteArray67 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder56.append(byteArray62, byteArray67);
        char[] charArray73 = new char[] { '#', ' ', '#', '#' };
        char[] charArray76 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder56.append(charArray73, charArray76);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder21.append(charArray54, charArray73);
        java.lang.Object obj79 = null;
        boolean boolean80 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) charArray54, obj79);
        java.lang.String[] strArray81 = new java.lang.String[] {};
        boolean boolean82 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder15, (java.lang.Object) charArray54, strArray81);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder15.appendSuper(false);
        float[] floatArray85 = new float[] {};
        float[] floatArray87 = new float[] { (byte) -1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder15.append(floatArray85, floatArray87);
        boolean[] booleanArray89 = new boolean[] {};
        boolean[] booleanArray90 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder88.append(booleanArray89, booleanArray90);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder94 = equalsBuilder88.append((float) 0, (-1.0f));
        java.lang.Class<?> wildcardClass95 = equalsBuilder94.getClass();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[]");
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(shortArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray59), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray60), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[]");
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(floatArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray85), "[]");
        org.junit.Assert.assertNotNull(floatArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray87), "[-1.0]");
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertNotNull(booleanArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray89), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder91);
        org.junit.Assert.assertNotNull(equalsBuilder94);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test1533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1533");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder64.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder64.append((long) 'a', (long) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder80.append(100.0d, (double) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder83.appendSuper(true);
        boolean boolean86 = equalsBuilder83.isEquals();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test1534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1534");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder1 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray4 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray5 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder1.append(shortArray4, shortArray5);
        byte[] byteArray7 = new byte[] {};
        byte[] byteArray12 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder1.append(byteArray7, byteArray12);
        char[] charArray18 = new char[] { '#', ' ', '#', '#' };
        char[] charArray21 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder1.append(charArray18, charArray21);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder22.append('a', '#');
        java.util.Collection<java.lang.String> strCollection26 = null;
        boolean boolean27 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) 0L, (java.lang.Object) equalsBuilder25, strCollection26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder25.appendSuper(true);
        java.lang.Boolean boolean30 = equalsBuilder29.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder29.append('a', '#');
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertEquals("'" + boolean30 + "' != '" + false + "'", boolean30, false);
        org.junit.Assert.assertNotNull(equalsBuilder33);
    }

    @Test
    public void test1535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1535");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        equalsBuilder62.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder62.append((float) (byte) 10, (float) (byte) 10);
        boolean boolean67 = equalsBuilder66.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder66.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder66.append((byte) 0, (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder66.append((double) 100L, (double) 0L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder76.append((int) 'a', (int) ' ');
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder76);
        org.junit.Assert.assertNotNull(equalsBuilder79);
    }

    @Test
    public void test1536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1536");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((double) 100.0f, (double) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder5.append((short) 0, (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder5.append((long) ' ', (long) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = equalsBuilder23.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder26.append(0L, 100L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder32 = equalsBuilder26.append((float) (byte) -1, (float) 'a');
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(equalsBuilder26);
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(equalsBuilder32);
    }

    @Test
    public void test1537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1537");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder17.append((java.lang.Object) boolean37, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder17.append((short) 100, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray46 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray47 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder43.append(shortArray46, shortArray47);
        byte[] byteArray49 = new byte[] {};
        byte[] byteArray54 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder43.append(byteArray49, byteArray54);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder55.append((byte) 10, (byte) 0);
        equalsBuilder55.reset();
        boolean boolean60 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (short) 100, (java.lang.Object) equalsBuilder55);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder55.append((int) (short) 10, 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder63.append((float) 'a', (float) (short) 0);
        java.lang.Class<?> wildcardClass67 = equalsBuilder63.getClass();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray47), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[]");
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test1538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1538");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder3.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = equalsBuilder3.append((byte) 0, (byte) 1);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(equalsBuilder9);
    }

    @Test
    public void test1539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1539");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        equalsBuilder74.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder74.append('4', ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder74.append((short) -1, (short) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder81.appendSuper(false);
        boolean[] booleanArray84 = null;
        boolean[] booleanArray85 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder83.append(booleanArray84, booleanArray85);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder86);
    }

    @Test
    public void test1540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1540");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        equalsBuilder74.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder74.append((int) (byte) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder74.append((double) 100L, (double) (-1L));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder81.append((short) (byte) -1, (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder84.append('#', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder87.append('a', ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder87.append((long) ' ', (long) (byte) 0);
        java.lang.Class<?> wildcardClass94 = equalsBuilder93.getClass();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertNotNull(equalsBuilder93);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1541");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder5.append((int) (short) -1, (int) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder5.append((float) (short) 1, (float) 0);
        java.lang.Object obj71 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray78 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray82 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray83 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder79.append(shortArray82, shortArray83);
        byte[] byteArray85 = new byte[] {};
        byte[] byteArray90 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder79.append(byteArray85, byteArray90);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder72.append(byteArray78, byteArray90);
        boolean boolean94 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj71, (java.lang.Object) byteArray90, true);
        byte[] byteArray95 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder96 = equalsBuilder5.append(byteArray90, byteArray95);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder99 = equalsBuilder5.append(true, true);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(byteArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray78), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray82), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray83), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(byteArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray85), "[]");
        org.junit.Assert.assertNotNull(byteArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray90), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder91);
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(equalsBuilder96);
        org.junit.Assert.assertNotNull(equalsBuilder99);
    }

    @Test
    public void test1542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1542");
        java.lang.Object obj0 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder1 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray4 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray5 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder1.append(shortArray4, shortArray5);
        byte[] byteArray7 = new byte[] {};
        byte[] byteArray12 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder1.append(byteArray7, byteArray12);
        java.lang.String[] strArray15 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        boolean boolean18 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj0, (java.lang.Object) equalsBuilder13, (java.util.Collection<java.lang.String>) strList16);
        boolean boolean19 = equalsBuilder13.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder13.append((float) (byte) 1, (float) 1L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder13.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder13.append((double) 'a', (double) (-1));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder13.append((int) ' ', (int) 'a');
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder30);
    }

    @Test
    public void test1543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1543");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        float[] floatArray65 = null;
        float[] floatArray66 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder64.append(floatArray65, floatArray66);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder64.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder72.append((short) (byte) 10, (short) 0);
        equalsBuilder72.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder72.append((double) 'a', (double) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder70.append((java.lang.Object) (short) 0, (java.lang.Object) equalsBuilder79);
        short[] shortArray81 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray85 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray86 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder82.append(shortArray85, shortArray86);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder80.append(shortArray81, shortArray86);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder88.appendSuper(false);
        java.lang.Class<?> wildcardClass91 = equalsBuilder90.getClass();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(shortArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray85), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray86), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1544");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.append((double) 100L, (double) 10L);
        boolean boolean16 = equalsBuilder0.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(0, (int) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder19.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append((int) (short) -1, (int) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder19.append((byte) 1, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray34 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray38 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray39 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder35.append(shortArray38, shortArray39);
        byte[] byteArray41 = new byte[] {};
        byte[] byteArray46 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder35.append(byteArray41, byteArray46);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder28.append(byteArray34, byteArray46);
        boolean boolean49 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder27, (java.lang.Object) equalsBuilder48);
        boolean boolean50 = equalsBuilder27.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder27.append((-1.0f), (float) (byte) 0);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray39), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[]");
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(equalsBuilder53);
    }

    @Test
    public void test1545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1545");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        equalsBuilder62.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder62.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder62.append((short) 10, (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder62.append((float) ' ', 1.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder62.append(0, (int) '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder62.append(false, false);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder78);
    }

    @Test
    public void test1546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1546");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((double) 100.0f, (double) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder5.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder19.append((double) 0L, (double) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder19.append('4', '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder25.append((long) (byte) -1, (-1L));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray32 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray33 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder29.append(shortArray32, shortArray33);
        byte[] byteArray35 = new byte[] {};
        byte[] byteArray40 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = equalsBuilder29.append(byteArray35, byteArray40);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder41.append('4', ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder44.append('a', '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = equalsBuilder47.appendSuper(false);
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList52 = new java.util.ArrayList<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        boolean boolean54 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder28, (java.lang.Object) equalsBuilder49, (java.util.Collection<java.lang.String>) strList52);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = equalsBuilder28.append('#', ' ');
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray33), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[]");
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder41);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder49);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(equalsBuilder57);
    }

    @Test
    public void test1547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1547");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder4 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder4.append((short) (byte) 10, (short) 0);
        equalsBuilder4.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder9.append((short) (byte) 10, (short) 0);
        long[] longArray18 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray20 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder9.append(longArray18, longArray20);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder22.append((short) (byte) 10, (short) 0);
        long[] longArray31 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray33 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder22.append(longArray31, longArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder4.append(longArray18, longArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder36.append((short) (byte) 10, (short) 0);
        long[] longArray45 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray47 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder36.append(longArray45, longArray47);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray52 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray53 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder49.append(shortArray52, shortArray53);
        java.lang.String[] strArray62 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean63 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder54, (java.lang.Object) '#', strArray62);
        boolean boolean64 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) longArray47, (java.lang.Object) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder3.append(longArray18, longArray47);
        java.lang.Boolean boolean66 = equalsBuilder3.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder3.append((float) (-1), (float) 0L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder69.append((double) 100.0f, (double) (-1.0f));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder69.append((double) 100.0f, (double) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder75.append((long) (byte) 0, (long) (short) 1);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(longArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray18), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(longArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray31), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray33), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(longArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray45), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray47), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(shortArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray52), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray53), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder54);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertEquals("'" + boolean66 + "' != '" + false + "'", boolean66, false);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder78);
    }

    @Test
    public void test1548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1548");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        char[] charArray17 = new char[] { '#', ' ', '#', '#' };
        char[] charArray20 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(charArray17, charArray20);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder21.append('a', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder24.append((long) (short) 10, (long) '#');
        equalsBuilder27.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder27.append((float) (byte) 0, (float) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder27.append(10, (int) '#');
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
    }

    @Test
    public void test1549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1549");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder12.append((byte) 10, (byte) 0);
        boolean boolean16 = equalsBuilder15.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray20 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray21 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder17.append(shortArray20, shortArray21);
        byte[] byteArray23 = new byte[] {};
        byte[] byteArray28 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder17.append(byteArray23, byteArray28);
        byte[] byteArray30 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder15.append(byteArray28, byteArray30);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder15.append((byte) 1, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder15.append(false, false);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder37);
    }

    @Test
    public void test1550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1550");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        long[] longArray9 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray11 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(longArray9, longArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray16 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray17 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder13.append(shortArray16, shortArray17);
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean27 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder18, (java.lang.Object) '#', strArray26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append((int) (short) -1, (int) (short) 0);
        boolean boolean31 = equalsBuilder30.isEquals();
        boolean boolean32 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder12, (java.lang.Object) boolean31);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder12.append((short) 0, (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder35.append((double) (byte) -1, 1.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = equalsBuilder38.append((long) ' ', (long) (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder38.append('a', 'a');
        boolean boolean45 = equalsBuilder44.isEquals();
        equalsBuilder44.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = equalsBuilder44.append((float) (-1), (float) (byte) 100);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(equalsBuilder41);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(equalsBuilder49);
    }

    @Test
    public void test1551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1551");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder0.append((-1), (int) (short) 10);
        java.lang.Object obj7 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray14 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray18 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray19 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder15.append(shortArray18, shortArray19);
        byte[] byteArray21 = new byte[] {};
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder15.append(byteArray21, byteArray26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder8.append(byteArray14, byteArray26);
        boolean boolean30 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj7, (java.lang.Object) byteArray26, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray37 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray41 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray42 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder38.append(shortArray41, shortArray42);
        byte[] byteArray44 = new byte[] {};
        byte[] byteArray49 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder38.append(byteArray44, byteArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder31.append(byteArray37, byteArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder0.append(byteArray26, byteArray37);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder52.append((byte) -1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder59 = equalsBuilder56.append((short) (byte) 10, (short) 0);
        long[] longArray65 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray67 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder56.append(longArray65, longArray67);
        long[] longArray71 = new long[] { (short) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder52.append(longArray67, longArray71);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder72.append((int) (short) 1, 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder72.append(' ', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder72.append(true, false);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray41), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(equalsBuilder59);
        org.junit.Assert.assertNotNull(longArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray65), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray67), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(longArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray71), "[10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
    }

    @Test
    public void test1552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1552");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((double) 100.0f, (double) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder5.append((short) 0, (short) -1);
        boolean boolean21 = equalsBuilder5.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder5.append((double) (byte) 100, (double) 100L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder5.append((double) '#', (double) 10L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder5.append(false, true);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder30);
    }

    @Test
    public void test1553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1553");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder12.append((byte) 10, (byte) 0);
        boolean boolean16 = equalsBuilder15.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder17.append((short) (byte) 10, (short) 0);
        equalsBuilder17.reset();
        equalsBuilder17.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray26 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray27 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder23.append(shortArray26, shortArray27);
        byte[] byteArray29 = new byte[] {};
        byte[] byteArray34 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder23.append(byteArray29, byteArray34);
        float[] floatArray41 = new float[] { (byte) -1, 10.0f, 'a', ' ', (short) -1 };
        float[] floatArray44 = new float[] { 1.0f, 0L };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder35.append(floatArray41, floatArray44);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder35.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder49.append((short) (byte) 10, (short) 0);
        long[] longArray58 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray60 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder49.append(longArray58, longArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder17.append((java.lang.Object) true, (java.lang.Object) longArray60);
        boolean boolean64 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) boolean16, (java.lang.Object) equalsBuilder62, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder62.append((short) (byte) 0, (short) (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder62.append((double) 1L, (double) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder70.append(' ', '4');
        java.lang.Class<?> wildcardClass74 = equalsBuilder70.getClass();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[]");
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(floatArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray41), "[-1.0, 10.0, 97.0, 32.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray44), "[1.0, 0.0]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(longArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray58), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray60), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test1554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1554");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        equalsBuilder74.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder74.append((int) (byte) -1, (int) (short) 0);
        java.lang.Boolean boolean79 = equalsBuilder78.build();
        short[] shortArray82 = new short[] { (short) -1, (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray86 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray87 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder83.append(shortArray86, shortArray87);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder78.append(shortArray82, shortArray86);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder78.append(100.0d, (double) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder95 = equalsBuilder92.append((long) 'a', (long) (byte) 0);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertEquals("'" + boolean79 + "' != '" + false + "'", boolean79, false);
        org.junit.Assert.assertNotNull(shortArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray82), "[-1, 10]");
        org.junit.Assert.assertNotNull(shortArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray86), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray87), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertNotNull(equalsBuilder89);
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertNotNull(equalsBuilder95);
    }

    @Test
    public void test1555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1555");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.append((double) 100L, (double) 10L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray19 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray20 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder16.append(shortArray19, shortArray20);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean30 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder21, (java.lang.Object) '#', strArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder21.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray37 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray38 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder34.append(shortArray37, shortArray38);
        byte[] byteArray40 = new byte[] {};
        byte[] byteArray45 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder34.append(byteArray40, byteArray45);
        char[] charArray51 = new char[] { '#', ' ', '#', '#' };
        char[] charArray54 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder34.append(charArray51, charArray54);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray59 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray60 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder56.append(shortArray59, shortArray60);
        byte[] byteArray62 = new byte[] {};
        byte[] byteArray67 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder56.append(byteArray62, byteArray67);
        char[] charArray73 = new char[] { '#', ' ', '#', '#' };
        char[] charArray76 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder56.append(charArray73, charArray76);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder21.append(charArray54, charArray73);
        java.lang.Object obj79 = null;
        boolean boolean80 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) charArray54, obj79);
        java.lang.String[] strArray81 = new java.lang.String[] {};
        boolean boolean82 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder15, (java.lang.Object) charArray54, strArray81);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder15.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder15.append(false, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder87.append((short) (byte) 0, (short) 100);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[]");
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(shortArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray59), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray60), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[]");
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(equalsBuilder90);
    }

    @Test
    public void test1556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1556");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder1 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray4 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray5 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder1.append(shortArray4, shortArray5);
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean15 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder6, (java.lang.Object) '#', strArray14);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder6.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        byte[] byteArray25 = new byte[] {};
        byte[] byteArray30 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder19.append(byteArray25, byteArray30);
        char[] charArray36 = new char[] { '#', ' ', '#', '#' };
        char[] charArray39 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder19.append(charArray36, charArray39);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray44 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray45 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder41.append(shortArray44, shortArray45);
        byte[] byteArray47 = new byte[] {};
        byte[] byteArray52 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder41.append(byteArray47, byteArray52);
        char[] charArray58 = new char[] { '#', ' ', '#', '#' };
        char[] charArray61 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder41.append(charArray58, charArray61);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder6.append(charArray39, charArray58);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder63.append(100, (int) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder63.append((short) 10, (short) -1);
        boolean boolean70 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) 100.0d, (java.lang.Object) equalsBuilder63);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder63.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder72.append((double) (short) 10, (double) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder76.append(false, false);
        java.lang.Boolean boolean80 = equalsBuilder79.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder79.append(10, (int) 'a');
        boolean boolean84 = equalsBuilder79.isEquals();
        boolean boolean86 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder75, (java.lang.Object) equalsBuilder79, false);
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray45), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertEquals("'" + boolean80 + "' != '" + true + "'", boolean80, true);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
    }

    @Test
    public void test1557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1557");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder0.append((-1), (int) (short) 10);
        java.lang.Object obj7 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray14 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray18 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray19 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder15.append(shortArray18, shortArray19);
        byte[] byteArray21 = new byte[] {};
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder15.append(byteArray21, byteArray26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder8.append(byteArray14, byteArray26);
        boolean boolean30 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj7, (java.lang.Object) byteArray26, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray37 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray41 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray42 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder38.append(shortArray41, shortArray42);
        byte[] byteArray44 = new byte[] {};
        byte[] byteArray49 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder38.append(byteArray44, byteArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder31.append(byteArray37, byteArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder0.append(byteArray26, byteArray37);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray56 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray57 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder53.append(shortArray56, shortArray57);
        byte[] byteArray59 = new byte[] {};
        byte[] byteArray64 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder53.append(byteArray59, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray69 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray70 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder66.append(shortArray69, shortArray70);
        byte[] byteArray72 = new byte[] {};
        byte[] byteArray77 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder66.append(byteArray72, byteArray77);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder0.append(byteArray59, byteArray72);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder0.append(0, (int) '#');
        equalsBuilder0.reset();
        java.lang.Class<?> wildcardClass84 = equalsBuilder0.getClass();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray41), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray56), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(shortArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray69), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray70), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder71);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[]");
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test1558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1558");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        java.lang.Boolean boolean4 = equalsBuilder3.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder3.append((byte) 100, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder10 = equalsBuilder3.append((byte) 10, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder10.append((-1.0d), 1.0d);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + true + "'", boolean4, true);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(equalsBuilder10);
        org.junit.Assert.assertNotNull(equalsBuilder13);
    }

    @Test
    public void test1559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1559");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray6 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray10 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray11 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder7.append(shortArray10, shortArray11);
        byte[] byteArray13 = new byte[] {};
        byte[] byteArray18 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder7.append(byteArray13, byteArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder0.append(byteArray6, byteArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray24 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray25 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = equalsBuilder21.append(shortArray24, shortArray25);
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean35 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder26, (java.lang.Object) '#', strArray34);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder26.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray42 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray43 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder39.append(shortArray42, shortArray43);
        byte[] byteArray45 = new byte[] {};
        byte[] byteArray50 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder39.append(byteArray45, byteArray50);
        char[] charArray56 = new char[] { '#', ' ', '#', '#' };
        char[] charArray59 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder39.append(charArray56, charArray59);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray64 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray65 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder61.append(shortArray64, shortArray65);
        byte[] byteArray67 = new byte[] {};
        byte[] byteArray72 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder61.append(byteArray67, byteArray72);
        char[] charArray78 = new char[] { '#', ' ', '#', '#' };
        char[] charArray81 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder61.append(charArray78, charArray81);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder26.append(charArray59, charArray78);
        char[] charArray88 = new char[] { '#', '#', '4', '4' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder20.append(charArray78, charArray88);
        java.lang.Boolean boolean90 = equalsBuilder89.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder89.append((long) '4', (long) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder96 = equalsBuilder93.append(false, false);
        boolean boolean97 = equalsBuilder93.isEquals();
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray24), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder26);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder60);
        org.junit.Assert.assertNotNull(shortArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray64), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray65), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[]");
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray81), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray81), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray81), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(charArray88);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray88), "##44");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray88), "##44");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray88), "[#, #, 4, 4]");
        org.junit.Assert.assertNotNull(equalsBuilder89);
        org.junit.Assert.assertEquals("'" + boolean90 + "' != '" + false + "'", boolean90, false);
        org.junit.Assert.assertNotNull(equalsBuilder93);
        org.junit.Assert.assertNotNull(equalsBuilder96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test1560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1560");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        char[] charArray17 = new char[] { '#', ' ', '#', '#' };
        char[] charArray20 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(charArray17, charArray20);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder21.append('a', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder24.append((-1), (-1));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder27.append((int) (byte) -1, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder27.append(false, false);
        java.lang.Boolean boolean34 = equalsBuilder33.build();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertEquals("'" + boolean34 + "' != '" + false + "'", boolean34, false);
    }

    @Test
    public void test1561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1561");
        java.lang.Object obj0 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder1 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder4 = equalsBuilder1.append((short) (byte) 10, (short) 0);
        java.lang.Class<?> wildcardClass5 = equalsBuilder1.getClass();
        boolean boolean7 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj0, (java.lang.Object) equalsBuilder1, false);
        org.junit.Assert.assertNotNull(equalsBuilder4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1562");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray6 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray10 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray11 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder7.append(shortArray10, shortArray11);
        byte[] byteArray13 = new byte[] {};
        byte[] byteArray18 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder7.append(byteArray13, byteArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder0.append(byteArray6, byteArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder0.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder22.append(true, false);
        byte[] byteArray27 = new byte[] { (byte) 0 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray31 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray32 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder28.append(shortArray31, shortArray32);
        byte[] byteArray34 = new byte[] {};
        byte[] byteArray39 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder28.append(byteArray34, byteArray39);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder40.append((byte) 10, (byte) 0);
        boolean boolean44 = equalsBuilder43.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray48 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray49 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder45.append(shortArray48, shortArray49);
        byte[] byteArray51 = new byte[] {};
        byte[] byteArray56 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = equalsBuilder45.append(byteArray51, byteArray56);
        byte[] byteArray58 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder59 = equalsBuilder43.append(byteArray56, byteArray58);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder25.append(byteArray27, byteArray58);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder60.append((byte) 100, (byte) 100);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[0]");
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[]");
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(shortArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray48), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray49), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[]");
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder57);
        org.junit.Assert.assertNotNull(equalsBuilder59);
        org.junit.Assert.assertNotNull(equalsBuilder60);
        org.junit.Assert.assertNotNull(equalsBuilder63);
    }

    @Test
    public void test1563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1563");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder12.append((byte) 10, (byte) 0);
        boolean boolean16 = equalsBuilder15.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray20 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray21 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder17.append(shortArray20, shortArray21);
        byte[] byteArray23 = new byte[] {};
        byte[] byteArray28 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder17.append(byteArray23, byteArray28);
        byte[] byteArray30 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder15.append(byteArray28, byteArray30);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append((float) ' ', (float) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder31.append((double) (short) 0, (double) (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder31.append(false, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder40.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder43.append((byte) 1, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = equalsBuilder46.append((byte) -1, (byte) 100);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(equalsBuilder49);
    }

    @Test
    public void test1564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1564");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder4 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder4.append((short) (byte) 10, (short) 0);
        equalsBuilder4.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder9.append((short) (byte) 10, (short) 0);
        long[] longArray18 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray20 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder9.append(longArray18, longArray20);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder22.append((short) (byte) 10, (short) 0);
        long[] longArray31 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray33 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder22.append(longArray31, longArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder4.append(longArray18, longArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder36.append((short) (byte) 10, (short) 0);
        long[] longArray45 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray47 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder36.append(longArray45, longArray47);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray52 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray53 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder49.append(shortArray52, shortArray53);
        java.lang.String[] strArray62 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean63 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder54, (java.lang.Object) '#', strArray62);
        boolean boolean64 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) longArray47, (java.lang.Object) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder3.append(longArray18, longArray47);
        java.lang.Boolean boolean66 = equalsBuilder3.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder3.append((float) (-1), (float) 0L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder3.append((float) 1L, (float) (short) 10);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(longArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray18), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(longArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray31), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray33), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(longArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray45), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray47), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(shortArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray52), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray53), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder54);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertEquals("'" + boolean66 + "' != '" + false + "'", boolean66, false);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(equalsBuilder72);
    }

    @Test
    public void test1565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1565");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray6 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray10 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray11 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder7.append(shortArray10, shortArray11);
        byte[] byteArray13 = new byte[] {};
        byte[] byteArray18 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder7.append(byteArray13, byteArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder0.append(byteArray6, byteArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder0.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray29 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray33 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray34 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder30.append(shortArray33, shortArray34);
        byte[] byteArray36 = new byte[] {};
        byte[] byteArray41 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder30.append(byteArray36, byteArray41);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder23.append(byteArray29, byteArray41);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray50 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray54 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray55 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder51.append(shortArray54, shortArray55);
        byte[] byteArray57 = new byte[] {};
        byte[] byteArray62 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder51.append(byteArray57, byteArray62);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder44.append(byteArray50, byteArray62);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder0.append(byteArray41, byteArray50);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder0.append((int) ' ', (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder0.append((long) (byte) 100, (long) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder0.append(' ', 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder0.append((byte) 0, (byte) 1);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray33), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[]");
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray54), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray55), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[]");
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder71);
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
    }

    @Test
    public void test1566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1566");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        float[] floatArray65 = null;
        float[] floatArray66 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder64.append(floatArray65, floatArray66);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder64.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder70.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder72.append((double) 100, (double) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder75.appendSuper(true);
        equalsBuilder75.reset();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder77);
    }

    @Test
    public void test1567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1567");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder62.append(100, (int) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder62.append((byte) 10, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder68.append(10.0f, (float) (byte) 1);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder71);
    }

    @Test
    public void test1568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1568");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        long[] longArray65 = null;
        long[] longArray72 = new long[] { 1, (byte) -1, (-1), (short) 1, 100L, '#' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder64.append(longArray65, longArray72);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder64.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder75.append((long) (short) -1, (long) (byte) 1);
        long[] longArray79 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder80.append((short) (byte) 10, (short) 0);
        long[] longArray89 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray91 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder80.append(longArray89, longArray91);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder78.append(longArray79, longArray91);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder96 = equalsBuilder78.append((short) (byte) 10, (short) 1);
        boolean boolean97 = equalsBuilder96.isEquals();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(longArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray72), "[1, -1, -1, 1, 100, 35]");
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(longArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray89), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray91), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertNotNull(equalsBuilder93);
        org.junit.Assert.assertNotNull(equalsBuilder96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test1569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1569");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder0.append((long) (byte) 1, (long) (byte) 1);
        long[] longArray14 = new long[] { (short) 0, '4', (-1L), '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder15.append((short) (byte) 10, (short) 0);
        equalsBuilder15.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder20.append((short) (byte) 10, (short) 0);
        long[] longArray29 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray31 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder32 = equalsBuilder20.append(longArray29, longArray31);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder33.append((short) (byte) 10, (short) 0);
        long[] longArray42 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray44 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder33.append(longArray42, longArray44);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder15.append(longArray29, longArray44);
        java.lang.Boolean boolean47 = equalsBuilder46.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder46.append((byte) 1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder46.append((short) (byte) 10, (short) (byte) 0);
        long[] longArray58 = new long[] { 'a', (short) 1, (byte) -1, (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder59 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder59.append((short) (byte) 10, (short) 0);
        equalsBuilder59.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder64.append((short) (byte) 10, (short) 0);
        long[] longArray73 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray75 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder64.append(longArray73, longArray75);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder77.append((short) (byte) 10, (short) 0);
        long[] longArray86 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray88 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder77.append(longArray86, longArray88);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder59.append(longArray73, longArray88);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder53.append(longArray58, longArray88);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder8.append(longArray14, longArray88);
        equalsBuilder8.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder96 = equalsBuilder8.append((float) ' ', (float) 100);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[0, 52, -1, 52, 32]");
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray31), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder32);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertNotNull(longArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray42), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray44), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertEquals("'" + boolean47 + "' != '" + false + "'", boolean47, false);
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertNotNull(longArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray58), "[97, 1, -1, 10]");
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(longArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray73), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray75), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder76);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(longArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray86), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray88), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder89);
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertNotNull(equalsBuilder91);
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertNotNull(equalsBuilder96);
    }

    @Test
    public void test1570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1570");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((double) 100.0f, (double) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder5.append((short) 0, (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder20.append((long) (short) -1, (long) (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = equalsBuilder20.append((float) (byte) 1, 100.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder20.append((byte) 0, (byte) -1);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(equalsBuilder26);
        org.junit.Assert.assertNotNull(equalsBuilder29);
    }

    @Test
    public void test1571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1571");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder0.append((-1), (int) (short) 10);
        java.lang.Object obj7 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray14 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray18 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray19 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder15.append(shortArray18, shortArray19);
        byte[] byteArray21 = new byte[] {};
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder15.append(byteArray21, byteArray26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder8.append(byteArray14, byteArray26);
        boolean boolean30 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj7, (java.lang.Object) byteArray26, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray37 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray41 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray42 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder38.append(shortArray41, shortArray42);
        byte[] byteArray44 = new byte[] {};
        byte[] byteArray49 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder38.append(byteArray44, byteArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder31.append(byteArray37, byteArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder0.append(byteArray26, byteArray37);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray56 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray57 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder53.append(shortArray56, shortArray57);
        byte[] byteArray59 = new byte[] {};
        byte[] byteArray64 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder53.append(byteArray59, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray69 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray70 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder66.append(shortArray69, shortArray70);
        byte[] byteArray72 = new byte[] {};
        byte[] byteArray77 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder66.append(byteArray72, byteArray77);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder0.append(byteArray59, byteArray72);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder0.append(0, (int) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder0.append((byte) -1, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder0.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder87.append((double) (short) 10, (double) (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder87.append((float) (-1), (float) (short) 0);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray41), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray56), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(shortArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray69), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray70), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder71);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[]");
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertNotNull(equalsBuilder93);
    }

    @Test
    public void test1572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1572");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        equalsBuilder62.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder62.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder62.append((short) 10, (short) -1);
        boolean[] booleanArray74 = new boolean[] { true, true, false, true };
        boolean[] booleanArray78 = new boolean[] { true, true, false };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder69.append(booleanArray74, booleanArray78);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder79.append('4', 'a');
        boolean boolean83 = equalsBuilder82.isEquals();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(booleanArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray74), "[true, true, false, true]");
        org.junit.Assert.assertNotNull(booleanArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray78), "[true, true, false]");
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test1573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1573");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder5.append((float) (byte) 100, (float) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder11 = equalsBuilder5.append((byte) -1, (byte) 1);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertNotNull(equalsBuilder11);
    }

    @Test
    public void test1574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1574");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        equalsBuilder74.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder74.append((int) (byte) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder74.append((double) 100L, (double) (-1L));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder81.append((short) (byte) -1, (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder81.append((double) 0.0f, (double) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder87.append(' ', 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder90.append((double) 'a', (double) 1L);
        java.lang.Class<?> wildcardClass94 = equalsBuilder93.getClass();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertNotNull(equalsBuilder93);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1575");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder64.append((long) 100, (long) (short) 0);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(equalsBuilder67);
    }

    @Test
    public void test1576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1576");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        float[] floatArray18 = new float[] { (byte) -1, 10.0f, 'a', ' ', (short) -1 };
        float[] floatArray21 = new float[] { 1.0f, 0L };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder12.append(floatArray18, floatArray21);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder12.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder25.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder25.append((double) (short) 10, (double) 100.0f);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[-1.0, 10.0, 97.0, 32.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray21), "[1.0, 0.0]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder30);
    }

    @Test
    public void test1577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1577");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        long[] longArray65 = null;
        long[] longArray72 = new long[] { 1, (byte) -1, (-1), (short) 1, 100L, '#' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder64.append(longArray65, longArray72);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder64.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder75.append((long) (short) -1, (long) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder75.append((float) (byte) 1, (float) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder81.append((short) (byte) -1, (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder81.append((byte) 10, (byte) 100);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(longArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray72), "[1, -1, -1, 1, 100, 35]");
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder87);
    }

    @Test
    public void test1578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1578");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.append((double) 100L, (double) 10L);
        boolean boolean16 = equalsBuilder0.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(0, (int) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder19.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append((int) (short) -1, (int) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder19.append((byte) 1, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray34 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray38 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray39 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder35.append(shortArray38, shortArray39);
        byte[] byteArray41 = new byte[] {};
        byte[] byteArray46 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder35.append(byteArray41, byteArray46);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder28.append(byteArray34, byteArray46);
        boolean boolean49 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder27, (java.lang.Object) equalsBuilder48);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder27.append((float) '4', (float) (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder52.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = equalsBuilder54.append((-1.0d), (double) (byte) 10);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray39), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[]");
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(equalsBuilder54);
        org.junit.Assert.assertNotNull(equalsBuilder57);
    }

    @Test
    public void test1579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1579");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder64.append((int) 'a', (int) ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder77.appendSuper(false);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder79);
    }

    @Test
    public void test1580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1580");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        equalsBuilder74.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder74.append((int) (byte) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder74.append((double) 100L, (double) (-1L));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder81.append((short) (byte) -1, (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder81.append((byte) 10, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder87.append('a', '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder90.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder95 = equalsBuilder90.append(0.0f, (float) 1L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder97 = equalsBuilder95.appendSuper(true);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertNotNull(equalsBuilder95);
        org.junit.Assert.assertNotNull(equalsBuilder97);
    }

    @Test
    public void test1581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1581");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray12 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray16 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray17 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder13.append(shortArray16, shortArray17);
        byte[] byteArray19 = new byte[] {};
        byte[] byteArray24 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder13.append(byteArray19, byteArray24);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = equalsBuilder6.append(byteArray12, byteArray24);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray31 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray32 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder28.append(shortArray31, shortArray32);
        byte[] byteArray34 = new byte[] {};
        byte[] byteArray39 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder28.append(byteArray34, byteArray39);
        boolean boolean41 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (short) 0, (java.lang.Object) byteArray39);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder0.append(byteArray12, byteArray39);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder0.append(100.0f, 100.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder0.append((byte) 10, (byte) -1);
        equalsBuilder0.reset();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(equalsBuilder26);
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[]");
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(equalsBuilder48);
    }

    @Test
    public void test1582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1582");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        java.lang.Boolean boolean4 = equalsBuilder3.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder3.append((byte) 100, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder10 = equalsBuilder3.append(false, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder3.append('a', ' ');
        boolean boolean14 = equalsBuilder13.isEquals();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + true + "'", boolean4, true);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(equalsBuilder10);
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1583");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray6 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray10 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray11 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder7.append(shortArray10, shortArray11);
        byte[] byteArray13 = new byte[] {};
        byte[] byteArray18 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder7.append(byteArray13, byteArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder0.append(byteArray6, byteArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder0.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder22.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder24.append(' ', 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder27.append((long) (short) 10, (long) (short) 1);
        boolean boolean31 = equalsBuilder30.isEquals();
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test1584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1584");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder5.append((short) (byte) 10, (short) 0);
        long[] longArray14 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray16 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append(longArray14, longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder18.append((short) (byte) 10, (short) 0);
        long[] longArray27 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray29 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(longArray27, longArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append(longArray14, longArray29);
        java.lang.Boolean boolean32 = equalsBuilder31.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder31.append((double) (short) -1, (double) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder35.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder35.append((byte) 1, (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder35.append((byte) 10, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder35.append((int) (short) 10, (int) (short) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder47.append((short) (byte) 10, (short) 0);
        long[] longArray56 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray58 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder59 = equalsBuilder47.append(longArray56, longArray58);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder47.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder47.append((-1), (int) (byte) 1);
        java.lang.Boolean boolean65 = equalsBuilder47.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder47.append((int) '4', (int) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder47.append((short) 1, (short) 10);
        java.lang.Boolean boolean72 = equalsBuilder71.build();
        boolean boolean73 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (short) 10, (java.lang.Object) boolean72);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(longArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray56), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray58), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder59);
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertEquals("'" + boolean65 + "' != '" + false + "'", boolean65, false);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder71);
        org.junit.Assert.assertEquals("'" + boolean72 + "' != '" + false + "'", boolean72, false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test1585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1585");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.append((double) 100L, (double) 10L);
        boolean boolean16 = equalsBuilder0.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(0, (int) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray23 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray24 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder20.append(shortArray23, shortArray24);
        byte[] byteArray26 = new byte[] {};
        byte[] byteArray31 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder32 = equalsBuilder20.append(byteArray26, byteArray31);
        java.lang.String[] strArray36 = new java.lang.String[] { "", "hi!", "" };
        boolean boolean37 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder19, (java.lang.Object) byteArray31, strArray36);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder19.append((float) (byte) 0, (float) (byte) 10);
        java.lang.Boolean boolean41 = equalsBuilder40.build();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray24), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder32);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertEquals("'" + boolean41 + "' != '" + false + "'", boolean41, false);
    }

    @Test
    public void test1586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1586");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        boolean[] booleanArray68 = new boolean[] { true, true, false };
        boolean[] booleanArray69 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder5.append(booleanArray68, booleanArray69);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder70.append((-1.0f), 0.0f);
        java.lang.Class<?> wildcardClass74 = equalsBuilder70.getClass();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray68), "[true, true, false]");
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test1587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1587");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder12.append((byte) 10, (byte) 0);
        boolean boolean16 = equalsBuilder15.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray20 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray21 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder17.append(shortArray20, shortArray21);
        byte[] byteArray23 = new byte[] {};
        byte[] byteArray28 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder17.append(byteArray23, byteArray28);
        byte[] byteArray30 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder15.append(byteArray28, byteArray30);
        boolean boolean32 = equalsBuilder15.isEquals();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test1588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1588");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        equalsBuilder0.reset();
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray9 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray10 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder11 = equalsBuilder6.append(shortArray9, shortArray10);
        byte[] byteArray12 = new byte[] {};
        byte[] byteArray17 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder6.append(byteArray12, byteArray17);
        float[] floatArray24 = new float[] { (byte) -1, 10.0f, 'a', ' ', (short) -1 };
        float[] floatArray27 = new float[] { 1.0f, 0L };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder18.append(floatArray24, floatArray27);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder18.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder32 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder32.append((short) (byte) 10, (short) 0);
        long[] longArray41 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray43 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder32.append(longArray41, longArray43);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder0.append((java.lang.Object) true, (java.lang.Object) longArray43);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder0.append(100, (int) (byte) 100);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder11);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(floatArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray24), "[-1.0, 10.0, 97.0, 32.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray27), "[1.0, 0.0]");
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(longArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray41), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray43), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(equalsBuilder48);
    }

    @Test
    public void test1589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1589");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray6 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray10 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray11 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder7.append(shortArray10, shortArray11);
        byte[] byteArray13 = new byte[] {};
        byte[] byteArray18 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder7.append(byteArray13, byteArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder0.append(byteArray6, byteArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder0.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder22.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder24.append(' ', 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder27.append((short) (byte) 0, (short) (byte) 100);
        boolean boolean31 = equalsBuilder27.isEquals();
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test1590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1590");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        equalsBuilder74.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder74.append((int) (byte) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder74.append((double) 100L, (double) (-1L));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder81.append((short) (byte) -1, (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder84.append('#', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder84.append('4', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder84.append((byte) 0, (byte) 10);
        boolean boolean94 = equalsBuilder93.isEquals();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertNotNull(equalsBuilder93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test1591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1591");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder1 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray4 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray5 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder1.append(shortArray4, shortArray5);
        byte[] byteArray7 = new byte[] {};
        byte[] byteArray12 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder1.append(byteArray7, byteArray12);
        char[] charArray18 = new char[] { '#', ' ', '#', '#' };
        char[] charArray21 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder1.append(charArray18, charArray21);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder22.append('a', '#');
        java.util.Collection<java.lang.String> strCollection26 = null;
        boolean boolean27 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) 0L, (java.lang.Object) equalsBuilder25, strCollection26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder25.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder32 = equalsBuilder29.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder29.append(100.0f, (-1.0f));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder35.append((long) 0, (long) (byte) 100);
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(equalsBuilder32);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(equalsBuilder38);
    }

    @Test
    public void test1592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1592");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        float[] floatArray18 = new float[] { (byte) -1, 10.0f, 'a', ' ', (short) -1 };
        float[] floatArray21 = new float[] { 1.0f, 0L };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder12.append(floatArray18, floatArray21);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder12.append(true, true);
        byte[] byteArray29 = new byte[] { (byte) 100, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray33 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray34 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder30.append(shortArray33, shortArray34);
        byte[] byteArray36 = new byte[] {};
        byte[] byteArray41 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder30.append(byteArray36, byteArray41);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder25.append(byteArray29, byteArray36);
        boolean boolean44 = equalsBuilder25.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder25.append((float) 1L, (float) (-1));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = equalsBuilder25.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder49.append((float) 10L, (float) 'a');
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[-1.0, 10.0, 97.0, 32.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray21), "[1.0, 0.0]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[100, 10, 1]");
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray33), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[]");
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder49);
        org.junit.Assert.assertNotNull(equalsBuilder52);
    }

    @Test
    public void test1593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1593");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder64.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder77.append(10.0d, 0.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder77.append((float) (byte) 10, (float) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder77.append((byte) 0, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder77.append((double) (short) 100, (double) 0.0f);
        boolean boolean90 = equalsBuilder89.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder89.append((byte) 0, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder96 = equalsBuilder93.append(true, true);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertNotNull(equalsBuilder89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(equalsBuilder93);
        org.junit.Assert.assertNotNull(equalsBuilder96);
    }

    @Test
    public void test1594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1594");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        float[] floatArray65 = null;
        float[] floatArray66 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder64.append(floatArray65, floatArray66);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder67.append((double) 0, (double) (byte) 1);
        equalsBuilder70.reset();
        boolean boolean72 = equalsBuilder70.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder70.appendSuper(true);
        java.lang.Boolean boolean75 = equalsBuilder70.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder70.append((byte) 100, (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder70.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder70.append((long) (-1), (long) (short) 0);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertEquals("'" + boolean75 + "' != '" + true + "'", boolean75, true);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
    }

    @Test
    public void test1595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1595");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray9 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray10 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder11 = equalsBuilder6.append(shortArray9, shortArray10);
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean20 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder11, (java.lang.Object) '#', strArray19);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder11.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray27 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray28 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder24.append(shortArray27, shortArray28);
        byte[] byteArray30 = new byte[] {};
        byte[] byteArray35 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append(byteArray30, byteArray35);
        char[] charArray41 = new char[] { '#', ' ', '#', '#' };
        char[] charArray44 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder24.append(charArray41, charArray44);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray49 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray50 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder46.append(shortArray49, shortArray50);
        byte[] byteArray52 = new byte[] {};
        byte[] byteArray57 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder46.append(byteArray52, byteArray57);
        char[] charArray63 = new char[] { '#', ' ', '#', '#' };
        char[] charArray66 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder46.append(charArray63, charArray66);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder11.append(charArray44, charArray63);
        java.lang.String[] strArray69 = null;
        boolean boolean70 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) shortArray4, (java.lang.Object) equalsBuilder11, strArray69);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder11.append((float) (byte) 10, (float) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder73.append((long) ' ', (long) (short) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder76.append('a', ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder76.appendSuper(true);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder11);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray28), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray49), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray50), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder76);
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertNotNull(equalsBuilder81);
    }

    @Test
    public void test1596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1596");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray6 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray10 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray11 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder7.append(shortArray10, shortArray11);
        byte[] byteArray13 = new byte[] {};
        byte[] byteArray18 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder7.append(byteArray13, byteArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder0.append(byteArray6, byteArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder0.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder22.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder24.append(' ', 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder27.append((int) (short) 10, (int) (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder30.append((double) 1.0f, (double) (short) 10);
        java.lang.Class<?> wildcardClass34 = equalsBuilder33.getClass();
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test1597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1597");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder64.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder77.append(10.0d, 0.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder77.append((float) (byte) 10, (float) (byte) 100);
        java.lang.Class<?> wildcardClass84 = equalsBuilder77.getClass();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test1598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1598");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.append((double) 100L, (double) 10L);
        boolean boolean16 = equalsBuilder0.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(0, (int) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder19.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append((int) (short) -1, (int) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder19.append((byte) 1, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray34 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray38 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray39 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder35.append(shortArray38, shortArray39);
        byte[] byteArray41 = new byte[] {};
        byte[] byteArray46 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder35.append(byteArray41, byteArray46);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder28.append(byteArray34, byteArray46);
        boolean boolean49 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder27, (java.lang.Object) equalsBuilder48);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder27.append((float) '4', (float) (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder52.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = equalsBuilder52.append((long) (short) 10, (long) (byte) 0);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray39), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[]");
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(equalsBuilder54);
        org.junit.Assert.assertNotNull(equalsBuilder57);
    }

    @Test
    public void test1599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1599");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder12.append((byte) 10, (byte) 0);
        boolean boolean16 = equalsBuilder15.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray20 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray21 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder17.append(shortArray20, shortArray21);
        byte[] byteArray23 = new byte[] {};
        byte[] byteArray28 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder17.append(byteArray23, byteArray28);
        byte[] byteArray30 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder15.append(byteArray28, byteArray30);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append((float) ' ', (float) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder34.append(false, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder34.append(1.0d, (double) (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder40.append((long) (byte) 0, (long) 10);
        short[] shortArray46 = new short[] { (short) 0, (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder47.append((short) (byte) 10, (short) 0);
        equalsBuilder47.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder52.append((short) (byte) 10, (short) 0);
        long[] longArray61 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray63 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder52.append(longArray61, longArray63);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder65.append((short) (byte) 10, (short) 0);
        long[] longArray74 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray76 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder65.append(longArray74, longArray76);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder47.append(longArray61, longArray76);
        java.lang.Boolean boolean79 = equalsBuilder78.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder78.append((byte) 1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder82.appendSuper(true);
        short[] shortArray85 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray89 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray90 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder86.append(shortArray89, shortArray90);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder84.append(shortArray85, shortArray89);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder43.append(shortArray46, shortArray89);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder96 = equalsBuilder93.append((float) 0L, (float) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder98 = equalsBuilder96.appendSuper(true);
        java.lang.Class<?> wildcardClass99 = equalsBuilder98.getClass();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[0, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(longArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray61), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray63), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(longArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray74), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray76), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertEquals("'" + boolean79 + "' != '" + false + "'", boolean79, false);
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(shortArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray85), "[]");
        org.junit.Assert.assertNotNull(shortArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray89), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray90), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder91);
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertNotNull(equalsBuilder93);
        org.junit.Assert.assertNotNull(equalsBuilder96);
        org.junit.Assert.assertNotNull(equalsBuilder98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1600");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        java.lang.Boolean boolean4 = equalsBuilder3.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder3.append((byte) 0, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = equalsBuilder3.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder3.append(false, false);
        byte[] byteArray13 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder14 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray17 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray18 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder14.append(shortArray17, shortArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray26 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray30 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray31 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder32 = equalsBuilder27.append(shortArray30, shortArray31);
        byte[] byteArray33 = new byte[] {};
        byte[] byteArray38 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder27.append(byteArray33, byteArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder20.append(byteArray26, byteArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray45 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray46 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder42.append(shortArray45, shortArray46);
        byte[] byteArray48 = new byte[] {};
        byte[] byteArray53 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder42.append(byteArray48, byteArray53);
        boolean boolean55 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (short) 0, (java.lang.Object) byteArray53);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder14.append(byteArray26, byteArray53);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = equalsBuilder3.append(byteArray13, byteArray53);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder57.append(10.0f, (float) '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder57.append((float) 10, (float) 1);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + true + "'", boolean4, true);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(equalsBuilder9);
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder32);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[]");
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(shortArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray45), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(equalsBuilder57);
        org.junit.Assert.assertNotNull(equalsBuilder60);
        org.junit.Assert.assertNotNull(equalsBuilder63);
    }

    @Test
    public void test1601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1601");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        equalsBuilder62.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder62.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder62.append((short) 10, (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder69.append((float) (short) 100, 0.0f);
        equalsBuilder72.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder72.append((float) 100L, (float) (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder76.append((short) 1, (short) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder79.append((short) 1, (short) 0);
        java.lang.Class<?> wildcardClass83 = equalsBuilder79.getClass();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(equalsBuilder76);
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test1602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1602");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder64.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder77.append(10.0d, 0.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder77.append((float) (byte) 10, (float) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder83.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder85.append((double) (byte) -1, (double) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder88.append((byte) -1, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder94 = equalsBuilder88.append((double) (byte) 1, (double) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder96 = equalsBuilder94.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder99 = equalsBuilder94.append(false, true);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertNotNull(equalsBuilder91);
        org.junit.Assert.assertNotNull(equalsBuilder94);
        org.junit.Assert.assertNotNull(equalsBuilder96);
        org.junit.Assert.assertNotNull(equalsBuilder99);
    }

    @Test
    public void test1603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1603");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        long[] longArray65 = null;
        long[] longArray72 = new long[] { 1, (byte) -1, (-1), (short) 1, 100L, '#' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder64.append(longArray65, longArray72);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder64.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder64.append(1.0f, (float) (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder64.append((float) (-1), (float) 100L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder81.appendSuper(false);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(longArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray72), "[1, -1, -1, 1, 100, 35]");
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder83);
    }

    @Test
    public void test1604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1604");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        equalsBuilder74.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder74.append((int) (byte) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder74.append((double) 100L, (double) (-1L));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder81.append((double) (-1L), (double) (-1.0f));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder84.append(1.0d, (double) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder84.append(true, false);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(equalsBuilder90);
    }

    @Test
    public void test1605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1605");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder12.append((byte) 10, (byte) 0);
        boolean boolean16 = equalsBuilder15.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray20 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray21 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder17.append(shortArray20, shortArray21);
        byte[] byteArray23 = new byte[] {};
        byte[] byteArray28 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder17.append(byteArray23, byteArray28);
        byte[] byteArray30 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder15.append(byteArray28, byteArray30);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append((float) ' ', (float) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder34.append((int) ' ', (int) (byte) -1);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder37);
    }

    @Test
    public void test1606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1606");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder17.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray23 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray24 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder20.append(shortArray23, shortArray24);
        byte[] byteArray26 = new byte[] {};
        byte[] byteArray31 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder32 = equalsBuilder20.append(byteArray26, byteArray31);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder32.append((byte) 10, (byte) 0);
        boolean boolean36 = equalsBuilder35.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray40 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray41 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder37.append(shortArray40, shortArray41);
        byte[] byteArray43 = new byte[] {};
        byte[] byteArray48 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = equalsBuilder37.append(byteArray43, byteArray48);
        byte[] byteArray50 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder35.append(byteArray48, byteArray50);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder52.append((short) (byte) 10, (short) 0);
        equalsBuilder52.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder57.append((short) (byte) 10, (short) 0);
        long[] longArray66 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray68 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder57.append(longArray66, longArray68);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder70.append((short) (byte) 10, (short) 0);
        long[] longArray79 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray81 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder70.append(longArray79, longArray81);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder52.append(longArray66, longArray81);
        java.lang.Boolean boolean84 = equalsBuilder83.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder83.append((byte) 1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder87.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder89.append('a', '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder17.append((java.lang.Object) equalsBuilder51, (java.lang.Object) equalsBuilder92);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder96 = equalsBuilder17.append(false, true);
        java.lang.Class<?> wildcardClass97 = equalsBuilder17.getClass();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray24), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder32);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(shortArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray40), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray41), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder49);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(equalsBuilder60);
        org.junit.Assert.assertNotNull(longArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray66), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray68), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(longArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray79), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray81), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertEquals("'" + boolean84 + "' != '" + false + "'", boolean84, false);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(equalsBuilder89);
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertNotNull(equalsBuilder93);
        org.junit.Assert.assertNotNull(equalsBuilder96);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1607");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        equalsBuilder62.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder62.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder62.append((short) 10, (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder69.append((float) (short) 100, 0.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder72.append((double) (byte) 10, (double) 1.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder72.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder78.append(false, false);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
    }

    @Test
    public void test1608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1608");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        long[] longArray65 = null;
        long[] longArray72 = new long[] { 1, (byte) -1, (-1), (short) 1, 100L, '#' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder64.append(longArray65, longArray72);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder64.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder64.appendSuper(false);
        boolean boolean78 = equalsBuilder64.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder64.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder64.append(' ', '4');
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(longArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray72), "[1, -1, -1, 1, 100, 35]");
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
    }

    @Test
    public void test1609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1609");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder5.append((short) (byte) 10, (short) 0);
        long[] longArray14 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray16 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append(longArray14, longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder18.append((short) (byte) 10, (short) 0);
        long[] longArray27 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray29 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(longArray27, longArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append(longArray14, longArray29);
        java.lang.Boolean boolean32 = equalsBuilder31.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder31.append((byte) 1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder35.appendSuper(true);
        short[] shortArray38 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray42 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray43 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder39.append(shortArray42, shortArray43);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder37.append(shortArray38, shortArray42);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder37.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder47.append((byte) 10, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray54 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray55 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder51.append(shortArray54, shortArray55);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray63 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray67 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray68 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder64.append(shortArray67, shortArray68);
        byte[] byteArray70 = new byte[] {};
        byte[] byteArray75 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder64.append(byteArray70, byteArray75);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder57.append(byteArray63, byteArray75);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray82 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray83 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder79.append(shortArray82, shortArray83);
        byte[] byteArray85 = new byte[] {};
        byte[] byteArray90 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder79.append(byteArray85, byteArray90);
        boolean boolean92 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (short) 0, (java.lang.Object) byteArray90);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder51.append(byteArray63, byteArray90);
        boolean boolean94 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (byte) 10, (java.lang.Object) byteArray90);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[]");
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(shortArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray54), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray55), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray67), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray68), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[]");
        org.junit.Assert.assertNotNull(byteArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray75), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder76);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(shortArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray82), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray83), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(byteArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray85), "[]");
        org.junit.Assert.assertNotNull(byteArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray90), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(equalsBuilder93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test1610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1610");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder5.append((short) (byte) 10, (short) 0);
        long[] longArray14 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray16 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append(longArray14, longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder18.append((short) (byte) 10, (short) 0);
        long[] longArray27 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray29 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(longArray27, longArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append(longArray14, longArray29);
        java.lang.Boolean boolean32 = equalsBuilder31.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder31.append((byte) 1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder35.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder35.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder35.append((byte) 1, (byte) 0);
        java.lang.Boolean boolean43 = equalsBuilder42.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder42.append((int) '#', (int) (byte) 10);
        boolean boolean47 = equalsBuilder42.isEquals();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertEquals("'" + boolean43 + "' != '" + false + "'", boolean43, false);
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test1611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1611");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder0.append((double) 'a', (double) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder10 = equalsBuilder7.append((short) -1, (short) (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder10.append((double) '#', 0.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = equalsBuilder10.append((short) (byte) 1, (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder10.append(true, true);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(equalsBuilder10);
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertNotNull(equalsBuilder16);
        org.junit.Assert.assertNotNull(equalsBuilder19);
    }

    @Test
    public void test1612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1612");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder0.append((-1), (int) (short) 10);
        java.lang.Object obj7 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray14 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray18 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray19 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder15.append(shortArray18, shortArray19);
        byte[] byteArray21 = new byte[] {};
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder15.append(byteArray21, byteArray26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder8.append(byteArray14, byteArray26);
        boolean boolean30 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj7, (java.lang.Object) byteArray26, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray37 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray41 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray42 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder38.append(shortArray41, shortArray42);
        byte[] byteArray44 = new byte[] {};
        byte[] byteArray49 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder38.append(byteArray44, byteArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder31.append(byteArray37, byteArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder0.append(byteArray26, byteArray37);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray56 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray57 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder53.append(shortArray56, shortArray57);
        byte[] byteArray59 = new byte[] {};
        byte[] byteArray64 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder53.append(byteArray59, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray69 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray70 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder66.append(shortArray69, shortArray70);
        byte[] byteArray72 = new byte[] {};
        byte[] byteArray77 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder66.append(byteArray72, byteArray77);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder0.append(byteArray59, byteArray72);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder0.append(0, (int) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder0.append(false, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder85.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder85.append((short) 0, (short) 1);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray41), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray56), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(shortArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray69), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray70), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder71);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[]");
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertNotNull(equalsBuilder91);
    }

    @Test
    public void test1613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1613");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        char[] charArray17 = new char[] { '#', ' ', '#', '#' };
        char[] charArray20 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(charArray17, charArray20);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder21.append('a', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder21.append((int) (byte) 1, (int) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder27.append((int) (byte) 1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder27.append('a', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder27.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder27.append((float) (short) 10, (float) (-1));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder27.append('a', 'a');
        boolean boolean43 = equalsBuilder42.isEquals();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test1614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1614");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder0.append((-1), (int) (short) 10);
        java.lang.Object obj7 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray14 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray18 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray19 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder15.append(shortArray18, shortArray19);
        byte[] byteArray21 = new byte[] {};
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder15.append(byteArray21, byteArray26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder8.append(byteArray14, byteArray26);
        boolean boolean30 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj7, (java.lang.Object) byteArray26, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray37 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray41 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray42 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder38.append(shortArray41, shortArray42);
        byte[] byteArray44 = new byte[] {};
        byte[] byteArray49 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder38.append(byteArray44, byteArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder31.append(byteArray37, byteArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder0.append(byteArray26, byteArray37);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray56 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray57 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder53.append(shortArray56, shortArray57);
        byte[] byteArray59 = new byte[] {};
        byte[] byteArray64 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder53.append(byteArray59, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray69 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray70 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder66.append(shortArray69, shortArray70);
        byte[] byteArray72 = new byte[] {};
        byte[] byteArray77 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder66.append(byteArray72, byteArray77);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder0.append(byteArray59, byteArray72);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder0.append(0, (int) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder82.append((short) 100, (short) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder85.append((float) 10, (float) (-1));
        equalsBuilder85.reset();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray41), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray56), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(shortArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray69), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray70), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder71);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[]");
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertNotNull(equalsBuilder88);
    }

    @Test
    public void test1615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1615");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        equalsBuilder74.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder74.append((int) (byte) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder74.append((double) 100L, (double) (-1L));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder81.append((short) (byte) -1, (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder84.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder84.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder89.append((byte) -1, (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder95 = equalsBuilder89.append((byte) 100, (byte) 0);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertNotNull(equalsBuilder89);
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertNotNull(equalsBuilder95);
    }

    @Test
    public void test1616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1616");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        equalsBuilder62.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder62.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder62.append((short) 10, (short) -1);
        boolean[] booleanArray74 = new boolean[] { true, true, false, true };
        boolean[] booleanArray78 = new boolean[] { true, true, false };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder69.append(booleanArray74, booleanArray78);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder79.append((double) 1, (double) 0);
        java.lang.Class<?> wildcardClass83 = equalsBuilder79.getClass();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(booleanArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray74), "[true, true, false, true]");
        org.junit.Assert.assertNotNull(booleanArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray78), "[true, true, false]");
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test1617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1617");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder17.append((java.lang.Object) boolean37, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray52 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray56 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray57 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder53.append(shortArray56, shortArray57);
        byte[] byteArray59 = new byte[] {};
        byte[] byteArray64 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder53.append(byteArray59, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder46.append(byteArray52, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder46.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder39.append((java.lang.Object) equalsBuilder45, (java.lang.Object) equalsBuilder46);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder45.append((float) 100L, (float) 1);
        java.lang.Boolean boolean73 = equalsBuilder72.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder72.append('4', 'a');
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray56), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertEquals("'" + boolean73 + "' != '" + false + "'", boolean73, false);
        org.junit.Assert.assertNotNull(equalsBuilder76);
    }

    @Test
    public void test1618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1618");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder5.append((short) (byte) 10, (short) 0);
        long[] longArray14 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray16 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append(longArray14, longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder18.append((short) (byte) 10, (short) 0);
        long[] longArray27 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray29 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(longArray27, longArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append(longArray14, longArray29);
        java.lang.Boolean boolean32 = equalsBuilder31.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder31.append((double) (short) -1, (double) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder35.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder37.append((double) 0, (double) 1.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder40.append(10L, (long) 100);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(equalsBuilder43);
    }

    @Test
    public void test1619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1619");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder0.append((double) 'a', (double) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = equalsBuilder0.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append((-1), (int) (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.append((int) (byte) 1, 0);
        java.lang.Boolean boolean16 = equalsBuilder0.build();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(equalsBuilder9);
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertEquals("'" + boolean16 + "' != '" + false + "'", boolean16, false);
    }

    @Test
    public void test1620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1620");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder12.append((byte) 10, (byte) 0);
        equalsBuilder12.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder12.append('#', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder12.append((long) (-1), (long) (byte) -1);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder22);
    }

    @Test
    public void test1621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1621");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder64.append((byte) -1, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder64.append((double) 10.0f, 100.0d);
        boolean boolean81 = equalsBuilder64.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder64.append(0.0d, (double) (-1.0f));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder64.append((double) (-1L), (double) (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder87.append((byte) -1, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder90.append((byte) -1, (byte) 10);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertNotNull(equalsBuilder93);
    }

    @Test
    public void test1622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1622");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((double) 100.0f, (double) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder17.append((short) 100, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder20.append('4', '#');
        boolean boolean24 = equalsBuilder23.isEquals();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test1623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1623");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        char[] charArray17 = new char[] { '#', ' ', '#', '#' };
        char[] charArray20 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(charArray17, charArray20);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder21.append((long) (byte) 1, (long) 1);
        equalsBuilder24.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder24.append((long) '4', (long) (short) -1);
        java.lang.Class<?> wildcardClass29 = equalsBuilder28.getClass();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test1624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1624");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        char[] charArray17 = new char[] { '#', ' ', '#', '#' };
        char[] charArray20 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(charArray17, charArray20);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder21.append('a', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder21.append((int) (byte) 1, (int) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder27.append((int) (byte) 1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder30.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder33.append((byte) 100, (byte) 100);
        boolean boolean37 = equalsBuilder33.isEquals();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test1625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1625");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        long[] longArray9 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray11 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(longArray9, longArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder14 = equalsBuilder0.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder0.append((-1), (int) (byte) 1);
        java.lang.Boolean boolean18 = equalsBuilder0.build();
        boolean boolean19 = equalsBuilder0.isEquals();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder14);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertEquals("'" + boolean18 + "' != '" + false + "'", boolean18, false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test1626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1626");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        long[] longArray65 = null;
        long[] longArray72 = new long[] { 1, (byte) -1, (-1), (short) 1, 100L, '#' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder64.append(longArray65, longArray72);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder64.appendSuper(true);
        double[] doubleArray80 = new double[] { (short) 0, 0.0d, (byte) 10, (byte) 0 };
        double[] doubleArray81 = new double[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder64.append(doubleArray80, doubleArray81);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder82.append((short) 0, (short) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder85.append((short) 10, (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder88.append((int) (byte) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder94 = equalsBuilder91.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder97 = equalsBuilder94.append(true, false);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(longArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray72), "[1, -1, -1, 1, 100, 35]");
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[0.0, 0.0, 10.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertNotNull(equalsBuilder91);
        org.junit.Assert.assertNotNull(equalsBuilder94);
        org.junit.Assert.assertNotNull(equalsBuilder97);
    }

    @Test
    public void test1627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1627");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder64.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder64.append((long) 'a', (long) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder64.append((double) (-1.0f), (double) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder64.append((double) 10L, (-1.0d));
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder86);
    }

    @Test
    public void test1628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1628");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        equalsBuilder74.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder74.append((int) (byte) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder74.append((double) 100L, (double) (-1L));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder81.append((byte) 10, (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder84.append((double) 100, (double) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder84.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder89.append('4', 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder94 = equalsBuilder89.appendSuper(false);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(equalsBuilder89);
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertNotNull(equalsBuilder94);
    }

    @Test
    public void test1629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1629");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        char[] charArray17 = new char[] { '#', ' ', '#', '#' };
        char[] charArray20 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(charArray17, charArray20);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder21.append('a', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder21.append((int) (byte) 1, (int) (byte) 0);
        short[] shortArray28 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray32 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray33 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder29.append(shortArray32, shortArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder27.append(shortArray28, shortArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder35.append((double) (-1), (double) 10.0f);
        java.lang.Boolean boolean39 = equalsBuilder38.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder38.append((float) (short) 0, (float) 10L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder38.append(0L, (long) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder38.append((long) 'a', (long) (short) 10);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray33), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertEquals("'" + boolean39 + "' != '" + false + "'", boolean39, false);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(equalsBuilder48);
    }

    @Test
    public void test1630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1630");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder4 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder4.append((short) (byte) 10, (short) 0);
        equalsBuilder4.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder9.append((short) (byte) 10, (short) 0);
        long[] longArray18 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray20 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder9.append(longArray18, longArray20);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder22.append((short) (byte) 10, (short) 0);
        long[] longArray31 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray33 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder22.append(longArray31, longArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder4.append(longArray18, longArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder36.append((short) (byte) 10, (short) 0);
        long[] longArray45 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray47 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder36.append(longArray45, longArray47);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray52 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray53 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder49.append(shortArray52, shortArray53);
        java.lang.String[] strArray62 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean63 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder54, (java.lang.Object) '#', strArray62);
        boolean boolean64 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) longArray47, (java.lang.Object) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder3.append(longArray18, longArray47);
        java.lang.Boolean boolean66 = equalsBuilder3.build();
        java.lang.Boolean boolean67 = equalsBuilder3.build();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(longArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray18), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(longArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray31), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray33), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(longArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray45), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray47), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(shortArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray52), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray53), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder54);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertEquals("'" + boolean66 + "' != '" + false + "'", boolean66, false);
        org.junit.Assert.assertEquals("'" + boolean67 + "' != '" + false + "'", boolean67, false);
    }

    @Test
    public void test1631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1631");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder5.append((short) (byte) 10, (short) 0);
        long[] longArray14 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray16 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append(longArray14, longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder18.append((short) (byte) 10, (short) 0);
        long[] longArray27 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray29 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(longArray27, longArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append(longArray14, longArray29);
        java.lang.Boolean boolean32 = equalsBuilder31.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder31.append((double) (short) -1, (double) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder35.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder37.append((double) 0, (double) 1.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder41.append((short) (byte) 10, (short) 0);
        long[] longArray50 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray52 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder41.append(longArray50, longArray52);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder53.append((long) (byte) 1, 0L);
        boolean boolean57 = equalsBuilder56.isEquals();
        equalsBuilder56.reset();
        boolean boolean59 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) 1.0f, (java.lang.Object) equalsBuilder56);
        boolean boolean60 = equalsBuilder56.isEquals();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(longArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray50), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray52), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
    }

    @Test
    public void test1632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1632");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        char[] charArray17 = new char[] { '#', ' ', '#', '#' };
        char[] charArray20 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(charArray17, charArray20);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray25 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray26 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder22.append(shortArray25, shortArray26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray34 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray38 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray39 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder35.append(shortArray38, shortArray39);
        byte[] byteArray41 = new byte[] {};
        byte[] byteArray46 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder35.append(byteArray41, byteArray46);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder28.append(byteArray34, byteArray46);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray53 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray54 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder50.append(shortArray53, shortArray54);
        byte[] byteArray56 = new byte[] {};
        byte[] byteArray61 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder50.append(byteArray56, byteArray61);
        boolean boolean63 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (short) 0, (java.lang.Object) byteArray61);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder22.append(byteArray34, byteArray61);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder22.append(100.0f, 100.0f);
        boolean boolean69 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder0, (java.lang.Object) equalsBuilder67, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder0.append((int) (short) 10, (int) ' ');
        java.lang.Boolean boolean73 = equalsBuilder0.build();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray39), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[]");
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray53), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray54), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[]");
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertEquals("'" + boolean73 + "' != '" + false + "'", boolean73, false);
    }

    @Test
    public void test1633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1633");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder0.append((-1), (int) (short) 10);
        java.lang.Object obj7 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray14 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray18 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray19 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder15.append(shortArray18, shortArray19);
        byte[] byteArray21 = new byte[] {};
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder15.append(byteArray21, byteArray26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder8.append(byteArray14, byteArray26);
        boolean boolean30 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj7, (java.lang.Object) byteArray26, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray37 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray41 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray42 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder38.append(shortArray41, shortArray42);
        byte[] byteArray44 = new byte[] {};
        byte[] byteArray49 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder38.append(byteArray44, byteArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder31.append(byteArray37, byteArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder0.append(byteArray26, byteArray37);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray56 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray57 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder53.append(shortArray56, shortArray57);
        byte[] byteArray59 = new byte[] {};
        byte[] byteArray64 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder53.append(byteArray59, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray69 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray70 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder66.append(shortArray69, shortArray70);
        byte[] byteArray72 = new byte[] {};
        byte[] byteArray77 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder66.append(byteArray72, byteArray77);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder0.append(byteArray59, byteArray72);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder0.append(0, (int) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder0.append((byte) -1, (byte) -1);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder0.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder0.append((double) 10L, (double) 1.0f);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray41), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray56), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(shortArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray69), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray70), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder71);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[]");
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertNotNull(equalsBuilder91);
    }

    @Test
    public void test1634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1634");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        java.lang.Boolean boolean4 = equalsBuilder3.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder3.append((byte) 100, (byte) 100);
        equalsBuilder3.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder11 = equalsBuilder3.append(1.0f, (float) ' ');
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + true + "'", boolean4, true);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(equalsBuilder11);
    }

    @Test
    public void test1635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1635");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.append((double) 100L, (double) 10L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray19 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray20 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder16.append(shortArray19, shortArray20);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean30 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder21, (java.lang.Object) '#', strArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder21.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray37 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray38 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder34.append(shortArray37, shortArray38);
        byte[] byteArray40 = new byte[] {};
        byte[] byteArray45 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder34.append(byteArray40, byteArray45);
        char[] charArray51 = new char[] { '#', ' ', '#', '#' };
        char[] charArray54 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder34.append(charArray51, charArray54);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray59 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray60 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder56.append(shortArray59, shortArray60);
        byte[] byteArray62 = new byte[] {};
        byte[] byteArray67 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder56.append(byteArray62, byteArray67);
        char[] charArray73 = new char[] { '#', ' ', '#', '#' };
        char[] charArray76 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder56.append(charArray73, charArray76);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder21.append(charArray54, charArray73);
        java.lang.Object obj79 = null;
        boolean boolean80 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) charArray54, obj79);
        java.lang.String[] strArray81 = new java.lang.String[] {};
        boolean boolean82 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder15, (java.lang.Object) charArray54, strArray81);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder15.appendSuper(false);
        float[] floatArray85 = new float[] {};
        float[] floatArray87 = new float[] { (byte) -1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder15.append(floatArray85, floatArray87);
        boolean[] booleanArray89 = new boolean[] {};
        boolean[] booleanArray90 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder88.append(booleanArray89, booleanArray90);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder94 = equalsBuilder91.append((long) 'a', (long) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder97 = equalsBuilder91.append((float) (-1), 10.0f);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[]");
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(shortArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray59), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray60), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[]");
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(floatArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray85), "[]");
        org.junit.Assert.assertNotNull(floatArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray87), "[-1.0]");
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertNotNull(booleanArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray89), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder91);
        org.junit.Assert.assertNotNull(equalsBuilder94);
        org.junit.Assert.assertNotNull(equalsBuilder97);
    }

    @Test
    public void test1636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1636");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        float[] floatArray18 = new float[] { (byte) -1, 10.0f, 'a', ' ', (short) -1 };
        float[] floatArray21 = new float[] { 1.0f, 0L };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder12.append(floatArray18, floatArray21);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder12.append(true, true);
        byte[] byteArray29 = new byte[] { (byte) 100, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray33 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray34 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder30.append(shortArray33, shortArray34);
        byte[] byteArray36 = new byte[] {};
        byte[] byteArray41 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder30.append(byteArray36, byteArray41);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder25.append(byteArray29, byteArray36);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder43.append((byte) 0, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = equalsBuilder43.append((int) (byte) 0, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder43.append(0L, (long) '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder52.append((int) (short) 0, (int) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder52.append('4', 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder58.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder61.append((double) (-1L), 0.0d);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[-1.0, 10.0, 97.0, 32.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray21), "[1.0, 0.0]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[100, 10, 1]");
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray33), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[]");
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(equalsBuilder49);
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder64);
    }

    @Test
    public void test1637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1637");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder64.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder64.append((long) 'a', (long) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder80.append(100.0d, (double) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder80.append((long) '#', 1L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder86.appendSuper(false);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertNotNull(equalsBuilder88);
    }

    @Test
    public void test1638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1638");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray6 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray10 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray11 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder7.append(shortArray10, shortArray11);
        byte[] byteArray13 = new byte[] {};
        byte[] byteArray18 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder7.append(byteArray13, byteArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder0.append(byteArray6, byteArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder0.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder22.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder24.append(' ', 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder27.append((int) (short) 10, (int) (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray34 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray35 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder31.append(shortArray34, shortArray35);
        java.lang.String[] strArray44 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean45 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder36, (java.lang.Object) '#', strArray44);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder36.append((int) (short) -1, (int) (short) 0);
        boolean boolean49 = equalsBuilder48.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray53 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray54 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder50.append(shortArray53, shortArray54);
        java.lang.String[] strArray63 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean64 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder55, (java.lang.Object) '#', strArray63);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder55.append((int) (short) -1, (int) (short) 0);
        boolean boolean68 = equalsBuilder67.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder48.append((java.lang.Object) boolean68, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder48.append((int) (short) 100, (int) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder48.append((long) 1, (long) 100);
        boolean boolean77 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder27, (java.lang.Object) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder27.append(true, true);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray35), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray53), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray54), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(equalsBuilder80);
    }

    @Test
    public void test1639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1639");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        equalsBuilder74.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder74.append((int) (byte) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder74.append((double) 100L, (double) (-1L));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder81.append((short) (byte) -1, (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder81.append((byte) 10, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder87.append('a', '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder90.append((double) (-1L), (double) (-1L));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder96 = equalsBuilder90.append((long) (short) 100, (-1L));
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertNotNull(equalsBuilder93);
        org.junit.Assert.assertNotNull(equalsBuilder96);
    }

    @Test
    public void test1640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1640");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((double) 100.0f, (double) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder5.append((short) 0, (short) -1);
        boolean boolean21 = equalsBuilder5.isEquals();
        equalsBuilder5.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray26 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray27 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder23.append(shortArray26, shortArray27);
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean37 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder28, (java.lang.Object) '#', strArray36);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder28.append((int) (short) -1, (int) (short) 0);
        java.lang.Boolean boolean41 = equalsBuilder28.build();
        java.lang.Boolean boolean42 = equalsBuilder28.build();
        boolean boolean43 = equalsBuilder28.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder28.append((long) (short) 1, (long) ' ');
        boolean boolean48 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) equalsBuilder46, true);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertEquals("'" + boolean41 + "' != '" + false + "'", boolean41, false);
        org.junit.Assert.assertEquals("'" + boolean42 + "' != '" + false + "'", boolean42, false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test1641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1641");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((double) 100.0f, (double) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder5.append((short) 0, (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder20.append((byte) -1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = equalsBuilder23.append(' ', '4');
        java.lang.Object obj27 = null;
        boolean boolean28 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder26, obj27);
        java.lang.Boolean boolean29 = equalsBuilder26.build();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(equalsBuilder26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + boolean29 + "' != '" + false + "'", boolean29, false);
    }

    @Test
    public void test1642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1642");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        equalsBuilder74.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder74.append((int) (byte) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder74.append((double) 100L, (double) (-1L));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder81.append((short) (byte) -1, (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder84.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder84.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder84.append((long) (short) 0, (long) (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder95 = equalsBuilder84.append((int) '4', (int) (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder98 = equalsBuilder95.append((long) 'a', 1L);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertNotNull(equalsBuilder89);
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertNotNull(equalsBuilder95);
        org.junit.Assert.assertNotNull(equalsBuilder98);
    }

    @Test
    public void test1643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1643");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.append((double) 100L, (double) 10L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray19 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray20 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder16.append(shortArray19, shortArray20);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean30 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder21, (java.lang.Object) '#', strArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder21.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray37 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray38 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder34.append(shortArray37, shortArray38);
        byte[] byteArray40 = new byte[] {};
        byte[] byteArray45 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder34.append(byteArray40, byteArray45);
        char[] charArray51 = new char[] { '#', ' ', '#', '#' };
        char[] charArray54 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder34.append(charArray51, charArray54);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray59 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray60 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder56.append(shortArray59, shortArray60);
        byte[] byteArray62 = new byte[] {};
        byte[] byteArray67 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder56.append(byteArray62, byteArray67);
        char[] charArray73 = new char[] { '#', ' ', '#', '#' };
        char[] charArray76 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder56.append(charArray73, charArray76);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder21.append(charArray54, charArray73);
        java.lang.Object obj79 = null;
        boolean boolean80 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) charArray54, obj79);
        java.lang.String[] strArray81 = new java.lang.String[] {};
        boolean boolean82 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder15, (java.lang.Object) charArray54, strArray81);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder15.appendSuper(false);
        float[] floatArray85 = new float[] {};
        float[] floatArray87 = new float[] { (byte) -1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder15.append(floatArray85, floatArray87);
        boolean[] booleanArray89 = new boolean[] {};
        boolean[] booleanArray90 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder88.append(booleanArray89, booleanArray90);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder91.appendSuper(false);
        equalsBuilder93.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder97 = equalsBuilder93.append((int) (short) 10, 10);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[]");
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(shortArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray59), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray60), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[]");
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(floatArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray85), "[]");
        org.junit.Assert.assertNotNull(floatArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray87), "[-1.0]");
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertNotNull(booleanArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray89), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder91);
        org.junit.Assert.assertNotNull(equalsBuilder93);
        org.junit.Assert.assertNotNull(equalsBuilder97);
    }

    @Test
    public void test1644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1644");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray9 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray10 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder11 = equalsBuilder6.append(shortArray9, shortArray10);
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean20 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder11, (java.lang.Object) '#', strArray19);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder11.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray27 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray28 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder24.append(shortArray27, shortArray28);
        byte[] byteArray30 = new byte[] {};
        byte[] byteArray35 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append(byteArray30, byteArray35);
        char[] charArray41 = new char[] { '#', ' ', '#', '#' };
        char[] charArray44 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder24.append(charArray41, charArray44);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray49 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray50 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder46.append(shortArray49, shortArray50);
        byte[] byteArray52 = new byte[] {};
        byte[] byteArray57 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder46.append(byteArray52, byteArray57);
        char[] charArray63 = new char[] { '#', ' ', '#', '#' };
        char[] charArray66 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder46.append(charArray63, charArray66);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder11.append(charArray44, charArray63);
        java.lang.String[] strArray69 = null;
        boolean boolean70 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) shortArray4, (java.lang.Object) equalsBuilder11, strArray69);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder11.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder11.append((byte) 10, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder76.append((double) 0L, 0.0d);
        equalsBuilder79.reset();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder11);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray28), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray49), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray50), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder76);
        org.junit.Assert.assertNotNull(equalsBuilder79);
    }

    @Test
    public void test1645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1645");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder0.append((-1), (int) (short) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = equalsBuilder6.append((-1L), 100L);
        long[] longArray16 = new long[] { (byte) 10, (short) 1, (short) -1, '4', (-1L), (short) 10 };
        long[] longArray17 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder9.append(longArray16, longArray17);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray23 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray24 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder20.append(shortArray23, shortArray24);
        byte[] byteArray26 = new byte[] {};
        byte[] byteArray31 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder32 = equalsBuilder20.append(byteArray26, byteArray31);
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (short) 0, (java.lang.Object) byteArray31);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray37 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray38 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder34.append(shortArray37, shortArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray46 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray50 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray51 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder47.append(shortArray50, shortArray51);
        byte[] byteArray53 = new byte[] {};
        byte[] byteArray58 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder59 = equalsBuilder47.append(byteArray53, byteArray58);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder40.append(byteArray46, byteArray58);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray65 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray66 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder62.append(shortArray65, shortArray66);
        byte[] byteArray68 = new byte[] {};
        byte[] byteArray73 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder62.append(byteArray68, byteArray73);
        boolean boolean75 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (short) 0, (java.lang.Object) byteArray73);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder34.append(byteArray46, byteArray73);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder9.append(byteArray31, byteArray73);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(equalsBuilder9);
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[10, 1, -1, 52, -1, 10]");
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray24), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray50), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray51), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[]");
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder59);
        org.junit.Assert.assertNotNull(equalsBuilder60);
        org.junit.Assert.assertNotNull(shortArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray65), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray66), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray68), "[]");
        org.junit.Assert.assertNotNull(byteArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray73), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(equalsBuilder76);
        org.junit.Assert.assertNotNull(equalsBuilder77);
    }

    @Test
    public void test1646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1646");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder0.append((float) 10L, (float) (-1));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder10 = equalsBuilder7.append((short) (byte) 10, (short) 0);
        long[] longArray16 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray18 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder7.append(longArray16, longArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder20.append((short) (byte) 10, (short) 0);
        long[] longArray29 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray31 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder32 = equalsBuilder20.append(longArray29, longArray31);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder6.append(longArray16, longArray31);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder33.append(false, false);
        java.lang.Boolean boolean37 = equalsBuilder33.build();
        java.lang.Boolean boolean38 = equalsBuilder33.build();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(equalsBuilder10);
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray18), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray31), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder32);
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertEquals("'" + boolean37 + "' != '" + false + "'", boolean37, false);
        org.junit.Assert.assertEquals("'" + boolean38 + "' != '" + false + "'", boolean38, false);
    }

    @Test
    public void test1647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1647");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.append((double) 100L, (double) 10L);
        boolean boolean16 = equalsBuilder0.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(0, (int) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder19.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append((int) (short) -1, (int) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder19.append((byte) 1, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder19.append((float) 0L, 0.0f);
        equalsBuilder30.reset();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder30);
    }

    @Test
    public void test1648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1648");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder0.append((-1), (int) (short) 10);
        java.lang.Object obj7 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray14 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray18 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray19 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder15.append(shortArray18, shortArray19);
        byte[] byteArray21 = new byte[] {};
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder15.append(byteArray21, byteArray26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder8.append(byteArray14, byteArray26);
        boolean boolean30 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj7, (java.lang.Object) byteArray26, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray37 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray41 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray42 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder38.append(shortArray41, shortArray42);
        byte[] byteArray44 = new byte[] {};
        byte[] byteArray49 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder38.append(byteArray44, byteArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder31.append(byteArray37, byteArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder0.append(byteArray26, byteArray37);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder52.append((byte) -1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder59 = equalsBuilder56.append((short) (byte) 10, (short) 0);
        long[] longArray65 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray67 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder56.append(longArray65, longArray67);
        long[] longArray71 = new long[] { (short) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder52.append(longArray67, longArray71);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder52.append('a', 'a');
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray41), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(equalsBuilder59);
        org.junit.Assert.assertNotNull(longArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray65), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray67), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(longArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray71), "[10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(equalsBuilder75);
    }

    @Test
    public void test1649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1649");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        equalsBuilder62.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder62.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder62.append((short) 10, (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder62.append((float) ' ', 1.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder62.append(0, (int) '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder75.append((double) (short) 100, (double) '#');
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder78);
    }

    @Test
    public void test1650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1650");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder3.append((long) (byte) 100, 1L);
        boolean boolean7 = equalsBuilder6.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder10 = equalsBuilder6.append((double) (byte) 100, (double) 100);
        java.lang.Boolean boolean11 = equalsBuilder10.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder10.appendSuper(false);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(equalsBuilder10);
        org.junit.Assert.assertEquals("'" + boolean11 + "' != '" + false + "'", boolean11, false);
        org.junit.Assert.assertNotNull(equalsBuilder13);
    }

    @Test
    public void test1651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1651");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder0.append((-1), (int) (short) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = equalsBuilder6.append((-1L), 100L);
        equalsBuilder6.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder6.append(1, (int) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = equalsBuilder13.append((double) 0L, (double) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder16.append((long) 0, (long) 0);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(equalsBuilder9);
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertNotNull(equalsBuilder16);
        org.junit.Assert.assertNotNull(equalsBuilder19);
    }

    @Test
    public void test1652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1652");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        long[] longArray65 = null;
        long[] longArray72 = new long[] { 1, (byte) -1, (-1), (short) 1, 100L, '#' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder64.append(longArray65, longArray72);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder64.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder64.append(1.0f, (float) (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder64.append(0, (int) (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder81.append((int) (byte) 10, (int) (byte) -1);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(longArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray72), "[1, -1, -1, 1, 100, 35]");
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
    }

    @Test
    public void test1653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1653");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder12.append('4', ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder15.append('a', '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray40 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray41 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder37.append(shortArray40, shortArray41);
        byte[] byteArray43 = new byte[] {};
        byte[] byteArray48 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = equalsBuilder37.append(byteArray43, byteArray48);
        char[] charArray54 = new char[] { '#', ' ', '#', '#' };
        char[] charArray57 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder37.append(charArray54, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder59 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray62 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray63 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder59.append(shortArray62, shortArray63);
        byte[] byteArray65 = new byte[] {};
        byte[] byteArray70 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder59.append(byteArray65, byteArray70);
        char[] charArray76 = new char[] { '#', ' ', '#', '#' };
        char[] charArray79 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder59.append(charArray76, charArray79);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder24.append(charArray57, charArray76);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder24.appendSuper(false);
        float[] floatArray84 = null;
        float[] floatArray85 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder83.append(floatArray84, floatArray85);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder83.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder83.append((float) 100L, (float) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder95 = equalsBuilder92.append(true, false);
        boolean boolean97 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder18, (java.lang.Object) equalsBuilder92, true);
        java.lang.Boolean boolean98 = equalsBuilder92.build();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertNotNull(shortArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray40), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray41), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder49);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(shortArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray62), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray63), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[]");
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder71);
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray79), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray79), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray79), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertNotNull(equalsBuilder89);
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertNotNull(equalsBuilder95);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
        org.junit.Assert.assertEquals("'" + boolean98 + "' != '" + false + "'", boolean98, false);
    }

    @Test
    public void test1654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1654");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder62.append(100, (int) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder62.append((short) 10, (short) -1);
        equalsBuilder62.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder62.append('4', ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder62.append(0, (int) '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder75.append((long) (-1), 1L);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder78);
    }

    @Test
    public void test1655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1655");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray6 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray10 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray11 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder7.append(shortArray10, shortArray11);
        byte[] byteArray13 = new byte[] {};
        byte[] byteArray18 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder7.append(byteArray13, byteArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder0.append(byteArray6, byteArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder0.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder22.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder24.append(' ', 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder27.append((long) (short) 10, (long) (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder27.append((int) (byte) 0, (int) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray37 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray38 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder34.append(shortArray37, shortArray38);
        byte[] byteArray40 = new byte[] {};
        byte[] byteArray45 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder34.append(byteArray40, byteArray45);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = equalsBuilder46.append((byte) 10, (byte) 0);
        boolean boolean50 = equalsBuilder49.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray54 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray55 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder51.append(shortArray54, shortArray55);
        byte[] byteArray57 = new byte[] {};
        byte[] byteArray62 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder51.append(byteArray57, byteArray62);
        byte[] byteArray64 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder49.append(byteArray62, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder65.append((float) ' ', (float) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder65.append((double) (short) 0, (double) (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder65.append(false, true);
        java.lang.Object obj75 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray79 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray80 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder76.append(shortArray79, shortArray80);
        byte[] byteArray82 = new byte[] {};
        byte[] byteArray87 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder76.append(byteArray82, byteArray87);
        java.lang.String[] strArray90 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList91 = new java.util.ArrayList<java.lang.String>();
        boolean boolean92 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList91, strArray90);
        boolean boolean93 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj75, (java.lang.Object) equalsBuilder88, (java.util.Collection<java.lang.String>) strList91);
        boolean boolean94 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder33, (java.lang.Object) false, (java.util.Collection<java.lang.String>) strList91);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder97 = equalsBuilder33.append((long) (short) 10, (long) (short) 100);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[]");
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(equalsBuilder49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(shortArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray54), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray55), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[]");
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder71);
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(shortArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray79), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray80), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[]");
        org.junit.Assert.assertNotNull(byteArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray87), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertNotNull(strArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(equalsBuilder97);
    }

    @Test
    public void test1656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1656");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder4 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray7 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray8 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = equalsBuilder4.append(shortArray7, shortArray8);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean18 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder9, (java.lang.Object) '#', strArray17);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder9.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray25 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray26 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder22.append(shortArray25, shortArray26);
        byte[] byteArray28 = new byte[] {};
        byte[] byteArray33 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder22.append(byteArray28, byteArray33);
        char[] charArray39 = new char[] { '#', ' ', '#', '#' };
        char[] charArray42 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder22.append(charArray39, charArray42);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray47 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray48 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = equalsBuilder44.append(shortArray47, shortArray48);
        byte[] byteArray50 = new byte[] {};
        byte[] byteArray55 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder44.append(byteArray50, byteArray55);
        char[] charArray61 = new char[] { '#', ' ', '#', '#' };
        char[] charArray64 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder44.append(charArray61, charArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder9.append(charArray42, charArray61);
        java.lang.Object obj67 = null;
        boolean boolean68 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) charArray42, obj67);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray72 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray73 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder69.append(shortArray72, shortArray73);
        byte[] byteArray75 = new byte[] {};
        byte[] byteArray80 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder69.append(byteArray75, byteArray80);
        char[] charArray86 = new char[] { '#', ' ', '#', '#' };
        char[] charArray89 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder69.append(charArray86, charArray89);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder3.append(charArray42, charArray86);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder94 = equalsBuilder3.append((double) (short) 0, (double) '4');
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray7), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder9);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[]");
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(shortArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray47), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray48), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder49);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[]");
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(shortArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray72), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray73), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(byteArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray75), "[]");
        org.junit.Assert.assertNotNull(byteArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray80), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(charArray86);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray86), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray86), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray86), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray89);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray89), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray89), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray89), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertNotNull(equalsBuilder91);
        org.junit.Assert.assertNotNull(equalsBuilder94);
    }

    @Test
    public void test1657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1657");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder17.append((java.lang.Object) boolean37, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray52 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray56 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray57 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder53.append(shortArray56, shortArray57);
        byte[] byteArray59 = new byte[] {};
        byte[] byteArray64 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder53.append(byteArray59, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder46.append(byteArray52, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder46.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder39.append((java.lang.Object) equalsBuilder45, (java.lang.Object) equalsBuilder46);
        long[] longArray73 = new long[] { (byte) 100, ' ', (short) 10 };
        long[] longArray79 = new long[] { 'a', 0L, (short) 10, (byte) 0, (byte) -1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder46.append(longArray73, longArray79);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder80.append((short) 0, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder80.append(' ', ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder86.append(false, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder86.append((long) 1, (long) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder95 = equalsBuilder92.append((float) 100L, (float) (byte) 1);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray56), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(longArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray73), "[100, 32, 10]");
        org.junit.Assert.assertNotNull(longArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray79), "[97, 0, 10, 0, -1]");
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertNotNull(equalsBuilder89);
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertNotNull(equalsBuilder95);
    }

    @Test
    public void test1658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1658");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        equalsBuilder62.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder62.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder62.append((short) 10, (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder69.append((float) (short) 100, 0.0f);
        equalsBuilder72.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder72.append((float) 100L, (float) (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder76.append((short) 1, (short) (byte) 100);
        java.lang.Boolean boolean80 = equalsBuilder76.build();
        float[] floatArray81 = new float[] {};
        float[] floatArray82 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder76.append(floatArray81, floatArray82);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(equalsBuilder76);
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertEquals("'" + boolean80 + "' != '" + false + "'", boolean80, false);
        org.junit.Assert.assertNotNull(floatArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray81), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder83);
    }

    @Test
    public void test1659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1659");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder12.append('4', ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder12.append((short) 100, (short) (byte) 1);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(equalsBuilder18);
    }

    @Test
    public void test1660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1660");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        float[] floatArray65 = null;
        float[] floatArray66 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder64.append(floatArray65, floatArray66);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder64.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder70.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder70.append((double) (byte) 1, (double) ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder70.append((float) 1, (float) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder78.append((long) (byte) 10, 0L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder81.append((long) (-1), (long) (short) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder81.append(true, false);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder87);
    }

    @Test
    public void test1661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1661");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.append((double) 100L, (double) 10L);
        boolean boolean16 = equalsBuilder0.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(0, (int) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder19.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append((long) (byte) -1, 0L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder19.append((short) (byte) 0, (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder27.append((double) (-1.0f), (double) (-1));
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder30);
    }

    @Test
    public void test1662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1662");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        equalsBuilder62.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder62.append((float) (byte) 10, (float) (byte) 10);
        boolean boolean67 = equalsBuilder66.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder66.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder66.append((byte) 0, (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder66.append((double) 100L, (double) 0L);
        equalsBuilder66.reset();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder76);
    }

    @Test
    public void test1663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1663");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        equalsBuilder62.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder62.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder62.append((short) 10, (short) -1);
        boolean[] booleanArray74 = new boolean[] { true, true, false, true };
        boolean[] booleanArray78 = new boolean[] { true, true, false };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder69.append(booleanArray74, booleanArray78);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder79.append('4', 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder79.append(false, true);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(booleanArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray74), "[true, true, false, true]");
        org.junit.Assert.assertNotNull(booleanArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray78), "[true, true, false]");
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(equalsBuilder85);
    }

    @Test
    public void test1664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1664");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.append((double) 100L, (double) 10L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray19 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray20 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder16.append(shortArray19, shortArray20);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean30 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder21, (java.lang.Object) '#', strArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder21.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray37 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray38 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder34.append(shortArray37, shortArray38);
        byte[] byteArray40 = new byte[] {};
        byte[] byteArray45 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder34.append(byteArray40, byteArray45);
        char[] charArray51 = new char[] { '#', ' ', '#', '#' };
        char[] charArray54 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder34.append(charArray51, charArray54);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray59 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray60 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder56.append(shortArray59, shortArray60);
        byte[] byteArray62 = new byte[] {};
        byte[] byteArray67 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder56.append(byteArray62, byteArray67);
        char[] charArray73 = new char[] { '#', ' ', '#', '#' };
        char[] charArray76 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder56.append(charArray73, charArray76);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder21.append(charArray54, charArray73);
        java.lang.Object obj79 = null;
        boolean boolean80 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) charArray54, obj79);
        java.lang.String[] strArray81 = new java.lang.String[] {};
        boolean boolean82 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder15, (java.lang.Object) charArray54, strArray81);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder15.appendSuper(false);
        float[] floatArray85 = new float[] {};
        float[] floatArray87 = new float[] { (byte) -1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder15.append(floatArray85, floatArray87);
        boolean[] booleanArray89 = new boolean[] {};
        boolean[] booleanArray90 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder88.append(booleanArray89, booleanArray90);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder91.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder96 = equalsBuilder91.append(10L, (long) '4');
        boolean boolean97 = equalsBuilder96.isEquals();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[]");
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(shortArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray59), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray60), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[]");
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(floatArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray85), "[]");
        org.junit.Assert.assertNotNull(floatArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray87), "[-1.0]");
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertNotNull(booleanArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray89), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder91);
        org.junit.Assert.assertNotNull(equalsBuilder93);
        org.junit.Assert.assertNotNull(equalsBuilder96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test1665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1665");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder5.append((short) (byte) 10, (short) 0);
        long[] longArray14 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray16 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append(longArray14, longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder18.append((short) (byte) 10, (short) 0);
        long[] longArray27 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray29 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(longArray27, longArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append(longArray14, longArray29);
        java.lang.Boolean boolean32 = equalsBuilder31.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder31.append((double) (short) -1, (double) 10);
        java.lang.Boolean boolean36 = equalsBuilder35.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder35.append((int) (byte) 1, 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder35.append(0L, (long) (-1));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder35.append((double) (byte) -1, (double) '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder35.append('#', 'a');
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertEquals("'" + boolean36 + "' != '" + false + "'", boolean36, false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(equalsBuilder48);
    }

    @Test
    public void test1666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1666");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        boolean[] booleanArray68 = new boolean[] { true, true, false };
        boolean[] booleanArray69 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder5.append(booleanArray68, booleanArray69);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder70.append((-1.0f), 0.0f);
        java.lang.Boolean boolean74 = equalsBuilder73.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder73.append('#', '4');
        equalsBuilder77.reset();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray68), "[true, true, false]");
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertEquals("'" + boolean74 + "' != '" + false + "'", boolean74, false);
        org.junit.Assert.assertNotNull(equalsBuilder77);
    }

    @Test
    public void test1667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1667");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        equalsBuilder62.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder62.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder62.append((short) 10, (short) -1);
        boolean[] booleanArray74 = new boolean[] { true, true, false, true };
        boolean[] booleanArray78 = new boolean[] { true, true, false };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder69.append(booleanArray74, booleanArray78);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder79.append((double) 1, (double) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder79.append((byte) 1, (byte) 0);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(booleanArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray74), "[true, true, false, true]");
        org.junit.Assert.assertNotNull(booleanArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray78), "[true, true, false]");
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(equalsBuilder85);
    }

    @Test
    public void test1668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1668");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder0.append((-1), (int) (short) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = equalsBuilder6.append((-1L), 100L);
        equalsBuilder6.reset();
        boolean boolean11 = equalsBuilder6.isEquals();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(equalsBuilder9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test1669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1669");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder64.append(1, 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder64.append((short) 100, (short) (byte) 0);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(equalsBuilder70);
    }

    @Test
    public void test1670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1670");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder0.append((float) 10L, (float) (-1));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder10 = equalsBuilder7.append((short) (byte) 10, (short) 0);
        long[] longArray16 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray18 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder7.append(longArray16, longArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder20.append((short) (byte) 10, (short) 0);
        long[] longArray29 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray31 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder32 = equalsBuilder20.append(longArray29, longArray31);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder6.append(longArray16, longArray31);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder33.append((byte) 0, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder37.append((short) (byte) 10, (short) 0);
        equalsBuilder37.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder37.append((short) (byte) 10, (short) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder37.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder37.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder37.append((short) (byte) 10, (short) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder52.append((short) (byte) 10, (short) 0);
        equalsBuilder52.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder57.append((short) (byte) 10, (short) 0);
        long[] longArray66 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray68 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder57.append(longArray66, longArray68);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder70.append((short) (byte) 10, (short) 0);
        long[] longArray79 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray81 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder70.append(longArray79, longArray81);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder52.append(longArray66, longArray81);
        java.lang.Boolean boolean84 = equalsBuilder83.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder83.append((byte) 1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder87.appendSuper(true);
        equalsBuilder87.reset();
        equalsBuilder87.reset();
        boolean boolean92 = equalsBuilder87.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder36.append((java.lang.Object) equalsBuilder37, (java.lang.Object) equalsBuilder87);
        java.lang.Class<?> wildcardClass94 = equalsBuilder87.getClass();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(equalsBuilder10);
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray18), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray31), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder32);
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(equalsBuilder60);
        org.junit.Assert.assertNotNull(longArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray66), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray68), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(longArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray79), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray81), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertEquals("'" + boolean84 + "' != '" + false + "'", boolean84, false);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(equalsBuilder89);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(equalsBuilder93);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1671");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder64.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder64.append((long) 'a', (long) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder80.append(100.0d, (double) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder83.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder83.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder87.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder87.append((float) (-1), (float) 0L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder94 = equalsBuilder87.appendSuper(false);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(equalsBuilder89);
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertNotNull(equalsBuilder94);
    }

    @Test
    public void test1672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1672");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder0.append((-1), (int) (short) 10);
        java.lang.Object obj7 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray14 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray18 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray19 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder15.append(shortArray18, shortArray19);
        byte[] byteArray21 = new byte[] {};
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder15.append(byteArray21, byteArray26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder8.append(byteArray14, byteArray26);
        boolean boolean30 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj7, (java.lang.Object) byteArray26, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray37 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray41 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray42 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder38.append(shortArray41, shortArray42);
        byte[] byteArray44 = new byte[] {};
        byte[] byteArray49 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder38.append(byteArray44, byteArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder31.append(byteArray37, byteArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder0.append(byteArray26, byteArray37);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder52.append(false, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder52.append((float) '4', (float) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder52.appendSuper(false);
        java.lang.Boolean boolean61 = equalsBuilder60.build();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray41), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(equalsBuilder60);
        org.junit.Assert.assertEquals("'" + boolean61 + "' != '" + false + "'", boolean61, false);
    }

    @Test
    public void test1673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1673");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        float[] floatArray18 = new float[] { (byte) -1, 10.0f, 'a', ' ', (short) -1 };
        float[] floatArray21 = new float[] { 1.0f, 0L };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder12.append(floatArray18, floatArray21);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder12.append(true, true);
        byte[] byteArray29 = new byte[] { (byte) 100, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray33 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray34 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder30.append(shortArray33, shortArray34);
        byte[] byteArray36 = new byte[] {};
        byte[] byteArray41 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder30.append(byteArray36, byteArray41);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder25.append(byteArray29, byteArray36);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder43.append((byte) 0, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = equalsBuilder43.append((int) (byte) 0, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder43.append(0L, (long) '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder52.append((int) (short) 0, (int) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder52.append('4', 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder58.append(false, false);
        java.lang.Boolean boolean62 = equalsBuilder61.build();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[-1.0, 10.0, 97.0, 32.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray21), "[1.0, 0.0]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[100, 10, 1]");
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray33), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[]");
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(equalsBuilder49);
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertEquals("'" + boolean62 + "' != '" + false + "'", boolean62, false);
    }

    @Test
    public void test1674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1674");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder0.append((float) 10L, (float) (-1));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder6.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder11 = equalsBuilder6.append((float) '#', (float) (-1));
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertNotNull(equalsBuilder11);
    }

    @Test
    public void test1675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1675");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        long[] longArray65 = null;
        long[] longArray72 = new long[] { 1, (byte) -1, (-1), (short) 1, 100L, '#' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder64.append(longArray65, longArray72);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder64.appendSuper(true);
        double[] doubleArray80 = new double[] { (short) 0, 0.0d, (byte) 10, (byte) 0 };
        double[] doubleArray81 = new double[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder64.append(doubleArray80, doubleArray81);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder82.append((short) 0, (short) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder82.append((float) (short) 1, (float) (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder88.append((float) 10, 0.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder94 = equalsBuilder91.append(true, false);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(longArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray72), "[1, -1, -1, 1, 100, 35]");
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[0.0, 0.0, 10.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertNotNull(equalsBuilder91);
        org.junit.Assert.assertNotNull(equalsBuilder94);
    }

    @Test
    public void test1676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1676");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder0.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder10 = equalsBuilder0.append((double) 1, (double) (-1L));
        java.lang.Boolean boolean11 = equalsBuilder10.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder14 = equalsBuilder10.append(0, (int) (short) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder14.append((long) (short) 1, (long) (-1));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder17.append((double) 1L, (-1.0d));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder20.append(false, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = equalsBuilder23.append((double) ' ', (double) 1);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(equalsBuilder10);
        org.junit.Assert.assertEquals("'" + boolean11 + "' != '" + false + "'", boolean11, false);
        org.junit.Assert.assertNotNull(equalsBuilder14);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(equalsBuilder26);
    }

    @Test
    public void test1677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1677");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        equalsBuilder62.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder62.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder62.append((short) 10, (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder69.append((float) (short) 100, 0.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder72.append((double) (byte) 10, (double) 1.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder75.append((long) (byte) -1, 10L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder75.append((byte) 1, (byte) 100);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
    }

    @Test
    public void test1678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1678");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder17.append((java.lang.Object) boolean37, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder17.append((double) '4', (double) 0);
        equalsBuilder17.reset();
        equalsBuilder17.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder17.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder17.append((float) 'a', (float) (byte) 1);
        java.lang.Boolean boolean51 = equalsBuilder17.build();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertEquals("'" + boolean51 + "' != '" + false + "'", boolean51, false);
    }

    @Test
    public void test1679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1679");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder17.append((java.lang.Object) boolean37, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray52 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray56 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray57 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder53.append(shortArray56, shortArray57);
        byte[] byteArray59 = new byte[] {};
        byte[] byteArray64 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder53.append(byteArray59, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder46.append(byteArray52, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder46.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder39.append((java.lang.Object) equalsBuilder45, (java.lang.Object) equalsBuilder46);
        long[] longArray73 = new long[] { (byte) 100, ' ', (short) 10 };
        long[] longArray79 = new long[] { 'a', 0L, (short) 10, (byte) 0, (byte) -1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder46.append(longArray73, longArray79);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder80.append((short) 0, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder83.append(0, (int) (short) 0);
        boolean boolean87 = equalsBuilder83.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder83.append((byte) -1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder83.append((double) '#', 10.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder96 = equalsBuilder83.append((float) 10L, (float) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder99 = equalsBuilder83.append(false, false);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray56), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(longArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray73), "[100, 32, 10]");
        org.junit.Assert.assertNotNull(longArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray79), "[97, 0, 10, 0, -1]");
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertNotNull(equalsBuilder93);
        org.junit.Assert.assertNotNull(equalsBuilder96);
        org.junit.Assert.assertNotNull(equalsBuilder99);
    }

    @Test
    public void test1680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1680");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((double) 100.0f, (double) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder5.append((short) 0, (short) -1);
        boolean boolean21 = equalsBuilder5.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder5.append((double) (byte) 100, (double) 100L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder5.append((byte) 0, (byte) -1);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
    }

    @Test
    public void test1681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1681");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder17.append((java.lang.Object) boolean37, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder17.append(false, true);
        boolean boolean43 = equalsBuilder42.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder42.append(false, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = equalsBuilder42.append(true, false);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(equalsBuilder49);
    }

    @Test
    public void test1682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1682");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder64.append((byte) -1, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder64.append((double) 10.0f, 100.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder80.append((short) (byte) 1, (short) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder83.append(10.0f, (float) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder83.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder88.append('#', ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder94 = equalsBuilder91.append((short) 0, (short) (byte) -1);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertNotNull(equalsBuilder91);
        org.junit.Assert.assertNotNull(equalsBuilder94);
    }

    @Test
    public void test1683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1683");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder17.append((float) (short) -1, (float) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder20.append((long) 'a', 0L);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(equalsBuilder23);
    }

    @Test
    public void test1684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1684");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.append((double) 100L, (double) 10L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray19 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray20 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder16.append(shortArray19, shortArray20);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean30 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder21, (java.lang.Object) '#', strArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder21.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray37 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray38 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder34.append(shortArray37, shortArray38);
        byte[] byteArray40 = new byte[] {};
        byte[] byteArray45 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder34.append(byteArray40, byteArray45);
        char[] charArray51 = new char[] { '#', ' ', '#', '#' };
        char[] charArray54 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder34.append(charArray51, charArray54);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray59 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray60 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder56.append(shortArray59, shortArray60);
        byte[] byteArray62 = new byte[] {};
        byte[] byteArray67 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder56.append(byteArray62, byteArray67);
        char[] charArray73 = new char[] { '#', ' ', '#', '#' };
        char[] charArray76 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder56.append(charArray73, charArray76);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder21.append(charArray54, charArray73);
        java.lang.Object obj79 = null;
        boolean boolean80 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) charArray54, obj79);
        java.lang.String[] strArray81 = new java.lang.String[] {};
        boolean boolean82 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder15, (java.lang.Object) charArray54, strArray81);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder15.appendSuper(false);
        float[] floatArray85 = new float[] {};
        float[] floatArray87 = new float[] { (byte) -1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder15.append(floatArray85, floatArray87);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder88.append((byte) 0, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder94 = equalsBuilder91.append(false, false);
        equalsBuilder94.reset();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[]");
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(shortArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray59), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray60), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[]");
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(floatArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray85), "[]");
        org.junit.Assert.assertNotNull(floatArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray87), "[-1.0]");
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertNotNull(equalsBuilder91);
        org.junit.Assert.assertNotNull(equalsBuilder94);
    }

    @Test
    public void test1685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1685");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder0.append((-1), (int) (short) 10);
        java.lang.Object obj7 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray14 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray18 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray19 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder15.append(shortArray18, shortArray19);
        byte[] byteArray21 = new byte[] {};
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder15.append(byteArray21, byteArray26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder8.append(byteArray14, byteArray26);
        boolean boolean30 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj7, (java.lang.Object) byteArray26, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray37 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray41 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray42 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder38.append(shortArray41, shortArray42);
        byte[] byteArray44 = new byte[] {};
        byte[] byteArray49 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder38.append(byteArray44, byteArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder31.append(byteArray37, byteArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder0.append(byteArray26, byteArray37);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray56 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray57 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder53.append(shortArray56, shortArray57);
        byte[] byteArray59 = new byte[] {};
        byte[] byteArray64 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder53.append(byteArray59, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray69 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray70 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder66.append(shortArray69, shortArray70);
        byte[] byteArray72 = new byte[] {};
        byte[] byteArray77 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder66.append(byteArray72, byteArray77);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder0.append(byteArray59, byteArray72);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder79.append((long) ' ', (long) (byte) 0);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray41), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray56), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(shortArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray69), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray70), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder71);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[]");
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertNotNull(equalsBuilder82);
    }

    @Test
    public void test1686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1686");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.append((double) 100L, (double) 10L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray19 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray20 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder16.append(shortArray19, shortArray20);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean30 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder21, (java.lang.Object) '#', strArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder21.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray37 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray38 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder34.append(shortArray37, shortArray38);
        byte[] byteArray40 = new byte[] {};
        byte[] byteArray45 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder34.append(byteArray40, byteArray45);
        char[] charArray51 = new char[] { '#', ' ', '#', '#' };
        char[] charArray54 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder34.append(charArray51, charArray54);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray59 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray60 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder56.append(shortArray59, shortArray60);
        byte[] byteArray62 = new byte[] {};
        byte[] byteArray67 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder56.append(byteArray62, byteArray67);
        char[] charArray73 = new char[] { '#', ' ', '#', '#' };
        char[] charArray76 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder56.append(charArray73, charArray76);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder21.append(charArray54, charArray73);
        java.lang.Object obj79 = null;
        boolean boolean80 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) charArray54, obj79);
        java.lang.String[] strArray81 = new java.lang.String[] {};
        boolean boolean82 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder15, (java.lang.Object) charArray54, strArray81);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder15.appendSuper(false);
        float[] floatArray85 = new float[] {};
        float[] floatArray87 = new float[] { (byte) -1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder15.append(floatArray85, floatArray87);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder88.append((byte) 0, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder94 = equalsBuilder91.append((int) 'a', (-1));
        java.lang.Boolean boolean95 = equalsBuilder94.build();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[]");
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(shortArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray59), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray60), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[]");
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(floatArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray85), "[]");
        org.junit.Assert.assertNotNull(floatArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray87), "[-1.0]");
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertNotNull(equalsBuilder91);
        org.junit.Assert.assertNotNull(equalsBuilder94);
        org.junit.Assert.assertEquals("'" + boolean95 + "' != '" + false + "'", boolean95, false);
    }

    @Test
    public void test1687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1687");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder5.append((short) -1, (short) (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder65.append((double) 'a', (double) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder65.append((double) (byte) -1, (double) (-1.0f));
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder71);
    }

    @Test
    public void test1688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1688");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder0.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder10 = equalsBuilder0.append((double) 1, (double) (-1L));
        java.lang.Boolean boolean11 = equalsBuilder10.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray18 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        byte[] byteArray25 = new byte[] {};
        byte[] byteArray30 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder19.append(byteArray25, byteArray30);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder32 = equalsBuilder12.append(byteArray18, byteArray30);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray37 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray38 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder34.append(shortArray37, shortArray38);
        byte[] byteArray40 = new byte[] {};
        byte[] byteArray45 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder34.append(byteArray40, byteArray45);
        boolean boolean47 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (short) 0, (java.lang.Object) byteArray45);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder10.append(byteArray18, byteArray45);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder48.append((double) (short) -1, (double) (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder51.append((short) 10, (short) 10);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(equalsBuilder10);
        org.junit.Assert.assertEquals("'" + boolean11 + "' != '" + false + "'", boolean11, false);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder32);
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[]");
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(equalsBuilder54);
    }

    @Test
    public void test1689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1689");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        equalsBuilder62.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder62.append((float) (byte) 10, (float) (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder66.append(false, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder69.append((int) (short) 1, 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder72.append((float) 10, (float) '4');
        equalsBuilder75.reset();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(equalsBuilder75);
    }

    @Test
    public void test1690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1690");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder64.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder64.append((long) 'a', (long) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder64.append((double) (-1.0f), (double) (byte) 1);
        boolean boolean84 = equalsBuilder64.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder64.append(true, false);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(equalsBuilder87);
    }

    @Test
    public void test1691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1691");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder3.append((byte) -1, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = equalsBuilder3.append(false, false);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(equalsBuilder9);
    }

    @Test
    public void test1692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1692");
        java.lang.Object obj0 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder1 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder4 = equalsBuilder1.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder1.append((-1), (int) (short) 10);
        java.lang.Class<?> wildcardClass8 = equalsBuilder1.getClass();
        boolean boolean10 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj0, (java.lang.Object) wildcardClass8, false);
        org.junit.Assert.assertNotNull(equalsBuilder4);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1693");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        char[] charArray17 = new char[] { '#', ' ', '#', '#' };
        char[] charArray20 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(charArray17, charArray20);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder21.append((double) (byte) 0, (double) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = equalsBuilder24.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder24.append(true, true);
        java.lang.Boolean boolean30 = equalsBuilder29.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder29.append(true, false);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder26);
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertEquals("'" + boolean30 + "' != '" + false + "'", boolean30, false);
        org.junit.Assert.assertNotNull(equalsBuilder33);
    }

    @Test
    public void test1694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1694");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        float[] floatArray18 = new float[] { (byte) -1, 10.0f, 'a', ' ', (short) -1 };
        float[] floatArray21 = new float[] { 1.0f, 0L };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder12.append(floatArray18, floatArray21);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder12.append(true, true);
        byte[] byteArray29 = new byte[] { (byte) 100, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray33 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray34 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder30.append(shortArray33, shortArray34);
        byte[] byteArray36 = new byte[] {};
        byte[] byteArray41 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder30.append(byteArray36, byteArray41);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder25.append(byteArray29, byteArray36);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder43.append((int) (short) 10, (int) (byte) 100);
        boolean boolean47 = equalsBuilder46.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder46.append(' ', 'a');
        equalsBuilder50.reset();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[-1.0, 10.0, 97.0, 32.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray21), "[1.0, 0.0]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[100, 10, 1]");
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray33), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[]");
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(equalsBuilder50);
    }

    @Test
    public void test1695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1695");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder0.append((float) 10L, (float) (-1));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder6.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray12 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray13 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder14 = equalsBuilder9.append(shortArray12, shortArray13);
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean23 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder14, (java.lang.Object) '#', strArray22);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = equalsBuilder14.append((int) (short) -1, (int) (short) 0);
        boolean boolean27 = equalsBuilder26.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray31 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray32 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder28.append(shortArray31, shortArray32);
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean42 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder33, (java.lang.Object) '#', strArray41);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder33.append((int) (short) -1, (int) (short) 0);
        boolean boolean46 = equalsBuilder45.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder26.append((java.lang.Object) boolean46, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder26.append((double) '4', (double) 0);
        equalsBuilder26.reset();
        equalsBuilder26.reset();
        boolean boolean54 = equalsBuilder26.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder26.appendSuper(true);
        boolean boolean58 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder6, (java.lang.Object) equalsBuilder56, false);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder14);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(equalsBuilder26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test1696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1696");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        equalsBuilder74.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder74.append('4', ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder78.append((byte) 0, (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder78.append((double) 'a', (double) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder84.append((short) 10, (short) 0);
        java.lang.Class<?> wildcardClass88 = equalsBuilder84.getClass();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test1697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1697");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((double) 100.0f, (double) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder5.append((short) 0, (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder5.append((long) ' ', (long) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = equalsBuilder23.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder26.append((short) (byte) 10, (short) (byte) 100);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(equalsBuilder26);
        org.junit.Assert.assertNotNull(equalsBuilder29);
    }

    @Test
    public void test1698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1698");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.append((double) 100L, (double) 10L);
        boolean boolean16 = equalsBuilder0.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(0, (int) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder19.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append((int) (short) -1, (int) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder19.append((byte) 1, (byte) 100);
        equalsBuilder19.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray32 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray33 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder29.append(shortArray32, shortArray33);
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean43 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder34, (java.lang.Object) '#', strArray42);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder34.append((double) 100.0f, (double) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = equalsBuilder34.append((short) 0, (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder49.append((byte) -1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder52.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = equalsBuilder54.append((byte) 1, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray61 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray62 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder58.append(shortArray61, shortArray62);
        java.lang.String[] strArray71 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean72 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder63, (java.lang.Object) '#', strArray71);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder63.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder75.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder75.append(false, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder19.append((java.lang.Object) equalsBuilder54, (java.lang.Object) false);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray33), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(equalsBuilder49);
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(equalsBuilder54);
        org.junit.Assert.assertNotNull(equalsBuilder57);
        org.junit.Assert.assertNotNull(shortArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray61), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray62), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder81);
    }

    @Test
    public void test1699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1699");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        java.lang.Boolean boolean4 = equalsBuilder3.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder3.append((byte) 0, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = equalsBuilder3.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder3.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = equalsBuilder13.append((short) (byte) 10, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder17.append((short) (byte) 10, (short) 0);
        equalsBuilder17.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder22.append((short) (byte) 10, (short) 0);
        long[] longArray31 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray33 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder22.append(longArray31, longArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder35.append((short) (byte) 10, (short) 0);
        long[] longArray44 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray46 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder35.append(longArray44, longArray46);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder17.append(longArray31, longArray46);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder49.append((short) (byte) 10, (short) 0);
        long[] longArray58 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray60 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder49.append(longArray58, longArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray65 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray66 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder62.append(shortArray65, shortArray66);
        java.lang.String[] strArray75 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean76 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder67, (java.lang.Object) '#', strArray75);
        boolean boolean77 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) longArray60, (java.lang.Object) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder16.append(longArray31, longArray60);
        long[] longArray81 = new long[] { (byte) 10, 0L };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder12.append(longArray31, longArray81);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder82.append((byte) -1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder85.append((long) '#', (long) ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder85.append(' ', '#');
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + true + "'", boolean4, true);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(equalsBuilder9);
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder16);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(longArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray31), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray33), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(longArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray44), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray46), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(longArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray58), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray60), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(shortArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray65), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray66), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(longArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray81), "[10, 0]");
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertNotNull(equalsBuilder91);
    }

    @Test
    public void test1700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1700");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        equalsBuilder62.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder62.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder62.append((short) 10, (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder69.append((float) (short) 100, 0.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder72.append((double) (byte) 10, (double) 1.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder75.append((long) (byte) -1, 10L);
        equalsBuilder78.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder78.append(100, (int) (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder78.append((long) (byte) 1, 10L);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(equalsBuilder85);
    }

    @Test
    public void test1701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1701");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder12.append((byte) 10, (byte) 0);
        boolean boolean16 = equalsBuilder15.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray20 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray21 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder17.append(shortArray20, shortArray21);
        byte[] byteArray23 = new byte[] {};
        byte[] byteArray28 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder17.append(byteArray23, byteArray28);
        byte[] byteArray30 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder15.append(byteArray28, byteArray30);
        java.lang.Object obj32 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray36 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray37 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder33.append(shortArray36, shortArray37);
        byte[] byteArray39 = new byte[] {};
        byte[] byteArray44 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder33.append(byteArray39, byteArray44);
        char[] charArray50 = new char[] { '#', ' ', '#', '#' };
        char[] charArray53 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder33.append(charArray50, charArray53);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = equalsBuilder54.append('a', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder57.append((long) (short) 10, (long) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder31.append(obj32, (java.lang.Object) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder31.append(100L, (-1L));
        java.lang.Class<?> wildcardClass65 = equalsBuilder31.getClass();
        java.lang.Object obj66 = null;
        java.lang.String[] strArray69 = new java.lang.String[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList70 = new java.util.ArrayList<java.lang.String>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList70, strArray69);
        boolean boolean72 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) wildcardClass65, obj66, (java.util.Collection<java.lang.String>) strList70);
        java.lang.Class<?> wildcardClass73 = strList70.getClass();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(shortArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray36), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[]");
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder54);
        org.junit.Assert.assertNotNull(equalsBuilder57);
        org.junit.Assert.assertNotNull(equalsBuilder60);
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test1702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1702");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder5.append((short) (byte) 10, (short) 0);
        long[] longArray14 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray16 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append(longArray14, longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder18.append((short) (byte) 10, (short) 0);
        long[] longArray27 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray29 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(longArray27, longArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append(longArray14, longArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder0.append(true, false);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
    }

    @Test
    public void test1703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1703");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        long[] longArray65 = null;
        long[] longArray72 = new long[] { 1, (byte) -1, (-1), (short) 1, 100L, '#' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder64.append(longArray65, longArray72);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder64.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder64.appendSuper(false);
        boolean boolean78 = equalsBuilder64.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder64.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder81.append((byte) 0, (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder84.append((short) (byte) 10, (short) (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder87.append((float) '4', (float) (byte) 100);
        equalsBuilder90.reset();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(longArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray72), "[1, -1, -1, 1, 100, 35]");
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(equalsBuilder90);
    }

    @Test
    public void test1704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1704");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        equalsBuilder74.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder74.append((int) (byte) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder74.append((double) 100L, (double) (-1L));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder81.append((short) (byte) -1, (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder84.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder84.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder89.append((byte) -1, (byte) 10);
        java.lang.Boolean boolean93 = equalsBuilder89.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder96 = equalsBuilder89.append(0L, (long) (byte) 10);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertNotNull(equalsBuilder89);
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertEquals("'" + boolean93 + "' != '" + false + "'", boolean93, false);
        org.junit.Assert.assertNotNull(equalsBuilder96);
    }

    @Test
    public void test1705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1705");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((double) 100.0f, (double) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder5.append((short) 0, (short) -1);
        boolean boolean21 = equalsBuilder5.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder5.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder25.append((short) (byte) 10, (short) 0);
        equalsBuilder25.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder30.append((short) (byte) 10, (short) 0);
        long[] longArray39 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray41 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder30.append(longArray39, longArray41);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder43.append((short) (byte) 10, (short) 0);
        long[] longArray52 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray54 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder43.append(longArray52, longArray54);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder25.append(longArray39, longArray54);
        java.lang.Boolean boolean57 = equalsBuilder56.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray61 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray62 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder58.append(shortArray61, shortArray62);
        byte[] byteArray64 = new byte[] {};
        byte[] byteArray69 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder58.append(byteArray64, byteArray69);
        float[] floatArray76 = new float[] { (byte) -1, 10.0f, 'a', ' ', (short) -1 };
        float[] floatArray79 = new float[] { 1.0f, 0L };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder70.append(floatArray76, floatArray79);
        float[] floatArray85 = new float[] { (-1), (byte) 10, (-1), (short) 100 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder56.append(floatArray79, floatArray85);
        boolean boolean88 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) equalsBuilder86, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder5.append('4', '#');
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(longArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray39), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray41), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(longArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray52), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray54), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertEquals("'" + boolean57 + "' != '" + false + "'", boolean57, false);
        org.junit.Assert.assertNotNull(shortArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray61), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray62), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[]");
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(floatArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray76), "[-1.0, 10.0, 97.0, 32.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray79), "[1.0, 0.0]");
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(floatArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray85), "[-1.0, 10.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(equalsBuilder91);
    }

    @Test
    public void test1706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1706");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        float[] floatArray18 = new float[] { (byte) -1, 10.0f, 'a', ' ', (short) -1 };
        float[] floatArray21 = new float[] { 1.0f, 0L };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder12.append(floatArray18, floatArray21);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder12.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder25.append((byte) 10, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder28.append((byte) 100, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder28.append((double) '4', (double) 10.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder28.append((long) (short) 100, (long) (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder28.append((long) (short) 100, (long) 10);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[-1.0, 10.0, 97.0, 32.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray21), "[1.0, 0.0]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(equalsBuilder40);
    }

    @Test
    public void test1707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1707");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        java.lang.Boolean boolean4 = equalsBuilder3.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder3.append((byte) 100, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder10 = equalsBuilder3.append((byte) 10, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder10.append((double) '4', (double) 1.0f);
        equalsBuilder13.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder13.append((long) ' ', 0L);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + true + "'", boolean4, true);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(equalsBuilder10);
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertNotNull(equalsBuilder17);
    }

    @Test
    public void test1708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1708");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        char[] charArray17 = new char[] { '#', ' ', '#', '#' };
        char[] charArray20 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(charArray17, charArray20);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder21.append('a', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder21.append((int) (byte) 1, (int) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder27.append((int) (byte) 1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder30.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder33.append((byte) 100, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder33.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = equalsBuilder38.append(false, false);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(equalsBuilder41);
    }

    @Test
    public void test1709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1709");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        boolean[] booleanArray68 = new boolean[] { true, true, false };
        boolean[] booleanArray69 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder5.append(booleanArray68, booleanArray69);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder70.append((-1.0f), 0.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder73.append((byte) 0, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder76.append((byte) 1, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder79.append((long) (byte) 10, (long) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder82.append((long) (short) 0, (long) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder85.append((short) 0, (short) 0);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray68), "[true, true, false]");
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder76);
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertNotNull(equalsBuilder88);
    }

    @Test
    public void test1710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1710");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder64.append((byte) -1, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder64.append((double) 10.0f, 100.0d);
        boolean boolean81 = equalsBuilder64.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder64.append(0.0d, (double) (-1.0f));
        java.lang.Class<?> wildcardClass85 = equalsBuilder84.getClass();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test1711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1711");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        equalsBuilder74.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder74.append((int) (byte) -1, (int) (short) 0);
        java.lang.Boolean boolean79 = equalsBuilder78.build();
        short[] shortArray82 = new short[] { (short) -1, (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray86 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray87 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder83.append(shortArray86, shortArray87);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder78.append(shortArray82, shortArray86);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder89.append((byte) 0, (byte) 0);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertEquals("'" + boolean79 + "' != '" + false + "'", boolean79, false);
        org.junit.Assert.assertNotNull(shortArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray82), "[-1, 10]");
        org.junit.Assert.assertNotNull(shortArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray86), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray87), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertNotNull(equalsBuilder89);
        org.junit.Assert.assertNotNull(equalsBuilder92);
    }

    @Test
    public void test1712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1712");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        long[] longArray65 = null;
        long[] longArray72 = new long[] { 1, (byte) -1, (-1), (short) 1, 100L, '#' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder64.append(longArray65, longArray72);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder64.appendSuper(true);
        double[] doubleArray80 = new double[] { (short) 0, 0.0d, (byte) 10, (byte) 0 };
        double[] doubleArray81 = new double[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder64.append(doubleArray80, doubleArray81);
        java.lang.Class<?> wildcardClass83 = equalsBuilder64.getClass();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(longArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray72), "[1, -1, -1, 1, 100, 35]");
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[0.0, 0.0, 10.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test1713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1713");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        equalsBuilder74.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder74.append((int) (byte) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder74.append((double) 100L, (double) (-1L));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder81.append((short) (byte) -1, (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder81.append((double) 0.0f, (double) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder81.append((float) '#', (float) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder81.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder95 = equalsBuilder92.append(1.0f, (float) (short) 0);
        java.lang.Boolean boolean96 = equalsBuilder95.build();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertNotNull(equalsBuilder95);
        org.junit.Assert.assertEquals("'" + boolean96 + "' != '" + false + "'", boolean96, false);
    }

    @Test
    public void test1714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1714");
        java.lang.Object obj0 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder1 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray4 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray5 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder1.append(shortArray4, shortArray5);
        byte[] byteArray7 = new byte[] {};
        byte[] byteArray12 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder1.append(byteArray7, byteArray12);
        java.lang.String[] strArray15 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        boolean boolean18 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj0, (java.lang.Object) equalsBuilder13, (java.util.Collection<java.lang.String>) strList16);
        boolean boolean19 = equalsBuilder13.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder13.append((float) (byte) 1, (float) 1L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder13.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder24.append((int) 'a', (int) (short) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder24.append(0, (int) '4');
        java.lang.Object obj31 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder32 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray38 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray42 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray43 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder39.append(shortArray42, shortArray43);
        byte[] byteArray45 = new byte[] {};
        byte[] byteArray50 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder39.append(byteArray45, byteArray50);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder32.append(byteArray38, byteArray50);
        boolean boolean54 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj31, (java.lang.Object) byteArray50, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray58 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray59 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder55.append(shortArray58, shortArray59);
        byte[] byteArray61 = new byte[] {};
        byte[] byteArray66 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder55.append(byteArray61, byteArray66);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder67.append((byte) 10, (byte) 0);
        boolean boolean71 = equalsBuilder70.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray75 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray76 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder72.append(shortArray75, shortArray76);
        byte[] byteArray78 = new byte[] {};
        byte[] byteArray83 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder72.append(byteArray78, byteArray83);
        byte[] byteArray85 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder70.append(byteArray83, byteArray85);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder30.append(byteArray50, byteArray85);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder87.append((byte) 0, (byte) 100);
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(shortArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray58), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray59), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder60);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[]");
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(shortArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray75), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray76), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(byteArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray78), "[]");
        org.junit.Assert.assertNotNull(byteArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray83), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(equalsBuilder90);
    }

    @Test
    public void test1715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1715");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        equalsBuilder62.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder62.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder62.append((short) 10, (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder62.append((float) ' ', 1.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder62.append(0, (int) '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder62.append((byte) 100, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder78.append('4', ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder78.append((byte) 1, (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder84.append((int) (short) 0, (int) (short) 100);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder87);
    }

    @Test
    public void test1716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1716");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder17.append((java.lang.Object) boolean37, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder17.append((double) '4', (double) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder17.append((long) (-1), (long) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder17.append((short) (byte) 10, (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray52 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray53 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder49.append(shortArray52, shortArray53);
        java.lang.String[] strArray62 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean63 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder54, (java.lang.Object) '#', strArray62);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder64.append(false, false);
        java.lang.Boolean boolean68 = equalsBuilder67.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder67.append((byte) 0, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder67.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder67.append(false, false);
        boolean boolean78 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) strArray62, (java.lang.Object) false, true);
        java.lang.Object[] objArray79 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder17.append((java.lang.Object[]) strArray62, objArray79);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder80.append((float) (short) -1, (float) (-1L));
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(shortArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray52), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray53), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder54);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertEquals("'" + boolean68 + "' != '" + true + "'", boolean68, true);
        org.junit.Assert.assertNotNull(equalsBuilder71);
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
    }

    @Test
    public void test1717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1717");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder12.append((byte) 10, (byte) 0);
        boolean boolean16 = equalsBuilder15.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray20 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray21 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder17.append(shortArray20, shortArray21);
        byte[] byteArray23 = new byte[] {};
        byte[] byteArray28 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder17.append(byteArray23, byteArray28);
        byte[] byteArray30 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder15.append(byteArray28, byteArray30);
        java.lang.Object obj32 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray36 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray37 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder33.append(shortArray36, shortArray37);
        byte[] byteArray39 = new byte[] {};
        byte[] byteArray44 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder33.append(byteArray39, byteArray44);
        char[] charArray50 = new char[] { '#', ' ', '#', '#' };
        char[] charArray53 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder33.append(charArray50, charArray53);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = equalsBuilder54.append('a', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder57.append((long) (short) 10, (long) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder31.append(obj32, (java.lang.Object) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder61.append(0L, (long) (short) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder64.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder66.append((double) (-1.0f), (double) ' ');
        java.lang.Class<?> wildcardClass70 = equalsBuilder66.getClass();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(shortArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray36), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[]");
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder54);
        org.junit.Assert.assertNotNull(equalsBuilder57);
        org.junit.Assert.assertNotNull(equalsBuilder60);
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test1718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1718");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        equalsBuilder0.reset();
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray9 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray10 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder11 = equalsBuilder6.append(shortArray9, shortArray10);
        int[] intArray12 = new int[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray16 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray17 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder13.append(shortArray16, shortArray17);
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean27 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder18, (java.lang.Object) '#', strArray26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray34 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray35 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder31.append(shortArray34, shortArray35);
        byte[] byteArray37 = new byte[] {};
        byte[] byteArray42 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder31.append(byteArray37, byteArray42);
        char[] charArray48 = new char[] { '#', ' ', '#', '#' };
        char[] charArray51 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder31.append(charArray48, charArray51);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray56 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray57 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder53.append(shortArray56, shortArray57);
        byte[] byteArray59 = new byte[] {};
        byte[] byteArray64 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder53.append(byteArray59, byteArray64);
        char[] charArray70 = new char[] { '#', ' ', '#', '#' };
        char[] charArray73 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder53.append(charArray70, charArray73);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder18.append(charArray51, charArray70);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder18.appendSuper(false);
        int[] intArray81 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray86 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder77.append(intArray81, intArray86);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder11.append(intArray12, intArray86);
        int[] intArray90 = new int[] { (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder0.append(intArray12, intArray90);
        java.lang.Object obj92 = null;
        boolean boolean94 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder91, obj92, false);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder11);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[]");
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray35), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[]");
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray56), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[1]");
        org.junit.Assert.assertNotNull(equalsBuilder91);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test1719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1719");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder5.append((short) (byte) 10, (short) 0);
        long[] longArray14 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray16 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append(longArray14, longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder18.append((short) (byte) 10, (short) 0);
        long[] longArray27 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray29 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(longArray27, longArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append(longArray14, longArray29);
        java.lang.Boolean boolean32 = equalsBuilder31.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder31.append((byte) 1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder35.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder37.append('a', '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder37.append((byte) 0, (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder37.append(false, false);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(equalsBuilder46);
    }

    @Test
    public void test1720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1720");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        long[] longArray65 = null;
        long[] longArray72 = new long[] { 1, (byte) -1, (-1), (short) 1, 100L, '#' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder64.append(longArray65, longArray72);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder64.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder64.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder77.append(false, true);
        java.lang.Boolean boolean81 = equalsBuilder80.build();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(longArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray72), "[1, -1, -1, 1, 100, 35]");
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertEquals("'" + boolean81 + "' != '" + false + "'", boolean81, false);
    }

    @Test
    public void test1721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1721");
        java.lang.Object obj0 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder1 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray4 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray5 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder1.append(shortArray4, shortArray5);
        byte[] byteArray7 = new byte[] {};
        byte[] byteArray12 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder1.append(byteArray7, byteArray12);
        java.lang.String[] strArray15 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        boolean boolean18 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj0, (java.lang.Object) equalsBuilder13, (java.util.Collection<java.lang.String>) strList16);
        boolean boolean19 = equalsBuilder13.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder13.append((float) (byte) 1, (float) 1L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder13.append((short) (byte) 10, (short) 0);
        java.lang.Class<?> wildcardClass26 = equalsBuilder25.getClass();
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test1722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1722");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder17.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder19.append((byte) 10, (byte) 0);
        boolean boolean23 = equalsBuilder22.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = equalsBuilder22.append(false, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder22.append((byte) 0, (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder32 = equalsBuilder22.append((float) 0L, (float) (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder32.append((long) (byte) -1, (long) (short) 1);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(equalsBuilder26);
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(equalsBuilder32);
        org.junit.Assert.assertNotNull(equalsBuilder35);
    }

    @Test
    public void test1723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1723");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder0.append('#', '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder0.appendSuper(true);
        java.lang.Boolean boolean9 = equalsBuilder0.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append((float) (byte) 10, 0.0f);
        java.lang.Class<?> wildcardClass13 = equalsBuilder12.getClass();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertEquals("'" + boolean9 + "' != '" + false + "'", boolean9, false);
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test1724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1724");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        java.lang.Boolean boolean4 = equalsBuilder3.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder3.append((byte) 0, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = equalsBuilder3.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder9.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder9.append((short) 0, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder15.append((short) 0, (short) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder15.append((short) (byte) -1, (short) -1);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + true + "'", boolean4, true);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(equalsBuilder9);
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(equalsBuilder21);
    }

    @Test
    public void test1725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1725");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        equalsBuilder62.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder62.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder62.append((short) 10, (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder69.append((float) (short) 100, 0.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder69.append(false, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder75.append((-1L), (long) (byte) 0);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder78);
    }

    @Test
    public void test1726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1726");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((double) 100.0f, (double) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder5.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder5.appendSuper(true);
        equalsBuilder21.reset();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder21);
    }

    @Test
    public void test1727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1727");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        float[] floatArray18 = new float[] { (byte) -1, 10.0f, 'a', ' ', (short) -1 };
        float[] floatArray21 = new float[] { 1.0f, 0L };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder12.append(floatArray18, floatArray21);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder12.append((float) 0L, 10.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder25.append('#', '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray32 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray33 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder29.append(shortArray32, shortArray33);
        byte[] byteArray35 = new byte[] {};
        byte[] byteArray40 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = equalsBuilder29.append(byteArray35, byteArray40);
        char[] charArray46 = new char[] { '#', ' ', '#', '#' };
        char[] charArray49 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder29.append(charArray46, charArray49);
        char[] charArray53 = new char[] { 'a', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder25.append(charArray49, charArray53);
        boolean boolean55 = equalsBuilder25.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = equalsBuilder25.appendSuper(false);
        equalsBuilder25.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder25.appendSuper(false);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[-1.0, 10.0, 97.0, 32.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray21), "[1.0, 0.0]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray33), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[]");
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder41);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "a ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "a ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[a,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(equalsBuilder57);
        org.junit.Assert.assertNotNull(equalsBuilder60);
    }

    @Test
    public void test1728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1728");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder17.append((java.lang.Object) boolean37, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray52 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray56 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray57 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder53.append(shortArray56, shortArray57);
        byte[] byteArray59 = new byte[] {};
        byte[] byteArray64 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder53.append(byteArray59, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder46.append(byteArray52, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder46.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder39.append((java.lang.Object) equalsBuilder45, (java.lang.Object) equalsBuilder46);
        long[] longArray73 = new long[] { (byte) 100, ' ', (short) 10 };
        long[] longArray79 = new long[] { 'a', 0L, (short) 10, (byte) 0, (byte) -1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder46.append(longArray73, longArray79);
        java.lang.Boolean boolean81 = equalsBuilder80.build();
        equalsBuilder80.reset();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray56), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(longArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray73), "[100, 32, 10]");
        org.junit.Assert.assertNotNull(longArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray79), "[97, 0, 10, 0, -1]");
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertEquals("'" + boolean81 + "' != '" + false + "'", boolean81, false);
    }

    @Test
    public void test1729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1729");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        long[] longArray9 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray11 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(longArray9, longArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder14 = equalsBuilder0.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray18 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray19 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder15.append(shortArray18, shortArray19);
        byte[] byteArray21 = new byte[] {};
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder15.append(byteArray21, byteArray26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder15.append((double) 100L, (double) 10L);
        boolean boolean31 = equalsBuilder15.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder15.append(0, (int) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder15.append(true, true);
        boolean boolean39 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) true, (java.lang.Object) equalsBuilder37, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder37.append((short) (byte) -1, (short) (byte) 0);
        java.lang.Object obj43 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder44.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder44.append((-1), (int) (short) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder50.append((-1L), 100L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder53.append((int) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder59 = equalsBuilder53.append((byte) -1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder42.append(obj43, (java.lang.Object) (byte) 0);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder14);
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(equalsBuilder59);
        org.junit.Assert.assertNotNull(equalsBuilder60);
    }

    @Test
    public void test1730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1730");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray6 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray10 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray11 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder7.append(shortArray10, shortArray11);
        byte[] byteArray13 = new byte[] {};
        byte[] byteArray18 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder7.append(byteArray13, byteArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder0.append(byteArray6, byteArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder0.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder22.appendSuper(true);
        java.lang.Class<?> wildcardClass25 = equalsBuilder22.getClass();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray29 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray30 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder26.append(shortArray29, shortArray30);
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean40 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder31, (java.lang.Object) '#', strArray39);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder31.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray47 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray48 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = equalsBuilder44.append(shortArray47, shortArray48);
        byte[] byteArray50 = new byte[] {};
        byte[] byteArray55 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder44.append(byteArray50, byteArray55);
        char[] charArray61 = new char[] { '#', ' ', '#', '#' };
        char[] charArray64 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder44.append(charArray61, charArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray69 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray70 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder66.append(shortArray69, shortArray70);
        byte[] byteArray72 = new byte[] {};
        byte[] byteArray77 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder66.append(byteArray72, byteArray77);
        char[] charArray83 = new char[] { '#', ' ', '#', '#' };
        char[] charArray86 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder66.append(charArray83, charArray86);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder31.append(charArray64, charArray83);
        equalsBuilder88.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder88.append((byte) 10, (byte) -1);
        boolean boolean94 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) wildcardClass25, (java.lang.Object) equalsBuilder92, false);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(shortArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray29), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(shortArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray47), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray48), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder49);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[]");
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(shortArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray69), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray70), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder71);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[]");
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(charArray83);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray83), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray83), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray83), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray86);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray86), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray86), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray86), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test1731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1731");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder17.append((java.lang.Object) boolean37, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray52 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray56 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray57 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder53.append(shortArray56, shortArray57);
        byte[] byteArray59 = new byte[] {};
        byte[] byteArray64 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder53.append(byteArray59, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder46.append(byteArray52, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder46.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder39.append((java.lang.Object) equalsBuilder45, (java.lang.Object) equalsBuilder46);
        long[] longArray73 = new long[] { (byte) 100, ' ', (short) 10 };
        long[] longArray79 = new long[] { 'a', 0L, (short) 10, (byte) 0, (byte) -1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder46.append(longArray73, longArray79);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder80.append((short) 0, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder83.append(0, (int) (short) 0);
        boolean boolean87 = equalsBuilder83.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder83.append((byte) -1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder83.append((double) '#', 10.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder96 = equalsBuilder93.append(0.0f, (float) 0);
        boolean boolean97 = equalsBuilder96.isEquals();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray56), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(longArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray73), "[100, 32, 10]");
        org.junit.Assert.assertNotNull(longArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray79), "[97, 0, 10, 0, -1]");
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertNotNull(equalsBuilder93);
        org.junit.Assert.assertNotNull(equalsBuilder96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test1732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1732");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        float[] floatArray18 = new float[] { (byte) -1, 10.0f, 'a', ' ', (short) -1 };
        float[] floatArray21 = new float[] { 1.0f, 0L };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder12.append(floatArray18, floatArray21);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder12.append(true, true);
        byte[] byteArray29 = new byte[] { (byte) 100, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray33 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray34 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder30.append(shortArray33, shortArray34);
        byte[] byteArray36 = new byte[] {};
        byte[] byteArray41 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder30.append(byteArray36, byteArray41);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder25.append(byteArray29, byteArray36);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder43.append((int) (short) 10, (int) (byte) 100);
        equalsBuilder43.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder43.append((byte) 1, (byte) 1);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[-1.0, 10.0, 97.0, 32.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray21), "[1.0, 0.0]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[100, 10, 1]");
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray33), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[]");
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(equalsBuilder50);
    }

    @Test
    public void test1733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1733");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder12.append((byte) 10, (byte) 0);
        equalsBuilder12.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder12.append((double) ' ', (double) (short) 100);
        equalsBuilder12.reset();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(equalsBuilder19);
    }

    @Test
    public void test1734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1734");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((double) 100.0f, (double) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder5.append((short) 0, (short) -1);
        boolean boolean21 = equalsBuilder5.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder5.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder25.append((short) (byte) 10, (short) 0);
        equalsBuilder25.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder30.append((short) (byte) 10, (short) 0);
        long[] longArray39 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray41 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder30.append(longArray39, longArray41);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder43.append((short) (byte) 10, (short) 0);
        long[] longArray52 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray54 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder43.append(longArray52, longArray54);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder25.append(longArray39, longArray54);
        java.lang.Boolean boolean57 = equalsBuilder56.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray61 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray62 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder58.append(shortArray61, shortArray62);
        byte[] byteArray64 = new byte[] {};
        byte[] byteArray69 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder58.append(byteArray64, byteArray69);
        float[] floatArray76 = new float[] { (byte) -1, 10.0f, 'a', ' ', (short) -1 };
        float[] floatArray79 = new float[] { 1.0f, 0L };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder70.append(floatArray76, floatArray79);
        float[] floatArray85 = new float[] { (-1), (byte) 10, (-1), (short) 100 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder56.append(floatArray79, floatArray85);
        boolean boolean88 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) equalsBuilder86, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder5.append((int) '#', (int) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder94 = equalsBuilder91.append((long) (byte) 100, (long) (short) -1);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(longArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray39), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray41), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(longArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray52), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray54), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertEquals("'" + boolean57 + "' != '" + false + "'", boolean57, false);
        org.junit.Assert.assertNotNull(shortArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray61), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray62), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[]");
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(floatArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray76), "[-1.0, 10.0, 97.0, 32.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray79), "[1.0, 0.0]");
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(floatArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray85), "[-1.0, 10.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(equalsBuilder91);
        org.junit.Assert.assertNotNull(equalsBuilder94);
    }

    @Test
    public void test1735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1735");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        equalsBuilder62.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder62.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder62.append((short) 10, (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder69.append((float) (short) 100, 0.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder69.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder69.append(' ', 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder69.appendSuper(false);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder79);
    }

    @Test
    public void test1736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1736");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder17.append((byte) 100, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray25 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray26 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder22.append(shortArray25, shortArray26);
        byte[] byteArray28 = new byte[] {};
        byte[] byteArray33 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder22.append(byteArray28, byteArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder34.append((byte) 10, (byte) 0);
        boolean boolean38 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder17, (java.lang.Object) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder17.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray44 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray45 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder41.append(shortArray44, shortArray45);
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean55 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder46, (java.lang.Object) '#', strArray54);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder46.append((int) (short) -1, (int) (short) 0);
        boolean boolean59 = equalsBuilder58.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder58.append((byte) 100, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder58.append((long) '#', 1L);
        java.lang.Boolean boolean66 = equalsBuilder58.build();
        boolean boolean68 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) true, (java.lang.Object) equalsBuilder58, true);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[]");
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray45), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertEquals("'" + boolean66 + "' != '" + false + "'", boolean66, false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test1737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1737");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        long[] longArray9 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray11 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(longArray9, longArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray16 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray17 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder13.append(shortArray16, shortArray17);
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean27 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder18, (java.lang.Object) '#', strArray26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append((int) (short) -1, (int) (short) 0);
        boolean boolean31 = equalsBuilder30.isEquals();
        boolean boolean32 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder12, (java.lang.Object) boolean31);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder12.append((short) 0, (short) 100);
        java.lang.String[] strArray39 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList40 = new java.util.ArrayList<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        boolean boolean42 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder12, (java.lang.Object) (short) 0, (java.util.Collection<java.lang.String>) strList40);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder12.append((long) (byte) 0, 0L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder12.append((float) (byte) 100, (float) (short) 10);
        boolean boolean49 = equalsBuilder48.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder48.append((float) (-1L), (float) (-1L));
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(equalsBuilder52);
    }

    @Test
    public void test1738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1738");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder5.append((short) (byte) 10, (short) 0);
        long[] longArray14 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray16 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append(longArray14, longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder18.append((short) (byte) 10, (short) 0);
        long[] longArray27 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray29 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(longArray27, longArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append(longArray14, longArray29);
        java.lang.Boolean boolean32 = equalsBuilder31.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray36 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray37 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder33.append(shortArray36, shortArray37);
        byte[] byteArray39 = new byte[] {};
        byte[] byteArray44 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder33.append(byteArray39, byteArray44);
        float[] floatArray51 = new float[] { (byte) -1, 10.0f, 'a', ' ', (short) -1 };
        float[] floatArray54 = new float[] { 1.0f, 0L };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder45.append(floatArray51, floatArray54);
        float[] floatArray60 = new float[] { (-1), (byte) 10, (-1), (short) 100 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder31.append(floatArray54, floatArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder31.append((double) 1L, (double) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray68 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray69 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder65.append(shortArray68, shortArray69);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder65.append((long) (byte) 1, (long) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder73.append((float) (-1), (float) (byte) 100);
        boolean boolean78 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder64, (java.lang.Object) equalsBuilder73, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder73.append((float) (short) -1, (float) 100);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
        org.junit.Assert.assertNotNull(shortArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray36), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[]");
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(floatArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray51), "[-1.0, 10.0, 97.0, 32.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray54), "[1.0, 0.0]");
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(floatArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray60), "[-1.0, 10.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(shortArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray68), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray69), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(equalsBuilder81);
    }

    @Test
    public void test1739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1739");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder0.append((long) (byte) 1, (long) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder11 = equalsBuilder0.append('a', ' ');
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertNotNull(equalsBuilder11);
    }

    @Test
    public void test1740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1740");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        char[] charArray17 = new char[] { '#', ' ', '#', '#' };
        char[] charArray20 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(charArray17, charArray20);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder21.append('a', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder24.append((-1), (-1));
        java.lang.Class<?> wildcardClass28 = equalsBuilder27.getClass();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test1741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1741");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        float[] floatArray65 = null;
        float[] floatArray66 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder64.append(floatArray65, floatArray66);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder64.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder72.append((short) (byte) 10, (short) 0);
        equalsBuilder72.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder72.append((double) 'a', (double) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder70.append((java.lang.Object) (short) 0, (java.lang.Object) equalsBuilder79);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder80.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder82.append(true, false);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(equalsBuilder85);
    }

    @Test
    public void test1742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1742");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder62.append(100, (int) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder62.append((short) 10, (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder62.append('#', '#');
        equalsBuilder62.reset();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder71);
    }

    @Test
    public void test1743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1743");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder0.append((-1), (int) (short) 10);
        java.lang.Object obj7 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray14 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray18 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray19 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder15.append(shortArray18, shortArray19);
        byte[] byteArray21 = new byte[] {};
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder15.append(byteArray21, byteArray26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder8.append(byteArray14, byteArray26);
        boolean boolean30 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj7, (java.lang.Object) byteArray26, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray37 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray41 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray42 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder38.append(shortArray41, shortArray42);
        byte[] byteArray44 = new byte[] {};
        byte[] byteArray49 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder38.append(byteArray44, byteArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder31.append(byteArray37, byteArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder0.append(byteArray26, byteArray37);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder52.append(false, true);
        java.lang.Boolean boolean56 = equalsBuilder52.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder59 = equalsBuilder52.append((int) (byte) 10, 10);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray41), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertEquals("'" + boolean56 + "' != '" + false + "'", boolean56, false);
        org.junit.Assert.assertNotNull(equalsBuilder59);
    }

    @Test
    public void test1744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1744");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.append((byte) 100, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder0.append(100.0d, (double) ' ');
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(equalsBuilder18);
    }

    @Test
    public void test1745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1745");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        boolean[] booleanArray68 = new boolean[] { true, true, false };
        boolean[] booleanArray69 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder5.append(booleanArray68, booleanArray69);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder5.append((short) -1, (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder5.appendSuper(false);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray68), "[true, true, false]");
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder75);
    }

    @Test
    public void test1746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1746");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        java.lang.Boolean boolean4 = equalsBuilder3.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder3.append((byte) 0, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = equalsBuilder3.appendSuper(true);
        boolean boolean10 = equalsBuilder9.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder11 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray14 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray15 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = equalsBuilder11.append(shortArray14, shortArray15);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray23 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray27 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray28 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder24.append(shortArray27, shortArray28);
        byte[] byteArray30 = new byte[] {};
        byte[] byteArray35 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append(byteArray30, byteArray35);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder17.append(byteArray23, byteArray35);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray42 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray43 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder39.append(shortArray42, shortArray43);
        byte[] byteArray45 = new byte[] {};
        byte[] byteArray50 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder39.append(byteArray45, byteArray50);
        boolean boolean52 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (short) 0, (java.lang.Object) byteArray50);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder11.append(byteArray23, byteArray50);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray57 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray58 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder59 = equalsBuilder54.append(shortArray57, shortArray58);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray66 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray70 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray71 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder67.append(shortArray70, shortArray71);
        byte[] byteArray73 = new byte[] {};
        byte[] byteArray78 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder67.append(byteArray73, byteArray78);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder60.append(byteArray66, byteArray78);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray85 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray86 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder82.append(shortArray85, shortArray86);
        byte[] byteArray88 = new byte[] {};
        byte[] byteArray93 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder94 = equalsBuilder82.append(byteArray88, byteArray93);
        boolean boolean95 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (short) 0, (java.lang.Object) byteArray93);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder96 = equalsBuilder54.append(byteArray66, byteArray93);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder97 = equalsBuilder9.append(byteArray50, byteArray66);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + true + "'", boolean4, true);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(equalsBuilder9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shortArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray15), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder16);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray28), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray58), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder59);
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray70), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray71), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(byteArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray73), "[]");
        org.junit.Assert.assertNotNull(byteArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray78), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(shortArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray85), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray86), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(byteArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray88), "[]");
        org.junit.Assert.assertNotNull(byteArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray93), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(equalsBuilder96);
        org.junit.Assert.assertNotNull(equalsBuilder97);
    }

    @Test
    public void test1747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1747");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        long[] longArray65 = null;
        long[] longArray72 = new long[] { 1, (byte) -1, (-1), (short) 1, 100L, '#' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder64.append(longArray65, longArray72);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder64.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder75.append((long) (short) -1, (long) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder75.append((float) (byte) 1, (float) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder75.appendSuper(true);
        double[] doubleArray84 = null;
        double[] doubleArray90 = new double[] { 0.0d, 1L, (-1.0f), ' ', '#' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder83.append(doubleArray84, doubleArray90);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder83.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder96 = equalsBuilder83.append((double) '#', 100.0d);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(longArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray72), "[1, -1, -1, 1, 100, 35]");
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[0.0, 1.0, -1.0, 32.0, 35.0]");
        org.junit.Assert.assertNotNull(equalsBuilder91);
        org.junit.Assert.assertNotNull(equalsBuilder93);
        org.junit.Assert.assertNotNull(equalsBuilder96);
    }

    @Test
    public void test1748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1748");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        float[] floatArray65 = null;
        float[] floatArray66 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder64.append(floatArray65, floatArray66);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder64.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder64.append((float) 100L, (float) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder64.append((int) (short) 10, 0);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder76);
    }

    @Test
    public void test1749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1749");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((double) 100.0f, (double) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder5.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder5.append((short) (byte) 1, (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder22.append((byte) 100, (byte) 10);
        equalsBuilder22.reset();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder25);
    }

    @Test
    public void test1750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1750");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray6 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray10 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray11 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder7.append(shortArray10, shortArray11);
        byte[] byteArray13 = new byte[] {};
        byte[] byteArray18 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder7.append(byteArray13, byteArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder0.append(byteArray6, byteArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray24 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray25 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = equalsBuilder21.append(shortArray24, shortArray25);
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean35 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder26, (java.lang.Object) '#', strArray34);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder26.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray42 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray43 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder39.append(shortArray42, shortArray43);
        byte[] byteArray45 = new byte[] {};
        byte[] byteArray50 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder39.append(byteArray45, byteArray50);
        char[] charArray56 = new char[] { '#', ' ', '#', '#' };
        char[] charArray59 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder39.append(charArray56, charArray59);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray64 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray65 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder61.append(shortArray64, shortArray65);
        byte[] byteArray67 = new byte[] {};
        byte[] byteArray72 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder61.append(byteArray67, byteArray72);
        char[] charArray78 = new char[] { '#', ' ', '#', '#' };
        char[] charArray81 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder61.append(charArray78, charArray81);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder26.append(charArray59, charArray78);
        char[] charArray88 = new char[] { '#', '#', '4', '4' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder20.append(charArray78, charArray88);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder89.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder94 = equalsBuilder89.append((short) (byte) 1, (short) (byte) 1);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray24), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder26);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder60);
        org.junit.Assert.assertNotNull(shortArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray64), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray65), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[]");
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray81), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray81), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray81), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(charArray88);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray88), "##44");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray88), "##44");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray88), "[#, #, 4, 4]");
        org.junit.Assert.assertNotNull(equalsBuilder89);
        org.junit.Assert.assertNotNull(equalsBuilder91);
        org.junit.Assert.assertNotNull(equalsBuilder94);
    }

    @Test
    public void test1751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1751");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        long[] longArray9 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray11 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(longArray9, longArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = equalsBuilder13.append((short) (byte) 10, (short) 0);
        long[] longArray22 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray24 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder13.append(longArray22, longArray24);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray29 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray30 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder26.append(shortArray29, shortArray30);
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean40 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder31, (java.lang.Object) '#', strArray39);
        boolean boolean41 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) longArray24, (java.lang.Object) '#');
        boolean boolean43 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder0, (java.lang.Object) '#', false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder0.append((short) (byte) 0, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = equalsBuilder0.append((long) 10, (long) (short) 10);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder16);
        org.junit.Assert.assertNotNull(longArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray22), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray24), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(shortArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray29), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(equalsBuilder49);
    }

    @Test
    public void test1752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1752");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder3.append(true, false);
        char[] charArray13 = new char[] { 'a', '4', 'a', 'a', '4', 'a' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder14 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray17 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray18 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder14.append(shortArray17, shortArray18);
        byte[] byteArray20 = new byte[] {};
        byte[] byteArray25 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = equalsBuilder14.append(byteArray20, byteArray25);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder14.append((double) 100L, (double) 10L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray33 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray34 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder30.append(shortArray33, shortArray34);
        java.lang.String[] strArray43 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean44 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder35, (java.lang.Object) '#', strArray43);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder35.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray51 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray52 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder48.append(shortArray51, shortArray52);
        byte[] byteArray54 = new byte[] {};
        byte[] byteArray59 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder48.append(byteArray54, byteArray59);
        char[] charArray65 = new char[] { '#', ' ', '#', '#' };
        char[] charArray68 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder48.append(charArray65, charArray68);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray73 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray74 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder70.append(shortArray73, shortArray74);
        byte[] byteArray76 = new byte[] {};
        byte[] byteArray81 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder70.append(byteArray76, byteArray81);
        char[] charArray87 = new char[] { '#', ' ', '#', '#' };
        char[] charArray90 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder70.append(charArray87, charArray90);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder35.append(charArray68, charArray87);
        java.lang.Object obj93 = null;
        boolean boolean94 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) charArray68, obj93);
        java.lang.String[] strArray95 = new java.lang.String[] {};
        boolean boolean96 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder29, (java.lang.Object) charArray68, strArray95);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder97 = equalsBuilder3.append(charArray13, charArray68);
        boolean boolean98 = equalsBuilder3.isEquals();
        boolean boolean99 = equalsBuilder3.isEquals();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a4aa4a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a4aa4a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a, 4, a, a, 4, a]");
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder26);
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray33), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(shortArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray51), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray52), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[]");
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder60);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(shortArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray73), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray74), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(byteArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray76), "[]");
        org.junit.Assert.assertNotNull(byteArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray81), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(charArray87);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray87), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray87), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray87), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray90);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray90), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray90), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray90), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder91);
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(strArray95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNotNull(equalsBuilder97);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test1753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1753");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.append((double) 100L, (double) 10L);
        boolean boolean16 = equalsBuilder0.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(0, (int) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder19.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append((int) (short) -1, (int) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder24.append((-1L), 0L);
        boolean boolean28 = equalsBuilder24.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder24.append((-1L), (long) (byte) 0);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(equalsBuilder31);
    }

    @Test
    public void test1754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1754");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray6 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray10 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray11 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder7.append(shortArray10, shortArray11);
        byte[] byteArray13 = new byte[] {};
        byte[] byteArray18 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder7.append(byteArray13, byteArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder0.append(byteArray6, byteArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder0.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder22.appendSuper(true);
        boolean boolean25 = equalsBuilder24.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder26.append((short) (byte) 10, (short) 0);
        equalsBuilder26.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append((short) (byte) 10, (short) 0);
        long[] longArray40 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray42 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder31.append(longArray40, longArray42);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder44.append((short) (byte) 10, (short) 0);
        long[] longArray53 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray55 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder44.append(longArray53, longArray55);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = equalsBuilder26.append(longArray40, longArray55);
        java.lang.Boolean boolean58 = equalsBuilder57.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder59 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray62 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray63 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder59.append(shortArray62, shortArray63);
        byte[] byteArray65 = new byte[] {};
        byte[] byteArray70 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder59.append(byteArray65, byteArray70);
        float[] floatArray77 = new float[] { (byte) -1, 10.0f, 'a', ' ', (short) -1 };
        float[] floatArray80 = new float[] { 1.0f, 0L };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder71.append(floatArray77, floatArray80);
        float[] floatArray86 = new float[] { (-1), (byte) 10, (-1), (short) 100 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder57.append(floatArray80, floatArray86);
        float[] floatArray89 = new float[] { (-1.0f) };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder24.append(floatArray86, floatArray89);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder24.append((long) 'a', 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(longArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray40), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray42), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(longArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray53), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray55), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(equalsBuilder57);
        org.junit.Assert.assertEquals("'" + boolean58 + "' != '" + false + "'", boolean58, false);
        org.junit.Assert.assertNotNull(shortArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray62), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray63), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[]");
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder71);
        org.junit.Assert.assertNotNull(floatArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray77), "[-1.0, 10.0, 97.0, 32.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray80), "[1.0, 0.0]");
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(floatArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray86), "[-1.0, 10.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(floatArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray89), "[-1.0]");
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertNotNull(equalsBuilder93);
    }

    @Test
    public void test1755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1755");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder5.append((short) (byte) 10, (short) 0);
        long[] longArray14 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray16 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append(longArray14, longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder18.append((short) (byte) 10, (short) 0);
        long[] longArray27 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray29 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(longArray27, longArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append(longArray14, longArray29);
        java.lang.Boolean boolean32 = equalsBuilder31.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder31.append((double) (short) -1, (double) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder31.append((short) 0, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = equalsBuilder31.append('#', ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder31.append(0, (int) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder44.append((byte) 1, (byte) 100);
        equalsBuilder44.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray52 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray53 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder49.append(shortArray52, shortArray53);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = equalsBuilder54.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder57.append((short) (byte) 10, (short) -1);
        boolean boolean61 = equalsBuilder57.isEquals();
        boolean boolean63 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder44, (java.lang.Object) boolean61, true);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(equalsBuilder41);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(shortArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray52), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray53), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder54);
        org.junit.Assert.assertNotNull(equalsBuilder57);
        org.junit.Assert.assertNotNull(equalsBuilder60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test1756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1756");
        java.lang.Object obj0 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder1 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray4 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray5 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder1.append(shortArray4, shortArray5);
        byte[] byteArray7 = new byte[] {};
        byte[] byteArray12 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder1.append(byteArray7, byteArray12);
        java.lang.String[] strArray15 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        boolean boolean18 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj0, (java.lang.Object) equalsBuilder13, (java.util.Collection<java.lang.String>) strList16);
        boolean boolean19 = equalsBuilder13.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder13.append((float) (byte) 1, (float) 1L);
        boolean boolean23 = equalsBuilder13.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = equalsBuilder13.append(' ', ' ');
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(equalsBuilder26);
    }

    @Test
    public void test1757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1757");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder17.append((java.lang.Object) boolean37, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray52 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray56 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray57 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder53.append(shortArray56, shortArray57);
        byte[] byteArray59 = new byte[] {};
        byte[] byteArray64 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder53.append(byteArray59, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder46.append(byteArray52, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder46.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder39.append((java.lang.Object) equalsBuilder45, (java.lang.Object) equalsBuilder46);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder46.append((byte) 0, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder72.append((int) (short) 0, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder75.append((long) (short) 0, (long) (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder78.append((long) 0, (long) (-1));
        java.lang.Boolean boolean82 = equalsBuilder78.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder78.append((long) ' ', (long) 0);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray56), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertEquals("'" + boolean82 + "' != '" + false + "'", boolean82, false);
        org.junit.Assert.assertNotNull(equalsBuilder85);
    }

    @Test
    public void test1758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1758");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray9 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray10 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder11 = equalsBuilder6.append(shortArray9, shortArray10);
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean20 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder11, (java.lang.Object) '#', strArray19);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder11.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray27 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray28 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder24.append(shortArray27, shortArray28);
        byte[] byteArray30 = new byte[] {};
        byte[] byteArray35 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append(byteArray30, byteArray35);
        char[] charArray41 = new char[] { '#', ' ', '#', '#' };
        char[] charArray44 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder24.append(charArray41, charArray44);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray49 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray50 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder46.append(shortArray49, shortArray50);
        byte[] byteArray52 = new byte[] {};
        byte[] byteArray57 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder46.append(byteArray52, byteArray57);
        char[] charArray63 = new char[] { '#', ' ', '#', '#' };
        char[] charArray66 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder46.append(charArray63, charArray66);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder11.append(charArray44, charArray63);
        java.lang.String[] strArray69 = null;
        boolean boolean70 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) shortArray4, (java.lang.Object) equalsBuilder11, strArray69);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder11.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder73.append((short) (byte) -1, (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder73.append('#', ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder79.append((byte) 100, (byte) 10);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder11);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray28), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray49), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray50), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder76);
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertNotNull(equalsBuilder82);
    }

    @Test
    public void test1759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1759");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        equalsBuilder74.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder74.append((int) (byte) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder74.append((double) 100L, (double) (-1L));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder81.append((int) (short) 100, (int) (short) 0);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
    }

    @Test
    public void test1760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1760");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder3.append((long) (byte) 100, 1L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder10 = equalsBuilder7.append((short) (byte) 10, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder7.append('#', '4');
        java.lang.Boolean boolean14 = equalsBuilder7.build();
        boolean boolean16 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder3, (java.lang.Object) equalsBuilder7, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder3.append(10, 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder3.append((byte) 10, (byte) 1);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(equalsBuilder10);
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertEquals("'" + boolean14 + "' != '" + false + "'", boolean14, false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder22);
    }

    @Test
    public void test1761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1761");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        float[] floatArray18 = new float[] { (byte) -1, 10.0f, 'a', ' ', (short) -1 };
        float[] floatArray21 = new float[] { 1.0f, 0L };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder12.append(floatArray18, floatArray21);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder12.append(true, true);
        byte[] byteArray29 = new byte[] { (byte) 100, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray33 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray34 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder30.append(shortArray33, shortArray34);
        byte[] byteArray36 = new byte[] {};
        byte[] byteArray41 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder30.append(byteArray36, byteArray41);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder25.append(byteArray29, byteArray36);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder43.append((byte) 0, (byte) 1);
        boolean boolean47 = equalsBuilder46.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder46.append((float) (byte) 10, (-1.0f));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder46.append((double) 1.0f, (double) 1L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder46.append((double) (byte) 100, (double) (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder59 = equalsBuilder56.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder59.append(' ', '4');
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[-1.0, 10.0, 97.0, 32.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray21), "[1.0, 0.0]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[100, 10, 1]");
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray33), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[]");
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(equalsBuilder59);
        org.junit.Assert.assertNotNull(equalsBuilder62);
    }

    @Test
    public void test1762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1762");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder12.append((byte) 10, (byte) 0);
        boolean boolean16 = equalsBuilder15.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray20 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray21 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder17.append(shortArray20, shortArray21);
        byte[] byteArray23 = new byte[] {};
        byte[] byteArray28 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder17.append(byteArray23, byteArray28);
        byte[] byteArray30 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder15.append(byteArray28, byteArray30);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder15.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray38 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray39 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder35.append(shortArray38, shortArray39);
        byte[] byteArray41 = new byte[] {};
        byte[] byteArray46 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder35.append(byteArray41, byteArray46);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder35.append((double) 100L, (double) 10L);
        boolean boolean51 = equalsBuilder35.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder35.append(0, (int) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray58 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray59 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder55.append(shortArray58, shortArray59);
        byte[] byteArray61 = new byte[] {};
        byte[] byteArray66 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder55.append(byteArray61, byteArray66);
        java.lang.String[] strArray71 = new java.lang.String[] { "", "hi!", "" };
        boolean boolean72 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder54, (java.lang.Object) byteArray66, strArray71);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray76 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray77 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder73.append(shortArray76, shortArray77);
        byte[] byteArray79 = new byte[] {};
        byte[] byteArray84 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder73.append(byteArray79, byteArray84);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder34.append(byteArray66, byteArray84);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder34.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder34.append((double) (short) -1, 0.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder94 = equalsBuilder34.append((byte) 0, (byte) 0);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray39), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[]");
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(equalsBuilder54);
        org.junit.Assert.assertNotNull(shortArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray58), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray59), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder60);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[]");
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(shortArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray76), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray77), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(byteArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray79), "[]");
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertNotNull(equalsBuilder91);
        org.junit.Assert.assertNotNull(equalsBuilder94);
    }

    @Test
    public void test1763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1763");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.append((double) 100L, (double) 10L);
        boolean boolean16 = equalsBuilder0.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(0, (int) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder19.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append((int) (short) -1, (int) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder19.append((byte) 1, (byte) 100);
        equalsBuilder19.reset();
        java.lang.Object obj29 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray33 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray34 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder30.append(shortArray33, shortArray34);
        byte[] byteArray36 = new byte[] {};
        byte[] byteArray41 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder30.append(byteArray36, byteArray41);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder30.append((double) 100L, (double) 10L);
        boolean boolean46 = equalsBuilder30.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = equalsBuilder30.append(0, (int) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray53 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray54 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder50.append(shortArray53, shortArray54);
        byte[] byteArray56 = new byte[] {};
        byte[] byteArray61 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder50.append(byteArray56, byteArray61);
        java.lang.String[] strArray66 = new java.lang.String[] { "", "hi!", "" };
        boolean boolean67 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder49, (java.lang.Object) byteArray61, strArray66);
        boolean boolean68 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder19, obj29, strArray66);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder19.append(10, (int) '#');
        java.lang.Boolean boolean72 = equalsBuilder19.build();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray33), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[]");
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(equalsBuilder49);
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray53), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray54), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[]");
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(equalsBuilder71);
        org.junit.Assert.assertEquals("'" + boolean72 + "' != '" + false + "'", boolean72, false);
    }

    @Test
    public void test1764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1764");
        java.lang.Object obj0 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder1 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray4 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray5 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder1.append(shortArray4, shortArray5);
        byte[] byteArray7 = new byte[] {};
        byte[] byteArray12 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder1.append(byteArray7, byteArray12);
        java.lang.String[] strArray15 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        boolean boolean18 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj0, (java.lang.Object) equalsBuilder13, (java.util.Collection<java.lang.String>) strList16);
        boolean boolean19 = equalsBuilder13.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder13.append((float) (byte) 1, (float) 1L);
        boolean boolean23 = equalsBuilder13.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = equalsBuilder13.append('4', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder26.append((double) 1, (double) 0L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder26.appendSuper(false);
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(equalsBuilder26);
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(equalsBuilder31);
    }

    @Test
    public void test1765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1765");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder0.append((long) 0, 0L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = equalsBuilder0.append((int) (byte) 0, (-1));
        java.lang.Object obj10 = null;
        boolean boolean11 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (-1), obj10);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(equalsBuilder9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1766");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        long[] longArray9 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray11 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(longArray9, longArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder14 = equalsBuilder0.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = equalsBuilder0.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder17.append((short) (byte) 10, (short) 0);
        long[] longArray26 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray28 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder17.append(longArray26, longArray28);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder30.append((short) (byte) 10, (short) 0);
        equalsBuilder30.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder35.append((short) (byte) 10, (short) 0);
        long[] longArray44 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray46 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder35.append(longArray44, longArray46);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder48.append((short) (byte) 10, (short) 0);
        long[] longArray57 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray59 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder48.append(longArray57, longArray59);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder30.append(longArray44, longArray59);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder0.append(longArray28, longArray44);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder62.append((short) 0, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder62.append('#', ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder62.append((short) 0, (short) (byte) -1);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder14);
        org.junit.Assert.assertNotNull(equalsBuilder16);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray28), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(longArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray44), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray46), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(longArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray57), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray59), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder60);
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder71);
    }

    @Test
    public void test1767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1767");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        equalsBuilder74.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder74.append('4', ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder78.append((byte) 0, (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder81.append('#', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder81.append(true, false);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder87);
    }

    @Test
    public void test1768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1768");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.append((double) 100L, (double) 10L);
        boolean boolean16 = equalsBuilder0.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(0, (int) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder0.append(true, true);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = equalsBuilder0.append((short) (byte) 100, (short) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder0.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder32 = equalsBuilder0.append((byte) 0, (byte) 1);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder26);
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(equalsBuilder32);
    }

    @Test
    public void test1769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1769");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        equalsBuilder74.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder74.append((int) (byte) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder74.append((double) 100L, (double) (-1L));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder81.append((short) (byte) -1, (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder84.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder84.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder84.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder95 = equalsBuilder92.append((long) '#', 0L);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertNotNull(equalsBuilder89);
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertNotNull(equalsBuilder95);
    }

    @Test
    public void test1770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1770");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        equalsBuilder62.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder62.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder62.append((short) 10, (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder69.append((float) (short) 100, 0.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder72.append((double) (byte) 10, (double) 1.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder72.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder78.append((long) (byte) -1, 1L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder81.append((short) (byte) 1, (short) (byte) 10);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
    }

    @Test
    public void test1771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1771");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        float[] floatArray18 = new float[] { (byte) -1, 10.0f, 'a', ' ', (short) -1 };
        float[] floatArray21 = new float[] { 1.0f, 0L };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder12.append(floatArray18, floatArray21);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder12.append((float) 0L, 10.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder25.append('#', '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray32 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray33 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder29.append(shortArray32, shortArray33);
        byte[] byteArray35 = new byte[] {};
        byte[] byteArray40 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = equalsBuilder29.append(byteArray35, byteArray40);
        char[] charArray46 = new char[] { '#', ' ', '#', '#' };
        char[] charArray49 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder29.append(charArray46, charArray49);
        char[] charArray53 = new char[] { 'a', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder25.append(charArray49, charArray53);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = equalsBuilder54.append((short) (byte) 100, (short) (byte) 10);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[-1.0, 10.0, 97.0, 32.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray21), "[1.0, 0.0]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray33), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[]");
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder41);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "a ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "a ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[a,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder54);
        org.junit.Assert.assertNotNull(equalsBuilder57);
    }

    @Test
    public void test1772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1772");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder4 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray7 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray8 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = equalsBuilder4.append(shortArray7, shortArray8);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean18 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder9, (java.lang.Object) '#', strArray17);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder9.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray25 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray26 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder22.append(shortArray25, shortArray26);
        byte[] byteArray28 = new byte[] {};
        byte[] byteArray33 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder22.append(byteArray28, byteArray33);
        char[] charArray39 = new char[] { '#', ' ', '#', '#' };
        char[] charArray42 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder22.append(charArray39, charArray42);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray47 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray48 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = equalsBuilder44.append(shortArray47, shortArray48);
        byte[] byteArray50 = new byte[] {};
        byte[] byteArray55 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder44.append(byteArray50, byteArray55);
        char[] charArray61 = new char[] { '#', ' ', '#', '#' };
        char[] charArray64 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder44.append(charArray61, charArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder9.append(charArray42, charArray61);
        java.lang.Object obj67 = null;
        boolean boolean68 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) charArray42, obj67);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray72 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray73 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder69.append(shortArray72, shortArray73);
        byte[] byteArray75 = new byte[] {};
        byte[] byteArray80 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder69.append(byteArray75, byteArray80);
        char[] charArray86 = new char[] { '#', ' ', '#', '#' };
        char[] charArray89 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder69.append(charArray86, charArray89);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder3.append(charArray42, charArray86);
        equalsBuilder3.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder95 = equalsBuilder3.append((byte) 100, (byte) 100);
        java.lang.Boolean boolean96 = equalsBuilder3.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder99 = equalsBuilder3.append((float) 0, (float) (byte) 10);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray7), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder9);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[]");
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(shortArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray47), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray48), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder49);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[]");
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(shortArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray72), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray73), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(byteArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray75), "[]");
        org.junit.Assert.assertNotNull(byteArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray80), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(charArray86);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray86), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray86), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray86), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray89);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray89), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray89), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray89), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertNotNull(equalsBuilder91);
        org.junit.Assert.assertNotNull(equalsBuilder95);
        org.junit.Assert.assertEquals("'" + boolean96 + "' != '" + true + "'", boolean96, true);
        org.junit.Assert.assertNotNull(equalsBuilder99);
    }

    @Test
    public void test1773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1773");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.append((double) 100L, (double) 10L);
        boolean boolean16 = equalsBuilder0.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(0, (int) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder0.append(true, true);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = equalsBuilder0.append((short) (byte) 100, (short) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder0.append((double) 10, (double) '4');
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder26);
        org.junit.Assert.assertNotNull(equalsBuilder29);
    }

    @Test
    public void test1774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1774");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder64.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder64.append((long) 'a', (long) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder80.append(100.0d, (double) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder80.append((byte) -1, (byte) 1);
        java.lang.Boolean boolean87 = equalsBuilder80.build();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertEquals("'" + boolean87 + "' != '" + false + "'", boolean87, false);
    }

    @Test
    public void test1775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1775");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((double) 100.0f, (double) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder5.append((short) 0, (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder20.append((byte) -1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = equalsBuilder23.append(false, true);
        equalsBuilder23.reset();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(equalsBuilder26);
    }

    @Test
    public void test1776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1776");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder17.append((java.lang.Object) boolean37, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray52 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray56 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray57 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder53.append(shortArray56, shortArray57);
        byte[] byteArray59 = new byte[] {};
        byte[] byteArray64 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder53.append(byteArray59, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder46.append(byteArray52, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder46.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder39.append((java.lang.Object) equalsBuilder45, (java.lang.Object) equalsBuilder46);
        long[] longArray73 = new long[] { (byte) 100, ' ', (short) 10 };
        long[] longArray79 = new long[] { 'a', 0L, (short) 10, (byte) 0, (byte) -1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder46.append(longArray73, longArray79);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder80.append((short) 0, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder83.append(0, (int) (short) 0);
        boolean boolean87 = equalsBuilder83.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder83.append((byte) -1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder83.append((double) '#', 10.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder96 = equalsBuilder93.append((byte) -1, (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder99 = equalsBuilder96.append((short) (byte) 0, (short) (byte) 0);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray56), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(longArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray73), "[100, 32, 10]");
        org.junit.Assert.assertNotNull(longArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray79), "[97, 0, 10, 0, -1]");
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertNotNull(equalsBuilder93);
        org.junit.Assert.assertNotNull(equalsBuilder96);
        org.junit.Assert.assertNotNull(equalsBuilder99);
    }

    @Test
    public void test1777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1777");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        equalsBuilder74.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder74.append((int) (byte) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder74.append((double) 100L, (double) (-1L));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder81.append((double) (-1L), (double) (-1.0f));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder84.append(1.0d, (double) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder87.append((byte) 100, (byte) -1);
        double[] doubleArray95 = new double[] { ' ', (short) 100, 10.0d, ' ' };
        double[] doubleArray97 = new double[] { (-1) };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder98 = equalsBuilder90.append(doubleArray95, doubleArray97);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray95), "[32.0, 100.0, 10.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray97), "[-1.0]");
        org.junit.Assert.assertNotNull(equalsBuilder98);
    }

    @Test
    public void test1778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1778");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder12.append((byte) 10, (byte) 0);
        boolean boolean16 = equalsBuilder15.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray20 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray21 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder17.append(shortArray20, shortArray21);
        byte[] byteArray23 = new byte[] {};
        byte[] byteArray28 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder17.append(byteArray23, byteArray28);
        byte[] byteArray30 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder15.append(byteArray28, byteArray30);
        java.lang.Boolean boolean32 = equalsBuilder31.build();
        equalsBuilder31.reset();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
    }

    @Test
    public void test1779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1779");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder12.append('4', ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder15.append((byte) 10, (byte) 100);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(equalsBuilder18);
    }

    @Test
    public void test1780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1780");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder17.append((java.lang.Object) boolean37, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder17.append(false, true);
        boolean boolean43 = equalsBuilder42.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder42.append('4', ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray50 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray51 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder47.append(shortArray50, shortArray51);
        java.lang.String[] strArray60 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean61 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder52, (java.lang.Object) '#', strArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder52.append((int) (short) -1, (int) (short) 0);
        boolean boolean65 = equalsBuilder64.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder64.append((byte) 100, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder64.append((long) '#', 1L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder71.append((float) 0L, (float) 10L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder71.append((int) (byte) 1, (int) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder78.append(false, false);
        java.lang.Boolean boolean82 = equalsBuilder81.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder81.append((byte) 100, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder81.append((byte) -1, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder88.append((double) (byte) 0, 100.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder94 = equalsBuilder88.append((long) '4', (long) (short) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder97 = equalsBuilder88.append('#', ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder98 = equalsBuilder46.append((java.lang.Object) equalsBuilder71, (java.lang.Object) equalsBuilder88);
        java.lang.Boolean boolean99 = equalsBuilder71.build();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(shortArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray50), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray51), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder71);
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertEquals("'" + boolean82 + "' != '" + true + "'", boolean82, true);
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertNotNull(equalsBuilder91);
        org.junit.Assert.assertNotNull(equalsBuilder94);
        org.junit.Assert.assertNotNull(equalsBuilder97);
        org.junit.Assert.assertNotNull(equalsBuilder98);
        org.junit.Assert.assertEquals("'" + boolean99 + "' != '" + false + "'", boolean99, false);
    }

    @Test
    public void test1781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1781");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        equalsBuilder62.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder62.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder62.append((short) 10, (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder69.append((float) (short) 100, 0.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder69.append(false, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder75.append((long) (byte) 1, (long) (-1));
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder78);
    }

    @Test
    public void test1782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1782");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray6 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray10 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray11 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder7.append(shortArray10, shortArray11);
        byte[] byteArray13 = new byte[] {};
        byte[] byteArray18 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder7.append(byteArray13, byteArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder0.append(byteArray6, byteArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder0.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray29 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray33 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray34 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder30.append(shortArray33, shortArray34);
        byte[] byteArray36 = new byte[] {};
        byte[] byteArray41 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder30.append(byteArray36, byteArray41);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder23.append(byteArray29, byteArray41);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray50 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray54 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray55 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder51.append(shortArray54, shortArray55);
        byte[] byteArray57 = new byte[] {};
        byte[] byteArray62 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder51.append(byteArray57, byteArray62);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder44.append(byteArray50, byteArray62);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder0.append(byteArray41, byteArray50);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder0.append((int) ' ', (int) (short) -1);
        boolean boolean69 = equalsBuilder68.isEquals();
        equalsBuilder68.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder68.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder72.append((float) 0, 10.0f);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray33), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[]");
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray54), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray55), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[]");
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(equalsBuilder75);
    }

    @Test
    public void test1783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1783");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((double) 'a', 0.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder5.append((float) (short) 10, (float) (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder5.append(0, 10);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(equalsBuilder23);
    }

    @Test
    public void test1784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1784");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder64.append(true, false);
        boolean boolean80 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder77, (java.lang.Object) (short) 1, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder77.append((long) ' ', (long) (-1));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder83.append((double) (byte) 1, (double) (-1.0f));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder86.append((long) (byte) 1, (long) 100);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertNotNull(equalsBuilder89);
    }

    @Test
    public void test1785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1785");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray12 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray16 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray17 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder13.append(shortArray16, shortArray17);
        byte[] byteArray19 = new byte[] {};
        byte[] byteArray24 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder13.append(byteArray19, byteArray24);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = equalsBuilder6.append(byteArray12, byteArray24);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray31 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray32 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder28.append(shortArray31, shortArray32);
        byte[] byteArray34 = new byte[] {};
        byte[] byteArray39 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder28.append(byteArray34, byteArray39);
        boolean boolean41 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (short) 0, (java.lang.Object) byteArray39);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder0.append(byteArray12, byteArray39);
        java.lang.Class<?> wildcardClass43 = byteArray39.getClass();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(equalsBuilder26);
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[]");
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test1786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1786");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder5.append((short) (byte) 10, (short) 0);
        long[] longArray14 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray16 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append(longArray14, longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder18.append((short) (byte) 10, (short) 0);
        long[] longArray27 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray29 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(longArray27, longArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append(longArray14, longArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder0.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder0.append((double) (byte) 100, (double) 100.0f);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test1787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1787");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        char[] charArray17 = new char[] { '#', ' ', '#', '#' };
        char[] charArray20 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(charArray17, charArray20);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder21.append('a', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder21.append((int) (byte) 1, (int) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder27.append((int) (byte) 1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder27.append((long) (byte) 10, (long) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder33.append((int) '4', 0);
        equalsBuilder33.reset();
        java.lang.Class<?> wildcardClass38 = equalsBuilder33.getClass();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test1788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1788");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder0.append((-1), (int) (short) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = equalsBuilder6.append((byte) 10, (byte) 10);
        double[] doubleArray10 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder11 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray14 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray15 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = equalsBuilder11.append(shortArray14, shortArray15);
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean25 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder16, (java.lang.Object) '#', strArray24);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder16.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray32 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray33 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder29.append(shortArray32, shortArray33);
        byte[] byteArray35 = new byte[] {};
        byte[] byteArray40 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = equalsBuilder29.append(byteArray35, byteArray40);
        char[] charArray46 = new char[] { '#', ' ', '#', '#' };
        char[] charArray49 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder29.append(charArray46, charArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray54 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray55 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder51.append(shortArray54, shortArray55);
        byte[] byteArray57 = new byte[] {};
        byte[] byteArray62 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder51.append(byteArray57, byteArray62);
        char[] charArray68 = new char[] { '#', ' ', '#', '#' };
        char[] charArray71 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder51.append(charArray68, charArray71);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder16.append(charArray49, charArray68);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder16.appendSuper(false);
        long[] longArray76 = null;
        long[] longArray83 = new long[] { 1, (byte) -1, (-1), (short) 1, 100L, '#' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder75.append(longArray76, longArray83);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder75.appendSuper(true);
        double[] doubleArray91 = new double[] { (short) 0, 0.0d, (byte) 10, (byte) 0 };
        double[] doubleArray92 = new double[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder75.append(doubleArray91, doubleArray92);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder94 = equalsBuilder9.append(doubleArray10, doubleArray91);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder97 = equalsBuilder94.append((long) (short) -1, (long) (short) -1);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(equalsBuilder9);
        org.junit.Assert.assertNotNull(shortArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray15), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder16);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray33), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[]");
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder41);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(shortArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray54), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray55), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[]");
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(longArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray83), "[1, -1, -1, 1, 100, 35]");
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[0.0, 0.0, 10.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray92), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder93);
        org.junit.Assert.assertNotNull(equalsBuilder94);
        org.junit.Assert.assertNotNull(equalsBuilder97);
    }

    @Test
    public void test1789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1789");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder0.append((-1), (int) (short) 10);
        java.lang.Object obj7 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray14 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray18 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray19 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder15.append(shortArray18, shortArray19);
        byte[] byteArray21 = new byte[] {};
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder15.append(byteArray21, byteArray26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder8.append(byteArray14, byteArray26);
        boolean boolean30 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj7, (java.lang.Object) byteArray26, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray37 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray41 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray42 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder38.append(shortArray41, shortArray42);
        byte[] byteArray44 = new byte[] {};
        byte[] byteArray49 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder38.append(byteArray44, byteArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder31.append(byteArray37, byteArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder0.append(byteArray26, byteArray37);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray56 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray57 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder53.append(shortArray56, shortArray57);
        byte[] byteArray59 = new byte[] {};
        byte[] byteArray64 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder53.append(byteArray59, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray69 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray70 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder66.append(shortArray69, shortArray70);
        byte[] byteArray72 = new byte[] {};
        byte[] byteArray77 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder66.append(byteArray72, byteArray77);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder0.append(byteArray59, byteArray72);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder0.append(0, (int) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder0.append((byte) -1, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder0.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder87.append((double) 100.0f, (double) (short) 0);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray41), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray56), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(shortArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray69), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray70), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder71);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[]");
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(equalsBuilder90);
    }

    @Test
    public void test1790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1790");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        long[] longArray9 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray11 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(longArray9, longArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder14 = equalsBuilder0.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = equalsBuilder0.appendSuper(false);
        java.lang.Boolean boolean17 = equalsBuilder0.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder0.append((byte) 1, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder0.append(false, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder24.append(false, false);
        java.lang.Boolean boolean28 = equalsBuilder27.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder27.append((byte) 0, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder27.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder33.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder33.append((short) 0, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder39.append(true, false);
        boolean boolean43 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder23, (java.lang.Object) true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder23.append((short) (byte) 0, (short) -1);
        java.lang.Class<?> wildcardClass47 = equalsBuilder23.getClass();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder14);
        org.junit.Assert.assertNotNull(equalsBuilder16);
        org.junit.Assert.assertEquals("'" + boolean17 + "' != '" + false + "'", boolean17, false);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertEquals("'" + boolean28 + "' != '" + true + "'", boolean28, true);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test1791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1791");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder0.append((-1), (int) (short) 10);
        java.lang.Object obj7 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray14 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray18 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray19 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder15.append(shortArray18, shortArray19);
        byte[] byteArray21 = new byte[] {};
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder15.append(byteArray21, byteArray26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder8.append(byteArray14, byteArray26);
        boolean boolean30 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj7, (java.lang.Object) byteArray26, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray37 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray41 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray42 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder38.append(shortArray41, shortArray42);
        byte[] byteArray44 = new byte[] {};
        byte[] byteArray49 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder38.append(byteArray44, byteArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder31.append(byteArray37, byteArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder0.append(byteArray26, byteArray37);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder52.append((byte) -1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = equalsBuilder52.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder52.append((float) (byte) 10, (float) (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder52.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder63.append('a', '4');
        boolean boolean67 = equalsBuilder66.isEquals();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray41), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(equalsBuilder57);
        org.junit.Assert.assertNotNull(equalsBuilder60);
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test1792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1792");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder12.append((byte) 10, (byte) 0);
        boolean boolean16 = equalsBuilder15.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray20 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray21 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder17.append(shortArray20, shortArray21);
        byte[] byteArray23 = new byte[] {};
        byte[] byteArray28 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder17.append(byteArray23, byteArray28);
        byte[] byteArray30 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder15.append(byteArray28, byteArray30);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append((float) ' ', (float) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder34.append(false, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder34.append(1.0d, (double) (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder40.append((long) (byte) 0, (long) 10);
        boolean boolean44 = equalsBuilder43.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder43.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray50 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray51 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder47.append(shortArray50, shortArray51);
        java.lang.String[] strArray60 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean61 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder52, (java.lang.Object) '#', strArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder52.append((double) 100.0f, (double) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder52.append((short) 0, (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder67.append((byte) -1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder70.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder72.append((byte) 1, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder76.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder79.append((long) (byte) 100, 1L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder79.append((double) 10, (double) (byte) 1);
        java.lang.Object obj86 = new java.lang.Object();
        java.lang.String[] strArray89 = new java.lang.String[] { "", "" };
        java.util.ArrayList<java.lang.String> strList90 = new java.util.ArrayList<java.lang.String>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList90, strArray89);
        boolean boolean92 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder85, obj86, (java.util.Collection<java.lang.String>) strList90);
        boolean boolean93 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) true, (java.lang.Object) equalsBuilder72, (java.util.Collection<java.lang.String>) strList90);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(shortArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray50), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray51), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertNotNull(strArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test1793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1793");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder17.append((java.lang.Object) boolean37, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder17.append((double) '4', (double) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder42.append((int) '4', (int) '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder42.append((byte) 100, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder48.append((double) 100.0f, (double) (byte) 100);
        boolean boolean52 = equalsBuilder48.isEquals();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test1794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1794");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        equalsBuilder0.reset();
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder0.append(false, false);
        equalsBuilder8.reset();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder8);
    }

    @Test
    public void test1795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1795");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        equalsBuilder74.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder74.append('4', ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder78.append((double) (byte) 0, (double) (short) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder81.append((float) 0, (float) 100);
        equalsBuilder84.reset();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
    }

    @Test
    public void test1796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1796");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        long[] longArray9 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray11 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(longArray9, longArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder14 = equalsBuilder0.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = equalsBuilder0.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder17.append((short) (byte) 10, (short) 0);
        long[] longArray26 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray28 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder17.append(longArray26, longArray28);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder30.append((short) (byte) 10, (short) 0);
        equalsBuilder30.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder35.append((short) (byte) 10, (short) 0);
        long[] longArray44 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray46 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder35.append(longArray44, longArray46);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder48.append((short) (byte) 10, (short) 0);
        long[] longArray57 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray59 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder48.append(longArray57, longArray59);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder30.append(longArray44, longArray59);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder0.append(longArray28, longArray44);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder62.append((byte) 0, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder62.append((float) (-1L), (float) (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder62.append((-1L), (long) 1);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder14);
        org.junit.Assert.assertNotNull(equalsBuilder16);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray28), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(longArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray44), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray46), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(longArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray57), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray59), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder60);
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder71);
    }

    @Test
    public void test1797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1797");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder17.append((java.lang.Object) boolean37, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray52 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray56 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray57 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder53.append(shortArray56, shortArray57);
        byte[] byteArray59 = new byte[] {};
        byte[] byteArray64 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder53.append(byteArray59, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder46.append(byteArray52, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder46.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder39.append((java.lang.Object) equalsBuilder45, (java.lang.Object) equalsBuilder46);
        long[] longArray73 = new long[] { (byte) 100, ' ', (short) 10 };
        long[] longArray79 = new long[] { 'a', 0L, (short) 10, (byte) 0, (byte) -1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder46.append(longArray73, longArray79);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder80.append((short) 0, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder83.append(0, (int) (short) 0);
        boolean boolean87 = equalsBuilder83.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder83.append((byte) -1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder83.append((double) '#', 10.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder95 = equalsBuilder93.appendSuper(true);
        equalsBuilder95.reset();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray56), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(longArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray73), "[100, 32, 10]");
        org.junit.Assert.assertNotNull(longArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray79), "[97, 0, 10, 0, -1]");
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertNotNull(equalsBuilder93);
        org.junit.Assert.assertNotNull(equalsBuilder95);
    }

    @Test
    public void test1798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1798");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        equalsBuilder74.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder74.append((int) (byte) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder74.append((double) 100L, (double) (-1L));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder81.append((short) (byte) -1, (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder81.append((byte) 10, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder87.append('a', '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder90.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder95 = equalsBuilder90.append((short) (byte) 10, (short) 1);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertNotNull(equalsBuilder95);
    }

    @Test
    public void test1799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1799");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder12.append((byte) 10, (byte) 0);
        boolean boolean16 = equalsBuilder15.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray20 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray21 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder17.append(shortArray20, shortArray21);
        byte[] byteArray23 = new byte[] {};
        byte[] byteArray28 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder17.append(byteArray23, byteArray28);
        byte[] byteArray30 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder15.append(byteArray28, byteArray30);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append((double) (byte) 1, (double) '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder34.append((float) '#', (float) 0);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder37);
    }

    @Test
    public void test1800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1800");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        java.lang.Boolean boolean4 = equalsBuilder3.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder3.append((byte) 0, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = equalsBuilder3.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder9.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder9.append((short) 0, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder15.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder18.append((float) (short) -1, 0.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder18.append((long) (byte) 1, 10L);
        boolean boolean25 = equalsBuilder18.isEquals();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + true + "'", boolean4, true);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(equalsBuilder9);
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test1801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1801");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder3.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = equalsBuilder3.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder9.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder9.append((double) (short) 100, (double) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder9.append((double) (byte) 1, (double) 0L);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(equalsBuilder9);
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(equalsBuilder18);
    }

    @Test
    public void test1802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1802");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        equalsBuilder62.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder62.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder62.append((short) 10, (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder69.append((float) (short) 100, 0.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder72.append((double) (byte) 10, (double) 1.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder75.append((long) (byte) -1, 10L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder75.append((byte) 0, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder82.append((short) (byte) 10, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder85.appendSuper(true);
        equalsBuilder87.reset();
        boolean boolean89 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder75, (java.lang.Object) equalsBuilder87);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder87.append(0, (int) ' ');
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(equalsBuilder92);
    }

    @Test
    public void test1803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1803");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray6 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray10 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray11 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder7.append(shortArray10, shortArray11);
        byte[] byteArray13 = new byte[] {};
        byte[] byteArray18 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder7.append(byteArray13, byteArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder0.append(byteArray6, byteArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder0.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder22.append(true, false);
        byte[] byteArray27 = new byte[] { (byte) 0 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray31 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray32 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder28.append(shortArray31, shortArray32);
        byte[] byteArray34 = new byte[] {};
        byte[] byteArray39 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder28.append(byteArray34, byteArray39);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder40.append((byte) 10, (byte) 0);
        boolean boolean44 = equalsBuilder43.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray48 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray49 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder45.append(shortArray48, shortArray49);
        byte[] byteArray51 = new byte[] {};
        byte[] byteArray56 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = equalsBuilder45.append(byteArray51, byteArray56);
        byte[] byteArray58 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder59 = equalsBuilder43.append(byteArray56, byteArray58);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder25.append(byteArray27, byteArray58);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder25.append(' ', ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder63.append((byte) 1, (byte) 100);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[0]");
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[]");
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(shortArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray48), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray49), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[]");
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder57);
        org.junit.Assert.assertNotNull(equalsBuilder59);
        org.junit.Assert.assertNotNull(equalsBuilder60);
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertNotNull(equalsBuilder66);
    }

    @Test
    public void test1804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1804");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        equalsBuilder74.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder74.append('4', ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder74.append((short) -1, (short) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder81.append((byte) 1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder81.append(0L, (long) (short) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder87.append((byte) 0, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder90.append(1.0f, 0.0f);
        java.lang.Class<?> wildcardClass94 = equalsBuilder93.getClass();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertNotNull(equalsBuilder93);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1805");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        long[] longArray9 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray11 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(longArray9, longArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray16 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray17 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder13.append(shortArray16, shortArray17);
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean27 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder18, (java.lang.Object) '#', strArray26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append((int) (short) -1, (int) (short) 0);
        boolean boolean31 = equalsBuilder30.isEquals();
        boolean boolean32 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder12, (java.lang.Object) boolean31);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder12.append((short) 0, (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder36.append((short) (byte) 10, (short) 0);
        long[] longArray45 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray47 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder36.append(longArray45, longArray47);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder49.append((short) (byte) 10, (short) 0);
        long[] longArray58 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray60 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder49.append(longArray58, longArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder12.append(longArray45, longArray60);
        java.lang.Object obj63 = null;
        java.lang.Object obj64 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray68 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray69 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder65.append(shortArray68, shortArray69);
        byte[] byteArray71 = new byte[] {};
        byte[] byteArray76 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder65.append(byteArray71, byteArray76);
        java.lang.String[] strArray79 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList80 = new java.util.ArrayList<java.lang.String>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList80, strArray79);
        boolean boolean82 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj64, (java.lang.Object) equalsBuilder77, (java.util.Collection<java.lang.String>) strList80);
        boolean boolean83 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder62, obj63, (java.util.Collection<java.lang.String>) strList80);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder62.append((double) (byte) 0, (double) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder87.append((short) (byte) 10, (short) 0);
        equalsBuilder87.reset();
        equalsBuilder87.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder95 = equalsBuilder87.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder98 = equalsBuilder87.append((double) (byte) 100, (double) '4');
        boolean boolean99 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder86, (java.lang.Object) (byte) 100);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(longArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray45), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray47), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(longArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray58), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray60), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(shortArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray68), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray69), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray71), "[]");
        org.junit.Assert.assertNotNull(byteArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray76), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertNotNull(equalsBuilder95);
        org.junit.Assert.assertNotNull(equalsBuilder98);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test1806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1806");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        equalsBuilder74.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder74.append('4', ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder74.append((short) -1, (short) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder74.append((byte) 100, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder74.append((byte) 0, (byte) 0);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder87);
    }

    @Test
    public void test1807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1807");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        char[] charArray17 = new char[] { '#', ' ', '#', '#' };
        char[] charArray20 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(charArray17, charArray20);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder21.append('a', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder24.append((-1), (-1));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder27.append((int) (byte) -1, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder27.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray40 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray44 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray45 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder41.append(shortArray44, shortArray45);
        byte[] byteArray47 = new byte[] {};
        byte[] byteArray52 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder41.append(byteArray47, byteArray52);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder34.append(byteArray40, byteArray52);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder34.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder56.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder58.append(' ', 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder61.append((long) (short) 10, (long) (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder61.append((int) (byte) 0, (int) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder67.append('a', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder67.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray77 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray78 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder74.append(shortArray77, shortArray78);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray83 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray84 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder80.append(shortArray83, shortArray84);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder73.append(shortArray77, shortArray84);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray90 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray91 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder87.append(shortArray90, shortArray91);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder33.append(shortArray84, shortArray90);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder96 = equalsBuilder33.append((long) ' ', (long) 0);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray45), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertNotNull(equalsBuilder54);
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(shortArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray77), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray78), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertNotNull(shortArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray83), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray84), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertNotNull(shortArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray90), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray91), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertNotNull(equalsBuilder93);
        org.junit.Assert.assertNotNull(equalsBuilder96);
    }

    @Test
    public void test1808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1808");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder0.append((-1), (int) (short) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = equalsBuilder6.append((-1L), 100L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder9.append((int) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder9.append((short) (byte) 0, (short) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder15.append((short) (byte) -1, (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder15.append((long) (byte) 10, (long) 0);
        java.lang.Class<?> wildcardClass22 = equalsBuilder21.getClass();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(equalsBuilder9);
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test1809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1809");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        java.lang.Boolean boolean4 = equalsBuilder3.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder3.append((byte) 100, (byte) 100);
        equalsBuilder7.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder11 = equalsBuilder7.append(true, true);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + true + "'", boolean4, true);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(equalsBuilder11);
    }

    @Test
    public void test1810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1810");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        char[] charArray17 = new char[] { '#', ' ', '#', '#' };
        char[] charArray20 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(charArray17, charArray20);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder21.append('a', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder21.append((int) (byte) 1, (int) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder27.append((int) (byte) 1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder30.append('#', '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder30.appendSuper(false);
        equalsBuilder30.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder30.append((double) 10L, (double) 10L);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(equalsBuilder39);
    }

    @Test
    public void test1811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1811");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        float[] floatArray18 = new float[] { (byte) -1, 10.0f, 'a', ' ', (short) -1 };
        float[] floatArray21 = new float[] { 1.0f, 0L };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder12.append(floatArray18, floatArray21);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder12.append(true, true);
        byte[] byteArray29 = new byte[] { (byte) 100, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray33 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray34 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder30.append(shortArray33, shortArray34);
        byte[] byteArray36 = new byte[] {};
        byte[] byteArray41 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder30.append(byteArray36, byteArray41);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder25.append(byteArray29, byteArray36);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder43.append((int) (short) 10, (int) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = equalsBuilder46.append((long) ' ', (long) 10);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[-1.0, 10.0, 97.0, 32.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray21), "[1.0, 0.0]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[100, 10, 1]");
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray33), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[]");
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(equalsBuilder49);
    }

    @Test
    public void test1812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1812");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder3.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = equalsBuilder3.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder9.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder9.append((double) (short) 100, (double) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder16.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder19.append((long) (byte) 100, 1L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder19.append((double) 10, (double) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder19.append((long) '#', 100L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder32 = equalsBuilder29.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder29.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder29.appendSuper(false);
        boolean boolean37 = equalsBuilder29.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = equalsBuilder38.append(false, false);
        java.lang.Boolean boolean42 = equalsBuilder41.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder41.append((byte) 100, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray49 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray50 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder46.append(shortArray49, shortArray50);
        byte[] byteArray52 = new byte[] {};
        byte[] byteArray57 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder46.append(byteArray52, byteArray57);
        char[] charArray63 = new char[] { '#', ' ', '#', '#' };
        char[] charArray66 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder46.append(charArray63, charArray66);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray71 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray72 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder68.append(shortArray71, shortArray72);
        java.lang.String[] strArray81 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean82 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder73, (java.lang.Object) '#', strArray81);
        boolean boolean83 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (byte) 100, (java.lang.Object) charArray66, strArray81);
        boolean boolean84 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder28, (java.lang.Object) equalsBuilder29, strArray81);
        java.lang.Object[] objArray85 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder15.append((java.lang.Object[]) strArray81, objArray85);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(equalsBuilder9);
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder32);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder41);
        org.junit.Assert.assertEquals("'" + boolean42 + "' != '" + true + "'", boolean42, true);
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray49), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray50), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(shortArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray71), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray72), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(equalsBuilder86);
    }

    @Test
    public void test1813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1813");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder64.append((byte) -1, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder64.append((double) 10.0f, 100.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder80.append((short) (byte) 1, (short) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder83.append(10.0f, (float) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder83.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder83.append((short) (byte) -1, (short) 0);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertNotNull(equalsBuilder91);
    }

    @Test
    public void test1814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1814");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder0.append((-1), (int) (short) 10);
        java.lang.Object obj7 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray14 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray18 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray19 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder15.append(shortArray18, shortArray19);
        byte[] byteArray21 = new byte[] {};
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder15.append(byteArray21, byteArray26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder8.append(byteArray14, byteArray26);
        boolean boolean30 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj7, (java.lang.Object) byteArray26, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray37 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray41 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray42 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder38.append(shortArray41, shortArray42);
        byte[] byteArray44 = new byte[] {};
        byte[] byteArray49 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder38.append(byteArray44, byteArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder31.append(byteArray37, byteArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder0.append(byteArray26, byteArray37);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder52.append((byte) -1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = equalsBuilder52.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder52.append((float) (byte) 10, (float) (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder52.append((double) (byte) 100, 100.0d);
        java.lang.Class<?> wildcardClass64 = equalsBuilder63.getClass();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray41), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(equalsBuilder57);
        org.junit.Assert.assertNotNull(equalsBuilder60);
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test1815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1815");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder12.append((byte) 10, (byte) 0);
        boolean boolean16 = equalsBuilder15.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray20 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray21 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder17.append(shortArray20, shortArray21);
        byte[] byteArray23 = new byte[] {};
        byte[] byteArray28 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder17.append(byteArray23, byteArray28);
        byte[] byteArray30 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder15.append(byteArray28, byteArray30);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append((float) ' ', (float) 'a');
        long[] longArray37 = new long[] { (-1), '4' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = equalsBuilder38.append((short) (byte) 10, (short) 0);
        equalsBuilder38.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder43.append((short) (byte) 10, (short) 0);
        long[] longArray52 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray54 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder43.append(longArray52, longArray54);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder59 = equalsBuilder56.append((short) (byte) 10, (short) 0);
        long[] longArray65 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray67 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder56.append(longArray65, longArray67);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder38.append(longArray52, longArray67);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder31.append(longArray37, longArray67);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder70.append((double) 1L, (double) (byte) -1);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(longArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray37), "[-1, 52]");
        org.junit.Assert.assertNotNull(equalsBuilder41);
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(longArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray52), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray54), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(equalsBuilder59);
        org.junit.Assert.assertNotNull(longArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray65), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray67), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(equalsBuilder73);
    }

    @Test
    public void test1816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1816");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder0.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder10 = equalsBuilder0.append((double) 1, (double) (-1L));
        java.lang.Boolean boolean11 = equalsBuilder10.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder14 = equalsBuilder10.append(0, (int) (short) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder14.append((long) (short) 1, (long) (-1));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder14.append((byte) 100, (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder14.append(true, true);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(equalsBuilder10);
        org.junit.Assert.assertEquals("'" + boolean11 + "' != '" + false + "'", boolean11, false);
        org.junit.Assert.assertNotNull(equalsBuilder14);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(equalsBuilder23);
    }

    @Test
    public void test1817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1817");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray9 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray10 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder11 = equalsBuilder6.append(shortArray9, shortArray10);
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean20 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder11, (java.lang.Object) '#', strArray19);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder11.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray27 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray28 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder24.append(shortArray27, shortArray28);
        byte[] byteArray30 = new byte[] {};
        byte[] byteArray35 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append(byteArray30, byteArray35);
        char[] charArray41 = new char[] { '#', ' ', '#', '#' };
        char[] charArray44 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder24.append(charArray41, charArray44);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray49 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray50 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder46.append(shortArray49, shortArray50);
        byte[] byteArray52 = new byte[] {};
        byte[] byteArray57 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder46.append(byteArray52, byteArray57);
        char[] charArray63 = new char[] { '#', ' ', '#', '#' };
        char[] charArray66 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder46.append(charArray63, charArray66);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder11.append(charArray44, charArray63);
        java.lang.String[] strArray69 = null;
        boolean boolean70 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) shortArray4, (java.lang.Object) equalsBuilder11, strArray69);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder11.append(false, false);
        boolean[] booleanArray77 = new boolean[] { false, false, false };
        boolean[] booleanArray78 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder11.append(booleanArray77, booleanArray78);
        java.lang.Boolean boolean80 = equalsBuilder79.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder79.append('#', ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder83.appendSuper(true);
        boolean boolean86 = equalsBuilder83.isEquals();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder11);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray28), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray49), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray50), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(booleanArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray77), "[false, false, false]");
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertEquals("'" + boolean80 + "' != '" + false + "'", boolean80, false);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test1818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1818");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder17.append((java.lang.Object) boolean37, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray52 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray56 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray57 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder53.append(shortArray56, shortArray57);
        byte[] byteArray59 = new byte[] {};
        byte[] byteArray64 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder53.append(byteArray59, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder46.append(byteArray52, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder46.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder39.append((java.lang.Object) equalsBuilder45, (java.lang.Object) equalsBuilder46);
        long[] longArray73 = new long[] { (byte) 100, ' ', (short) 10 };
        long[] longArray79 = new long[] { 'a', 0L, (short) 10, (byte) 0, (byte) -1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder46.append(longArray73, longArray79);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder80.append((short) 0, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder83.append((int) 'a', 0);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray56), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(longArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray73), "[100, 32, 10]");
        org.junit.Assert.assertNotNull(longArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray79), "[97, 0, 10, 0, -1]");
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder86);
    }

    @Test
    public void test1819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1819");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        equalsBuilder74.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder74.append((int) (byte) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder74.append((double) 100L, (double) (-1L));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder81.append((short) (byte) -1, (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder84.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder84.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder89.append((byte) -1, (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder95 = equalsBuilder89.append(' ', '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder98 = equalsBuilder89.append((short) (byte) 1, (short) (byte) 10);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertNotNull(equalsBuilder89);
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertNotNull(equalsBuilder95);
        org.junit.Assert.assertNotNull(equalsBuilder98);
    }

    @Test
    public void test1820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1820");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder4 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray7 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray8 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = equalsBuilder4.append(shortArray7, shortArray8);
        byte[] byteArray10 = new byte[] {};
        byte[] byteArray15 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = equalsBuilder4.append(byteArray10, byteArray15);
        char[] charArray21 = new char[] { '#', ' ', '#', '#' };
        char[] charArray24 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder4.append(charArray21, charArray24);
        char[] charArray32 = new char[] { '4', '#', '#', ' ', ' ', '#' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder0.append(charArray24, charArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder33.append((long) '#', (long) 10);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray7), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder9);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder16);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "4##  #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "4##  #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[4, #, #,  ,  , #]");
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(equalsBuilder36);
    }

    @Test
    public void test1821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1821");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder17.append((java.lang.Object) boolean37, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray52 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray56 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray57 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder53.append(shortArray56, shortArray57);
        byte[] byteArray59 = new byte[] {};
        byte[] byteArray64 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder53.append(byteArray59, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder46.append(byteArray52, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder46.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder39.append((java.lang.Object) equalsBuilder45, (java.lang.Object) equalsBuilder46);
        long[] longArray73 = new long[] { (byte) 100, ' ', (short) 10 };
        long[] longArray79 = new long[] { 'a', 0L, (short) 10, (byte) 0, (byte) -1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder46.append(longArray73, longArray79);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder80.append((short) 0, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder83.append(0, (int) (short) 0);
        boolean boolean87 = equalsBuilder83.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder83.append((byte) -1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder83.append((double) '#', 10.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder95 = equalsBuilder93.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder98 = equalsBuilder93.append((byte) 10, (byte) 10);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray56), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(longArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray73), "[100, 32, 10]");
        org.junit.Assert.assertNotNull(longArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray79), "[97, 0, 10, 0, -1]");
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertNotNull(equalsBuilder93);
        org.junit.Assert.assertNotNull(equalsBuilder95);
        org.junit.Assert.assertNotNull(equalsBuilder98);
    }

    @Test
    public void test1822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1822");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        long[] longArray9 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray11 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(longArray9, longArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray16 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray17 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder13.append(shortArray16, shortArray17);
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean27 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder18, (java.lang.Object) '#', strArray26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append((int) (short) -1, (int) (short) 0);
        boolean boolean31 = equalsBuilder30.isEquals();
        boolean boolean32 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder12, (java.lang.Object) boolean31);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder12.append((short) 0, (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder35.append((double) (byte) -1, 1.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = equalsBuilder35.append((float) '4', (float) ' ');
        java.lang.Boolean boolean42 = equalsBuilder41.build();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(equalsBuilder41);
        org.junit.Assert.assertEquals("'" + boolean42 + "' != '" + false + "'", boolean42, false);
    }

    @Test
    public void test1823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1823");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder62.append(100, (int) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder62.append(0L, (long) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder68.append((short) (byte) 0, (short) (byte) 0);
        equalsBuilder71.reset();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder71);
    }

    @Test
    public void test1824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1824");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.append((double) 100L, (double) 10L);
        boolean boolean16 = equalsBuilder0.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(0, (int) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder19.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append((int) (short) -1, (int) (byte) 1);
        equalsBuilder24.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder24.append((float) (-1), 100.0f);
        java.lang.Class<?> wildcardClass29 = equalsBuilder28.getClass();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test1825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1825");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((double) 100.0f, (double) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder5.append((short) 0, (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder20.append((byte) -1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = equalsBuilder20.append(0.0f, (float) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder20.append('4', 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder32 = equalsBuilder29.append((long) (byte) 100, (long) 0);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(equalsBuilder26);
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(equalsBuilder32);
    }

    @Test
    public void test1826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1826");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder17.append((java.lang.Object) boolean37, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder17.append((double) '4', (double) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder17.append((long) (-1), (long) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder17.append((short) (byte) 10, (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray52 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray53 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder49.append(shortArray52, shortArray53);
        java.lang.String[] strArray62 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean63 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder54, (java.lang.Object) '#', strArray62);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder64.append(false, false);
        java.lang.Boolean boolean68 = equalsBuilder67.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder67.append((byte) 0, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder67.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder67.append(false, false);
        boolean boolean78 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) strArray62, (java.lang.Object) false, true);
        java.lang.Object[] objArray79 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder17.append((java.lang.Object[]) strArray62, objArray79);
        equalsBuilder80.reset();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(shortArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray52), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray53), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder54);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertEquals("'" + boolean68 + "' != '" + true + "'", boolean68, true);
        org.junit.Assert.assertNotNull(equalsBuilder71);
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(equalsBuilder80);
    }

    @Test
    public void test1827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1827");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        char[] charArray17 = new char[] { '#', ' ', '#', '#' };
        char[] charArray20 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(charArray17, charArray20);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder21.append('a', '#');
        boolean boolean25 = equalsBuilder24.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder24.append((byte) 100, (byte) 10);
        boolean boolean29 = equalsBuilder24.isEquals();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test1828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1828");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        float[] floatArray18 = new float[] { (byte) -1, 10.0f, 'a', ' ', (short) -1 };
        float[] floatArray21 = new float[] { 1.0f, 0L };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder12.append(floatArray18, floatArray21);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder12.append(true, true);
        byte[] byteArray29 = new byte[] { (byte) 100, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray33 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray34 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder30.append(shortArray33, shortArray34);
        byte[] byteArray36 = new byte[] {};
        byte[] byteArray41 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder30.append(byteArray36, byteArray41);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder25.append(byteArray29, byteArray36);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder43.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder45.append((int) (short) 100, (-1));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder45.append('#', '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder45.append('a', 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder54.appendSuper(false);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[-1.0, 10.0, 97.0, 32.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray21), "[1.0, 0.0]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[100, 10, 1]");
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray33), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[]");
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(equalsBuilder54);
        org.junit.Assert.assertNotNull(equalsBuilder56);
    }

    @Test
    public void test1829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1829");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder17.append((long) (byte) 10, (long) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder20.append((long) 1, 0L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = equalsBuilder23.append((long) 'a', 100L);
        boolean boolean27 = equalsBuilder23.isEquals();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(equalsBuilder26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test1830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1830");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        java.lang.Boolean boolean65 = equalsBuilder5.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder5.append((double) ' ', 10.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder68.append('#', '#');
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertEquals("'" + boolean65 + "' != '" + false + "'", boolean65, false);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder71);
    }

    @Test
    public void test1831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1831");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        java.lang.Boolean boolean4 = equalsBuilder3.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray8 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray9 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder10 = equalsBuilder5.append(shortArray8, shortArray9);
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean19 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder10, (java.lang.Object) '#', strArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder10.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray26 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray27 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder23.append(shortArray26, shortArray27);
        byte[] byteArray29 = new byte[] {};
        byte[] byteArray34 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder23.append(byteArray29, byteArray34);
        char[] charArray40 = new char[] { '#', ' ', '#', '#' };
        char[] charArray43 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder23.append(charArray40, charArray43);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray48 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray49 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder45.append(shortArray48, shortArray49);
        byte[] byteArray51 = new byte[] {};
        byte[] byteArray56 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = equalsBuilder45.append(byteArray51, byteArray56);
        char[] charArray62 = new char[] { '#', ' ', '#', '#' };
        char[] charArray65 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder45.append(charArray62, charArray65);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder10.append(charArray43, charArray62);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray71 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray72 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder68.append(shortArray71, shortArray72);
        byte[] byteArray74 = new byte[] {};
        byte[] byteArray79 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder68.append(byteArray74, byteArray79);
        char[] charArray85 = new char[] { '#', ' ', '#', '#' };
        char[] charArray88 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder68.append(charArray85, charArray88);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder3.append(charArray62, charArray85);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder90.append((float) (byte) 100, (float) (short) 10);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + true + "'", boolean4, true);
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder10);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[]");
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(shortArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray48), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray49), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[]");
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder57);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(shortArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray71), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray72), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(byteArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray74), "[]");
        org.junit.Assert.assertNotNull(byteArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray79), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(charArray85);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray85), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray85), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray85), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray88);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray88), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray88), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray88), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder89);
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertNotNull(equalsBuilder93);
    }

    @Test
    public void test1832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1832");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder64.append(true, false);
        equalsBuilder77.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder77.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder77.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder84.append((float) 1, (float) (short) 0);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder87);
    }

    @Test
    public void test1833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1833");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder12.append((byte) 10, (byte) 0);
        boolean boolean16 = equalsBuilder15.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray20 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray21 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder17.append(shortArray20, shortArray21);
        byte[] byteArray23 = new byte[] {};
        byte[] byteArray28 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder17.append(byteArray23, byteArray28);
        byte[] byteArray30 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder15.append(byteArray28, byteArray30);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append((double) (byte) 1, (double) '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder31.append((byte) 100, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder31.append((float) (short) 10, (-1.0f));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder31.append((float) 10L, (float) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder43.append('a', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = equalsBuilder43.append((int) (byte) -1, (int) (byte) 100);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(equalsBuilder49);
    }

    @Test
    public void test1834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1834");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder12.append((byte) 10, (byte) 0);
        boolean boolean16 = equalsBuilder15.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray20 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray21 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder17.append(shortArray20, shortArray21);
        byte[] byteArray23 = new byte[] {};
        byte[] byteArray28 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder17.append(byteArray23, byteArray28);
        byte[] byteArray30 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder15.append(byteArray28, byteArray30);
        java.lang.Boolean boolean32 = equalsBuilder15.build();
        java.lang.Boolean boolean33 = equalsBuilder15.build();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
        org.junit.Assert.assertEquals("'" + boolean33 + "' != '" + false + "'", boolean33, false);
    }

    @Test
    public void test1835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1835");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder17.append((java.lang.Object) boolean37, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray52 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray56 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray57 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder53.append(shortArray56, shortArray57);
        byte[] byteArray59 = new byte[] {};
        byte[] byteArray64 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder53.append(byteArray59, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder46.append(byteArray52, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder46.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder39.append((java.lang.Object) equalsBuilder45, (java.lang.Object) equalsBuilder46);
        java.lang.Boolean boolean70 = equalsBuilder69.build();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray56), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertEquals("'" + boolean70 + "' != '" + false + "'", boolean70, false);
    }

    @Test
    public void test1836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1836");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder5.append((short) (byte) 10, (short) 0);
        long[] longArray14 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray16 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append(longArray14, longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder18.append((short) (byte) 10, (short) 0);
        long[] longArray27 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray29 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(longArray27, longArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append(longArray14, longArray29);
        java.lang.Boolean boolean32 = equalsBuilder31.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray36 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray37 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder33.append(shortArray36, shortArray37);
        byte[] byteArray39 = new byte[] {};
        byte[] byteArray44 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder33.append(byteArray39, byteArray44);
        float[] floatArray51 = new float[] { (byte) -1, 10.0f, 'a', ' ', (short) -1 };
        float[] floatArray54 = new float[] { 1.0f, 0L };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder45.append(floatArray51, floatArray54);
        float[] floatArray60 = new float[] { (-1), (byte) 10, (-1), (short) 100 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder31.append(floatArray54, floatArray60);
        equalsBuilder61.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder61.append((long) (byte) 100, (long) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder61.append((short) (byte) 0, (short) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder61.append(10.0d, (double) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder61.append((byte) -1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder74.append((byte) 1, (byte) 100);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
        org.junit.Assert.assertNotNull(shortArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray36), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[]");
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(floatArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray51), "[-1.0, 10.0, 97.0, 32.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray54), "[1.0, 0.0]");
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(floatArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray60), "[-1.0, 10.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder71);
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
    }

    @Test
    public void test1837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1837");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder17.append((java.lang.Object) boolean37, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray52 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray56 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray57 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder53.append(shortArray56, shortArray57);
        byte[] byteArray59 = new byte[] {};
        byte[] byteArray64 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder53.append(byteArray59, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder46.append(byteArray52, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder46.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder39.append((java.lang.Object) equalsBuilder45, (java.lang.Object) equalsBuilder46);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder69.append('4', ' ');
        equalsBuilder72.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder72.append((double) (short) 1, (double) (byte) 10);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray56), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(equalsBuilder76);
    }

    @Test
    public void test1838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1838");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        float[] floatArray65 = null;
        float[] floatArray66 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder64.append(floatArray65, floatArray66);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder64.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder70.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder72.appendSuper(true);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(equalsBuilder74);
    }

    @Test
    public void test1839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1839");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        equalsBuilder74.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder74.append((int) (byte) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder74.append((double) 100L, (double) (-1L));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder81.append((byte) 10, (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder81.append((-1.0f), (float) (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder81.append((float) 1L, (float) (byte) 100);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(equalsBuilder90);
    }

    @Test
    public void test1840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1840");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray6 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray10 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray11 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder7.append(shortArray10, shortArray11);
        byte[] byteArray13 = new byte[] {};
        byte[] byteArray18 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder7.append(byteArray13, byteArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder0.append(byteArray6, byteArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder0.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder0.append((byte) 0, (byte) 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder25);
    }

    @Test
    public void test1841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1841");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder12.append((byte) 10, (byte) 0);
        boolean boolean16 = equalsBuilder15.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray20 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray21 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder17.append(shortArray20, shortArray21);
        byte[] byteArray23 = new byte[] {};
        byte[] byteArray28 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder17.append(byteArray23, byteArray28);
        byte[] byteArray30 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder15.append(byteArray28, byteArray30);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append((float) ' ', (float) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder34.append(false, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder34.append(1.0d, (double) (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder40.append((long) (byte) 0, (long) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder40.append((short) (byte) 10, (short) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = equalsBuilder46.append('4', 'a');
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(equalsBuilder49);
    }

    @Test
    public void test1842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1842");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder17.append((java.lang.Object) boolean37, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray52 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray56 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray57 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder53.append(shortArray56, shortArray57);
        byte[] byteArray59 = new byte[] {};
        byte[] byteArray64 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder53.append(byteArray59, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder46.append(byteArray52, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder46.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder39.append((java.lang.Object) equalsBuilder45, (java.lang.Object) equalsBuilder46);
        long[] longArray73 = new long[] { (byte) 100, ' ', (short) 10 };
        long[] longArray79 = new long[] { 'a', 0L, (short) 10, (byte) 0, (byte) -1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder46.append(longArray73, longArray79);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder80.append((short) 0, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder80.append(' ', ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder86.append((long) 1, (long) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder86.append((int) (short) 1, (int) (short) 0);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray56), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(longArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray73), "[100, 32, 10]");
        org.junit.Assert.assertNotNull(longArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray79), "[97, 0, 10, 0, -1]");
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertNotNull(equalsBuilder89);
        org.junit.Assert.assertNotNull(equalsBuilder92);
    }

    @Test
    public void test1843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1843");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        float[] floatArray65 = null;
        float[] floatArray66 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder64.append(floatArray65, floatArray66);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder64.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder64.append((float) 100L, (float) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder73.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder73.append('#', '4');
        java.lang.Boolean boolean80 = equalsBuilder79.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder79.append(false, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder79.append((byte) 1, (byte) 0);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder76);
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertEquals("'" + boolean80 + "' != '" + false + "'", boolean80, false);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder86);
    }

    @Test
    public void test1844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1844");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        char[] charArray17 = new char[] { '#', ' ', '#', '#' };
        char[] charArray20 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(charArray17, charArray20);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder21.append('a', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder21.append((int) (byte) 1, (int) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder27.append((int) (byte) 1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder30.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder33.append((byte) 100, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder33.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = equalsBuilder38.append((short) 100, (short) (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder38.append(1, (int) (byte) 10);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(equalsBuilder41);
        org.junit.Assert.assertNotNull(equalsBuilder44);
    }

    @Test
    public void test1845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1845");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray12 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray16 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray17 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder13.append(shortArray16, shortArray17);
        byte[] byteArray19 = new byte[] {};
        byte[] byteArray24 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder13.append(byteArray19, byteArray24);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = equalsBuilder6.append(byteArray12, byteArray24);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray31 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray32 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder28.append(shortArray31, shortArray32);
        byte[] byteArray34 = new byte[] {};
        byte[] byteArray39 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder28.append(byteArray34, byteArray39);
        boolean boolean41 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (short) 0, (java.lang.Object) byteArray39);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder0.append(byteArray12, byteArray39);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder42.append(false, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder45.append((byte) 0, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder48.append(1.0d, (double) (-1));
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(equalsBuilder26);
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[]");
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(equalsBuilder51);
    }

    @Test
    public void test1846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1846");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder0.append((float) 10L, (float) (-1));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder10 = equalsBuilder7.append((short) (byte) 10, (short) 0);
        long[] longArray16 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray18 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder7.append(longArray16, longArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder20.append((short) (byte) 10, (short) 0);
        long[] longArray29 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray31 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder32 = equalsBuilder20.append(longArray29, longArray31);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder6.append(longArray16, longArray31);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder33.append((byte) 0, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder37.append((short) (byte) 10, (short) 0);
        equalsBuilder37.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder37.append((short) (byte) 10, (short) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder37.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder37.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder37.append((short) (byte) 10, (short) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder52.append((short) (byte) 10, (short) 0);
        equalsBuilder52.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder57.append((short) (byte) 10, (short) 0);
        long[] longArray66 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray68 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder57.append(longArray66, longArray68);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder70.append((short) (byte) 10, (short) 0);
        long[] longArray79 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray81 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder70.append(longArray79, longArray81);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder52.append(longArray66, longArray81);
        java.lang.Boolean boolean84 = equalsBuilder83.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder83.append((byte) 1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder87.appendSuper(true);
        equalsBuilder87.reset();
        equalsBuilder87.reset();
        boolean boolean92 = equalsBuilder87.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder36.append((java.lang.Object) equalsBuilder37, (java.lang.Object) equalsBuilder87);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder96 = equalsBuilder93.append((byte) 0, (byte) 0);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(equalsBuilder10);
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray18), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray31), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder32);
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(equalsBuilder60);
        org.junit.Assert.assertNotNull(longArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray66), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray68), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(longArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray79), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray81), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertEquals("'" + boolean84 + "' != '" + false + "'", boolean84, false);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(equalsBuilder89);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(equalsBuilder93);
        org.junit.Assert.assertNotNull(equalsBuilder96);
    }

    @Test
    public void test1847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1847");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder4 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder4.append((short) (byte) 10, (short) 0);
        equalsBuilder4.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder9.append((short) (byte) 10, (short) 0);
        long[] longArray18 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray20 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder9.append(longArray18, longArray20);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder22.append((short) (byte) 10, (short) 0);
        long[] longArray31 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray33 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder22.append(longArray31, longArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder4.append(longArray18, longArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder36.append((short) (byte) 10, (short) 0);
        long[] longArray45 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray47 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder36.append(longArray45, longArray47);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray52 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray53 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder49.append(shortArray52, shortArray53);
        java.lang.String[] strArray62 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean63 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder54, (java.lang.Object) '#', strArray62);
        boolean boolean64 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) longArray47, (java.lang.Object) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder3.append(longArray18, longArray47);
        java.lang.Boolean boolean66 = equalsBuilder3.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder3.append((float) (-1), (float) 0L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder69.append((double) 100.0f, (double) (-1.0f));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder72.append((short) 0, (short) (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder72.append('#', '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder72.append(1L, (long) (-1));
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(longArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray18), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(longArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray31), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray33), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(longArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray45), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray47), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(shortArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray52), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray53), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder54);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertEquals("'" + boolean66 + "' != '" + false + "'", boolean66, false);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
    }

    @Test
    public void test1848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1848");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        long[] longArray65 = null;
        long[] longArray72 = new long[] { 1, (byte) -1, (-1), (short) 1, 100L, '#' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder64.append(longArray65, longArray72);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder64.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder75.append((long) (short) -1, (long) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder75.append((float) (byte) 100, (float) '#');
        equalsBuilder81.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder81.append('#', ' ');
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(longArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray72), "[1, -1, -1, 1, 100, 35]");
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder85);
    }

    @Test
    public void test1849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1849");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder5.append((short) (byte) 10, (short) 0);
        long[] longArray14 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray16 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append(longArray14, longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder18.append((short) (byte) 10, (short) 0);
        long[] longArray27 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray29 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(longArray27, longArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append(longArray14, longArray29);
        java.lang.Boolean boolean32 = equalsBuilder31.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder31.append((byte) 1, (byte) 0);
        boolean boolean36 = equalsBuilder35.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder35.append((byte) 100, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder40.append((short) (byte) 10, (short) 0);
        equalsBuilder40.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder45.append((short) (byte) 10, (short) 0);
        long[] longArray54 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray56 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = equalsBuilder45.append(longArray54, longArray56);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder58.append((short) (byte) 10, (short) 0);
        long[] longArray67 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray69 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder58.append(longArray67, longArray69);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder40.append(longArray54, longArray69);
        java.lang.Boolean boolean72 = equalsBuilder71.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder71.append((double) (short) -1, (double) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder71.append((short) 0, (short) 0);
        boolean boolean79 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder39, (java.lang.Object) equalsBuilder78);
        boolean boolean80 = equalsBuilder39.isEquals();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(longArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray54), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray56), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder57);
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(longArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray67), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray69), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(equalsBuilder71);
        org.junit.Assert.assertEquals("'" + boolean72 + "' != '" + false + "'", boolean72, false);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test1850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1850");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.append((double) 100L, (double) 10L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray19 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray20 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder16.append(shortArray19, shortArray20);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean30 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder21, (java.lang.Object) '#', strArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder21.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray37 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray38 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder34.append(shortArray37, shortArray38);
        byte[] byteArray40 = new byte[] {};
        byte[] byteArray45 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder34.append(byteArray40, byteArray45);
        char[] charArray51 = new char[] { '#', ' ', '#', '#' };
        char[] charArray54 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder34.append(charArray51, charArray54);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray59 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray60 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder56.append(shortArray59, shortArray60);
        byte[] byteArray62 = new byte[] {};
        byte[] byteArray67 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder56.append(byteArray62, byteArray67);
        char[] charArray73 = new char[] { '#', ' ', '#', '#' };
        char[] charArray76 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder56.append(charArray73, charArray76);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder21.append(charArray54, charArray73);
        java.lang.Object obj79 = null;
        boolean boolean80 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) charArray54, obj79);
        java.lang.String[] strArray81 = new java.lang.String[] {};
        boolean boolean82 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder15, (java.lang.Object) charArray54, strArray81);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder15.appendSuper(false);
        float[] floatArray85 = new float[] {};
        float[] floatArray87 = new float[] { (byte) -1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder15.append(floatArray85, floatArray87);
        boolean[] booleanArray89 = new boolean[] {};
        boolean[] booleanArray90 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder88.append(booleanArray89, booleanArray90);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder94 = equalsBuilder88.append((float) 0, (-1.0f));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder97 = equalsBuilder94.append((int) (byte) -1, (int) (short) 0);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[]");
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(shortArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray59), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray60), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[]");
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(floatArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray85), "[]");
        org.junit.Assert.assertNotNull(floatArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray87), "[-1.0]");
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertNotNull(booleanArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray89), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder91);
        org.junit.Assert.assertNotNull(equalsBuilder94);
        org.junit.Assert.assertNotNull(equalsBuilder97);
    }

    @Test
    public void test1851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1851");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder0.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder10 = equalsBuilder0.append((double) 1, (double) (-1L));
        java.lang.Boolean boolean11 = equalsBuilder10.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray18 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        byte[] byteArray25 = new byte[] {};
        byte[] byteArray30 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder19.append(byteArray25, byteArray30);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder32 = equalsBuilder12.append(byteArray18, byteArray30);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray37 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray38 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder34.append(shortArray37, shortArray38);
        byte[] byteArray40 = new byte[] {};
        byte[] byteArray45 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder34.append(byteArray40, byteArray45);
        boolean boolean47 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (short) 0, (java.lang.Object) byteArray45);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder10.append(byteArray18, byteArray45);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder48.append((double) (short) -1, (double) (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder48.append('4', '#');
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(equalsBuilder10);
        org.junit.Assert.assertEquals("'" + boolean11 + "' != '" + false + "'", boolean11, false);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder32);
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[]");
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(equalsBuilder54);
    }

    @Test
    public void test1852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1852");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder0.append('#', '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder0.appendSuper(true);
        boolean boolean9 = equalsBuilder0.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(' ', '#');
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(equalsBuilder12);
    }

    @Test
    public void test1853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1853");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        equalsBuilder62.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder62.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder62.append((short) 10, (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder69.append((float) (short) 100, 0.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder69.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder69.append((long) (short) 100, (long) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder77.append((short) (byte) 100, (short) (byte) -1);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder80);
    }

    @Test
    public void test1854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1854");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        equalsBuilder62.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder62.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder62.append((short) 10, (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder69.append((float) (short) 100, 0.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder72.append((double) (byte) 10, (double) 1.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder72.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder72.append((double) (short) 1, 1.0d);
        equalsBuilder72.reset();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
    }

    @Test
    public void test1855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1855");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray9 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray10 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder11 = equalsBuilder6.append(shortArray9, shortArray10);
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean20 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder11, (java.lang.Object) '#', strArray19);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder11.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray27 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray28 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder24.append(shortArray27, shortArray28);
        byte[] byteArray30 = new byte[] {};
        byte[] byteArray35 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append(byteArray30, byteArray35);
        char[] charArray41 = new char[] { '#', ' ', '#', '#' };
        char[] charArray44 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder24.append(charArray41, charArray44);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray49 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray50 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder46.append(shortArray49, shortArray50);
        byte[] byteArray52 = new byte[] {};
        byte[] byteArray57 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder46.append(byteArray52, byteArray57);
        char[] charArray63 = new char[] { '#', ' ', '#', '#' };
        char[] charArray66 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder46.append(charArray63, charArray66);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder11.append(charArray44, charArray63);
        java.lang.String[] strArray69 = null;
        boolean boolean70 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) shortArray4, (java.lang.Object) equalsBuilder11, strArray69);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder11.append(false, false);
        boolean[] booleanArray77 = new boolean[] { false, false, false };
        boolean[] booleanArray78 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder11.append(booleanArray77, booleanArray78);
        java.lang.Boolean boolean80 = equalsBuilder79.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder79.append('#', ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder83.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder83.append(1, (int) (short) 10);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder11);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray28), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray49), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray50), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(booleanArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray77), "[false, false, false]");
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertEquals("'" + boolean80 + "' != '" + false + "'", boolean80, false);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertNotNull(equalsBuilder88);
    }

    @Test
    public void test1856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1856");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder17.append((java.lang.Object) boolean37, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray52 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray56 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray57 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder53.append(shortArray56, shortArray57);
        byte[] byteArray59 = new byte[] {};
        byte[] byteArray64 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder53.append(byteArray59, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder46.append(byteArray52, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder46.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder39.append((java.lang.Object) equalsBuilder45, (java.lang.Object) equalsBuilder46);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder45.append((float) (short) 0, 100.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder45.append((float) 100L, (-1.0f));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder75.appendSuper(true);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray56), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder77);
    }

    @Test
    public void test1857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1857");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.append((double) 100L, (double) 10L);
        boolean boolean16 = equalsBuilder0.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(0, (int) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder19.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append((long) 100, 100L);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
    }

    @Test
    public void test1858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1858");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        float[] floatArray18 = new float[] { (byte) -1, 10.0f, 'a', ' ', (short) -1 };
        float[] floatArray21 = new float[] { 1.0f, 0L };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder12.append(floatArray18, floatArray21);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder12.append(true, true);
        byte[] byteArray29 = new byte[] { (byte) 100, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray33 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray34 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder30.append(shortArray33, shortArray34);
        byte[] byteArray36 = new byte[] {};
        byte[] byteArray41 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder30.append(byteArray36, byteArray41);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder25.append(byteArray29, byteArray36);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder43.append((byte) 0, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = equalsBuilder43.append((int) (byte) 0, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder43.append(0L, (long) '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder52.append((int) (short) 0, (int) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder55.append(' ', ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder58.append((int) (byte) 1, (int) (byte) 0);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[-1.0, 10.0, 97.0, 32.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray21), "[1.0, 0.0]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[100, 10, 1]");
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray33), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[]");
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(equalsBuilder49);
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(equalsBuilder61);
    }

    @Test
    public void test1859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1859");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((double) 'a', 0.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder5.append((byte) -1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder5.append((long) '#', (long) (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = equalsBuilder23.append((int) (short) 10, (int) '4');
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(equalsBuilder26);
    }

    @Test
    public void test1860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1860");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder17.append(' ', '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder21.append((double) 10, (double) 1.0f);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
    }

    @Test
    public void test1861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1861");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        long[] longArray65 = null;
        long[] longArray72 = new long[] { 1, (byte) -1, (-1), (short) 1, 100L, '#' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder64.append(longArray65, longArray72);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder64.appendSuper(true);
        double[] doubleArray80 = new double[] { (short) 0, 0.0d, (byte) 10, (byte) 0 };
        double[] doubleArray81 = new double[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder64.append(doubleArray80, doubleArray81);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder82.append((short) 0, (short) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder82.append((float) (short) 1, (float) (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder88.append((short) 1, (short) 10);
        equalsBuilder91.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder94 = equalsBuilder91.appendSuper(true);
        equalsBuilder94.reset();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(longArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray72), "[1, -1, -1, 1, 100, 35]");
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[0.0, 0.0, 10.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertNotNull(equalsBuilder91);
        org.junit.Assert.assertNotNull(equalsBuilder94);
    }

    @Test
    public void test1862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1862");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.append((double) 100L, (double) 10L);
        boolean boolean16 = equalsBuilder0.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(0, (int) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder19.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append((int) (short) -1, (int) (byte) 1);
        equalsBuilder24.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder24.append((float) (-1), 100.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder28.append((byte) -1, (byte) 0);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
    }

    @Test
    public void test1863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1863");
        java.lang.Object obj0 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder1 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray4 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray5 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder1.append(shortArray4, shortArray5);
        byte[] byteArray7 = new byte[] {};
        byte[] byteArray12 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder1.append(byteArray7, byteArray12);
        java.lang.String[] strArray15 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        boolean boolean18 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj0, (java.lang.Object) equalsBuilder13, (java.util.Collection<java.lang.String>) strList16);
        boolean boolean19 = equalsBuilder13.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder13.append((float) (byte) 1, (float) 1L);
        boolean boolean23 = equalsBuilder13.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = equalsBuilder13.append((-1), (int) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder27.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder27.append((float) 10L, (float) (-1));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder34.append((short) (byte) 10, (short) 0);
        long[] longArray43 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray45 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder34.append(longArray43, longArray45);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder47.append((short) (byte) 10, (short) 0);
        long[] longArray56 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray58 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder59 = equalsBuilder47.append(longArray56, longArray58);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder33.append(longArray43, longArray58);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder61.append((short) (byte) 10, (short) 0);
        long[] longArray70 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray72 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder61.append(longArray70, longArray72);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder26.append(longArray43, longArray72);
        equalsBuilder26.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder26.append(true, true);
        java.lang.Boolean boolean79 = equalsBuilder78.build();
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(equalsBuilder26);
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(longArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray43), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray45), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(longArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray56), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray58), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder59);
        org.junit.Assert.assertNotNull(equalsBuilder60);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(longArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray70), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray72), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertEquals("'" + boolean79 + "' != '" + true + "'", boolean79, true);
    }

    @Test
    public void test1864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1864");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        long[] longArray65 = null;
        long[] longArray72 = new long[] { 1, (byte) -1, (-1), (short) 1, 100L, '#' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder64.append(longArray65, longArray72);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder64.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder76.append(false, false);
        int[] intArray84 = new int[] { (short) 100, 0, (short) 100, (short) 10 };
        int[] intArray85 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder76.append(intArray84, intArray85);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(longArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray72), "[1, -1, -1, 1, 100, 35]");
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder76);
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[100, 0, 100, 10]");
        org.junit.Assert.assertNotNull(equalsBuilder86);
    }

    @Test
    public void test1865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1865");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        float[] floatArray18 = new float[] { (byte) -1, 10.0f, 'a', ' ', (short) -1 };
        float[] floatArray21 = new float[] { 1.0f, 0L };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder12.append(floatArray18, floatArray21);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder12.append((float) 0L, 10.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder25.append('#', '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder28.append('a', '#');
        java.lang.Boolean boolean32 = equalsBuilder31.build();
        java.lang.Boolean boolean33 = equalsBuilder31.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder31.append('#', '#');
        boolean boolean37 = equalsBuilder36.isEquals();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[-1.0, 10.0, 97.0, 32.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray21), "[1.0, 0.0]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
        org.junit.Assert.assertEquals("'" + boolean33 + "' != '" + false + "'", boolean33, false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test1866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1866");
        java.lang.Object obj0 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder1 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray4 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray5 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder1.append(shortArray4, shortArray5);
        byte[] byteArray7 = new byte[] {};
        byte[] byteArray12 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder1.append(byteArray7, byteArray12);
        java.lang.String[] strArray15 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        boolean boolean18 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj0, (java.lang.Object) equalsBuilder13, (java.util.Collection<java.lang.String>) strList16);
        boolean boolean19 = equalsBuilder13.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder13.append((float) (byte) 1, (float) 1L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder13.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder24.append(0.0d, (double) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder28.append((short) (byte) 10, (short) 0);
        equalsBuilder28.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder33.append((short) (byte) 10, (short) 0);
        long[] longArray42 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray44 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder33.append(longArray42, longArray44);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = equalsBuilder46.append((short) (byte) 10, (short) 0);
        long[] longArray55 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray57 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder46.append(longArray55, longArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder59 = equalsBuilder28.append(longArray42, longArray57);
        java.lang.Boolean boolean60 = equalsBuilder59.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder59.append((byte) 1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder63.appendSuper(true);
        short[] shortArray66 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray70 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray71 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder67.append(shortArray70, shortArray71);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder65.append(shortArray66, shortArray70);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder65.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder75.append((byte) 10, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder75.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder81.append(1L, (long) (short) 100);
        boolean boolean85 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder27, (java.lang.Object) equalsBuilder81);
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertNotNull(longArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray42), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray44), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(equalsBuilder49);
        org.junit.Assert.assertNotNull(longArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray55), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray57), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(equalsBuilder59);
        org.junit.Assert.assertEquals("'" + boolean60 + "' != '" + false + "'", boolean60, false);
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(shortArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray66), "[]");
        org.junit.Assert.assertNotNull(shortArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray70), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray71), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
    }

    @Test
    public void test1867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1867");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder12.append((byte) 10, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder12.append((float) 0, (float) (short) 1);
        java.lang.Class<?> wildcardClass19 = equalsBuilder18.getClass();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test1868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1868");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        java.lang.Boolean boolean4 = equalsBuilder3.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder3.append((byte) 100, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder10 = equalsBuilder3.append((byte) -1, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder10.append((double) (byte) 0, 100.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = equalsBuilder10.append((long) '4', (long) (short) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder10.append((double) ' ', (double) 'a');
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + true + "'", boolean4, true);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(equalsBuilder10);
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertNotNull(equalsBuilder16);
        org.junit.Assert.assertNotNull(equalsBuilder19);
    }

    @Test
    public void test1869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1869");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder0.append((short) (byte) 10, (short) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = equalsBuilder0.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder11 = equalsBuilder0.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder14 = equalsBuilder11.append(0.0f, (float) '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray18 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray19 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder15.append(shortArray18, shortArray19);
        byte[] byteArray21 = new byte[] {};
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder15.append(byteArray21, byteArray26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder27.append((byte) 10, (byte) 0);
        equalsBuilder27.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder27.append('#', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder34.append((double) (byte) 100, (double) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder37.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder40.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder40.append((-1), (int) (short) 10);
        java.lang.Object obj47 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray54 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray58 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray59 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder55.append(shortArray58, shortArray59);
        byte[] byteArray61 = new byte[] {};
        byte[] byteArray66 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder55.append(byteArray61, byteArray66);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder48.append(byteArray54, byteArray66);
        boolean boolean70 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj47, (java.lang.Object) byteArray66, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray77 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray81 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray82 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder78.append(shortArray81, shortArray82);
        byte[] byteArray84 = new byte[] {};
        byte[] byteArray89 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder78.append(byteArray84, byteArray89);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder71.append(byteArray77, byteArray89);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder40.append(byteArray66, byteArray77);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder11.append((java.lang.Object) equalsBuilder39, (java.lang.Object) equalsBuilder40);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder96 = equalsBuilder39.append((byte) 0, (byte) 100);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(equalsBuilder9);
        org.junit.Assert.assertNotNull(equalsBuilder11);
        org.junit.Assert.assertNotNull(equalsBuilder14);
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray58), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray59), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder60);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[]");
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray81), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray82), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[]");
        org.junit.Assert.assertNotNull(byteArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray89), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertNotNull(equalsBuilder91);
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertNotNull(equalsBuilder93);
        org.junit.Assert.assertNotNull(equalsBuilder96);
    }

    @Test
    public void test1870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1870");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder12.append((byte) 10, (byte) 0);
        boolean boolean16 = equalsBuilder15.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray20 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray21 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder17.append(shortArray20, shortArray21);
        byte[] byteArray23 = new byte[] {};
        byte[] byteArray28 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder17.append(byteArray23, byteArray28);
        byte[] byteArray30 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder15.append(byteArray28, byteArray30);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append((double) (byte) 1, (double) '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder34.append((float) (byte) -1, (float) 0L);
        equalsBuilder34.reset();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder37);
    }

    @Test
    public void test1871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1871");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        char[] charArray17 = new char[] { '#', ' ', '#', '#' };
        char[] charArray20 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(charArray17, charArray20);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder21.append('a', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder21.append((int) (byte) 1, (int) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder27.append((int) (byte) 1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder27.append((long) (byte) 10, (long) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder33.append((int) '4', 0);
        java.lang.Boolean boolean37 = equalsBuilder33.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder33.append(' ', '4');
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertEquals("'" + boolean37 + "' != '" + false + "'", boolean37, false);
        org.junit.Assert.assertNotNull(equalsBuilder40);
    }

    @Test
    public void test1872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1872");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        long[] longArray65 = null;
        long[] longArray72 = new long[] { 1, (byte) -1, (-1), (short) 1, 100L, '#' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder64.append(longArray65, longArray72);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder64.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder64.append(1.0f, (float) (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder64.append((short) -1, (short) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder81.append((int) (byte) 100, (int) '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder81.appendSuper(true);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(longArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray72), "[1, -1, -1, 1, 100, 35]");
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder86);
    }

    @Test
    public void test1873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1873");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder12.append((byte) 10, (byte) 0);
        equalsBuilder12.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder12.append((short) 0, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder12.append((short) (byte) 1, (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder22.append((long) '4', (long) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder22.append(1.0d, (double) 0L);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(equalsBuilder28);
    }

    @Test
    public void test1874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1874");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder64.append((byte) -1, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder77.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder79.append((double) (byte) 100, (double) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder82.append((float) (short) 100, (float) (short) 0);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(equalsBuilder85);
    }

    @Test
    public void test1875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1875");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        java.lang.Boolean boolean4 = equalsBuilder3.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder3.append((byte) 0, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = equalsBuilder3.appendSuper(true);
        boolean boolean10 = equalsBuilder9.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder11 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray14 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray15 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = equalsBuilder11.append(shortArray14, shortArray15);
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean25 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder16, (java.lang.Object) '#', strArray24);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder16.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray32 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray33 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder29.append(shortArray32, shortArray33);
        byte[] byteArray35 = new byte[] {};
        byte[] byteArray40 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = equalsBuilder29.append(byteArray35, byteArray40);
        char[] charArray46 = new char[] { '#', ' ', '#', '#' };
        char[] charArray49 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder29.append(charArray46, charArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray54 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray55 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder51.append(shortArray54, shortArray55);
        byte[] byteArray57 = new byte[] {};
        byte[] byteArray62 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder51.append(byteArray57, byteArray62);
        char[] charArray68 = new char[] { '#', ' ', '#', '#' };
        char[] charArray71 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder51.append(charArray68, charArray71);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder16.append(charArray49, charArray68);
        equalsBuilder73.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder73.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder73.append((short) 10, (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder80.append((float) (short) 100, 0.0f);
        equalsBuilder83.reset();
        boolean boolean85 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder9, (java.lang.Object) equalsBuilder83);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder83.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder88.append(false, false);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + true + "'", boolean4, true);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(equalsBuilder9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shortArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray15), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder16);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray33), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[]");
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder41);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(shortArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray54), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray55), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[]");
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertNotNull(equalsBuilder91);
    }

    @Test
    public void test1876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1876");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.append((double) 100L, (double) 10L);
        boolean boolean16 = equalsBuilder0.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(0, (int) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder19.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append((float) (-1L), 0.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder19.append((short) 100, (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder19.append((byte) 10, (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder19.append(1, 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder19.append(false, false);
        java.lang.Class<?> wildcardClass37 = equalsBuilder36.getClass();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test1877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1877");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder17.append((java.lang.Object) boolean37, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray52 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray56 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray57 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder53.append(shortArray56, shortArray57);
        byte[] byteArray59 = new byte[] {};
        byte[] byteArray64 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder53.append(byteArray59, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder46.append(byteArray52, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder46.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder39.append((java.lang.Object) equalsBuilder45, (java.lang.Object) equalsBuilder46);
        long[] longArray73 = new long[] { (byte) 100, ' ', (short) 10 };
        long[] longArray79 = new long[] { 'a', 0L, (short) 10, (byte) 0, (byte) -1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder46.append(longArray73, longArray79);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder80.append((short) 0, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder83.append(0, (int) (short) 0);
        boolean boolean87 = equalsBuilder83.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder83.appendSuper(true);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray56), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(longArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray73), "[100, 32, 10]");
        org.junit.Assert.assertNotNull(longArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray79), "[97, 0, 10, 0, -1]");
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(equalsBuilder89);
    }

    @Test
    public void test1878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1878");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder0.append((double) 'a', (double) 10);
        boolean boolean8 = equalsBuilder0.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder11 = equalsBuilder0.append((long) (-1), (long) '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder14 = equalsBuilder11.append((double) (byte) 0, (double) (short) 0);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(equalsBuilder11);
        org.junit.Assert.assertNotNull(equalsBuilder14);
    }

    @Test
    public void test1879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1879");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder64.append((byte) -1, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder64.append((double) 10.0f, 100.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder80.append((short) (byte) 1, (short) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder83.append(10.0f, (float) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder83.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder88.append('#', ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder88.appendSuper(false);
        equalsBuilder93.reset();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertNotNull(equalsBuilder91);
        org.junit.Assert.assertNotNull(equalsBuilder93);
    }

    @Test
    public void test1880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1880");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder0.append((-1), (int) (short) 10);
        java.lang.Object obj7 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray14 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray18 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray19 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder15.append(shortArray18, shortArray19);
        byte[] byteArray21 = new byte[] {};
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder15.append(byteArray21, byteArray26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder8.append(byteArray14, byteArray26);
        boolean boolean30 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj7, (java.lang.Object) byteArray26, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray37 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray41 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray42 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder38.append(shortArray41, shortArray42);
        byte[] byteArray44 = new byte[] {};
        byte[] byteArray49 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder38.append(byteArray44, byteArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder31.append(byteArray37, byteArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder0.append(byteArray26, byteArray37);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder52.append((short) 100, (short) (byte) 0);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray41), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(equalsBuilder55);
    }

    @Test
    public void test1881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1881");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((double) 100.0f, (double) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder5.append((short) 0, (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder20.append((long) (short) -1, (long) (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = equalsBuilder23.append((byte) 10, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder23.append((float) 10L, 0.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder32 = equalsBuilder23.append((short) 0, (short) (byte) 1);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(equalsBuilder26);
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(equalsBuilder32);
    }

    @Test
    public void test1882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1882");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder17.append((byte) 100, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray25 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray26 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder22.append(shortArray25, shortArray26);
        byte[] byteArray28 = new byte[] {};
        byte[] byteArray33 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder22.append(byteArray28, byteArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder34.append((byte) 10, (byte) 0);
        boolean boolean38 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder17, (java.lang.Object) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = equalsBuilder17.append((long) (short) -1, (long) ' ');
        boolean boolean42 = equalsBuilder17.isEquals();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[]");
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(equalsBuilder41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test1883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1883");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        long[] longArray9 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray11 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(longArray9, longArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray16 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray17 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder13.append(shortArray16, shortArray17);
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean27 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder18, (java.lang.Object) '#', strArray26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append((int) (short) -1, (int) (short) 0);
        boolean boolean31 = equalsBuilder30.isEquals();
        boolean boolean32 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder12, (java.lang.Object) boolean31);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder12.append((short) 0, (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder35.append((double) (byte) -1, 1.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = equalsBuilder35.append(0, 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder41.append((double) (byte) 10, (double) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder44.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder47.append((float) (short) -1, (float) (short) -1);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(equalsBuilder41);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder50);
    }

    @Test
    public void test1884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1884");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder64.append((byte) -1, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder64.append((double) 10.0f, 100.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder80.append((short) (byte) 1, (short) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder83.append(10.0f, (float) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder83.appendSuper(false);
        java.lang.Object obj89 = null;
        boolean boolean90 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder83, obj89);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder83.append(0.0d, (double) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder96 = equalsBuilder83.append((byte) 10, (byte) 0);
        java.lang.Boolean boolean97 = equalsBuilder83.build();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(equalsBuilder93);
        org.junit.Assert.assertNotNull(equalsBuilder96);
        org.junit.Assert.assertEquals("'" + boolean97 + "' != '" + false + "'", boolean97, false);
    }

    @Test
    public void test1885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1885");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder5.append((float) '#', 1.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder11 = equalsBuilder8.append((long) (byte) 0, (long) (short) 100);
        java.lang.Boolean boolean12 = equalsBuilder11.build();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertNotNull(equalsBuilder11);
        org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + false + "'", boolean12, false);
    }

    @Test
    public void test1886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1886");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        equalsBuilder62.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder62.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder62.append((short) 10, (short) -1);
        boolean[] booleanArray74 = new boolean[] { true, true, false, true };
        boolean[] booleanArray78 = new boolean[] { true, true, false };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder69.append(booleanArray74, booleanArray78);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder79.append('4', 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder82.append((short) (byte) 100, (short) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder82.append((short) 100, (short) 0);
        equalsBuilder82.reset();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(booleanArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray74), "[true, true, false, true]");
        org.junit.Assert.assertNotNull(booleanArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray78), "[true, true, false]");
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertNotNull(equalsBuilder88);
    }

    @Test
    public void test1887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1887");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder5.append((short) (byte) 10, (short) 0);
        long[] longArray14 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray16 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append(longArray14, longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder18.append((short) (byte) 10, (short) 0);
        long[] longArray27 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray29 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(longArray27, longArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append(longArray14, longArray29);
        java.lang.Boolean boolean32 = equalsBuilder31.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder31.append((byte) 1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder35.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder35.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder39.append('a', '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder39.append('4', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder45.append((float) (byte) 0, (float) (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder45.appendSuper(false);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(equalsBuilder50);
    }

    @Test
    public void test1888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1888");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray6 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray10 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray11 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder7.append(shortArray10, shortArray11);
        byte[] byteArray13 = new byte[] {};
        byte[] byteArray18 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder7.append(byteArray13, byteArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder0.append(byteArray6, byteArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder0.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder22.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder24.append(' ', 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder27.append((short) -1, (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder32 = equalsBuilder30.appendSuper(true);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder32);
    }

    @Test
    public void test1889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1889");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder4 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder4.append((short) (byte) 10, (short) 0);
        equalsBuilder4.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder9.append((short) (byte) 10, (short) 0);
        long[] longArray18 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray20 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder9.append(longArray18, longArray20);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder22.append((short) (byte) 10, (short) 0);
        long[] longArray31 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray33 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder22.append(longArray31, longArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder4.append(longArray18, longArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder36.append((short) (byte) 10, (short) 0);
        long[] longArray45 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray47 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder36.append(longArray45, longArray47);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray52 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray53 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder49.append(shortArray52, shortArray53);
        java.lang.String[] strArray62 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean63 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder54, (java.lang.Object) '#', strArray62);
        boolean boolean64 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) longArray47, (java.lang.Object) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder3.append(longArray18, longArray47);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder3.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder67.append((long) 1, (long) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder70.append('#', ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder70.append((int) '4', (int) (byte) 1);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(longArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray18), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(longArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray31), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray33), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(longArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray45), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray47), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(shortArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray52), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray53), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder54);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder76);
    }

    @Test
    public void test1890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1890");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        char[] charArray17 = new char[] { '#', ' ', '#', '#' };
        char[] charArray20 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(charArray17, charArray20);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder21.append('a', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder21.append((int) (byte) 1, (int) (byte) 0);
        short[] shortArray28 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray32 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray33 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder29.append(shortArray32, shortArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder27.append(shortArray28, shortArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder35.append((double) (-1), (double) 10.0f);
        java.lang.Boolean boolean39 = equalsBuilder38.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder38.append((float) (short) 0, (float) 10L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder38.append((float) 0L, (float) (byte) -1);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray33), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertEquals("'" + boolean39 + "' != '" + false + "'", boolean39, false);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder45);
    }

    @Test
    public void test1891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1891");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder17.append((java.lang.Object) boolean37, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder17.append((short) 100, (short) (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder42.append((byte) 0, (byte) -1);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder45);
    }

    @Test
    public void test1892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1892");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.append((double) 100L, (double) 10L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray19 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray20 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder16.append(shortArray19, shortArray20);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean30 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder21, (java.lang.Object) '#', strArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder21.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray37 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray38 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder34.append(shortArray37, shortArray38);
        byte[] byteArray40 = new byte[] {};
        byte[] byteArray45 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder34.append(byteArray40, byteArray45);
        char[] charArray51 = new char[] { '#', ' ', '#', '#' };
        char[] charArray54 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder34.append(charArray51, charArray54);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray59 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray60 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder56.append(shortArray59, shortArray60);
        byte[] byteArray62 = new byte[] {};
        byte[] byteArray67 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder56.append(byteArray62, byteArray67);
        char[] charArray73 = new char[] { '#', ' ', '#', '#' };
        char[] charArray76 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder56.append(charArray73, charArray76);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder21.append(charArray54, charArray73);
        java.lang.Object obj79 = null;
        boolean boolean80 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) charArray54, obj79);
        java.lang.String[] strArray81 = new java.lang.String[] {};
        boolean boolean82 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder15, (java.lang.Object) charArray54, strArray81);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder15.appendSuper(false);
        float[] floatArray85 = new float[] {};
        float[] floatArray87 = new float[] { (byte) -1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder15.append(floatArray85, floatArray87);
        boolean[] booleanArray89 = new boolean[] {};
        boolean[] booleanArray90 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder88.append(booleanArray89, booleanArray90);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder94 = equalsBuilder91.append((double) 10L, (double) 100L);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[]");
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(shortArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray59), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray60), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[]");
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(floatArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray85), "[]");
        org.junit.Assert.assertNotNull(floatArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray87), "[-1.0]");
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertNotNull(booleanArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray89), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder91);
        org.junit.Assert.assertNotNull(equalsBuilder94);
    }

    @Test
    public void test1893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1893");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder0.appendSuper(false);
        float[] floatArray8 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray12 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray13 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder14 = equalsBuilder9.append(shortArray12, shortArray13);
        byte[] byteArray15 = new byte[] {};
        byte[] byteArray20 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder9.append(byteArray15, byteArray20);
        float[] floatArray27 = new float[] { (byte) -1, 10.0f, 'a', ' ', (short) -1 };
        float[] floatArray30 = new float[] { 1.0f, 0L };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder21.append(floatArray27, floatArray30);
        java.lang.Object obj33 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray38 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray39 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder35.append(shortArray38, shortArray39);
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean49 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder40, (java.lang.Object) '#', strArray48);
        boolean boolean50 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj33, (java.lang.Object) (byte) 1, strArray48);
        boolean boolean51 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) floatArray30, (java.lang.Object) (byte) 0, strArray48);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder0.append(floatArray8, floatArray30);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder52.append((short) 10, (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = equalsBuilder52.appendSuper(false);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder14);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(floatArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray27), "[-1.0, 10.0, 97.0, 32.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray30), "[1.0, 0.0]");
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray39), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(equalsBuilder57);
    }

    @Test
    public void test1894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1894");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder3.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder5.append((-1.0d), (double) (byte) 100);
        byte[] byteArray9 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder10 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray13 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray14 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder10.append(shortArray13, shortArray14);
        byte[] byteArray16 = new byte[] {};
        byte[] byteArray21 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder10.append(byteArray16, byteArray21);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder22.append((byte) 10, (byte) 0);
        boolean boolean26 = equalsBuilder25.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray30 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray31 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder32 = equalsBuilder27.append(shortArray30, shortArray31);
        byte[] byteArray33 = new byte[] {};
        byte[] byteArray38 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder27.append(byteArray33, byteArray38);
        byte[] byteArray40 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = equalsBuilder25.append(byteArray38, byteArray40);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder25.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray48 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray49 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder45.append(shortArray48, shortArray49);
        byte[] byteArray51 = new byte[] {};
        byte[] byteArray56 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = equalsBuilder45.append(byteArray51, byteArray56);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder45.append((double) 100L, (double) 10L);
        boolean boolean61 = equalsBuilder45.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder45.append(0, (int) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray68 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray69 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder65.append(shortArray68, shortArray69);
        byte[] byteArray71 = new byte[] {};
        byte[] byteArray76 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder65.append(byteArray71, byteArray76);
        java.lang.String[] strArray81 = new java.lang.String[] { "", "hi!", "" };
        boolean boolean82 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder64, (java.lang.Object) byteArray76, strArray81);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray86 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray87 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder83.append(shortArray86, shortArray87);
        byte[] byteArray89 = new byte[] {};
        byte[] byteArray94 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder95 = equalsBuilder83.append(byteArray89, byteArray94);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder96 = equalsBuilder44.append(byteArray76, byteArray94);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder97 = equalsBuilder5.append(byteArray9, byteArray76);
        boolean boolean98 = equalsBuilder5.isEquals();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[]");
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder32);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[]");
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder41);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(shortArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray48), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray49), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[]");
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder57);
        org.junit.Assert.assertNotNull(equalsBuilder60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(shortArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray68), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray69), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray71), "[]");
        org.junit.Assert.assertNotNull(byteArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray76), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(shortArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray86), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray87), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertNotNull(byteArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray89), "[]");
        org.junit.Assert.assertNotNull(byteArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray94), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder95);
        org.junit.Assert.assertNotNull(equalsBuilder96);
        org.junit.Assert.assertNotNull(equalsBuilder97);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test1895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1895");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder17.append((byte) 100, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder17.append((long) '#', 1L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder24.append((float) (-1), (float) '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder27.append(100.0d, (double) (short) 10);
        equalsBuilder27.reset();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder30);
    }

    @Test
    public void test1896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1896");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        int[] intArray6 = new int[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray10 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray11 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder7.append(shortArray10, shortArray11);
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean21 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder12, (java.lang.Object) '#', strArray20);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder12.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray28 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray29 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder25.append(shortArray28, shortArray29);
        byte[] byteArray31 = new byte[] {};
        byte[] byteArray36 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder25.append(byteArray31, byteArray36);
        char[] charArray42 = new char[] { '#', ' ', '#', '#' };
        char[] charArray45 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder25.append(charArray42, charArray45);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray50 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray51 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder47.append(shortArray50, shortArray51);
        byte[] byteArray53 = new byte[] {};
        byte[] byteArray58 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder59 = equalsBuilder47.append(byteArray53, byteArray58);
        char[] charArray64 = new char[] { '#', ' ', '#', '#' };
        char[] charArray67 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder47.append(charArray64, charArray67);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder12.append(charArray45, charArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder12.appendSuper(false);
        int[] intArray75 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray80 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder71.append(intArray75, intArray80);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder5.append(intArray6, intArray80);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder5.append((short) (byte) -1, (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder85.append(100, 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder85.append((float) 0L, (float) ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder94 = equalsBuilder85.append(100.0f, 10.0f);
        equalsBuilder85.reset();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(shortArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray28), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray29), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(shortArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray50), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray51), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[]");
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder59);
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(equalsBuilder71);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertNotNull(equalsBuilder91);
        org.junit.Assert.assertNotNull(equalsBuilder94);
    }

    @Test
    public void test1897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1897");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        java.lang.Boolean boolean4 = equalsBuilder3.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder3.append((byte) 100, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder10 = equalsBuilder3.append((byte) -1, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder3.append((short) 10, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = equalsBuilder3.append((double) 1, 0.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder3.append((double) (byte) -1, (double) 100.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder3.append((float) (-1), (float) 100L);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + true + "'", boolean4, true);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(equalsBuilder10);
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertNotNull(equalsBuilder16);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder22);
    }

    @Test
    public void test1898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1898");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        float[] floatArray65 = null;
        float[] floatArray66 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder64.append(floatArray65, floatArray66);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder64.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder70.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder72.append((double) 100, (double) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder75.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder77.append((float) (short) 10, (float) 0);
        equalsBuilder77.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder77.append(true, false);
        equalsBuilder84.reset();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder84);
    }

    @Test
    public void test1899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1899");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        char[] charArray17 = new char[] { '#', ' ', '#', '#' };
        char[] charArray20 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(charArray17, charArray20);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray25 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray26 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder22.append(shortArray25, shortArray26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray34 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray38 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray39 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder35.append(shortArray38, shortArray39);
        byte[] byteArray41 = new byte[] {};
        byte[] byteArray46 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder35.append(byteArray41, byteArray46);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder28.append(byteArray34, byteArray46);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray53 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray54 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder50.append(shortArray53, shortArray54);
        byte[] byteArray56 = new byte[] {};
        byte[] byteArray61 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder50.append(byteArray56, byteArray61);
        boolean boolean63 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (short) 0, (java.lang.Object) byteArray61);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder22.append(byteArray34, byteArray61);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder22.append(100.0f, 100.0f);
        boolean boolean69 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder0, (java.lang.Object) equalsBuilder67, true);
        boolean[] booleanArray72 = new boolean[] { true, false };
        boolean[] booleanArray78 = new boolean[] { false, false, false, true, true };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder67.append(booleanArray72, booleanArray78);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder79.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder79.append((long) '#', 1L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder79.append((double) (-1L), 0.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder79.append((int) (byte) 1, (int) (short) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder90.append((byte) 1, (byte) -1);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray39), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[]");
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray53), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray54), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[]");
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(booleanArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray72), "[true, false]");
        org.junit.Assert.assertNotNull(booleanArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray78), "[false, false, false, true, true]");
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertNotNull(equalsBuilder93);
    }

    @Test
    public void test1900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1900");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder0.append((-1), (int) (short) 10);
        java.lang.Object obj7 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray14 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray18 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray19 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder15.append(shortArray18, shortArray19);
        byte[] byteArray21 = new byte[] {};
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder15.append(byteArray21, byteArray26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder8.append(byteArray14, byteArray26);
        boolean boolean30 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj7, (java.lang.Object) byteArray26, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray37 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray41 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray42 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder38.append(shortArray41, shortArray42);
        byte[] byteArray44 = new byte[] {};
        byte[] byteArray49 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder38.append(byteArray44, byteArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder31.append(byteArray37, byteArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder0.append(byteArray26, byteArray37);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder52.append((byte) -1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = equalsBuilder52.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder52.append((float) (byte) 10, (float) (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder52.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder62.append(0, (int) (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder65.append((int) (byte) 0, (int) (byte) -1);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray41), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(equalsBuilder57);
        org.junit.Assert.assertNotNull(equalsBuilder60);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder68);
    }

    @Test
    public void test1901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1901");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder17.append((float) (short) -1, (float) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder21.append((short) (byte) 10, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder25.append((short) (byte) 10, (short) 0);
        equalsBuilder25.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder30.append((short) (byte) 10, (short) 0);
        long[] longArray39 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray41 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder30.append(longArray39, longArray41);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder43.append((short) (byte) 10, (short) 0);
        long[] longArray52 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray54 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder43.append(longArray52, longArray54);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder25.append(longArray39, longArray54);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder57.append((short) (byte) 10, (short) 0);
        long[] longArray66 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray68 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder57.append(longArray66, longArray68);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray73 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray74 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder70.append(shortArray73, shortArray74);
        java.lang.String[] strArray83 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean84 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder75, (java.lang.Object) '#', strArray83);
        boolean boolean85 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) longArray68, (java.lang.Object) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder24.append(longArray39, longArray68);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder24.append((long) (short) 1, (long) '#');
        boolean boolean90 = equalsBuilder24.isEquals();
        equalsBuilder24.reset();
        boolean boolean92 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder17, (java.lang.Object) equalsBuilder24);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(longArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray39), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray41), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(longArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray52), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray54), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(equalsBuilder60);
        org.junit.Assert.assertNotNull(longArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray66), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray68), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(shortArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray73), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray74), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertNotNull(equalsBuilder89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test1902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1902");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder12.append('4', ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder15.append('a', '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder18.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append((short) -1, (short) (byte) -1);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(equalsBuilder23);
    }

    @Test
    public void test1903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1903");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray6 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray10 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray11 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder7.append(shortArray10, shortArray11);
        byte[] byteArray13 = new byte[] {};
        byte[] byteArray18 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder7.append(byteArray13, byteArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder0.append(byteArray6, byteArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder0.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder22.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray28 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray29 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder25.append(shortArray28, shortArray29);
        byte[] byteArray31 = new byte[] {};
        byte[] byteArray36 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder25.append(byteArray31, byteArray36);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder25.append((double) 100L, (double) 10L);
        boolean boolean41 = equalsBuilder25.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder25.append(' ', '4');
        boolean boolean46 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '4', false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = equalsBuilder24.append(true, true);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(shortArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray28), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray29), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(equalsBuilder49);
    }

    @Test
    public void test1904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1904");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder17.append((java.lang.Object) boolean37, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder17.append((short) 100, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray46 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray47 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder43.append(shortArray46, shortArray47);
        byte[] byteArray49 = new byte[] {};
        byte[] byteArray54 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder43.append(byteArray49, byteArray54);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder55.append((byte) 10, (byte) 0);
        equalsBuilder55.reset();
        boolean boolean60 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (short) 100, (java.lang.Object) equalsBuilder55);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder55.append((int) (short) 10, 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder63.append((float) 'a', (float) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder66.append('4', 'a');
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray47), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[]");
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder69);
    }

    @Test
    public void test1905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1905");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder0.append((short) (byte) 10, (short) 10);
        java.lang.Object obj8 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray12 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray13 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder14 = equalsBuilder9.append(shortArray12, shortArray13);
        byte[] byteArray15 = new byte[] {};
        byte[] byteArray20 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder9.append(byteArray15, byteArray20);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder9.append((byte) 100, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder7.append(obj8, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray29 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray30 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder26.append(shortArray29, shortArray30);
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean40 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder31, (java.lang.Object) '#', strArray39);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder31.append((int) (short) -1, (int) (short) 0);
        boolean boolean44 = equalsBuilder43.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray48 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray49 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder45.append(shortArray48, shortArray49);
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean59 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder50, (java.lang.Object) '#', strArray58);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder50.append((int) (short) -1, (int) (short) 0);
        boolean boolean63 = equalsBuilder62.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder43.append((java.lang.Object) boolean63, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder43.append(false, true);
        equalsBuilder68.reset();
        java.lang.String[] strArray70 = null;
        boolean boolean71 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder7, (java.lang.Object) equalsBuilder68, strArray70);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder14);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(shortArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray29), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(shortArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray48), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray49), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test1906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1906");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        char[] charArray17 = new char[] { '#', ' ', '#', '#' };
        char[] charArray20 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(charArray17, charArray20);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray25 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray26 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder22.append(shortArray25, shortArray26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray34 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray38 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray39 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder35.append(shortArray38, shortArray39);
        byte[] byteArray41 = new byte[] {};
        byte[] byteArray46 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder35.append(byteArray41, byteArray46);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder28.append(byteArray34, byteArray46);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray53 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray54 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder50.append(shortArray53, shortArray54);
        byte[] byteArray56 = new byte[] {};
        byte[] byteArray61 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder50.append(byteArray56, byteArray61);
        boolean boolean63 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (short) 0, (java.lang.Object) byteArray61);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder22.append(byteArray34, byteArray61);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder22.append(100.0f, 100.0f);
        boolean boolean69 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder0, (java.lang.Object) equalsBuilder67, true);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder0.append((double) (byte) -1, (double) ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder0.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder0.append(' ', 'a');
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray39), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[]");
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray53), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray54), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[]");
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder78);
    }

    @Test
    public void test1907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1907");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        long[] longArray9 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray11 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(longArray9, longArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder14 = equalsBuilder0.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder0.append((float) (-1), 10.0f);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder14);
        org.junit.Assert.assertNotNull(equalsBuilder17);
    }

    @Test
    public void test1908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1908");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder12.append('4', ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder15.appendSuper(true);
        java.lang.Boolean boolean18 = equalsBuilder15.build();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertEquals("'" + boolean18 + "' != '" + false + "'", boolean18, false);
    }

    @Test
    public void test1909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1909");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        equalsBuilder74.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder74.append('4', ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder74.append((short) -1, (short) (byte) 1);
        equalsBuilder81.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder81.append('4', 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder81.append(1.0f, (float) 10L);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertNotNull(equalsBuilder88);
    }

    @Test
    public void test1910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1910");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder0.append((-1), (int) (short) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = equalsBuilder6.append((-1L), 100L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder6.append((int) (byte) 100, (int) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder12.append(100, (int) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder12.append((int) (short) 0, (int) '#');
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(equalsBuilder9);
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(equalsBuilder18);
    }

    @Test
    public void test1911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1911");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder17.append((java.lang.Object) boolean37, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray52 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray56 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray57 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder53.append(shortArray56, shortArray57);
        byte[] byteArray59 = new byte[] {};
        byte[] byteArray64 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder53.append(byteArray59, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder46.append(byteArray52, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder46.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder39.append((java.lang.Object) equalsBuilder45, (java.lang.Object) equalsBuilder46);
        long[] longArray73 = new long[] { (byte) 100, ' ', (short) 10 };
        long[] longArray79 = new long[] { 'a', 0L, (short) 10, (byte) 0, (byte) -1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder46.append(longArray73, longArray79);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder80.append((short) 0, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder83.append(0, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder83.append(false, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder89.append((float) (short) 10, (float) (-1));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder95 = equalsBuilder89.append(0L, 0L);
        java.lang.Boolean boolean96 = equalsBuilder95.build();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray56), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(longArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray73), "[100, 32, 10]");
        org.junit.Assert.assertNotNull(longArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray79), "[97, 0, 10, 0, -1]");
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertNotNull(equalsBuilder89);
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertNotNull(equalsBuilder95);
        org.junit.Assert.assertEquals("'" + boolean96 + "' != '" + false + "'", boolean96, false);
    }

    @Test
    public void test1912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1912");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray9 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray10 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder11 = equalsBuilder6.append(shortArray9, shortArray10);
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean20 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder11, (java.lang.Object) '#', strArray19);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder11.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray27 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray28 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder24.append(shortArray27, shortArray28);
        byte[] byteArray30 = new byte[] {};
        byte[] byteArray35 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append(byteArray30, byteArray35);
        char[] charArray41 = new char[] { '#', ' ', '#', '#' };
        char[] charArray44 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder24.append(charArray41, charArray44);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray49 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray50 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder46.append(shortArray49, shortArray50);
        byte[] byteArray52 = new byte[] {};
        byte[] byteArray57 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder46.append(byteArray52, byteArray57);
        char[] charArray63 = new char[] { '#', ' ', '#', '#' };
        char[] charArray66 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder46.append(charArray63, charArray66);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder11.append(charArray44, charArray63);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder11.appendSuper(false);
        boolean[] booleanArray74 = new boolean[] { true, true, false };
        boolean[] booleanArray75 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder11.append(booleanArray74, booleanArray75);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder76.append((-1.0f), 0.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder79.append((byte) 0, (byte) 100);
        boolean boolean83 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) shortArray3, (java.lang.Object) (byte) 0);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder11);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray28), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray49), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray50), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(booleanArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray74), "[true, true, false]");
        org.junit.Assert.assertNotNull(equalsBuilder76);
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test1913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1913");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        java.lang.Boolean boolean4 = equalsBuilder3.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder3.append((byte) 0, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = equalsBuilder3.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder3.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = equalsBuilder13.append((short) (byte) 10, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder17.append((short) (byte) 10, (short) 0);
        equalsBuilder17.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder22.append((short) (byte) 10, (short) 0);
        long[] longArray31 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray33 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder22.append(longArray31, longArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder35.append((short) (byte) 10, (short) 0);
        long[] longArray44 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray46 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder35.append(longArray44, longArray46);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder17.append(longArray31, longArray46);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder49.append((short) (byte) 10, (short) 0);
        long[] longArray58 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray60 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder49.append(longArray58, longArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray65 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray66 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder62.append(shortArray65, shortArray66);
        java.lang.String[] strArray75 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean76 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder67, (java.lang.Object) '#', strArray75);
        boolean boolean77 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) longArray60, (java.lang.Object) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder16.append(longArray31, longArray60);
        long[] longArray81 = new long[] { (byte) 10, 0L };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder12.append(longArray31, longArray81);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder12.append('a', 'a');
        java.lang.Boolean boolean86 = equalsBuilder12.build();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + true + "'", boolean4, true);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(equalsBuilder9);
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder16);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(longArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray31), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray33), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(longArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray44), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray46), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(longArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray58), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray60), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(shortArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray65), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray66), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(longArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray81), "[10, 0]");
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertEquals("'" + boolean86 + "' != '" + false + "'", boolean86, false);
    }

    @Test
    public void test1914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1914");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        java.lang.Boolean boolean4 = equalsBuilder3.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder3.append((byte) 100, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder10 = equalsBuilder3.append((short) (byte) 100, (short) (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder3.append((byte) 0, (byte) 10);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + true + "'", boolean4, true);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(equalsBuilder10);
        org.junit.Assert.assertNotNull(equalsBuilder13);
    }

    @Test
    public void test1915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1915");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder1 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray4 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray5 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder1.append(shortArray4, shortArray5);
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean15 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder6, (java.lang.Object) '#', strArray14);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder6.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        byte[] byteArray25 = new byte[] {};
        byte[] byteArray30 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder19.append(byteArray25, byteArray30);
        char[] charArray36 = new char[] { '#', ' ', '#', '#' };
        char[] charArray39 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder19.append(charArray36, charArray39);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray44 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray45 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder41.append(shortArray44, shortArray45);
        byte[] byteArray47 = new byte[] {};
        byte[] byteArray52 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder41.append(byteArray47, byteArray52);
        char[] charArray58 = new char[] { '#', ' ', '#', '#' };
        char[] charArray61 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder41.append(charArray58, charArray61);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder6.append(charArray39, charArray58);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder63.append(100, (int) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder63.append((short) 10, (short) -1);
        boolean boolean70 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) 100.0d, (java.lang.Object) equalsBuilder63);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder63.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder72.append((double) (short) 10, (double) (byte) 100);
        java.lang.Boolean boolean76 = equalsBuilder75.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder75.append((float) (-1), (float) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder75.append((byte) 100, (byte) 100);
        int[] intArray83 = null;
        int[] intArray84 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder75.append(intArray83, intArray84);
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray45), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertEquals("'" + boolean76 + "' != '" + false + "'", boolean76, false);
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(equalsBuilder85);
    }

    @Test
    public void test1916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1916");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder62.append(100, (int) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder62.append((float) 'a', (float) (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder68.append((short) (byte) 100, (short) (byte) 1);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder71);
    }

    @Test
    public void test1917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1917");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        float[] floatArray65 = null;
        float[] floatArray66 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder64.append(floatArray65, floatArray66);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder64.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder70.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder72.append((double) 100, (double) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder75.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder75.append((byte) 10, (byte) 1);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder80);
    }

    @Test
    public void test1918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1918");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        equalsBuilder0.reset();
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray9 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray10 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder11 = equalsBuilder6.append(shortArray9, shortArray10);
        byte[] byteArray12 = new byte[] {};
        byte[] byteArray17 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder6.append(byteArray12, byteArray17);
        float[] floatArray24 = new float[] { (byte) -1, 10.0f, 'a', ' ', (short) -1 };
        float[] floatArray27 = new float[] { 1.0f, 0L };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder18.append(floatArray24, floatArray27);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder18.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder32 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder32.append((short) (byte) 10, (short) 0);
        long[] longArray41 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray43 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder32.append(longArray41, longArray43);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder0.append((java.lang.Object) true, (java.lang.Object) longArray43);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder0.append((short) -1, (short) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder48.append((short) (byte) 100, (short) 1);
        java.lang.Class<?> wildcardClass52 = equalsBuilder48.getClass();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder11);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(floatArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray24), "[-1.0, 10.0, 97.0, 32.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray27), "[1.0, 0.0]");
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(longArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray41), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray43), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test1919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1919");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        float[] floatArray65 = null;
        float[] floatArray66 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder64.append(floatArray65, floatArray66);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder67.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder67.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder67.append(false, false);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder76);
    }

    @Test
    public void test1920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1920");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder17.append((java.lang.Object) boolean37, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder17.append((int) (short) 100, (int) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder17.append((long) 1, (long) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder45.append((float) 0, 1.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder48.append((byte) 100, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder48.append((long) 'a', (long) (byte) 1);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(equalsBuilder54);
    }

    @Test
    public void test1921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1921");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        equalsBuilder74.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder74.append('4', ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder78.append((byte) 0, (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder78.append((byte) 1, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder78.append((double) 100, (double) 0);
        java.lang.Boolean boolean88 = equalsBuilder87.build();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertEquals("'" + boolean88 + "' != '" + false + "'", boolean88, false);
    }

    @Test
    public void test1922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1922");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder4 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder4.append((short) (byte) 10, (short) 0);
        equalsBuilder4.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder9.append((short) (byte) 10, (short) 0);
        long[] longArray18 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray20 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder9.append(longArray18, longArray20);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder22.append((short) (byte) 10, (short) 0);
        long[] longArray31 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray33 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder22.append(longArray31, longArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder4.append(longArray18, longArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder36.append((short) (byte) 10, (short) 0);
        long[] longArray45 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray47 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder36.append(longArray45, longArray47);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray52 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray53 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder49.append(shortArray52, shortArray53);
        java.lang.String[] strArray62 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean63 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder54, (java.lang.Object) '#', strArray62);
        boolean boolean64 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) longArray47, (java.lang.Object) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder3.append(longArray18, longArray47);
        java.lang.Boolean boolean66 = equalsBuilder3.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder3.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder69.append((byte) 10, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder69.append((short) (byte) 1, (short) -1);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(longArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray18), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(longArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray31), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray33), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(longArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray45), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray47), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(shortArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray52), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray53), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder54);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertEquals("'" + boolean66 + "' != '" + false + "'", boolean66, false);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(equalsBuilder75);
    }

    @Test
    public void test1923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1923");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder5.append((short) (byte) 10, (short) 0);
        long[] longArray14 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray16 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append(longArray14, longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder18.append((short) (byte) 10, (short) 0);
        long[] longArray27 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray29 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(longArray27, longArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append(longArray14, longArray29);
        java.lang.Boolean boolean32 = equalsBuilder31.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder31.append((byte) 1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder35.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder37.append('a', '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder37.append((byte) 0, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder43.append((int) (byte) 0, (int) '#');
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(equalsBuilder46);
    }

    @Test
    public void test1924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1924");
        java.lang.Object obj0 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder1 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray4 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray5 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder1.append(shortArray4, shortArray5);
        byte[] byteArray7 = new byte[] {};
        byte[] byteArray12 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder1.append(byteArray7, byteArray12);
        float[] floatArray19 = new float[] { (byte) -1, 10.0f, 'a', ' ', (short) -1 };
        float[] floatArray22 = new float[] { 1.0f, 0L };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder13.append(floatArray19, floatArray22);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = equalsBuilder13.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder26.append('4', '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder32 = equalsBuilder29.append((long) (byte) 0, (long) ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder32.append((short) (byte) 0, (short) (byte) 1);
        boolean boolean36 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj0, (java.lang.Object) equalsBuilder32);
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertNotNull(floatArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray19), "[-1.0, 10.0, 97.0, 32.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray22), "[1.0, 0.0]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(equalsBuilder26);
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(equalsBuilder32);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test1925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1925");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.append((double) 100L, (double) 10L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder15.append((long) '#', (long) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder15.append((long) (-1), (long) ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder15.append((int) (byte) 100, (int) (byte) -1);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
    }

    @Test
    public void test1926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1926");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder12.append((byte) 10, (byte) 0);
        equalsBuilder12.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder12.append('#', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder12.append((byte) 10, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder22.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder22.append((byte) 10, (byte) -1);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(equalsBuilder28);
    }

    @Test
    public void test1927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1927");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder5.append((short) (byte) 10, (short) 0);
        long[] longArray14 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray16 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append(longArray14, longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder18.append((short) (byte) 10, (short) 0);
        long[] longArray27 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray29 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(longArray27, longArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append(longArray14, longArray29);
        java.lang.Boolean boolean32 = equalsBuilder31.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray36 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray37 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder33.append(shortArray36, shortArray37);
        byte[] byteArray39 = new byte[] {};
        byte[] byteArray44 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder33.append(byteArray39, byteArray44);
        float[] floatArray51 = new float[] { (byte) -1, 10.0f, 'a', ' ', (short) -1 };
        float[] floatArray54 = new float[] { 1.0f, 0L };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder45.append(floatArray51, floatArray54);
        float[] floatArray60 = new float[] { (-1), (byte) 10, (-1), (short) 100 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder31.append(floatArray54, floatArray60);
        equalsBuilder61.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder61.append((long) (byte) 100, (long) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder61.append((short) (byte) 0, (short) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder61.append((byte) 10, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder61.append((byte) -1, (byte) 0);
        equalsBuilder74.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder74.append(' ', ' ');
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
        org.junit.Assert.assertNotNull(shortArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray36), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[]");
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(floatArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray51), "[-1.0, 10.0, 97.0, 32.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray54), "[1.0, 0.0]");
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(floatArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray60), "[-1.0, 10.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder71);
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder78);
    }

    @Test
    public void test1928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1928");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder17.append((byte) 100, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder17.append((long) '#', 1L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder17.append((short) (byte) 10, (short) (byte) 10);
        boolean boolean28 = equalsBuilder27.isEquals();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test1929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1929");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        equalsBuilder62.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder62.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder62.append((short) 10, (short) -1);
        boolean[] booleanArray74 = new boolean[] { true, true, false, true };
        boolean[] booleanArray78 = new boolean[] { true, true, false };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder69.append(booleanArray74, booleanArray78);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder79.append('4', 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder79.append((double) (byte) 0, 0.0d);
        java.lang.Boolean boolean86 = equalsBuilder85.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder85.append((byte) -1, (byte) 1);
        java.lang.Class<?> wildcardClass90 = equalsBuilder89.getClass();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(booleanArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray74), "[true, true, false, true]");
        org.junit.Assert.assertNotNull(booleanArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray78), "[true, true, false]");
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertEquals("'" + boolean86 + "' != '" + false + "'", boolean86, false);
        org.junit.Assert.assertNotNull(equalsBuilder89);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test1930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1930");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        equalsBuilder74.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder74.append('4', ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder78.append((byte) 0, (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder78.append((byte) 1, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder84.append((double) '#', (double) (byte) -1);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder87);
    }

    @Test
    public void test1931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1931");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder0.append((short) (byte) 10, (short) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = equalsBuilder0.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder11 = equalsBuilder0.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder14 = equalsBuilder11.append(0.0f, (float) '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder11.append((float) 1, (float) (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder17.append(true, false);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(equalsBuilder9);
        org.junit.Assert.assertNotNull(equalsBuilder11);
        org.junit.Assert.assertNotNull(equalsBuilder14);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder20);
    }

    @Test
    public void test1932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1932");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder64.append((byte) -1, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder77.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder77.append((double) 1L, (double) 0L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder77.append(false, true);
        java.lang.Class<?> wildcardClass86 = equalsBuilder85.getClass();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test1933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1933");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        char[] charArray17 = new char[] { '#', ' ', '#', '#' };
        char[] charArray20 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(charArray17, charArray20);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder21.append('a', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder24.append((-1), (-1));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder27.append((int) (byte) -1, (int) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder27.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray40 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray44 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray45 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder41.append(shortArray44, shortArray45);
        byte[] byteArray47 = new byte[] {};
        byte[] byteArray52 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder41.append(byteArray47, byteArray52);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder34.append(byteArray40, byteArray52);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder34.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder56.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder58.append(' ', 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder61.append((long) (short) 10, (long) (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder61.append((int) (byte) 0, (int) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder67.append('a', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder67.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray77 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray78 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder74.append(shortArray77, shortArray78);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray83 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray84 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder80.append(shortArray83, shortArray84);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder73.append(shortArray77, shortArray84);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray90 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray91 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder87.append(shortArray90, shortArray91);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder33.append(shortArray84, shortArray90);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder96 = equalsBuilder93.append((short) 0, (short) 0);
        java.lang.Class<?> wildcardClass97 = equalsBuilder96.getClass();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray45), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertNotNull(equalsBuilder54);
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(shortArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray77), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray78), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertNotNull(shortArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray83), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray84), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertNotNull(shortArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray90), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray91), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertNotNull(equalsBuilder93);
        org.junit.Assert.assertNotNull(equalsBuilder96);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1934");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder17.append((byte) 100, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder17.append((long) '#', 1L);
        java.lang.Boolean boolean25 = equalsBuilder17.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder17.append((short) 1, (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder28.append('4', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder28.appendSuper(true);
        boolean boolean34 = equalsBuilder28.isEquals();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertEquals("'" + boolean25 + "' != '" + false + "'", boolean25, false);
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test1935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1935");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        long[] longArray9 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray11 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(longArray9, longArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder14 = equalsBuilder0.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder0.append((-1), (int) (byte) 1);
        java.lang.Object obj18 = null;
        boolean boolean20 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (byte) 1, obj18, true);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder14);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test1936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1936");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder17.append((java.lang.Object) boolean37, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder17.append((int) (short) 100, (int) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder17.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder45.append((short) (byte) 10, (short) 0);
        equalsBuilder45.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder50.append((short) (byte) 10, (short) 0);
        long[] longArray59 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray61 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder50.append(longArray59, longArray61);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder63.append((short) (byte) 10, (short) 0);
        long[] longArray72 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray74 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder63.append(longArray72, longArray74);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder45.append(longArray59, longArray74);
        java.lang.Boolean boolean77 = equalsBuilder76.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder76.append((byte) 1, (byte) 0);
        boolean boolean81 = equalsBuilder80.isEquals();
        equalsBuilder80.reset();
        boolean boolean84 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder17, (java.lang.Object) equalsBuilder80, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder17.append((double) 10.0f, (double) '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder17.append((float) '4', (-1.0f));
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertNotNull(longArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray59), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray61), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(longArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray72), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray74), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder76);
        org.junit.Assert.assertEquals("'" + boolean77 + "' != '" + false + "'", boolean77, false);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(equalsBuilder90);
    }

    @Test
    public void test1937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1937");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder17.append((java.lang.Object) boolean37, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder17.append((short) 100, (short) (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder17.append(' ', 'a');
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder45);
    }

    @Test
    public void test1938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1938");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        java.lang.Boolean boolean4 = equalsBuilder3.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder3.append((byte) 0, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = equalsBuilder3.appendSuper(true);
        boolean boolean10 = equalsBuilder9.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder11 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray14 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray15 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = equalsBuilder11.append(shortArray14, shortArray15);
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean25 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder16, (java.lang.Object) '#', strArray24);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder16.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray32 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray33 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder29.append(shortArray32, shortArray33);
        byte[] byteArray35 = new byte[] {};
        byte[] byteArray40 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = equalsBuilder29.append(byteArray35, byteArray40);
        char[] charArray46 = new char[] { '#', ' ', '#', '#' };
        char[] charArray49 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder29.append(charArray46, charArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray54 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray55 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder51.append(shortArray54, shortArray55);
        byte[] byteArray57 = new byte[] {};
        byte[] byteArray62 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder51.append(byteArray57, byteArray62);
        char[] charArray68 = new char[] { '#', ' ', '#', '#' };
        char[] charArray71 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder51.append(charArray68, charArray71);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder16.append(charArray49, charArray68);
        equalsBuilder73.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder73.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder73.append((short) 10, (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder80.append((float) (short) 100, 0.0f);
        equalsBuilder83.reset();
        boolean boolean85 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder9, (java.lang.Object) equalsBuilder83);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder9.append('4', 'a');
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + true + "'", boolean4, true);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(equalsBuilder9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shortArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray15), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder16);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray33), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[]");
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder41);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(shortArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray54), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray55), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[]");
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(equalsBuilder88);
    }

    @Test
    public void test1939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1939");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder64.append((byte) -1, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder77.appendSuper(false);
        java.lang.Boolean boolean80 = equalsBuilder79.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder79.append((byte) 0, (byte) 100);
        java.lang.Boolean boolean84 = equalsBuilder79.build();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertEquals("'" + boolean80 + "' != '" + false + "'", boolean80, false);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertEquals("'" + boolean84 + "' != '" + false + "'", boolean84, false);
    }

    @Test
    public void test1940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1940");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        float[] floatArray18 = new float[] { (byte) -1, 10.0f, 'a', ' ', (short) -1 };
        float[] floatArray21 = new float[] { 1.0f, 0L };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder12.append(floatArray18, floatArray21);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder12.append(true, true);
        byte[] byteArray29 = new byte[] { (byte) 100, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray33 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray34 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder30.append(shortArray33, shortArray34);
        byte[] byteArray36 = new byte[] {};
        byte[] byteArray41 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder30.append(byteArray36, byteArray41);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder25.append(byteArray29, byteArray36);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder43.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder45.append((int) (short) 100, (-1));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder45.append('#', '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder45.append('a', 'a');
        java.lang.Class<?> wildcardClass55 = equalsBuilder45.getClass();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[-1.0, 10.0, 97.0, 32.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray21), "[1.0, 0.0]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder25);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[100, 10, 1]");
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray33), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[]");
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(equalsBuilder54);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test1941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1941");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        char[] charArray17 = new char[] { '#', ' ', '#', '#' };
        char[] charArray20 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(charArray17, charArray20);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray25 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray26 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder22.append(shortArray25, shortArray26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray34 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray38 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray39 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder35.append(shortArray38, shortArray39);
        byte[] byteArray41 = new byte[] {};
        byte[] byteArray46 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder35.append(byteArray41, byteArray46);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder28.append(byteArray34, byteArray46);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray53 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray54 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder50.append(shortArray53, shortArray54);
        byte[] byteArray56 = new byte[] {};
        byte[] byteArray61 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder50.append(byteArray56, byteArray61);
        boolean boolean63 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (short) 0, (java.lang.Object) byteArray61);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder22.append(byteArray34, byteArray61);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder22.append(100.0f, 100.0f);
        boolean boolean69 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder0, (java.lang.Object) equalsBuilder67, true);
        boolean[] booleanArray72 = new boolean[] { true, false };
        boolean[] booleanArray78 = new boolean[] { false, false, false, true, true };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder67.append(booleanArray72, booleanArray78);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder67.append((byte) 100, (byte) 1);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray39), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[]");
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray53), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray54), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[]");
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(booleanArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray72), "[true, false]");
        org.junit.Assert.assertNotNull(booleanArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray78), "[false, false, false, true, true]");
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertNotNull(equalsBuilder82);
    }

    @Test
    public void test1942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1942");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        long[] longArray9 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray11 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(longArray9, longArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder14 = equalsBuilder0.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder0.append((-1), (int) (byte) 1);
        java.lang.Boolean boolean18 = equalsBuilder0.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append((int) '4', (int) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder0.append((short) 1, (short) 10);
        java.lang.Boolean boolean25 = equalsBuilder24.build();
        equalsBuilder24.reset();
        java.lang.Class<?> wildcardClass27 = equalsBuilder24.getClass();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder14);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertEquals("'" + boolean18 + "' != '" + false + "'", boolean18, false);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertEquals("'" + boolean25 + "' != '" + false + "'", boolean25, false);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test1943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1943");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder3.append((long) (byte) 100, 1L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = equalsBuilder3.append((double) 10, (double) (byte) 1);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.String[] strArray13 = new java.lang.String[] { "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder9, obj10, (java.util.Collection<java.lang.String>) strList14);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder9.append((float) '#', (float) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder19.append((long) (byte) 10, (long) 10);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(equalsBuilder9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder22);
    }

    @Test
    public void test1944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1944");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.append((double) 100L, (double) 10L);
        boolean boolean16 = equalsBuilder0.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(0, (int) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder0.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray26 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray27 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder23.append(shortArray26, shortArray27);
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean37 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder28, (java.lang.Object) '#', strArray36);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder28.append((int) (short) -1, (int) (short) 0);
        boolean boolean41 = equalsBuilder40.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray45 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray46 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder42.append(shortArray45, shortArray46);
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean56 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder47, (java.lang.Object) '#', strArray55);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder59 = equalsBuilder47.append((int) (short) -1, (int) (short) 0);
        boolean boolean60 = equalsBuilder59.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder40.append((java.lang.Object) boolean60, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder40.append((short) 100, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray69 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray70 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder66.append(shortArray69, shortArray70);
        byte[] byteArray72 = new byte[] {};
        byte[] byteArray77 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder66.append(byteArray72, byteArray77);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder78.append((byte) 10, (byte) 0);
        equalsBuilder78.reset();
        boolean boolean83 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (short) 100, (java.lang.Object) equalsBuilder78);
        boolean boolean85 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) true, (java.lang.Object) equalsBuilder78, false);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(shortArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray45), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(equalsBuilder59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(shortArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray69), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray70), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder71);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[]");
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test1945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1945");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder5.append((short) (byte) 10, (short) 0);
        long[] longArray14 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray16 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append(longArray14, longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder18.append((short) (byte) 10, (short) 0);
        long[] longArray27 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray29 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(longArray27, longArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append(longArray14, longArray29);
        java.lang.Boolean boolean32 = equalsBuilder31.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder31.append((double) (short) -1, (double) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder31.append((short) 0, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = equalsBuilder31.append('#', ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder31.append(0, (int) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder31.append(' ', 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder31.append((float) 10, (float) 10);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(equalsBuilder41);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder50);
    }

    @Test
    public void test1946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1946");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder1 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray4 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray5 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder1.append(shortArray4, shortArray5);
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean15 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder6, (java.lang.Object) '#', strArray14);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = equalsBuilder6.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        byte[] byteArray25 = new byte[] {};
        byte[] byteArray30 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder19.append(byteArray25, byteArray30);
        char[] charArray36 = new char[] { '#', ' ', '#', '#' };
        char[] charArray39 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder19.append(charArray36, charArray39);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray44 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray45 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder41.append(shortArray44, shortArray45);
        byte[] byteArray47 = new byte[] {};
        byte[] byteArray52 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder41.append(byteArray47, byteArray52);
        char[] charArray58 = new char[] { '#', ' ', '#', '#' };
        char[] charArray61 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder41.append(charArray58, charArray61);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder6.append(charArray39, charArray58);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder6.appendSuper(false);
        long[] longArray66 = null;
        long[] longArray73 = new long[] { 1, (byte) -1, (-1), (short) 1, 100L, '#' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder65.append(longArray66, longArray73);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder65.append(true, true);
        boolean boolean79 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) 1.0f, (java.lang.Object) equalsBuilder65, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder65.append((long) 10, (long) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder65.append(0.0f, (float) (byte) 100);
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(equalsBuilder18);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray45), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(longArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray73), "[1, -1, -1, 1, 100, 35]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(equalsBuilder85);
    }

    @Test
    public void test1947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1947");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        boolean boolean18 = equalsBuilder17.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray22 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray23 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder19.append(shortArray22, shortArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean33 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder24, (java.lang.Object) '#', strArray32);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder24.append((int) (short) -1, (int) (short) 0);
        boolean boolean37 = equalsBuilder36.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder17.append((java.lang.Object) boolean37, (java.lang.Object) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = new org.apache.commons.lang3.builder.EqualsBuilder();
        byte[] byteArray52 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) 100, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray56 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray57 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder53.append(shortArray56, shortArray57);
        byte[] byteArray59 = new byte[] {};
        byte[] byteArray64 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder53.append(byteArray59, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder46.append(byteArray52, byteArray64);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder46.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder39.append((java.lang.Object) equalsBuilder45, (java.lang.Object) equalsBuilder46);
        long[] longArray73 = new long[] { (byte) 100, ' ', (short) 10 };
        long[] longArray79 = new long[] { 'a', 0L, (short) 10, (byte) 0, (byte) -1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder46.append(longArray73, longArray79);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder80.append((short) 0, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder83.append(0, (int) (short) 0);
        boolean boolean87 = equalsBuilder83.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder83.append((byte) -1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder83.append((double) '#', 10.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder96 = equalsBuilder93.append((float) (byte) -1, (float) '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder99 = equalsBuilder96.append((double) (-1), (double) 10);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[0, 1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray56), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertNotNull(longArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray73), "[100, 32, 10]");
        org.junit.Assert.assertNotNull(longArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray79), "[97, 0, 10, 0, -1]");
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertNotNull(equalsBuilder93);
        org.junit.Assert.assertNotNull(equalsBuilder96);
        org.junit.Assert.assertNotNull(equalsBuilder99);
    }

    @Test
    public void test1948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1948");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((int) (short) -1, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray21 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray22 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder18.append(shortArray21, shortArray22);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(byteArray24, byteArray29);
        char[] charArray35 = new char[] { '#', ' ', '#', '#' };
        char[] charArray38 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder18.append(charArray35, charArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray43 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray44 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder40.append(shortArray43, shortArray44);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder40.append(byteArray46, byteArray51);
        char[] charArray57 = new char[] { '#', ' ', '#', '#' };
        char[] charArray60 = new char[] { '4', ' ' };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder40.append(charArray57, charArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder5.append(charArray38, charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder5.appendSuper(false);
        int[] intArray68 = new int[] { (byte) 1, '#', ' ' };
        int[] intArray73 = new int[] { 0, (byte) 1, (-1), (short) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder64.append(intArray68, intArray73);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder64.append((byte) -1, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder64.append((double) 10.0f, 100.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder80.append((short) (byte) 1, (short) (byte) 1);
        java.lang.Boolean boolean84 = equalsBuilder83.build();
        boolean boolean85 = equalsBuilder83.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder83.append((byte) -1, (byte) 0);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "# ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#,  , #, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4,  ]");
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 35, 32]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertEquals("'" + boolean84 + "' != '" + false + "'", boolean84, false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(equalsBuilder88);
    }

    @Test
    public void test1949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1949");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean14 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder5, (java.lang.Object) '#', strArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append((double) 100.0f, (double) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder20 = equalsBuilder5.append((short) 0, (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = equalsBuilder20.append((byte) -1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = equalsBuilder20.append(0.0f, (float) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder26.append((byte) 0, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder26.appendSuper(false);
        java.lang.Boolean boolean32 = equalsBuilder26.build();
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder20);
        org.junit.Assert.assertNotNull(equalsBuilder23);
        org.junit.Assert.assertNotNull(equalsBuilder26);
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
    }

    @Test
    public void test1950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1950");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray3 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray4 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = equalsBuilder0.append(shortArray3, shortArray4);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = equalsBuilder0.append(byteArray6, byteArray11);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder0.append((double) 100L, (double) 10L);
        boolean boolean16 = equalsBuilder0.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder0.append(0, (int) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder0.append(true, true);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = equalsBuilder0.append((short) (byte) 100, (short) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder26.append('4', 'a');
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder12);
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder26);
        org.junit.Assert.assertNotNull(equalsBuilder29);
    }

    @Test
    public void test1951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1951");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder5.append((short) (byte) 10, (short) 0);
        long[] longArray14 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray16 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder17 = equalsBuilder5.append(longArray14, longArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder18.append((short) (byte) 10, (short) 0);
        long[] longArray27 = new long[] { (byte) 10, (-1L), 0L, 1L, (byte) 1 };
        long[] longArray29 = new long[] { (short) 10 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder18.append(longArray27, longArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append(longArray14, longArray29);
        java.lang.Boolean boolean32 = equalsBuilder31.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder31.append((byte) 1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder35.appendSuper(true);
        java.lang.Boolean boolean38 = equalsBuilder35.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = equalsBuilder35.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder35.append((float) (byte) 100, 10.0f);
        java.lang.Object obj45 = null;
        boolean boolean46 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) 10.0f, obj45);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder17);
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[10, -1, 0, 1, 1]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertEquals("'" + boolean38 + "' != '" + false + "'", boolean38, false);
        org.junit.Assert.assertNotNull(equalsBuilder41);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test1952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1952");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((short) (byte) 10, (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder0.append('#', '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = equalsBuilder0.appendSuper(true);
        java.lang.Boolean boolean9 = equalsBuilder0.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder10 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray13 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray14 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = equalsBuilder10.append(shortArray13, shortArray14);
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean24 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder15, (java.lang.Object) '#', strArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder15.append((int) (short) -1, (int) (short) 0);
        boolean boolean28 = equalsBuilder27.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray32 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray33 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder29.append(shortArray32, shortArray33);
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", "hi!" };
        boolean boolean43 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder34, (java.lang.Object) '#', strArray42);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder34.append((int) (short) -1, (int) (short) 0);
        boolean boolean47 = equalsBuilder46.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = equalsBuilder27.append((java.lang.Object) boolean47, (java.lang.Object) (byte) 100);
        boolean boolean50 = equalsBuilder49.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder49.append(0, (int) (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder53.append(0.0f, (float) (byte) -1);
        boolean boolean57 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) boolean9, (java.lang.Object) equalsBuilder56);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(equalsBuilder8);
        org.junit.Assert.assertEquals("'" + boolean9 + "' != '" + false + "'", boolean9, false);
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder15);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray33), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(equalsBuilder49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test1953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1953");
        java.lang.Object obj0 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder1 = new org.apache.commons.lang3.builder.EqualsBuilder();
        short[] shortArray4 = new short[] { (byte) 0, (short) 100 };
        short[] shortArray5 = new short[] {};
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder1.append(shortArray4, shortArray5);
        byte[] byteArray7 = new byte[] {};
        byte[] byteArray12 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) 1 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = equalsBuilder1.append(byteArray7, byteArray12);
        java.lang.String[] strArray15 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        boolean boolean18 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj0, (java.lang.Object) equalsBuilder13, (java.util.Collection<java.lang.String>) strList16);
        boolean boolean19 = equalsBuilder13.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder13.append((float) (byte) 1, (float) 1L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder24 = equalsBuilder13.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder24.append((int) 'a', (int) (short) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder24.append(0, (int) '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder30.append((long) '4', (long) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder30.append((float) 10L, 1.0f);
        java.lang.Class<?> wildcardClass37 = equalsBuilder36.getClass();
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[0, 100]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[1, -1, 10, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder13);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(equalsBuilder24);
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }
}

